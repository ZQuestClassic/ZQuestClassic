// tango.zh
// Version 1.3.3


// Verbose message logging.

const int __TANGO_FULL_LOGGING = 1;

void __Tango_LogMessage(int msg, untyped data)
{
    if(__TANGO_LOGGING_LEVEL<2)
        return;
    
    int str[]="tango.zh: ";
    TraceS(str);
    
    if(msg==__TANGO_MSG_LOAD_START)
    {
        int str2[]="loading text:\n%s\n";
        printf(str2, data);
    }
    else if(msg==__TANGO_MSG_LOAD_END)
    {
        int str2[]="finished loading";
        TraceS(str2);
        TraceNL();
    }
    else if(msg==__TANGO_NO_SLOTS_FREE)
    {
        if(data==TANGO_SLOT_ANY)
        {
            int str2[]="no slots available";
            TraceS(str2);
            TraceNL();
        }
        else
        {
            int str2[]="no slots of type %d available\n";
            printf(str2, data);
        }
    }
}

// Log an error. Split into multiple functions to prevent a stack overflow.
void __Tango_LogError(int errorNum)
{
    if(__TANGO_LOGGING_LEVEL<1)
        return;
    
    if(__TANGO_ONSCREEN_NOTIFICATION!=0)
        __Tango_Data[__TDIDX_ERROR_NOTIFICATION]=300;
    
    int str[]="tango.zh error: ";
    TraceS(str);
    
    if(errorNum==__TANGO_ERROR_OVERFLOW)
        __Tango_LogOverflow();
    else if(errorNum==__TANGO_ERROR_TOO_MANY_ARGS)
        __Tango_LogTooManyArgs();
    else if(errorNum==__TANGO_ERROR_SCC_DISABLED)
        __Tango_LogSCCDisabled();
    else if(errorNum==__TANGO_ERROR_EMPTY_MENU)
        __Tango_LogEmptyMenu();
    else if(errorNum==__TANGO_ERROR_TOO_MANY_CHOICES)
        __Tango_LogTooManyChoices();
}

void __Tango_LogError(int errorNum, untyped data)
{
    if(__TANGO_LOGGING_LEVEL<1)
        return;
    
    if(__TANGO_ONSCREEN_NOTIFICATION!=0)
        __Tango_Data[__TDIDX_ERROR_NOTIFICATION]=300;
    
    int str[]="tango.zh error: ";
    TraceS(str);
    
    if(errorNum==__TANGO_ERROR_INVALID_CHARACTER)
        __Tango_LogInvalidCharacter(data);
    else if(errorNum==__TANGO_ERROR_UNDEFINED_FUNCTION)
        __Tango_LogUndefinedFunction(data);
    else if(errorNum==__TANGO_ERROR_INVALID_STYLE)
        __Tango_LogInvalidStyle(data);
    else if(errorNum==__TANGO_ERROR_INVALID_SLOT)
        __Tango_LogInvalidSlot(data);
    else if(errorNum==__TANGO_ERROR_INVALID_FUNCTION)
        __Tango_LogInvalidFunction(data);
    else if(errorNum==__TANGO_ERROR_INVALID_CHARACTER_CODE)
        __Tango_LogInvalidCharacterCode(data);
    else if(errorNum==__TANGO_ERROR_INVALID_ARGUMENT)
        __Tango_LogInvalidFunctionArg(data);
    else if(errorNum==__TANGO_ERROR_INVALID_STRING_ARG)
        __Tango_LogInvalidStringArg(data);
    else if(errorNum==__TANGO_ERROR_LOAD_INVALID_STRING)
        __Tango_LogInvalidString(data);
    else if(errorNum==__TANGO_ERROR_LOAD_INVALID_MESSAGE)
        __Tango_LogInvalidMessage(data);
    else if(errorNum==__TANGO_ERROR_UNDEFINED_VAR)
        __Tango_LogUndefinedVar(data);
    else if(errorNum==__TANGO_ERROR_INCOMPLETE_SCC)
        __Tango_LogIncompleteSCC(data);
    else if(errorNum==__TANGO_ERROR_INVALID_CHOICE_MOVED)
        __Tango_LogInvalidChoiceMoved(data);
}

void __Tango_LogError(int errorNum, untyped data1, untyped data2)
{
    if(__TANGO_LOGGING_LEVEL<1)
        return;
    
    if(__TANGO_ONSCREEN_NOTIFICATION!=0)
        __Tango_Data[__TDIDX_ERROR_NOTIFICATION]=300;
    
    int str[]="tango.zh error: ";
    TraceS(str);
    
    if(errorNum==__TANGO_ERROR_NO_FONT)
        __Tango_LogNoFont(data1, data2);
    else if(errorNum==__TANGO_ERROR_SLOT_STATE_ARRAY_TOO_SMALL)
        __Tango_LogSlotStateArrayTooSmall(data1, data2);
    else if(errorNum==__TANGO_ERROR_MENU_STATE_ARRAY_TOO_SMALL)
        __Tango_LogMenuStateArrayTooSmall(data1, data2);
}

void __Tango_LogOverflow()
{
    int str[]="String too large for buffer";
    TraceS(str);
    TraceNL();
}

void __Tango_LogInvalidCharacter(float data)
{
    int numBuf[12];
    __Tango_FloatToASCII(numBuf, data, true);
    int str[]="Invalid character encountered: %s\n";
    printf(str, numBuf);
}

void __Tango_LogUndefinedFunction(float data)
{
    int str[]="An undefined function was called: %f\n";
    printf(str, data);
}

void __Tango_LogTooManyArgs()
{
    int str[]="More than %d arguments given to a function\n";
    printf(str, __TANGO_MAX_FUNCTION_ARGS);
    
    int str2[]="(%d is the maximum, not necessarily the correct number)\n";
    printf(str2, __TANGO_MAX_FUNCTION_ARGS);
}

void __Tango_LogInvalidStyle(float data)
{
    int str[]="Invalid style specified.";
    TraceS(str);
    TraceNL();
    
    int numBuf[12];
    __Tango_FloatToASCII(numBuf, data, true);
    int str2[]="Style was %s; valid styles are integers from 0 to %d\n";
    printf(str2, numBuf, __TANGO_NUM_STYLES-1);
}

void __Tango_LogNoFont(int slot, int style)
{
    int str[]="A slot was activated using a style with no font set.";
    TraceS(str);
    TraceNL();
    
    int str2[]="Slot was %d; style was %d\n";
    printf(str2, slot, style);
}

void __Tango_LogInvalidSlot(float data)
{
    int str2[]="Invalid slot specified.";
    TraceS(str2);
    TraceNL();
    
    int dataBuf[12];
    __Tango_FloatToASCII(dataBuf, data, true);
    int str3[]="Slot was %s; valid slots are integers from 0 to %d\n";
    printf(str3, dataBuf, __TANGO_NUM_SLOTS-1);
}

void __Tango_LogInvalidFunction(int data)
{
    int str[]="The string contains an invalid or incomplete function call.";
    TraceS(str);
    TraceNL();
    
    int str2[]="Error occurred at position %d\n";
    printf(str2, data);
}

void __Tango_LogInvalidCharacterCode(int data)
{
    int str[]="The string contains an invalid or incomplete character code.";
    TraceS(str);
    TraceNL();
    
    int str2[]="Error occurred at position %d\n";
    printf(str2, data);
}

void __Tango_LogInvalidFunctionArg(int data)
{
    int str[]="The string contains an invalid function argument.";
    TraceS(str);
    TraceNL();
    
    int str2[]="Error occurred at position %d\n";
    printf(str2, data);
}

void __Tango_LogInvalidStringArg(float data)
{
    int str[]="The argument to @string() was not a valid string.";
    TraceS(str);
    TraceNL();
    
    int numBuf[12];
    __Tango_FloatToASCII(numBuf, data, true);
    int str2[]="Pointer value was %s\n";
    printf(str2, numBuf);
}

void __Tango_LogInvalidString(float data)
{
    int str[]="Attempted to load an invalid string.";
    TraceS(str);
    TraceNL();
    
    int numBuf[12];
    __Tango_FloatToASCII(numBuf, data, true);
    int str2[]="Pointer value was %s\n";
    printf(str2, numBuf);
}

void __Tango_LogInvalidMessage(float data)
{
    int str[]="Attempted to load an invalid message.";
    TraceS(str);
    TraceNL();
    
    int numBuf[12];
    __Tango_FloatToASCII(numBuf, data, true);
    int str2[]="Message number was was %s\n";
    printf(str2, numBuf);
}

void __Tango_LogUndefinedVar(float data)
{
    int str[]="An undefined variable was referenced: %f\n";
    printf(str, data);
}

void __Tango_LogIncompleteSCC(int data)
{
    int str[]="The message contains an incomplete string control code.";
    TraceS(str);
    TraceNL();

    int str2[]="Error occurred at position %d\n";
    printf(str2, data);
}

void __Tango_LogSCCDisabled()
{
    int str[]="The message contains a string control code, but string control codes are disabled.";
    TraceS(str);
    TraceNL();
}

void __Tango_LogSlotStateArrayTooSmall(int data1, int data2)
{
    int str[]="Slot state array too small.";
    int str2[]="Array size was %d; must be at least %d.\n";
    TraceS(str);
    TraceNL();
    printf(str2, data1, data2);
}

void __Tango_LogMenuStateArrayTooSmall(int data1, int data2)
{
    int str[]="Menu state array too small.";
    int str2[]="Array size was %d; must be at least %d.\n";
    TraceS(str);
    TraceNL();
    printf(str2, data1, data2);
}

void __Tango_LogEmptyMenu()
{
    int str[]="A menu with no choices was activated.";
    TraceS(str);
    TraceNL();
}

void __Tango_LogTooManyChoices()
{
    int str[]="Too many choices were added to a menu. The limit is set to %d.\n";
    printf(str, __TANGO_MAX_MENU_ITEMS);
}

void __Tango_LogInvalidChoiceMoved(int data)
{
    if(__Tango_Data[__TDIDX_CHOICE_COUNT]>0)
    {
        int str[]="Tried to move menu choice %f. Valid choices are integers 0 to %d.\n";
        printf(str, data, __Tango_Data[__TDIDX_CHOICE_COUNT]-1);
    }
    else
    {
        int str[]="Tried to move menu choice %f. There are no menu choices.\n";
        printf(str, data);
    }
}
