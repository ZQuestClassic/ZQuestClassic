// ghost.zh
// Version 2.8.15
// Use this for 2.53.1, and later versions of ZQuest

// See docs/ghost/index.html for documentation.

//All User Settings
// Standard settings -----------------------------------------------------------

// Small (1x1) shadow settings
const int GH_SHADOW_TILE = 27400;
const int GH_SHADOW_CSET = 7;
const int GH_SHADOW_FRAMES = 4;
const int GH_SHADOW_ANIM_SPEED = 8;
const int GH_SHADOW_TRANSLUCENT = 1; // 0 = No, 1 = Yes
const int GH_SHADOW_FLICKER = 0; // 0 = No, 1 = Yes

// Large (2x2) shadow settings
// If GH_LARGE_SHADOW_TILE is 0, large shadows will be disabled
const int GH_LARGE_SHADOW_TILE = 27392; // Top-left corner
const int GH_LARGE_SHADOW_CSET = 7;
const int GH_LARGE_SHADOW_FRAMES = 4;
const int GH_LARGE_SHADOW_ANIM_SPEED = 8;
const int GH_LARGE_SHADOW_MIN_WIDTH = 3;  // Enemies must be at least this wide
const int GH_LARGE_SHADOW_MIN_HEIGHT = 3; // and this high to use large shadows

// AutoGhost settings
const int AUTOGHOST_MIN_FFC = 1; // Min: 1, Max: 32
const int AUTOGHOST_MAX_FFC = 32; // Min: 1, Max: 32
const int AUTOGHOST_MIN_ENEMY_ID = 20; // Min: 20, Max: 511
const int AUTOGHOST_MAX_ENEMY_ID = 511; // Min: 20, Max: 511

// Other settings
const int GH_DRAW_OVER_THRESHOLD = 32;
const float GH_GRAVITY = 0.16;
const float GH_TERMINAL_VELOCITY = 3.2;
const int GH_SPAWN_SPRITE = 22; // Min: 0, Max: 255, Default: 22
const int GH_FAKE_Z = 0; // 0 = No, 1 = Yes
const int __GH_FAKE_EWEAPON_Z = 0; // 0 = No, 1 = Yes
const int GH_ENEMIES_FLICKER = 0; // 0 = No, 1 = Yes
const int GH_PREFER_GHOST_ZH_SHADOWS = 0; // 0 = No, 1 = Yes

// Top-left corner of a 4x4 block of blank tiles
const int GH_BLANK_TILE = 65456; // Min: 0, Max: 65456

// Invisible combo with no properties set
const int GH_INVISIBLE_COMBO = 1; // Min: 1, Max: 65279

// Always read script name and combo from the enemy's name,
// freeing up attributes 11 and 12
const int __GH_ALWAYS_USE_NAME = 0;

// End standard settings -------------------------------------------------------



// Advanced settings -----------------------------------------------------------

// AutoGhost will read a script name from the enemy's name if attribute 12
// is set to this. Must be a negative number.
const int AUTOGHOST_READ_NAME = -1;

// When reading a script from the enemy name, this character marks the
// beginning of the script name.
// Default: 64 ( @ )
const int AUTOGHOST_DELIMITER = 64;

// Misc. attribute 11 can be set to this instead of GH_INVISIBLE_COMBO.
// Must be a negative number.
const int __GH_INVISIBLE_ALT = -1;

// This will use the invisible combo, but also set npc->Extend to 3 or 4,
// hiding the initial spawn puff. Must be a negative number.
const int __GH_INVISIBLE_EXTEND = -2;

// If enabled, the FFC will be invisible, and Screen->DrawCombo will be used
// to display enemies.
const int __GH_USE_DRAWCOMBO = 1;

// Enemies flash or flicker for this many frames when hit. This does not
// affect enemies that use the invisible combo.
// Default: 32
const int __GH_FLASH_TIME = 32;

// Enemies will be knocked back for this many frames when hit.
// Default: 16
// Max: 4095
const int __GH_KNOCKBACK_TIME = 16;

// The speed at which enemies are knocked back, in pixels per frame.
// Default: 4
const int __GH_KNOCKBACK_STEP = 4;

// The imprecision setting used when a movement function is called internally
// (except for walking functions).
const int __GH_DEFAULT_IMPRECISION = 2;

// Whether to set ffc->Link=0 when cleaning up an FFC. In 2.50.3 RC1 and before,
// this does not work due to a bug. Set this to 1 only if you're using a newer
// ZC version than 2.50.3 RC1.
const int __GH_CLEAR_FFC_LINK = 0;

// For ZC Versions where Animation Style (None) does not set ->Tile, enable this. 
const int __GH_FIX_255_ANONE = 1;

// Set to 1 to make ghost ffcs Ethereal so that they cannot block
// other combo types/flags on the screen.
// Added in 2.8.12. The prior versions did not have this.
// Set to 0 if this causes bugs in legacy quests or scripts.
const int __GH_ETHEREAL = 1;

// If set to 1, weapons in sideview will die when they hit
// a solid sideview platform.
// Set to 0 if this causes bugs in legacy quests or scripts.
const int __GH_WEAPONS_HIT_PLATFORMS = 1;

// If set to 1, this will patch bugs where falling weapons can
// be inappropriately destroyed because of their position.
// Set to 0 if this causes bugs in legacy quests or scripts.
const int __GH_FIX_EWM_FALL = 1;

// If set to 1, this will patch bugs where thrown weapons can
// be inappropriately destroyed because of their position.
// Set to 0 if this causes bugs in legacy quests or scripts.
const int __GH_FIX_EWM_THROW = 1;

// npc->Misc[] index
// Set this so it doesn't conflict with other scripts. Legal values are 0-15.
const int __GHI_NPC_DATA = 15;

// eweapon->Misc[] indices
// These must be unique numbers between 0 and 15.
const int __EWI_FLAGS          = 15; // Every index but this one can be used by non-ghost.zh EWeapons
const int __EWI_ID             = 3;
const int __EWI_XPOS           = 4;
const int __EWI_YPOS           = 5;
const int __EWI_WORK           = 6;
const int __EWI_WORK_2         = 7; // Only used by a few movement types
const int __EWI_MOVEMENT       = 8;
const int __EWI_MOVEMENT_ARG   = 9;
const int __EWI_MOVEMENT_ARG_2 = 10;
const int __EWI_LIFESPAN       = 11;
const int __EWI_LIFESPAN_ARG   = 12;
const int __EWI_ON_DEATH       = 13;
const int __EWI_ON_DEATH_ARG   = 14;

// These are only used by dummy EWeapons;
// they can use the same values as __EWI_XPOS and __EWI_YPOS
const int __EWI_DUMMY_SOUND    = 2;
const int __EWI_DUMMY_STEP     = 4;
const int __EWI_DUMMY_SPRITE   = 5;

// Returns true if the given combo should be considered a pit.
bool __IsPit(int combo)
{
    return IsPit(combo); // std.zh implementation by default
}

// Returns true if enemies are visible on screens with the
// "All Enemies Are Invisible" flag enabled
bool __HaveAmulet()
{
    if ( Link->Item[I_AMULET1] )
    {
	return true;
    }
    if ( Link->Item[I_AMULET2] )
    {
	return true;
    }
    return false;
}

//Used to determine if a weapon hit a platform in sideview.
bool ghost2__OnSidePlatform(int x, int y, int xOff, int yOff, int h, int w) 
{
	for(int i = 0; i <= (w-1); ++i)
	{
		if( Screen->isSolid( (x + xOff + i), (y + yOff) + h ) )
		{
			if( (Screen->Flags[SF_ROOMTYPE]&4) )
			{
				return true;
			}
		}
           
	}
	return false;
}

// End advanced settings -------------------------------------------------------


#include "ghost_zh/2.8/ghost2_common.zh"
#include "ghost_zh/2.8/ghost2_deprecated.zh"
#include "ghost_zh/2.8/ghost2_drawing.zh"
#include "ghost_zh/2.8/ghost2_eweapon.zh"
#include "ghost_zh/2.8/ghost2_eweaponDeath.zh"
#include "ghost_zh/2.8/ghost2_eweaponMovement.zh"
#include "ghost_zh/2.8/ghost2_flags.zh"
#include "ghost_zh/2.8/ghost2_global.zh"
#include "ghost_zh/2.8/ghost2_init.zh"
#include "ghost_zh/2.8/ghost2_modification.zh"
#include "ghost_zh/2.8/ghost2_movement.zh"
#include "ghost_zh/2.8/ghost2_other.zh"
#include "ghost_zh/2.8/ghost2_update.zh"

#include "ghost_zh/2.8/ghost2_scripts.zs"



