// Contains required constants for std.zh and ZScript functions.

#include "std_zh/std.cfg"
#include "std_zh/limits.zh"

//some type shorthands
typedef const int define;
typedef const int DEFINE;
typedef const float DEFINEF;
typedef const long DEFINEL;
typedef const bool DEFINEB;
typedef const untyped DEFINEU;

typedef const int CONFIG;
typedef const float CONFIGF;
typedef const long CONFIGL;
typedef const bool CONFIGB;
typedef const untyped CONFIGU; 

DEFINEF PI				= 3.1416;
DEFINEF PI2				= 6.2832;

DEFINEF RADIAN 			= 57.2958; //Multiplication value for converting radians to degrees. 
DEFINEF DEGREE			= 0.0174; //Multiplication value for converting degrees to radians.

DEFINE SQRT_ERROR			= 464; // The return value of SafeSqrt() if a negative value is passed. 
DEFINEF SQRT_MAX			= 463.4095; //The largest square root thet ZC can return.


DEFINEF MAX_CONSTANT		= 214747.9999 + (OPTION_VALUE(TRUE_INT_SIZE) ? 0.3648 : 0);
DEFINEF MIN_CONSTANT		= -214747.9999 - (OPTION_VALUE(TRUE_INT_SIZE) ? 0.3649 : 0);


DEFINE MAX_SCRIPTDRAWINGCOMMANDS	= 1000;

DEFINE MAX_INT 			= 214747 + (OPTION_VALUE(TRUE_INT_SIZE) ? 1 : 0);
DEFINE MIN_INT 			= -214747 - (OPTION_VALUE(TRUE_INT_SIZE) ? 1 : 0);
DEFINE MAX_FLOAT 			= 214747.9999 + (OPTION_VALUE(TRUE_INT_SIZE) ? 0.3648 : 0);
DEFINE MIN_FLOAT 			= -214747.9999 - (OPTION_VALUE(TRUE_INT_SIZE) ? 0.3649 : 0);
DEFINE MAX_SHORT             = 32767;
DEFINE MIN_SHORT             = -32768;
DEFINE MAX_BYTE              = 255;
DEFINE MIN_BYTE              = 0;

DEFINE MAX_COUNTER 			= WORD_MAX;
DEFINE MIN_COUNTER 			= WORD_MIN;

DEFINE MIN_LWEAPON 			= 1; //Lowest numbered objects.
DEFINE MIN_EWEAPON 			= 1;
DEFINE MIN_NPC			= 1;
DEFINE MIN_ITEM			= 1;
DEFINE MAX_LWEAPON 			= 255; //1 to 255.
DEFINE MAX_EWEAPON 			= 255; //1 to 255.
DEFINE MAX_NPCS	 		= 255; //1 to 255.
DEFINE MAX_ITEM	 		= 255; //1 to 255;

DEFINE MIN_OBJ			= 1; //Short, const for loops.

DEFINE MIN_COUNTER_INDEX		= 0;
DEFINE MAX_COUNTER_INDEX		= 106;
DEFINE NUM_COUNTERS			= 107; //0 to 106

DEFINE MAX_OBJECT_POINTERS 		= 255; //Max of any one type. 
DEFINE MAX_WEAPON_POINTERS 		= 510; //eweapon and lweapon combined.
DEFINE MAX_TOTAL_OBJECT_POINTERS 	= 1020; //Max shared, across the three types. 
DEFINE MAX_SPRITES 			= 1020; //npc, eweapon, and lweapon
DEFINE MAX_DRAWING 			= 1000; //Maximum number of simultaneous drawing commands.

DEFINE MIN_BITMAP_X			= 0; //Legal Bitmap Region for Drawing
DEFINE MAX_BITMAP_X			= 511;
DEFINE MIN_BITMAP_Y			= 0;
DEFINE MAX_BITMAP_Y		 	= 511;

DEFINE MAX_GLOBAL_VARIABLES		= 255;
DEFINE MAX_VARIABLES			= 255; //Vars in operation at any one time.
DEFINE MAX_BITSPERVARIABLE		= 18;

DEFINE MIN_ITEMDATA			= 0;
DEFINE MAX_ITEMDATA			= 255;
DEFINE NUM_ITEMDATA         = 256;

DEFINE NUM_LEVELS           = 512;

DEFINE MAX_ARRAY_POINTERS	 	= 4095; //Arrays in operation. 
DEFINE MAX_TILES 			= 214499;
DEFINE MAX_COMBOS			= 65279;
DEFINE MAX_STRINGS			= 65519; //Strings in String Editor

DEFINE HP_PER_HEART			= 16;
DEFINE MP_PER_BLOCK			= 32;

DEFINE MAX_MESSAGES			= 65535;
DEFINE MAX_MESSAGELENGTH		= 145; //Pass an array of (at least) this size to Game->GetMessage

DEFINE MAX_MAPS 			= 256;
DEFINE MAX_DMAPS			= 512;
DEFINE MAX_DMAPNAMELENGTH		= 21; //Size of arrays to pass to Game->GetDMapX
DEFINE MAX_DMAPTITLELENGTH		= 21;
DEFINE MAX_DMAPINTROLENGTH		= 73;

//FFC Size Limitations
DEFINE MAX_FFC_W 			= 4; //Four tiles wide
DEFINE MAX_FFC_H 			= 4; //Four tiles high
DEFINE MAX_FFC_EFFECT_W		= 64; //Sixty-four pixels wide.
DEFINE MAX_FFC_EFFECT_H		= 64; //Sixty four pixels high. 

//Default array sizes
DEFINE INIT_D_SIZE			= 8;
DEFINE INIT_A_SIZE			= 2;
DEFINE MISC_SIZE			= 32;
DEFINE NPC_ATTRIBUTES_SIZE		= 32;
DEFINE ITEM_ATTRIBUTES_SIZE		= 10;
DEFINE GAMEMISC_SIZE 		= 32;
DEFINE MAX_DEFENSE 			= 42;

DEFINE SCREEN_W 			= 256; // Width of the screen, in pixels.
DEFINE SCREEN_H 			= 176; // Height of the screen, in pixels.

DEFINE SCREEN_RIGHT 			= 255; //The rightmost screen pixel.
DEFINE SCREEN_LEFT 			= 0; //The leftmost screen pixel.
DEFINE SCREEN_TOP 			= 0; //The top screen pixel, below the subscreen.
DEFINE SCREEN_BOTTOM 		= 175; //The lowest screen pixel.  

DEFINE SUBSCREEN_BOTTOM		= -1; //Bottom of passive subscreen.
DEFINE SUBSCREEN_TOP 		= -56; //Top of passive subscreen.

DEFINE SCREEN_CENTER_X 		= 128;
DEFINE SCREEN_CENTRE_X 		= 128;
DEFINE SCREEN_CENTER_Y 		= 88; 
DEFINE SCREEN_CENTRE_Y 		= 88; 

//Defaults from Init Data
DEFINEF GRAVITY			= 0.16;
DEFINEF TERMINAL_VELOCITY		= 3.20;
DEFINE JUMPING_LAYER_THRESHOLD	= 16;

// Extra Directions. Used with some stuff?
// @deprecated Use [Direction] instead!
enum Dir2
{
	DIR2_UP                        = 8,
	DIR2_RIGHTUP                   = 9,
	DIR2_RIGHT                     = 10,
	DIR2_RIGHTDOWN                 = 11,
	DIR2_DOWN                      = 12,
	DIR2_LEFTDOWN                  = 13,
	DIR2_LEFT                      = 14,
	DIR2_LEFTUP                    = 15,
	DIR2_UPRIGHT                   = 9,
	DIR2_DOWNRIGHT                 = 11,
	DIR2_DOWNLEFT                  = 13,
	DIR2_UPLEFT                    = 15,
};

//Equivalent Degrees and Radians for Cardinal Directions
//Degrees
DEFINE DEG_DIR_RIGHTUP 	= 315;
DEFINE DEG_DIR_UPRIGHT 	= 315;
DEFINE DEG_DIR_UP 		= 270;
DEFINE DEG_DIR_UPLEFT 	= 225;
DEFINE DEG_DIR_LEFTUP 	= 225;
DEFINE DEG_DIR_LEFT 		= 180;
DEFINE DEG_DIR_LEFTDOWN 	= 135;
DEFINE DEG_DIR_DOWNLEFT 	= 135;
DEFINE DEG_DIR_DOWN 		= 90;
DEFINE DEG_DIR_RIGHTDOWN 	= 45;
DEFINE DEG_DIR_DOWNRIGHT 	= 45;
DEFINE DEG_DIR_RIGHT 	= 0;

//Radians
DEFINEF RAD_DIR_RIGHTUP 	= 5.4978;
DEFINEF RAD_DIR_UPRIGHT 	= 5.4978;
DEFINEF RAD_DIR_UP 		= 4.7214;
DEFINEF RAD_DIR_UPLEFT 	= 3.927;
DEFINEF RAD_DIR_LEFTUP 	= 3.927;
DEFINEF RAD_DIR_LEFT 	= 3.1416; //3.1519; //Pi
DEFINEF RAD_DIR_LEFTDOWN 	= 2.3562; //Pi
DEFINEF RAD_DIR_DOWNLEFT 	= 2.3562; //Pi
DEFINEF RAD_DIR_DOWN 	= 1.5708;
DEFINEF RAD_DIR_RIGHTDOWN 	= 0.7854;
DEFINEF RAD_DIR_DOWNRIGHT 	= 0.7854;
DEFINEF RAD_DIR_RIGHT 	= 0; 

// NPC hit point values. Set to [npc::HP] to make the enemy die in a special manner.
DEFINE HP_SILENT = -1000;  // The enemy will die without their Death Sound playing.
DEFINE HP_GLEEOKHEAD = 1000; //Floating Gleeok heads have this as their HP value. 

//Walking Enemy Indices
DEFINE NPCA_WALK_SHOTTYPE 		= 0;
DEFINE NPCA_WALK_DEATHTYPE 		= 1;
DEFINE NPCA_WALK_DEATH_ATTR_1 	= 2;
DEFINE NPCA_WALK_DEATH_ATTR_2 	= 3;
DEFINE NPCA_WALK_DEATH_ATTR_3 	= 4;
DEFINE NPCA_WALK_EXTRA_SHOTS 	= 5;
DEFINE NPCA_WALK_TOUCHEFFECT 	= 6;
DEFINE NPCA_WALK_EFFECT_STR 		= 7;
DEFINE NPCA_WALK_WALKSTYLE 		= 8;
DEFINE NPCA_WALK_WALK_ATTRIB 	= 9;

	//Walking Attributes (Settings)
	//Shot Type
	DEFINE NPCA_WALK_1SHOT		= 0;
	DEFINE NPCA_WALK_ENDHALT		= 1;
	DEFINE NPCA_WALK_RAPIDFIRE		= 2;
	DEFINE NPCA_WALK_1FAST		= 3;
	DEFINE NPCA_WALK_1SLANT		= 4;
	DEFINE NPCA_WALK_3SHOTS		= 5;
	DEFINE NPCA_WALK_4SHOTS		= 6;
	DEFINE NPCA_WALK_5SHOTS		= 7;
	DEFINE NPCA_WALK_3FAST		= 8;
	DEFINE NPCA_WALK_BREATH		= 9;
	DEFINE NPCA_WALK_8SHOTS		= 10;
	DEFINE NPCA_WALK_SUMMON		= 11;
	DEFINE NPCA_WALK_SUMMONLAYER		= 12;
	//Death Type
	DEFINE NPCA_WALK_DEATH_NORMAL	= 0;
	DEFINE NPCA_WALK_DEATH_SPLITHIT	= 1;
	DEFINE NPCA_WALK_DEATH_SPLIT		= 2;
	DEFINE NPCA_WALK_DEATH_8SHOTS	= 3;
	DEFINE NPCA_WALK_DEATH_EXPLODE	= 4;
	DEFINE NPCA_WALK_DEATH_TRIBBLE	= 5;
	//Touch Effcts
	DEFINE NPCA_WALK_TOUCH_NORMAL	= 0;
	DEFINE NPCA_WALK_TOUCH_TEMPJINX	= 1;
	DEFINE NPCA_WALK_TOUCH_PERMJINX	= 2;
	DEFINE NPCA_WALK_TOUCH_CUREJINX	= 3;
	DEFINE NPCA_WALK_TOUCH_LOSEMAGIC	= 4;
	DEFINE NPCA_WALK_TOUCH_LOSERUPEES	= 5;
	DEFINE NPCA_WALK_TOUCH_DRUNK		= 6;
	DEFINE NPCA_WALK_TOUCH_EATITEMS	= 7;
	DEFINE NPCA_WALK_TOUCH_EATMAGIC	= 8;
	DEFINE NPCA_WALK_TOUCH_EATRUPEES	= 9;
	//Walkstyle
	DEFINE NPCA_WALK_WS_NORMAL		= 0;
	DEFINE NPCA_WALK_WS_ROPE		= 1;
	DEFINE NPCA_WALK_WS_VIRE		= 2;
	DEFINE NPCA_WALK_WS_POLSVOICE	= 3;

//Gohma Indices
DEFINE NPCA_GOHMA_SHOT_TYPE 			= 0;
	//Gohma Shot Type Settings
	DEFINE NPCA1_GOHMA_1SHOT		= 0;
	DEFINE NPCA_GOHMA_3SHOTS		= 1;
	DEFINE NPCA_GOHMA_BREATH		= 2;

//Wallmaster Indices
DEFINE NPCA_WALLMASTER_FIXED_DIST 		= 0;
	//Wallmaster Settings
	DEFINE NPCA_WALLMASTER_FIXED_DIST_ON = 0;
	DEFINE NPCA_WALLMASTER_FIXED_DIST_OFF = 1;

//Keese Indices
DEFINE NPCA_KEESE_MOVEMENT			= 0;
DEFINE NPCA_KEESE_DEATHTYPE 			= 1;
	//Movement Style
	DEFINE NPCA_KEESE_WS_KEESE 		= 0;
	DEFINE NPCA_KEESE_WS_BAT 		= 1;
	//Death Type
	DEFINE NPCA_KEESE_DEATH_NORMAL	= 0;
	DEFINE NPCA_KEESE_DEATH_TRIBBLE	= 1;

//Digdogger Indices
DEFINE NPCA_DIG_ID_1				= 0; //Digdogger ID 1
DEFINE NPCA_DIG_ID_2				= 1; //Digdogger ID 1
DEFINE NPCA_DIG_ID_3				= 2; //Digdogger ID 3
DEFINE NPCA_DIG_ID_4				= 3; //Digdogger ID 4
DEFINE NPCA_DIG_ENEM_1_QUANTITY		= 4; //Quantity of enemy 1.
DEFINE NPCA_DIG_ENEM_2_QUANTITY		= 5; //Quantity of enemy 1.
DEFINE NPCA_DIG_ENEM_3_QUANTITY		= 6; //Quantity of enemy 1.
DEFINE NPCA_DIG_ENEM_4_QUANTITY		= 7; //Quantity of enemy 1.
DEFINE NPCA_DIG_TYPE				= 8; //Type of digdogger
	//Digdogger Type Settings
	DEFINE NPCA_DIG_TYPE_NORMAL		= 0; //Digdogger main
	DEFINE NPCA_DIG_TYPE_KID		= 1; //Digdogger kid

//Dodongo Indices
DEFINE NPCA_DODONGO_TYPE		= 8; //Tyoe of Dodongo
	//Dodongo Type Settings
	DEFINE NPCA_DODONGO_TYPE_NES = 0; //NES Dodongo
	DEFINE NPCA_DODONGO_TYPE_BS 	= 1; //BS Dodongo

//Gleeok Indices
DEFINE NPCA_GLEEOK_HEADS 		= 0;
DEFINE NPCA_GLEEOK_HEAD_HP 		= 1;
DEFINE NPCA_GLEEOK_WEAPON 		= 2;
	//Gleeok Weapon Settings
	DEFINE NPCA_GLEEOK_1SHOT	= 0;
	DEFINE NPCA_GLEEOK_BREATH	= 2;
DEFINE NPCA_GLEEOK_CLK 		= 3; //48 by defaault. 
//IDK what this setting does. It is th Clk line param in esGleeok::esGleeok, but Clk is not used in the function. -Z
DEFINE NPCA_GLEEOK_NECK_SEGMENTS 	= 4;
DEFINE NPCA_GLEEOK_NECK_OFFSET_1 	= 5;
DEFINE NPCA_GLEEOK_NECK_OFFSET_2	= 6;
DEFINE NPCA_GLEEOK_HEAD_OFFSET  	= 7;
DEFINE NPCA_GLEEOK_HEAD_FLY_OFFSET 	= 8;

//Lanmola Indices
DEFINE NPCA_LANMOLA_SEGMENTS  	= 0;
DEFINE NPCA_LANMOLA_SEGMENT_LAG 	= 1;
DEFINE NPCA_LANMOLA_SEGMENT_DROPS 	= 2;
	//Lanmola Drop Settings
	DEFINE NPCA_LANMOLA_NODROP	= 0;
	DEFINE NPCA_LANMOLA_DROP	= 1;

//Leever Indices
DEFINE NPCA_LEVER_MOVE		= 0; //Engage Type
	//Leever Movement Settings
	DEFINE NPCA_LEEVER_PATH	= 0; //Link;s path
	DEFINE NPCA1_LEEVER_INPLACE	= 1; //In Place
	DEFINE NPCA_LEEVER_PATH2	= 0; //Link's path plus second (leever 3)
DEFINE NPCA_LEVER_SUBMERGE_CSET	= 1;
DEFINE NPCA_LEVER_EMERGE_STEP	= 2;

//Manhandla Indices
DEFINE NPCA_MANHANDLA_FRAMERATE	= 0;
DEFINE NPCA_MANHANDLA_SIZE 		= 1;
	//Manhandla Size Settings
	DEFINE NPCA_MANHANDLA_SMALL 	= 0; //4-heads
	DEFINE NPCA_MANHANDLA_LARGE 	= 1; //8-heads

//Moldorm Indices
DEFINE NPCA_MOLDORM_SEGMENTS 	= 0;
DEFINE NPCA_MOLDORM_SEGMENT_DROPS 	= 1;
	//Moldorm Drop Settings
	DEFINE NPCA_MOLDORM_NODROP	= 0; //no drop per degment
	DEFINE NPCA_MOLDORM_DROP	= 1; //drop per segment

//Patra Indices
DEFINE NPCA_PATRA_RINGEYES 		= 0;
DEFINE NPCA_PATRA_INNEREYES 		= 1;
DEFINE NPCA_PATRA_EYEHP 		= 2;
DEFINE NPCA_PATRA_EYE_MOVEMENT 	= 3;
	//Patra Eye Movmnt Settings
	DEFINE NPCA_PATRA_CIRCLE 	= 0;
	DEFINE NPCA_PATRA_OVAL 	= 1;
DEFINE NPCA_PATRA_SHOOTERS 		= 4;
	//Patra Shooters Settings
	DEFINE NPCA_PATRA_SHOOTERS_NONE = 0;
	DEFINE NPCA_PATRA_SHOOTERS_CORE = 1;
	DEFINE NPCA_PATRA_SHOOTERS_INNER = 2;
DEFINE NPCA_PATRA_PATTERN_ODDS 	= 5;
DEFINE NPCA_PATRA_PATTERN_CYCLES 	= 6;
DEFINE NPCA_PATRA_EYE_OFFSET 	= 7;
DEFINE NPCA_PATRA_EYE_CSET 		= 8;
DEFINE NPCA_PATRA_TYPE 		= 9;
	//Patra Type (Size) Settings
	DEFINE NPCA_PATRA_SMALL 	= 0; //1x1 core
	DEFINE NPCA_PATRA_LARGE 	= 1; //2x2 core

//Rock Indices
DEFINE NPCA_ROCK_SIZE 		= 9;
	//Rock Settings
	DEFINE NPCA_ROCK_SIZE_SMALL 	= 0; //1x1
	DEFINE NPCA_ROCK_SIZE_LARGE 	= 1; //1x1

//Wizzrobe Indices
DEFINE NPCA_WIZ_WALKSTYLE 		= 0;
	//Wizzrobe Walkstyle Settings
	DEFINE NPCA_WIZ_TELEPORT 	= 0;
	DEFINE NPCA_WIZ_PHASE 	= 1;
DEFINE NPCA_WIZ_SHOTTYPE 		= 1;
	//Wizzrobe Shot Type Settings
	DEFINE NPCA_WIZ_1SHOT 	= 0;
	DEFINE NPCA_WIZ_8SHOTS 	= 1;
	DEFINE NPCA_WIZ_SUMMON 	= 2;
	DEFINE NPCA_WIZ_SUMMON_LAYER = 3;
DEFINE NPCA_WIZ_SHOT_ATTR_1 		= 2;
DEFINE NPCA_WIZ_SOLIDCOMBOS 		= 3;
	//Wizzrobe Solid Combos Settings
	DEFINE NPCA_WIZ_SOLID_OK_NO 	= 0;
	DEFINE NPCA_WIZ_SOLID_OK_YES = 1;
DEFINE NPCA_WIZ_TELEPORT_DELAY 	= 4;

	
//Trap Indices
DEFINE NPCA_TRAP_DIR 		= 0;
	//Trap Dir Settings
	DEFINE NPCA_TRAP_DIR_4WAY 	= 0;
	DEFINE NPCA_TRAP_DIR_H 	= 1; //horizontal
	DEFINE NPCA_TRAP_DIR_V 	= 2; //vertical
DEFINE NPCA_TRAP_MOVE 		= 1;
	//Trap Movement Settings
	DEFINE NPCA_TRAP_MOVE_LOS 	= 0; //line of sight
	DEFINE NPCA_TRAP_MOVE_CONSTANT = 1;


//Tektite Indices
DEFINE NPCA_TEKTITE_JUMP_START 	= 0;
DEFINE NPCA_TEKTITE_JUMP_CONT 	= 1;
DEFINE NPCA_TEKTITE_JUMP_VELOCITY 	= 2;

//Old constants.
DEFINE SFW_STAIRS = SFWH_STAIRS; //Whistle->Stairs
DEFINE SFW_PALCHANGE = SFWH_PALCHANGE; //Whistle->Palette Change
DEFINE SFW_DRYLAKE = SFWH_DRYLAKE;  //Whistle->Dry lake

DEFINEF DIR16_DEG_INCREMENT = 22.5; //Number of degrees per 1/16 rotation

DEFINEF DIR16_DEG_UP 		= 270;
DEFINEF DIR16_DEG_UPUPLEFT = 247.5;

DEFINEF DIR16_DEG_UPLEFT 	= 225;
DEFINEF DIR16_DEG_LEFTLEFTUP = 202.5;
DEFINEF DIR16_DEG_LEFT 		= 180;
DEFINEF DIR16_DEG_LEFTLEFTDOWN = 157.5;
DEFINEF DIR16_DEG_LEFTDOWN 	= 135;
DEFINEF DIR16_DEG_DOWNDOWNLEFT = 112.5;
DEFINEF DIR16_DEG_DOWN 		= 90;
DEFINEF DIR16_DEG_DOWNDOWNRIGHT = 67.5;
DEFINEF DIR16_DEG_RIGHTDOWN 	= 45;
DEFINEF DIR16_DEG_RIGHTRIGHTDOWN = 22.5;
DEFINEF DIR16_DEG_RIGHT 	= 0;
DEFINEF DIR16_DEG_RIGHTUPUP  = 292.5;
DEFINEF DIR16_DEG_RIGHTUP 	= 315;
DEFINEF DIR16_DEG_RIGHTRIGHTUP 	= 337.5;

DEFINEF DIR_16_RADS_INCREMENT = 0.3927; //Number of radians per 1/16 rotation

DEFINEF DIR16_RADS_UP 		= 4.7214;
DEFINEF DIR16_RADS_UPUPLEFT = 4.3197;
DEFINEF DIR16_RADS_UPLEFT 	= 3.927;
DEFINEF DIR16_RADS_LEFTLEFTUP = 3.5343;
DEFINEF DIR16_RADS_LEFT 	= 3.1416; //3.1519; //Pi
DEFINEF DIR16_RADS_LEFTLEFTDOWN = 2.7489;
DEFINEF DIR16_RADS_LEFTDOWN 	= 2.3562; 
DEFINEF DIR16_RADS_DOWNDOWNLEFT = 1.9635;
DEFINEF DIR16_RADS_DOWN 	= 1.5708;
DEFINEF DIR16_RADS_DOWNDOWNRIGHT = 1.1781;
DEFINEF DIR16_RADS_RIGHTDOWN 	= 0.7854;
DEFINEF DIR16_RADS_RIGHTRIGHTDOWN = 0.3927; 
DEFINEF DIR16_RADS_RIGHT 	= 0; 
DEFINEF DIR16_RADS_RIGHTRIGHTUP = 5.8905;
DEFINEF DIR16_RADS_RIGHTUP 	= 5.4978;
DEFINEF DIR16_RADS_RIGHTUPUP 	= 5.1141;

//MIDI values, used for [Screen->MIDI], [dmapdata::MIDI], [mapdata::MIDI], [Audio->PlayMIDI].
enum
{
    MIDI_USE_DMAP = -4, // ONLY for [Screen->MIDI] and [mapdata::MIDI].
    MIDI_NONE,
    MIDI_OVERWORLD,
    MIDI_DUNGEON,
    MIDI_LEVEL9 // Cannot be played by [Audio->PlayMIDI].
};

// Used with [AimEWeapon].
enum AimType
{
	AT_NONE                        = 0,
	AT_4DIR                        = 1,
	AT_8DIR                        = 2,
	AT_ANGULAR                     = 3,
	AT_RAND4DIR                    = 4,
	AT_RAND8DIR                    = 5,
	AT_RANDANGULAR                 = 6,
};

// @deprecated Use [MoveFlag] instead.
enum HeroMoveFlag
{
	HEROMV_OBEYS_GRAVITY,
	HEROMV_CAN_PITFALL,
	HEROMV_NO_FAKE_Z = 8,
	HEROMV_NO_REAL_Z
};

// @deprecated Use [MoveFlag] instead.
enum ItemspriteMoveFlag
{
	ITEMMV_OBEYS_GRAVITY,
	ITEMMV_CAN_PITFALL,
	ITEMMV_NO_FAKE_Z = 8,
	ITEMMV_NO_REAL_Z
};

// @deprecated Use [MoveFlag] instead.
enum WeaponMoveFlag
{
	WPNMV_OBEYS_GRAVITY,
	WPNMV_CAN_PITFALL,
	WPNMV_NO_FAKE_Z = 8,
	WPNMV_NO_REAL_Z
};

// @deprecated Use [MoveFlag] instead.
enum NPCMoveFlag
{
	NPCMV_OBEYS_GRAVITY,
	NPCMV_CAN_PITFALL,
	NPCMV_CAN_PIT_WALK,
	NPCMV_CAN_WATERDROWN,
	NPCMV_CAN_WATER_WALK,
	NPCMV_ONLY_WATER_WALK,
	NPCMV_ONLY_SHALLOW_WATER_WALK,
	NPCMV_ONLY_PIT_WALK,
	NPCMV_NO_FAKE_Z,
	NPCMV_NO_REAL_Z,
	NPCMV_USE_FAKE_Z,
	// [npc] only.
	NPCMV_IGNORE_SOLIDITY,
	// [npc] only.
	NPCMV_IGNORE_BLOCKFLAGS,
	// [npc] only.
	NPCMV_IGNORE_SCREENEDGE,
	// [npc] only.
	NPCMV_USE_SCRIPTED_MOVEMENT_ENGINE,
	// [npc] only.
	NPCMV_NOT_PUSHABLE_BY_SOLIDS
};

enum DitherType
{
	DITH_CHECKER, DITH_CHECKER_INV,
	DITH_CRISS_CROSS, DITH_CRISS_CROSS_INV,
	DITH_DIAG_ULDR, DITH_DIAG_ULDR_INV,
	DITH_DIAG_URDL, DITH_DIAG_URDL_INV,
	DITH_ROW, DITH_ROW_INV,
	DITH_COL, DITH_COL_INV,
	DITH_DOTS, DITH_DOTS_INV,
	DITH_GRID, DITH_GRID_INV,
	DITH_STATIC, DITH_STATIC_INV,
	DITH_STATIC2, DITH_STATIC2_INV,
	DITH_STATIC3, DITH_STATIC3_INV,
	DITH_DOTS2, DITH_DOTS2_INV,
	DITH_DOTS3, DITH_DOTS3_INV,
	DITH_DOTS4, DITH_DOTS4_INV,
	DITH_MAX
};

DEFINE BIT_INTBTN_A = 1b << INTBTN_A;
DEFINE BIT_INTBTN_B = 1b << INTBTN_B;
DEFINE BIT_INTBTN_L = 1b << INTBTN_L;
DEFINE BIT_INTBTN_R = 1b << INTBTN_R;
DEFINE BIT_INTBTN_EX1 = 1b << INTBTN_EX1;
DEFINE BIT_INTBTN_EX2 = 1b << INTBTN_EX2;
DEFINE BIT_INTBTN_EX3 = 1b << INTBTN_EX3;
DEFINE BIT_INTBTN_EX4 = 1b << INTBTN_EX4;

DEFINE BIT_INTBTN_X = BIT_INTBTN_EX1;
DEFINE BIT_INTBTN_Y = BIT_INTBTN_EX2;
