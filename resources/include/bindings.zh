// All internal classes, functions and variables are defined in these `binding` files.
// This script is automatically imported.

/**
░░░░░░░▄▄▀▀▀▀▀▀▄▄░░░░░░░
░░░░░▄▀░░░░░░░░░░▀▄░░░░░
░░░▄▀░░░░░░░░░░░░░░▀▄░░░
░░▄░░░░░░░░░░░░░░░░░░▄░░
░▄░░░▄▄░░░░░░░░░░▄▄░░░▄░
░░░░▌░░█░░░░░░░░▐░░█░░░░
░▌░░▀██▀░▄████▄░▒▀██░░▐░
░░░░▒▒▒▒░█▄▄▄▄█░▒▒▒▒░░░░
░▀░░▒▒░░░░░░░░░░▒▒▒░░▀░░
░░▀▄░▒░░░░░░░░░░▒▒░▄▀░░░
░░░░▀▄▒░░░░░░░░░▒░▄▀░░░░
░░░░░░░▀▀▀▀▀▀▀▀▀▀░░░░░░░
*/

// Variables and functions marked as `internal` are configured in these binding files
// via special markup in comments:
//
// @zasm_var <VAR>
//
//   The ZASM variable to access for variables. Works for arrays too.
//
// @zasm_internal_array <number>
//
//    The ID for an internally-backed array. See `get_int_arr` in ffscript.cpp.
//
// @zasm_ref <VAR>
//
//   The ZASM variable to use as the `this` value for a class' internal functions. Omit to
//   skip pushing anything for `this`.
//
// @zasm <followed by multiple lines>
//
//    Must be the last annotation. Used to provide instructions to an internal function.
//    Any parameters are already pushed onto the stack. The value of D2 should contain
//    the return result, if any.
//
// @vargs <number>
//
//    The xtra_vargs
//
// @delete
//
//   Mark a constructor as not available, preventing the class from being created with `new`.
//
// @deprecated <message>
//
//   Mark as deprecated, with an optional message.
//
// @exit
//
//   Mark that the function exits the script.
//
// @alias, @deprecated_alias, @deprecated_getter
//
//   Define aliases.
//
//   @deprecated_getter is only for variables, and defines a function getter.
//
// @index, @value, @length, @param, @version
//
//   These have no impact on the compiler, and serve only as documentation.
//
//   Use @param/@value to denote what type something should be, without making it a breaking
//   change by changing from int to that type. For new stuff, prefer just using the actual type
//   rather than using @param/@value. Though @param is still good for explaining something about
//   a specific parameter.
//
// Additionally, text wrapped in square brackets is linkified if they resolve to another symbol.
// For example: [bitmap], [Screen->ComboC], [bitmap::GetPixel].

import "bindings/common.zh"
import "bindings/sprite.zh"

import "bindings/audio.zh"
import "bindings/bitmap.zh"
import "bindings/bottledata.zh"
import "bindings/bottleshopdata.zh"
import "bindings/combodata.zh"
import "bindings/debug.zh"
import "bindings/directory.zh"
import "bindings/dmapdata.zh"
import "bindings/dropsetdata.zh"
import "bindings/eweapon.zh"
import "bindings/ffc.zh"
import "bindings/file.zh"
import "bindings/filesystem.zh"
import "bindings/game.zh"
import "bindings/genericdata.zh"
import "bindings/global.zh"
import "bindings/graphics.zh"
import "bindings/hero.zh"
import "bindings/input.zh"
import "bindings/itemdata.zh"
import "bindings/itemsprite.zh"
import "bindings/lweapon.zh"
import "bindings/mapdata.zh"
import "bindings/messagedata.zh"
import "bindings/npc.zh"
import "bindings/npcdata.zh"
import "bindings/paldata.zh"
import "bindings/portal.zh"
import "bindings/qrs.zh"
import "bindings/randgen.zh"
import "bindings/region.zh"
import "bindings/savedportal.zh"
import "bindings/screendata.zh"
import "bindings/shopdata.zh"
import "bindings/spritedata.zh"
import "bindings/stack.zh"
import "bindings/subscreendata.zh"
import "bindings/subscreenpage.zh"
import "bindings/subscreenwidget.zh"
import "bindings/text.zh"
import "bindings/viewport.zh"
import "bindings/websocket.zh"
import "bindings/viewport.zh"
import "bindings/zinfo.zh"
