//Alpha 113

Pound combos can work on layers 1&2 (qr)
Add 'Push (Generic)' combos and 'Icy Floor' combos
	Now you can have slidy block puzzles in-engine!
	( EmilyV, Apr 9th, 2023 )

Fix screen not clearing properly in ZQ
	( EmilyV, Apr 8th, 2023 )

Quarter-tile view + rotated/reflected draw modes (tile editor)
	( EmilyV, Apr 7th, 2023 )

Web: implement sdl cursor
	( connorjclark, Apr 6th, 2023 )

Fix scrollpane crash
Try to fix a couple other crashes?
Fix small windows on mac
Fix squished ZCL buttons
	( EmilyV, Apr 5th, 2023 )

Add 'type->Own()' functions for npc, eweapon, lweapon, itemsprite, ffc
	( EmilyV, Apr 3rd, 2023 )

Fix ZC render, add 'stretch' option
Fix DrawTile/DrawCombo optional params
Add 'Invert Proximity' to shooters
Fix FFC bush/slash combos
Add 'No air triggers' hammer flag
	( EmilyV, Apr 2nd, 2023 )

Add 1-7 as hotkeys in tile editor to select the 7 tools
Add a bunch of new fonts!
	( EmilyV, Mar 31st, 2023 )

Add font change SCC
Add 'Custcene Trigger' combo
Tile and combo pages can both multi-insert / multi-remove
	( EmilyV, Mar 30th, 2023 )

Store combo column positions and mappage bookmarks per-quest
Fix trigger secret sfx timing
	( EmilyV, Mar 29th, 2023 )

Improve combo brush/cursor
Fix linux script debugger
Allow linking combo panel scrolling
	( EmilyV, Mar 28th, 2023 )

Improve combo pages animations
Fix ZQ eyeball combos
	( EmilyV, Mar 27th, 2023 )

Add switch states to combo triggers tab
Add font scaling in ZQ
	( EmilyV, Mar 26th, 2023 )

Add accessibility larger main panel (SWP btn in compact ZQ)
Fix not being able to F9 out of locked up scripts
Add ZQ hotkey customization (Etc->Hotkeys)
	( EmilyV, Mar 25th, 2023 )

Fix namespace resolution issues
	( EmilyV, Mar 23rd, 2023 )

Redesign mouse cursor system to fix caching bugs
	( EmilyV, Mar 20th, 2023 )

Rename the goddess spells (Divine Fire, Divine Protection, and Divine Escape)
Rework fire flags (any fire can now trigger any type of fire flag, depending on item flags)
Fix SBomb costs (compat)
Fix 'No Secret Sound' old flag (compat)
Fix opening wipe + F4
Fix combo rotation/flip + cset2
	( EmilyV, Mar 18th, 2023 )

Upgrade quake hammer / spin attack scrolls
	can set charge sound
	can pay magic cost on release instead of charge
	Quake Hammer / S. Quake Hammer combo triggers
Add 'weapon->Timeout' for auto-dying weapons
Allow 'Lantern' items to use counter cost passively
	( EmilyV, Mar 16th, 2023 )

Fix alias cursor alignment
Fix Hero->HitBy[] off-by-one error
Fix parser crash
	( EmilyV, Mar 15th, 2023 )

Add configurable dive button for flippers
	( EmilyV, Mar 4th, 2023 )

Render ZC visual cheats on A5 layer
Some fixes to the mouse
Fix map import/export
	( EmilyV, Feb 25th, 2023 )

A5 render tree upgrades
CSets 12 + 13 now available
Cheat hotkeys are now configurable
Add cheat 'trigger secrets' (perm and temp versions)
	( EmilyV, Feb 24th, 2023 )

Add 'Post-item-collect' generic script event
Fix stab animation carrying into new screen
Warp/scrolling collision fixes
Clean up Init Data dialog
Fix roc's feather on water
Fix moldorm 0 step crash
	( EmilyV, Feb 23rd, 2023 )

Remove Small Mode
	( EmilyV, Feb 22nd, 2023 )

// Alpha 112

Fix filled arc script draw crash
	( connorjclark, 21st Feb, 2023 )

Fix script draw flicker at end of screen scroll
	( EmilyV, 15th Feb, 2023 )

Fix parser crash
	( EmilyV, 14th Feb, 2023 )

Fix old quest load putting wand SFX on book items
	( EmilyV, 13th Feb, 2023 )

Fix mp3 music not looping
	( connorjclark, 13th Feb, 2023 )

add 'ctrl+a' to select all in textfields
	( EmilyV, 11th Feb, 2023 )

Fix GUI flickering
	( EmilyV, 10th Feb, 2023 )

Fix class 'this' pointer changing before function params parsed
	( EmilyV, 9th Feb, 2023 )

Screenshot key in Tile Pages takes Export view
	( EmilyV, 8th Feb, 2023 )

Fix calling functions from class constructors
Fix constructing objects in class constructors causing havoc
	( EmilyV, 7th Feb, 2023 )

fix small initial window size applying a bad clip to the screen bitmap
	( connorjclark, 5th Feb, 2023 )

Fix books with lweapon scripts crashing
Fix sparkle weapons inheriting script/useweapon/usedefense of parent item
Cleanup header 'version'/'minver' fields, increase their length to 16 chars.
	( EmilyV, 5th Feb, 2023 )

Add Compact Mode
Add Custom Fonts (ZQ)
	( EmilyV, 1st Feb, 2023 )

Add more Combo Wizards
	( EmilyV, 30th Jan, 2023 )

remove frame_rest_suggest
	( connorjclark, 25th Jan, 2023 )

Fix thrown weapons not triggering solid triggers from right/bottom
	( EmilyV, 22nd Jan, 2023 )

add JIT compilation for scripts (experimental!)
	( connorjclark, 21st Jan, 2023 )

Implement dmapdata string getter/setter functions
Add dmapdata->MirrorDMap and update DMFS_ constants
	( EmilyV, 14th Jan, 2023 )

New bait features for hungry npc rooms
	( EmilyV, 5th Jan, 2023 )

Fix zscript class functions
fix writebytes not /10000
	( EmilyV, 4th Jan, 2023 )

Fix FFCs not saving in ZQuest
	( Deedee, 3rd Jan, 2023 )
fix default values for some mapscr fields
	( connorjclark, 3rd Jan, 2023 )

Fix parser hang related to zscript classes
Fix some zscript functions being HORRIBLY broken
	( EmilyV, 3rd Jan, 2023 )

Fix keyboard stuff
	( connorjclark, 2nd Jan, 2023 )

Fix zscript file creation not being able to create directories
Fix hang when using 'Esc' to exit name entry
	( EmilyV, 2nd Jan, 2023 )

//HAPPY NEW YEAR

Update ffcscript to use more than 32 ffcs.
	( Deedee, 30th Dec, 2022 )

Fix internal special arrays being weird when directly accessed
	( EmilyV, 29th Dec, 2022 )

Fix user class bug when declaring multiple arrays
	( EmilyV, 26th Dec, 2022 )

Fix main menu drawing over dialogs on switch-in
	( EmilyV, 22nd Dec, 2022 )

Fix Hero->ScriptCSet
	( EmilyV, 21st Dec, 2022 )

Fix hitting OK when loading '1st.qst' treating it as loading a custom qst
	( EmilyV, 16th Dec, 2022 )

Fix snapping to the floor when sideswimming
Fix bad warp returns with triggered warps
Fixed Panoply's ladders being broken.
	( Deedee, 16th Dec, 2022 )

Fix softlock on enemy eating the hero being deleted
Fix 'bitmap->Create()' swapping width/height when called on a null bitmap
	( EmilyV, 15th Dec, 2022 )

Fix custom weapons not having correct Step
	( Deedee, 12th Dec, 2022 )

Add 'For Each' to ZScript
	( EmilyV, 11th Dec, 2022 )

Add 'For/Else', 'While/Else', 'Do/While/Else' to ZScript
Optimize ZScript:
	Optimize local var access
	Merge consecutive POPs
	Prune NOPs
	Condense function call params
	( EmilyV, 10th Dec, 2022 )

Add Coyote Time for Roc's Feather
	( EmilyV, 9th Dec, 2022 )

Scripts now terminate on 'Invalid ZASM command'
Fix compile bug
Make 'Enter' work more normally in dialogs
Improve 'untyped' function matching
	( EmilyV, 8th Dec, 2022 )

Fix swimming through screen transitions
Compat Rule for shallow water splash sfx
Fix bombs not being added to the subscreen on pickup
Fix hookshots not going over solid hookshot/water combos
	( Deedee, 8th Dec, 2022 )

Shallow Water shows walkability
	( Deedee, 7th Dec, 2022 )

Cleanup std_zh
	( EmilyV, 7th Dec, 2022 )

Stomp boots bouncing/block flags
Variable Jump Height for Roc's Feather
	( Deedee, 6th Dec, 2022 )

Refactor configs to only make a config file when the user changes configs in ZC/ZQuest; 
	allows copying over entire folder with a nightly while still remembering your old settings
Negative array accessors from Python; allows using negative numbers in an array to get that 
	many indexes away from the max of the array.
	( EmilyV, 5th Dec, 2022 )

Use new library for MP3s, less buggy MP3s
Various fixes
Improve ZScript docs for Input, Hold, and Button
	( connorjclark, 3rd Dec, 2022 )

Fix max rupees and keys in Init Data
	( EmilyV, 1st Dec, 2022 )

Change default controls
	( Deedee, 1st Dec, 2022 )

Global Symbols Refactor
Fix Quit dialogue not popping up while paused
	( EmilyV, 30th Nov, 2022 )

Made FFCs work with Hookshots, SwitchHooks, and Light Triggers
Made FFCs work with the Triggers tab
	( Deedee, 30th Nov, 2022 )

Entire rendering refactor
Replay fixes
	( connorjclark, 29th Nov, 2022 )

Add %b and %B to printf
	( EmilyV, 28th Nov, 2022 )

Generic script init data
	( EmilyV, 27th Nov, 2022 )

Quest rule search window
	( EmilyV, 26th Nov, 2022 )

Replay fixes
	( connorjclark, 26th Nov, 2022 )

Backwards compat fixes
	( Deedee, 26th Nov, 2022 )

Added slopes, stairs, and diagonal walls
	( Deedee, 25th Nov, 2022 )

Added Combo Wizard to help with setting up combos
	( EmilyV, 25th Nov, 2022 )

Allow using playerdata cheats while recording replays
	( connorjclark, 22nd Nov, 2022 )

Added Solid FFCs
Bump FFC count up to 128
	( Deedee and Emily, 22nd Nov, 2022 )

Fix old quests not properly having item costs for bombs and arrays
	( EmilyV, 17th Nov, 2022 )

Replay fixes
	( connorjclark, 16th Nov, 2022 )

Added Paldata access in scripts; allows mixing and blending palettes and read/write access to quest palettes via script.
	( Moosh, 15th Nov, 2022 )

Fix lag when starting up ZC
	( Deedee, 13th Nov, 2022 )

Fix crash on floodfilling placed flags
Fix large enemy movement
	( EmilyV, 13th Nov, 2022 )

Fix palette flickering when changing palettes
	( Deedee, 11th Nov, 2022 )

New Config Options for remembering the last size and position of the program
	( Deedee, 9th Nov, 2022 )

Fix PNG/GIF import/export problems
	( connorjclark, 8th Nov, 2022 )

ZC and ZQ now obey windows scaling properly
	( Deedee, 8th Nov, 2022 )

Replay fixes
	( connorjclark, 4th Nov, 2022 )

Add Class Objects to ZScript
	( EmilyV, 29th Oct, 2022 )

Fix spacebar map setting screen states
	( Deedee, 26th Oct, 2022 )

Combo, FFC, and Item scripts now use variable names for InitD and can now have help text specified in their respective editors
InitD values automatically swap input type based on script metadata and InitD variable types
	( EmilyV, 26th Oct, 2022 )

Added snapshot mode to replay. This allows you to specify specific frames at which ZC will 
	automatically take a screenshot during replay playback.
	( connorjclark, 25th Oct, 2022 )

Combo editor can change names of attributes/bytes/shorts and flags based on script metadata of currently selected script
	( EmilyV, 25th Oct, 2022 )

Merged web port
	( connorjclark, 24th Oct, 2022 )

Fix import header guard issue with same-name files
Fix string wrap breaking after multiple spaces in a row
	( EmilyV, 24th Oct, 2022 )

// Alpha 111

Fix shadows not drawing on enemies that do not 'Obey Gravity'.
	( EmilyV, 23rd Oct, 2022 )

Add 'GetEquipmentX()'/'GetEquipmentY()' to std_functions.zh
Update 'UsingItem()' in 'std_functions.zh' to check x/y buttons
	( EmilyV, 22nd Oct, 2022 )

Change the 'Global State' flag on switches/switch blocks
	to 'Flags[10]' instead of 'Flags[9]', because
	it was overlapping with another flag...
	(this might break quests that were using this, sorry!)
	( EmilyV, 19th Oct, 2022 )

Fix scroll warp color change timing bug
	( EmilyV, 19th Oct, 2022 )

Fix duplicate cursor displaying
	( connorjclark, 19th Oct, 2022 )

Fix some buttons not working properly
Fix lifting an item with a lift glove allowing you to swim
Fix: Now when drowning / falling in a pit with a combo lifted,
	you will drop the combo.
	( EmilyV, 18th Oct, 2022 )

Fix item position not saving properly on screen 0x80+
	( EmilyV, 17th Oct, 2022 )

Allegro mouse fixes
	( connorjclark, 16th Oct, 2022 )

Fix negative item pickup amounts
Fix the mouse clipping through some dialog text
	( EmilyV, 15th Oct, 2022 )

replay fixes
	( connorjclark, 14th-22nd Oct, 2022 )

Fix '^' characters in control settings dialog
	( EmilyV, 14th Oct, 2022 )

Add 'Unsafe Ground' flag, for new pit/drowning respawn
	to mark positions as 'not safe to respawn on'.
	( EmilyV, 13th Oct, 2022 )

// Alpha 110

Actually fix string margin issues, for real this time, I swear.
	( EmilyV, 12th Oct, 2022 )

Enhanced music fixes for dmap music
	( Deedee, 10th Oct, 2022 )

Fix zc save file name config not working
	( connorjclark, 10th Oct, 2022 )

Fix computer-specific cursed bug relating to screen flag script access
Fix version-info related issues
ZScript Debug Console now clears on loading quest, and prints
	version info for the current build and the quest on clear.
Fix string compat issues
Fix combo editor missing labels
Fix cheats 'Player Data' window off-center
	( EmilyV, 10th Oct, 2022 )

Fix sprite data editor not saving changes to sprite name
	( EmilyV, 8th Oct, 2022 )

Reduce excess code generation (reduce .exe file size)
	( connorjclark, 7th+8th Oct, 2022 )

Attempt fix 'Windows scaling issues' bug
	( Deedee, 6th Oct, 2022 )

Fix ZScript 'Pow()' crashing
Fix weird issue with bush combos on FFCs and script-spawned weapons
	( EmilyV, 6th Oct, 2022 )

Add script access to more lifting/trigger related
	combodata variables.
	( EmilyV, 4th Oct, 2022 )

New replay/recording system. See `docs/replays.md` for instructions.
	( connorjclark, 3rd Oct, 2022 )

Fix string right margin
	( connorjclark, 2nd Oct, 2022 )

All textfields now support system clipboard copy+paste
	with Ctrl+C, Ctrl+V
All textfields now can be cleared with Ctrl+Del, Ctrl+Backspace
Insert SCC dialog copy/paste to clipboard buttons
	( EmilyV, 2nd Oct, 2022 )

Blank tiles take up less space in quest file
Upgrade sprite data editor
	( EmilyV, 1st Oct, 2022 )

Fix lift glove crash
Fix compiler settings not saving properly
Fix player sprite dialog issues
	( EmilyV, 30th Sept, 2022 )

// 30th Sept nightly

Fix scripts not finding the correct folder to create files in
Fix ZScript Compile related crashes
Fix GUI/Scrollbar related crashes
	( EmilyV, 30th Sept, 2022 )

// 29th Sept nightly

Fix default quest
Add 'Insert' and 'Remove' ('I' + 'Shift+I') to tile editor
Fix sfx on 'Direct Warp' combos sticking
	( EmilyV, 29th Sept, 2022 )

// 28th Sept nightly

Add 'Lifting' and 'Lift+Walk' player sprites
Update default quest
Fix scrolling warp palette oddities
	( EmilyV, 28th Sept, 2022 )

// 27th Sept nightly

Fix menu-related SCCs
Fix save point menu cursor moving when holding buttons
Save Point combos now support 'ComboType Effects' triggers,
	and have flags/attributes to allow healing the player's
	life and magic when activating the save point.
Fix script writing 'weapon->DeadState' not properly resetting
	'dying frame' to keep weapon alive.
	( EmilyV, 27th Sept, 2022 )

Quest MIDI Info now always allows listening
	( EmilyV, 25th Sept, 2022 )

Fix L/R quickswap eating inputs even when disabled by QR
Fix jumping twice in one frame with feather button option
Add 'Alt+Click' on 'Favorite Combos' to 'Scroll to Combo'
	( EmilyV, 24th Sept, 2022 )

Fix floodfill crash on layers
	( connorjclark, 24th Sept, 2022 )

Fix combo pools/lifting being offset when inserting/moving combos
Fix favorite combos menu
	( EmilyV, 21st Sept, 2022 )

Fix softlock when click+dragging on dropdowns
	( EmilyV, 20th Sept, 2022 )

Add hex value box to palette editor
Fix crash when using both '->Secrets' and 'Triggers Secrets' on
	the same combo
Add button-based option to feathers
	( EmilyV, 19th Sept, 2022 )

Fix 'Flags' button on screen enemy dialog going to wrong
	tab of screen data
Fix lockblock-related bug
Fix string margins
	( EmilyV, 18th Sept, 2022 )

Add 'Thrown' weapon combo trigger
Add 'lift height'/'lift time' combo options
	( EmilyV, 17th Sept, 2022 )

Add advanced 'jinx' related options to items
	( EmilyV, 16th Sept, 2022 )

Add 'Lift Glove', combo lifting
Fix crash related to having a 0 bomb ratio
	( EmilyV, 13th Sept, 2022 )

Compress screen data, greatly reducing quest file sizes
Fix 'flip' for large-sprite enemies
Add 'Combo Pools', similar to combo aliases, used to place
	a random combo from a weighted pool of combos. Intended to be useful
	for decorative purposes, ex. random varying grass/flowers
	( EmilyV, 10th-11th Sept, 2022 )

Add multiple-undo/redo to screen editing
	( connorjclark, 10th Sept, 2022 )

Fix 'ResizeArray()'
Compress combodata, reducing quest file sizes.
	( EmilyV, 9th Sept, 2022 )

Optimize ZScript array initializers
	( EmilyV, 8th Sept, 2022 )

Add new enemy movement flags
	( EmilyV, 7th Sept, 2022 )

Allegro 5 / image loading fixes (bmp)
	( connorjclark, 5th-7th Sept, 2022 )

Fix ZLauncher missing window frame
	( connorjclark, 3rd Sept, 2022 )

Add 'Shooter' combo type- a custom turret combo
Add 'Cooldown' timer for combo triggers
	( EmilyV, 2nd Sept, 2022 )

Fix dragging items
More combo triggers tab options
	( EmilyV, 31st Aug, 2022 )

Fix 'bitmap->GetPixel()' not being *10000
Add 'bitmap->CountColor()'
	( EmilyV, 29th Aug, 2022 )

Add global and timed states for Switch combos
Update 'Video Mode' dialog to allow custom resizing of the window
	( EmilyV, 21st Aug, 2022 )

Fix auto-warps repeating infinitely
Fix cheat code editing dialog
	( EmilyV, 20th Aug, 2022 )

Fix program not exiting correctly
	( connorjclark, 19th Aug, 2022 )

Try to fix mouse cursor lingering at edge of screen
	( EmilyV, 19th Aug, 2022 )

Fix 'Progressive Item' showing incorrect tile on hold up
	( EmilyV, 18th Aug, 2022 )

//A109

Add 'OwnArray()'/'DestroyArray()' functions
	( EmilyV, 17th Aug, 2022 )

Fix more conveyor bugs
	( Deedee, 17th Aug, 2022 )

Fix light beam visual glitch
Add 'itemsprite->DroppedBy'
Fix droplist right click crash
	( EmilyV, 16th Aug, 2022 )

Generic script 'WaitEvent' system
Fix ring/damage combo interaction
	( EmilyV, 15th Aug, 2022 )

Fix slow midis
	( connorjclark, 15th Aug, 2022 )

--Aug 15th Nightly

EWeapon combo triggers
	( EmilyV, 15th Aug, 2022 )

Fix bugged cost counters
Fix item 'pickup amount' bounding
Add new combo trigger options (Lens, Light Beam, Push)
'Toggle Transparent' combo flag
Fix FFC 'Run at screen init' not working immediately after loading from save select screen
	( EmilyV, 14th Aug, 2022 )

Fix undamaged ghoma not blocking properly
	( Deedee, 14th Aug, 2022 )

--Aug 13th Nightly

Fix conveyor bugs
	( Deedee, 13th Aug, 2022 )

Add draw 'Layer' to message strings / string editor
More combo triggers stuff; invert required item,
	consume required item, and option to require/consume a counter as well.
	( EmilyV, 13th Aug, 2022 )

Fix lockblocks on layers 1/2
	( EmilyV, 9th Aug, 2022 )

Add 'Save ZInfo'/'Load ZInfo' buttons
	( EmilyV, 2nd Aug, 2022 )

Upgrade subscreen properties dialog
Add config 'auto_filenew_bugfixes' (default on)
	If enabled, compat rules are automatically bugfixed when creating a 'New' quest.
Update default quest.
	( EmilyV, 1st Aug, 2022 )

Add 'Hero->Standing' and 'Screen->TriggerCombo()'
Fix mirror light beam shield interaction
Add 'Copy Text'/'Paste Text' buttons to string editor
	( EmilyV, 30th July, 2022 )

ZScript exponentiation operator '^^^'
Add system clipboard copy/paste for zscript buffer
	( EmilyV, 29th July, 2022 )

'About' dialog expanded (now includes a button to copy info for bug reports)
Quest rules can now be exported as a string to the clipboard
Add numeric 'ID' searching on numbered listers
Fix GUI issues
	( EmilyV, 27th July, 2022 )

Update icons
Fix lockblock/locked chest flags
	( EmilyV, 26th July, 2022 )

// A108

Fix decorations -2 yoffset (compat qr)
Add 'ExtraStates' to screens, usable by chests/lockblocks to have >1 per screen
Add custom item contents for chests
Add 'Bugfix' popup when loading a quest with compat rules checked
	( EmilyV, 24th July, 2022 )

Fix rounding issues
Fix scripted internal ghost-based movement functions
Fix manhandla crash
	( EmilyV, 22th July, 2022 )

More combo trigger stuff
	( EmilyV, 21st July, 2022 )

Stop 'Palette' dialog from popping up when 'Alt+F4' is used
Undercombo dialog now edits undercombo for the current layer
Fix pushblock layer behavior
Add 'itemsprite->ForceGrab' to allow scripts (and chest combos)
	to force an item to be picked up by the player.
Combo trigger SFX
	( EmilyV, 20th July, 2022 )

Fix 'Return To File Select On Death/F6' qr
More combo trigger stuff
	( EmilyV, 19th July, 2022 )

More Combo Trigger stuff
	( EmilyV, 18th July, 2022 )

Fix small mode dialog cutoff
	( EmilyV, 17th July, 2022 )

Add 'stack' type to ZScript
Fix std_zh angle issues
Begin work on new combo TriggerFlags stuff
QR for fast counter drain
Fix item scripts behaving wrongly when the 'run for multiple frames' rule is off
	( EmilyV, 16th July, 2022 )

Add 'No Damage Protection' boots flag
Fix subscreens using the wrong item IDs when multiple items of the same 'Level' are owned
	( EmilyV, 13th July, 2022 )

Add automatic crash reporting
	( connorjclark, 11th July, 2022 )

Fix warps not properly deallocating owned script objects for dmap scripts
	( EmilyV, 11th July, 2022 )

Fix subscreen editor default value of magic gauge pieces 'Show:'
	( EmilyV, 10th July, 2022 )

Keyboard sticking fixes
Exporting image palette fixes
Fix scrollpane crashes
FPS optimizations
	( connorjclark, 9th July, 2022 )

Fix FFC editor changing combo placement cset
	( EmilyV, 8th July, 2022 )

Image loading fixes
Window Resizing improvements
	( connorjclark, 8th July, 2022 )

Add '-unlinked' mode for zscript parser
	( EmilyV, 4th July, 2022 )

Rename 'OceanSFX' to 'Ambient SFX' (ZScript)
	( EmilyV, 3rd July, 2022 )

Mac (OSX) fixes
	( connorjclark, 2nd July, 2022 )

Update 'std_zh'; add 'ghostBasedMovement.zh'
	( EmilyV, 30th June, 2022 )

More Allegro5 fixes
	( connorjclark, 26th June, 2022 )

Add '*weapon->Flags[]', including [WFLAG_PICKUP_ITEMS], a flag which allows weapons
	to automatically collect items they touch, similar to how engine melee weapons do so.
Hopefully fix 'lweapon->Weapon' not working properly at all.
	( EmilyV, 26th June, 2022 )

Fix alt key shortcuts not working properly
	( connorjclark, 25th June, 2022 )

--June 25th nightly

Fix zscript compiler console closing even when warnings were thrown.
	( EmilyV, 25th June, 2022 )

Optimize ZScript internally (various small optimizations)
Fix editing the ZScript buffer causing a hardlock
Fix spawned sprite object (ex. bushes/generic combos) repeating the first
	frame at the end for one frame
	( EmilyV, 24th June, 2022 )

--June 23rd nightly

Upgrade to Allegro 5 (major backend change)
	( connorjclark, 23rd June, 2022 )

Add 'messagedata->Length', to read the length of a message string
Update std_functions 'GetMessage()':
	If the passed array is too small, it will be resized to be large enough
	Now works with strings <140 chars
	( EmilyV, 23rd June, 2022 )

Removed debug messages
	( EmilyV, 20th June, 2022 )

Fixed Hover Boots
	( Deedee, 19th June, 2022 )

Add 'optional parameters' to ZScript
	see ZScript_Additions.txt for details
	( EmilyV, 12th June, 2022 )

Fix subscreen bugs
Fix sideview swimming bugs
	( Deedee, 11th June, 2022)

//A107

Fix textfield breaking
Expand masked blitting options
Include paths via script, update std_zh
	( EmilyV, 10th June, 2022 )

fix launcher textfields able to be too large
fix advpaste dialog overlapping checkboxes
fix item drag issues, arrow 'block combo' issues
Fix dmap editor map preview misalign
Add 'Block Weapon (Custom)' combo type
	( EmilyV, June 9th, 2022 )

fix random memory access in combo help string
	( EmilyV, June 6th, 2022 )

Fix mapdata->Enemy[] crash
Fix cheat mod keys, AGAIN!
	( EmilyV, May 31st, 2022 )

Allow conveyors to work on layers
	( EmilyV, May 30th, 2022 )

fix setting dir resetting walk animation
fix zscript hanging during specific edge-case
	( EmilyV, May 26th, 2022 )

Remove ZCL close warning
Fix 'Z' in tile editor being weird/taking multiple snapshots
Fix zinfo overwrite when grabbing tiles from .qst
	( EmilyV, May 22nd, 2022 )

Fix hero gets stuck on corners of "walk on top" switchblocks
Fix custom quest selection bug
Fix subscreen override items being invisible in zq
	( EmilyV, May 21st, 2022 )

Fix 'Enemies->Secret' weirdness
	( EmilyV, May 14th, 2022 )

Add string fix tool
	( EmilyV, May 13th, 2022 )

-- May 11th nightly build

Add floating selection to tile editor
	-A 'selected' area can now be moved
	-Moving the selected area causes it to "float" above the rest of the tile
	-While floating, it does not overwrite the pixels 'below' it
	-Upon changing the selection or saving, it 'falls', merging back into the tile.
	( EmilyV, May 11th, 2022 )

Fix enemies causing death SFX when they shouldn't
	( EmilyV, May 9th, 2022 )

Add zscript angled weapon features
	( Deedee, May 9th, 2022 )
	
Fix separate 'item override' active shields not using
	the correct shield.
Fix several issues related to large items
	-Large bottles now display correctly
	-With a compat rule for old behavior, engine subscreen selectors
		will now stretch to fit sized items on the subscreen (uses hit sizes)
	-Large items will now preview correctly in the item editor
	-Dropdown added for bottle items to preview any bottle type
Fix crash near end of combo list with large combo brush size
Active Shields: Step speed modifier, lock direction (strafing)
	( EmilyV, May 7th, 2022 )

Add 'fakez' for sprites, with 'fakejump'
	( Deedee, May 3rd, 2022 )

-- May 2nd nightly build

Fix crash in 4-way movement
	( EmilyV, May 2nd, 2022 )

-- May 1st nightly build

Fix itemclass zinfo not refreshing on opening subscreen editor
	( EmilyV, May 1, 2022 )

Stomp boots can hit multiple enemies, and stunned/clocked enemies.
	( Deedee, May 1, 2022 )

Fix fairy spawning limit QR being reversed
Fix scripted `npc->Knockback()` clipping into walls
Add `->Drowning` and `->DrownCombo` access for scripts
Add option to sort mapflags by ID
	( Deedee, Apr 30, 2022 )

Shields can now be configured to block different sides
	( EmilyV, Apr 29, 2022 )

Fix dmap script restarting issues
	( Deedee, Apr 28, 2022 )

Add 'npc->InvFlicker' to match 'Hero->InvFlicker'
Add the new features from lock blocks to locked chests as well
	Also, locked chests and boss-locked chests can now display a separate button-prompt
	pop-up when you are unable to open them.
Add 'open chest' sfx for chest combos
Allow light targets to block light
Add active shields (must hold button down to block)
Add active clocks, 'Kill All Enemies', and the new itemclass 'Refiller' which
	acts as an active version of a counter refilling item.
	( EmilyV, Apr 27, 2022 )

-- Apr 25th nightly build

Fix issues with rotate/flip in combo editor
Fix several issues with map flags, and added new shortcuts:
	CTRL+Click will 'floodfill' a flag
	ALT+Click will 'select' a flag
	Holding SHIFT while in flag placement temporarily 'selects' the (None) flag,
		acting like an eraser.
	( EmilyV, Apr 25, 2022 )
Add option to skip warning when placing flags on a layer they "don't work on"
	( Deedee, Apr 25, 2022 )

Add counter names to 'ZInfo' so that they can be renamed per-quest
	( EmilyV, Apr 24, 2022 )

-- Apr 24th nightly build

Fix scrolling in dialog pop-ups carrying over to combo pane
Add Combo Types and Mapflags to 'ZInfo', allowing custom names and
	help text per-quest. Updated default names for some flags.
	Hid unimplemented flags from view.
New ZScript binary/octal format option
Add visual button prompts for signposts/chests, and a 'ButtonPrompt' combo type
	to display button prompts generically.
Add 'Hero->TileMod' (read-only),
	'Hero->Kill(bool bypass_revive)',
	'Hero->Immortal'
	( EmilyV, Apr 24, 2022 )

Add 'generic' scripts, which can either:
	-Run 'frozen', similar to Active Subscreen and onF6 slots
	-Run 'passively' similar to Global Active, except, while running
		passively, 'WaitTo()' can be used to wait until precise timings
		within a frame.
	( EmilyV, Apr 20, 2022 )
Raft fixes
	( Deedee, Apr 20, 2022 )

Add multi-break/continue ('break 2;')
Fix F4 not working during onDeath script
Fix rounding error
Fix enemy/pit collision
	( EmilyV, Apr 19th, 2022 )

Fix 'mapdata->Enemy[]' offset
	( EmilyV, Apr 18th, 2022 )

Fix enhanced music warp issue
	( Deedee, Apr 10th, 2022 )

//A106

Added option to use old (internal) compile window instead of the external console window for compiling (Etc->Options->Use Internal Compiler). Compiling still happens externally to prevent memory issues, but you can have the old feel back.
Only one compile window can be active at a time now, and they close automatically when you close ZC (no more mountains of failed compile windows you need to manually close)
Made ZScript compile faster  (less endlag after success)
Fixed Scroll Warps blanking dungeon map.
Fixed Tile Warps resetting music if music is changed via script.
Fixed not being able to scroll screens while on a solid combo.
-Deedee
Fixed ZC not launching for some users
-Emily

//A105

Fixed bug where opening a quest wouldn't read certain strings properly
Fixed some issues with String Control Codes
Fixed Quest Time subscreen object not appearing on passive subscreen

-April 6th Nightly

Added Fix Tools->Pit and Liquid Damage Fix
Fixed ZQuest thinking it's been changed and needs to be saved when opening a quest
Can no longer be knocked back over pits
Fixed Hookshot Grabs not working on Layer 2 even with the QR enabled
Fixed Fairies not dying correctly when picked up or despawning
Fixed Peril Rings not applying to damage combos in certain older quests, added new item flag for Peril Rings for this behavior
-Deedee
Add new String Control Codes for triggering secrets and setting screen state
New conveyor options, smart conveyors that don't get player stuck on corners, conveyors that stun you while they push you, and conveyors that force you to face their direction
-Emily

-April 4th Nightly

Fixed some Game->Suspend related bugs
Fixed crash when entering a cave or dying with a fairy onscreen
Hopefully fixed string-editor related data corruption?
-Deedee

Fixed RNG not being initialized
Add Rule Templates
Flag: Farore's Wind acts as F6->Continue
Add QR for Wallmasters/Farore's always using continue point
Better Combo/Tile Undo
Add Own() for all pointer types with Free() (bitmaps, etc); this will automatically Free() the pointer when the script that Owns that pointer ends.
-Emily

-Mar 30th Nightly

2 Dock/Raft based QRs
Shallow Water no longer displays while rafting
	( Deedee, Mar 30th, 2022 )
Fix ZQ Options not being saved
String editor fixes
Fix itemclass 255 being unobtainable
Fix String listpos not being saved
Fix init data crashing with too many items in an itemclass
Fix Secrets->Next on Layers
Fix ~Init Script wrong name
More Half Magic options
	( EmilyV, Mar 24th, 2022 )

-Mar 24th Nightly

Fixed ItemA/ItemB/ItemX/ItemY setting not being obeyed with item overrides.
	( Deedee, Mar 24th, 2022 )
Fix WarpEX documentation
Fix String Editor Help Text Colors
Fix Projectile Shooters not obeying stun values/being able to be stunned
Fix generic combos Room Item, now uses Special Item.
Fix generic combos showing decoration sprites when they shouldn't.
	( EmilyV, Mar 17th, 2022 )

//A104

Fix armos combos being able to spawn multiple armos per combo if entering a
	holdup animation while pushing against them.
Fix being able to set HP to 0 hearts in 'Player Data' cheat menu, thus killing yourself
Add QR so only the highest level passive item script for each class will run.
Fix the 'Keep Lower Level Items' item editor flag always acting enabled
	(This flag has been broken for as long as the item editor has existed)
	Also add QR to make it apply retroactively when collecting lower-level items.
Fix item pickup strings sometimes not loading the 'read' state properly
Add 'View->Show Darkness', a menu option for the already-existing
	'L' shortcut. This option now correctly previews 'New Dark Rooms'.
	( EmilyV, Mar 15th, 2022 )

Testing mode: Select return square
	( EmilyV, Mar 14th, 2022 )

Add script access 'combodata->TriggerButton[]'
Fix 'combodata->GenFlags[]' sizing
ZC Cheat dialog now checks code on pressing enter
Better handle invalid itemdata pointers in scripts
	( EmilyV, Mar 13th, 2022 )

-Mar 9th Nightly

Fix script-modified temp layers with no associated perm screen not behaving properly.
	(A previous update made them visible, but failed to make them obey solidity and such)
Fix string editor using the wrong margins in the preview window
Add 'bool combodata->TrigFlags[96];' for zscript TriggerFlags access
Add '->Next', '->Prev' trigger flag resolutions
Add the ability to trigger a combo via button press (similar to signposts/chests)
	( EmilyV, Mar 9th, 2022 )

Add read-only 'Screen->ShowingMessage'
Fix combo scripts running during messages with 'Messages Freeze All Action'
	( EmilyV, Mar 8th, 2022 )

Fix typo in player hold sprites, should fix hold sprite issues
	( connorjclark, Mar 2nd, 2022 )

Polish for combo alias and cheat dialogs
	( EmilyV, Feb 26th, 2022 )

Fix music not starting properly in test mode
Fix 'Move' and 'Insert' combos not updating the combos set
	for bottleshops.
Hopefully fix control dialog not drawing button prompt
New feature for corner-select gui objects (e.g. combo solidity):
	'Shift+Click' - Toggle the corner you clicked, and set all 4 corners to that state
	'Ctrl+Click' - Toggle all 4 corners
	( EmilyV, Feb 25th, 2022 )

-Feb 25th nightly

New string editor dialog
Add QR allowing 'Goto' SCCs to work smarter with the 'Is cont. of prev. string' flag
	( EmilyV, Feb 25th, 2022 )

Changed Tall Grass and Shallow Water walking sounds to use proper
	combo collision, new QR for Tall Grass Collision.
	( Deedee, Feb 20th, 2022 )

Changed the max length of 'Strings' from '144' to '8192'.
	Strings no longer start filled with spaces, and unused space does not
	take up quest file size.
	( EmilyV, Feb 19th, 2022 )

Slight GUI tweaks for QR dialog
New QR: 'Block Triggers improved locking'
	Block triggers will not lock blocks in place as they normally do. Blocks on the
	same layer as the trigger will lock normally, but blocks on other layers will not
	lock until all triggers are covered (thus triggering secrets). At this time,
	ALL blocks on triggers will click into place.
	This QR is enabled in the 'Modern' ruleset.
Add "Counts as 'pushblock'" flag to 'SwitchHook Block' combos.
	The block will trigger block triggers / block holes when swapped.
Fix version warning popup on old quests
Fix: Subscreen 'Current Item Name' now respects bottle contents.
	( EmilyV, Feb 18th, 2022 )

Fix test mode prompt not closing on save
Add 'Note' itemclass; when used, displays a specified message string.
	( EmilyV, Feb 17th, 2022 )

-Feb 17th nightly

Fixed GUI issues with setting controls
Fix 'Esc' not acting as 'Cancel' properly in some dialogs
Fix 'Game->Gravity[GR_STRENGTH]' returning extremely high values
Add new SCCs:
	Menu SCCs allow creating a multiple-choice menu the player can select from
	'\29' allows exiting the current string (going to the next string, if any is set,
		without waiting for the player to press a button to advance)
	'\30' pauses the string, as normally happens between strings, waiting for player input.
	( EmilyV, Feb 17th, 2022 )

Fix tile grabbing palette issues
Fix palette editor dialog in small mode
	( Deedee, Feb 17th, 2022 )

//A103

Massively optimize ZC's draws to the screen. To give you an idea how massive this was,
	my uncapped FPS in a 'File->New' quest went from ~500 to ~2500. This also simultaneously
	fixes dialog flickering in ZC.
Screenshots now save into 'ZC Folder/snapshots/' instead of 'ZC Folder/'
	( EmilyV, Feb 15th, 2022 )

Reverse slash sprites
Bug net slash sprites
New Keese enemy options
Fix manhandla blocking sfx
	( Deedee, Feb 15th, 2022 )

New cheat handling; now, entering a cheat code 'unlocks' that level of cheat (permanently for the save file).
	In the cheat menu, you can select any 'unlocked' level of cheat (default 0, resets each load).
Fix combo scripts for real
	( EmilyV, Feb 15th, 2022 )

Fixed bomb useweapon issue
Fixed tektite sideload issue.
Fixed Red Leevers ignoring clocks.
Added new stun/clock behavior to Leevers that makes them come out but not go back in when a clock is active or they're stunned (compat ruled)
Added new QR that lets Leevers be stunned by Quake Hammer.
Fixed Ganon spawning-related issues.
	using ItemX/ItemY/ItemA/ItemB no longer sets the subscreen cursor to
	invalid locations.
Fixed wizzrobes not obeying stun.
	( Deedee, Feb 14th, 2022 )

Fixed enemy stun pit bug.
Gleeok heads now have option to block projectiles
Added already accelerated keese option
Fixed weird graphical sword beam bug
	( Deedee, Feb 13th, 2022 )

Expand theme options
Fix module quest issues
Add setting to disable palette shortcuts (0-9)
Add 'SelectXWeapon()'/'SelectYWeapon()' to zscript
	( EmilyV, Feb 13th, 2022 )

Game icon updates on win game properly
Fix random shopkeeper spawning
Fix weird weapon mirror behavior
Fix cancel warp hopping bug
Change bug net timing (still WIP)
	( Deedee, Feb 12th, 2022 )

Fix error with swapbutton-style fields converting from LH mode to D mode
Add font readability option
Fix external parser issues
	( EmilyV, Feb 12th, 2022 )

Fix module-related issues
	( EmilyV, Feb 10th, 2022 )

Add 'Quest->Test', to instantly launch ZC to the current quest, dmap, and screen.
	( EmilyV, Feb 9th, 2022 )

Fix ffc drag bounding error
Fix screen 80 visited state bug
Candle step speed attribute
Fix custom weapon costs
Add ZQuest debug console
Add compiler SFX options to options dialog
Fix tile editor selection issue in non-rect mode
Clear out some unused code from old init dialog
	( EmilyV, Feb 8th, 2022 )

Added QR's for proper enemy item carrying and enemy drops.
	( Deedee, Feb 8th, 2022 )

Fix game_loop timing issue, charging across screens
	( EmilyV, Feb 7th, 2022 )

Fixed broken DrawScreenSolid and the like.
Fixed whistle whirlwinds constantly playing sound... again.
Fixed comboscript issue.
	( Deedee, Feb 7th, 2022 )

Fixed the enemy quake offset bug
	( Deedee, Feb 5th, 2022 )

Fixed my own book fire blunder
Fixed issue with reading MouseY affecting quakeclk
	( Deedee, Feb 4th, 2022 )

Add 'Recent' menu, allowing loading of recently-opened quests.
	( EmilyV, Feb 2nd, 2022 )

Allow viewing string list sorted
	( EmilyV, Feb 1st, 2022 )

Fixed weird string bug in screens with shops
Fixed the lack of o_tile initialization of script weapons
	( Deedee, Feb 1st, 2022 )

Fix numerous Panoply-related bugs
	( Deedee, Jan 31st, 2022 )

Implement external ZScript parser (zscript.exe)
	( EmilyV, Jan 27th, 2022 )

//A102

Completely redesign ZC Launcher from the ground up; now 'zlauncher.exe'
	Has access to more configs for both ZC and ZQ, and can set custom
		resolution options in ZC.
	Can load Themes for itself as well as ZC/ZQ, and comes with a built-in
		theme editor to create new '.ztheme' files!
	( EmilyV, Jan 22nd, 2022 )

Add more Misc SFX
	( EmilyV, Jan 19th, 2022 )

Z3 animation and lens layer hiding fixes
	( Deedee, Jan 18th, 2022 )

Fix excessive 'saved in newer build' warnings
	( EmilyV, Jan 17th, 2022 )

Bridge combos respect effect flags
	( Deedee, Jan 17th, 2022 )

Upgrade progressive items
	Now they will skip items which normally increase a max counter,
	but would increase by 0 due to 'But Not Above...';
	including heart pieces checking the heart container increase.
	( EmilyV, Jan 17th, 2022 )

Fix random pixels appearing during opening wipe
	( EmilyV, Jan 11th, 2022 )

Fix FFC editor issues
	( EmilyV, Jan 10th, 2022 )

//Alpha 101

New QRs regarding enemies respawning and etc.
	( Deedee, Jan 9th, 2022 )

New FFC Editor
	( EmilyV, Dec 28th, 2021 )

Fix new darkrooms behaving oddly when returning from a passageway
	( EmilyV, Dec 27th, 2021 )

Fix old strings QR being weird
	( Deedee, Dec 24th, 2021 )

Fix: can now type to search itemclasses in initdata like in other lists.
	( EmilyV, Dec 24th, 2021 )

Add ZInfo files / itemclass custom renaming
	ZInfo is internal to the .qst by default, but
	can be saved externally to lower quest file size.
	( EmilyV, Dec 23rd, 2021 )

Add more level-specific palettes
	( Deedee, Dec 23rd, 2021 )

Fix bottle itemclass name
Add 's' hotkey for string editor
Fix dialog text cutoff
Fix combo editor scrollpane visual bug
Fix new respawn point not caring about water enough
Fix 'onDeath' script hardlock when using frame advance, and running before engine
	death animation
Fix version <1.92 quests not loading combo 'original tile' correctly
Fix 'Import combo to...' bug
	( EmilyV, Dec 23rd, 2021 )

Fix overhead combo bug
Fix pushblock bugs
Fix Pols Voice movement bug
Add 'R' to Rotate in combo pages
Fixed combo editor visual bugs
	( EmilyV, Dec 20th, 2021 )

Update classic tileset (Mirrors, light puzzles, switchhook, +more)
Fix large enemy death sprites not scaling properly
	( EmilyV, Dec 19th, 2021 )

Add the 'Scale' option to tile editor right-click menu
	This allows you to scale a tile (or group of tiles) up or down, as long as
	the destination size is between 1x1 and 20x20 (rectangular)
Polish up some Magic Mirror features
Fix Tall Grass on layers 1&2
Allow 'combining items' on pickup to chain (qr-based)
Add Item Bundles (pick up multiple items together)
	( EmilyV, Dec 18th, 2021 )

Fixed Overhead combos on Layer 0
Fixed automatically re-entering warps on exit
	( EmilyV, Dec 17th, 2021 )

//Alpha 100

Add ghost.zh-based internal script movement functions
	npc->Move(dir, px, special)
	npc->MoveAtAngle(angle, px, special)
	npc->MoveXY(dx, dy, special)
	Also, add MoveFlags 'Only Water', 'Only Shallow Water', and 'Only Pitfalls'
		to go with these functions; changing the collision detection to *require*
		the enemy be on the respective type of combo.
	( EmilyV, Dec 17th, 2021 )

Add SwitchHooks / Switch Effects
Fix 'combodata->Tile'/'combodata->OriginalTile'
	( EmilyV, Dec 13th, 2021 )

Add Misc SFX menu (Audio->Misc SFX)
	( EmilyV, Dec 12th, 2021 )

Cross-Screen Respawn Points
	( EmilyV, Dec 8th, 2021 )

Bunch more help text throughout Dec 2021

Item and Combo editor help text for attribs/flags
Light beam puzzles - "Spotlight", "Glass", and "Light Trigger" combo types
	( EmilyV, Nov 29th, 2021 )

New Combo Editor
	( EmilyV, Nov 28th, 2021 )

Fix Din's fire cost compatability bug for old quests
	( EmilyV, Nov 25th, 2021 )

New homing/bait options
	( Deedee, Nov 23rd, 2021 )

Add Magic Mirrors
	( EmilyV, Nov 23rd, 2021 )

Add Bug Net / catching fairies
	( EmilyV, Nov 17th, 2021 )

New Patra enemy editor options
	( Deedee, Nov 16th, 2021 )

Fix 'counter %' SCCs which never worked to begin with
Added Fillable Bottles
	( EmilyV, Nov 16th, 2021 )

Add bunny/Moon Pearl feature (dmap flag, pearl item class, init data LTM)
	( EmilyV, Nov 15th, 2021 )

Enemy Editor dropdowns stuff
	( Deedee, Nov 14th, 2021 )
Fix 'Hit All Triggers->Perm' not triggering *temp* secrets,
	only setting the perm secret state
Fix large map displaying negative offsets wrong
	( EmilyV, Nov 14th, 2021 )
	
Fix cloaked/phantom drawstyles
Fix '->Polygon' hardlock
	( EmilyV, Nov 13th, 2021 )

Update classic tileset (no more Classic.zh stuff,
	new tiles/combos for Signpost, Crystal Switch, Lantern, etc,
	Lantern 1, Lantern 2, and Attack Ring items)
	( EmilyV, Nov 11th, 2021 )
Patra and QR stuff
	( Deedee, Nov 11th, 2021 )

Fix moldorms
Fix lanmola ringleaders
	( Deedee, Nov 9th, 2021 )

Fix module stuff
Fix inherent 'Many' push flags
	( EmilyV, Nov 7th, 2021 )

Fix dmap preview ignoring map styles
	( EmilyV, Nov 6th, 2021 )

Fix 'sfx.dat' issues with quests/modules (will increase quest file size by a bit)
	( EmilyV, Nov 5th, 2021 )

Fix crashes with really long script names
Add 'Hero->Grabbed' to zscript, for checking wallmaster state
	( EmilyV, Nov 3rd, 2021 )

Polish up darkrooms; lantern combos work as FFCs now
	( EmilyV, Nov 1st, 2021 )

Fix effect square on layers bug
	( Deedee, Oct 31st, 2021 )

Add QR help text buttons (not all filled in yet)
	( EmilyV, Oct 30th, 2021 )

Change emulation rules to QRs
	( Deedee, Oct 30th, 2021 )

Fixed 1.90 compat bugs, Push->Wait being broken
	( Deedee, Oct 28th, 2021 )

Fix a crash with Blit/BlitTo reading *from* out of bounds
Revamp options dialog
	( EmilyV, Oct 22nd, 2021 )

Add 'ResizeArray()'
Add warning when global Init script changes
	( EmilyV, Oct 21st, 2021 )

Fix dialogs, spacebar map bug
	( EmilyV, Oct 17th, 2021 )

Refactor code to use specific-sized types
	( EmilyV, Oct 15th, 2021 )

Fix 'combodata->Attribytes[]', add 'combodata->Attrishorts[]'
	( EmilyV, Oct 12th, 2021 )

Update std_functions.zh; WrapAngle(), WrapDegrees()
Fix some dialog issues
	( EmilyV, Oct 11th, 2021 )

Fix solidity errors, fix solid damage combos
	( Deedee, Oct 11th, 2021 )

Allow script-modified templayers to become 'valid'
	( EmilyV, Oct 10th, 2021 )

//Alpha 99

Brand new item editor design!!!
	( EmilyV, Oct 10th, 2021 )

Fix wrong CSet9 colors when returning from passage into dark room
Fix buggy hookshot when player moved by script
	( Deedee, Oct 10th, 2021 )

Fix walking atop switch blocks
Fix swap-textfield '-' handling
Fix crashes
Add 'this->Layer()' for combo scripts
	( EmilyV, Oct 9th, 2021 )

Allow setting book fire damage
Various fixes: crash, sideview swimming hopping, smartscroll,
	fairy spawn limits, whistle sound bugs, item messages not saving
	( Deedee, Oct 9th, 2021 )

Sideview Swimming!!!
	( Deedee, Oct 8th, 2021 )

Update 'About' dialogs
Increase Game->Generic[] to long
	( EmilyV, Oct 8th, 2021 )

Add new bitmap drawing functions
	( EmilyV, Oct 7th, 2021 )

//Alpha 98

Init Data dialog upgrade
	( EmilyV & Saffith, Oct 5th, 2021 )

Fix itype names missing in cheat menu
Add beam shards new animation type for 'Misc Type = 4'
Fix "4-Frame Flying 8-Dir Firing" animation
Fix Signposts/Chests not properly eating inputs
Add "Map Count" field to "Quest Options"
Move "Cheats" dialog into "Quest Options"
Changed "Quest->Options" from a submenu to just opening the new dialog
Show itemclass numbers in itemclass selection dropdowns
	( EmilyV, 4th Oct, 2021 )

Add new "Header" and "Pick Ruleset" dialogs, inside "Quest Options"
	( EmilyV, 3rd Oct, 2021 )

Add new "Quest Options" dialog
Add new "Script Settings" dialog
	( EmilyV, 2nd Oct, 2021 )

Fix 'cancel' button not cancelling during mass combo creation
	( EmilyV, 30th Sept, 2021 )

Fix game icon issues
Add 'bitmap->WriteTile()', allowing scripts to draw to the tile pages.
	( EmilyV, 29th Sept, 2021 )

//Alpha 97

Fix 'Always Grabbable' pickup flag bugs
Fix crashes related to new RNG
Add customizable shadow/death/spawn sprites
	( EmilyV, 28th Sept, 2021 )

//Alpha 96

Add 'sprite->Remove()' for non-npc sprite types
	( EmilyV, 27th Sept, 2021 )

Fix weapon scripts
Fix CSet2
Add '*weapon->Unblockable'
Fix dmapdata->Type
	( EmilyV, 26th Sept, 2021 )

New RNG system
Add 'randgen' ZScript class
remove aNONE non-animation
	( EmilyV, 23rd Sept, 2021 )

Darkroom Color Selection
	( EmilyV, 21st Sept, 2021 )
	
Make dmapdata changes to subscreen update instantly
Compat rule work, V_COMPATRULE added
add 'item->Animation', previously missing
Add 'Always Grabbable' pickup flag
	( EmilyV, 20th Sept, 2021 )

Make 'Particle' objects different from 'sprites'
Separate script memory from sprites so it's only used when needed
	( EmilyV, 18th Sept, 2021 )

Upgrade to C++17
	( Saffith and EmilyV, 16th sept, 2021 )

Add real darkrooms + lantern itemtype
	-Sprites can emit light
	-Multiple light shapes
	-Dithering/transparency options
	( EmilyV, 7th - 13th Sept, 2021 )

//Alpha 95

Add shadows in string editor
	Add SCCs for string shadows
	Add SCC for insterting player's name
	Add SCC for inserting a tile block
	( EmilyV, 5th Sept, 2021 )

Add reloading of game icons (with config)
	( EmilyV, 4th Sept, 2021 )

Fixed bug with horizontal weapons with animations
	( Deedee, 4th Sept, 2021 )

Fix pickup string bug
	( Saffith, 4th Sept, 2021 )

Fix ringcolor not updating from SCCs
Update combo type help text
	( EmilyV, 30th Aug, 2021 )

Add "Attack Ring" itemclass
	( EmilyV, 22nd Aug, 2021 )

Add button to InitD[] / Combo Attributes allowing
	entering numbers in decimal or hex, and in long or standard modes
	( EmilyV, 18th Aug, 2021 )

Fixed system palettes being shown in ZQuest palette editor.
Fixed Darknut bomb interaction with new QRs
Fixed remote bomb subscreen handling.
	( Deedee, 16th Aug, 2021 )

Fixed Gohmas poofing in older quests
	( Deedee, 15th Aug, 2021 )
	
Added Automatic Triggers
	( Deedee, 13th Aug, 2021 )

Add Crystal Switches / Switch Blocks
Add 'Secrets->Next' flag
	( EmilyV, 12th Aug, 2021 )

Added Item/Special Item always returns.
Added Item->Secrets
	( Deedee, 10th Aug, 2021 )

Add Signpost Combos
Update chest combos
'Secrets->Item' flag, and 'Screen->SecretsTriggered()'
Prevent editing combo 0 (with compat rule)
	( EmilyV, 10th Aug, 2021 )

Fix ruleset/effect conflict, re-organize ruleset code
Add 'Draw Block->3x3'
	( EmilyV, 9th Aug, 2021 )

Add in-conditional data declaration to ZScript
	i.e. 'if(npc n = foo()){}'
	Also fixes ambiguous syntax error on if/else chains
	( EmilyV, 8th Aug, 2021 )

Add 'Overhead combos on layers 1&2' QR
	( EmilyV, 7th Aug, 2021 )

Allow decimal value for combo attributes
	( EmilyV, 5th Aug, 2021 )
	
Added custom conveyor speed
	( Deedee, 5th Aug, 2021 )

Add effect area to combos
	( Deedee, 3rd Aug, 2021 )

Re-organize squares in combo editor, add labels
Fix cancel buttons in combo editor
Update View Palette dialog to show hovered color value
Add Ctrl+(0-6) to switch active layer
Add Damage Combo No Knockback Flag
	( EmilyV, 3rd Aug, 2021)

Update favorite commands (GUI/style)
Add favorite commands (Layer2/3 is BG)
	( EmilyV, 1st Aug, 2021)

Fix random noise in view palette dialog
Fix fonts for favorite command dialog
Fix 'Graphics->NumDraws()'
	( EmilyV, 30th Jul, 2021)

Add qr to make writes to Hero->Step temporary
	( EmilyV, 29th Jul, 2021)

Fix roc's feather issue
	( EmilyV, 28th Jul, 2021)

Fix pickup strings always playing
Add QR to correct EW_BRANG animation
Fix L/R cycling
Split X/Y button rule into 2 rules
Fix message string issues
	( EmilyV, 27th Jul, 2021)

Fix X/Y button issues
Fix QR naming (Player/Hero)
Fix 'sparkle bug'
Fix mapdata setters/getters
	( EmilyV, 26th Jul, 2021)

Add QR: Non-heavy blocks trigger block triggers permanently
	( EmilyV, 23rd Jul, 2021)

Add 'bool Hero->IsWarping', read-only
	( EmilyV, 8th Jul, 2021)

Fix enemy defenses / weapon override types
	Fix defense resolution, re: 'useweapon'/'usedefense'
	Fix off-by-one error in weapon type dropdown
	( EmilyV, 3rd Jul, 2021)

Various Minor Fixes
	( EmilyV, 24th May - 3rd Jul, 2021)

Make ZScript 'Distance()' internal
	( Timelord, 22nd April, 2021 )

Re-organized combo editor
	( Deedee, 19th April, 2021 )
Fix vires in sideview
	( Deedee, 16th April, 2021 )

Add Instant Continue on Death QR
	( Timelord, 11th April, 2021 )

Fixes for Slash->Next, Lock Blocks
	( Deedee, 10th April, 2021 )

//Alpha 94

Water Refactor
	( Deedee, 27th March, 2021 )

Add Link->Defense Dialog (In Graphics->Sprites->Player)
	( jman, 26th March, 2021 )

Fix smart scrolling bugs
	( Deedee, 26th March, 2021 )

Add 'ReadBytes'/'WriteBytes' ZScript functions
Fix negative layer solidity drawing bugs
	( Deedee, 25th March, 2021 )

//Alpha 93

Updated solidity drawing to work with Bridge combo.
	( Deedee, 24th March, 2021 )

Add ladder compatability with bridges
	( Deedee, 21st March, 2021 )

Feat: Subscreen fall speed
Fix Special Item rooms not freezing messages
Fix Combo Script initialization bugs
	( Timelord, 21st March, 2021 )

Allow writing Hero->Pushing (Experimental)
	( Timelord, 21st March, 2021 )
	
Added Bridge combo types
	( Deedee, 20th March, 2021 )

//Alpha 92

Correct scaling for 256 increments of resx.
Allow scaling resx in ZC Player to 256 to fit CRT televisions,
	as requested by user 'Zabii'.
	( Timelord, 18th march, 2021 )

//Alpha 91

<std 1.7114> Added enum itemslots with consts ITM_SLOT_* for all four slots. 
Added Hero->ItemX and ItemY variables to match ItemA and ItemB. 
Added support code to hero->SetItemSlot() for new button slots.
Updated the save format to V18 to have new slot data and forced slot data. 
Added to additional button item slots (X and Y) that function
	on buttons Ex1 and Ex2 if the QR 'Options>>>2>>>Experimental X and Y Buttons'
	is enabled.
	( Timelord, 18th march, 2021 )

//Alpha 90

Renamed itoa_c, xtoa_c, and xtoi_c to itoa, xtoa, and xtoi.
<std> now v1.7113. 
Moved the <std> versions in string_functions of them into std::string.
	( Timelord, 14th March, 2021 )

Fixed Combodata->initD[] multiplying by 10,000. 
	There is now a rule bit for this behaviour.
Added Game->GetComboScript("NAME");
Fix off by one error in ZScript Settings Dialogue
	( Timelord, 13th March, 2021 )

Added docs/Tile-Editor-Hotkeys.txt, now at v1.4.
	( Timelord, 11th, 12th March, 2021 )
	
Added error messages to WriteBytes, and related functions is pos is OoB
	( Timelord, 8th March, 2021 )
	
Added WriteBytes() to ZScript
	( Deedee, 8th March, 2020 )
	
Merged: Merge pull request #671 from ArmageddonGames/2.55-listfiles 
	( Timelord, 7th March, 2021 )

Made Log2 part of class FFScript/FFCore.
	Note nothing uses this, but it is missing in c++03 and is part
	of the C99 spec.
	Should probably make a maths header and struct for all of this nonsense.
Replaced literals in ri->d[] ffscript to use register names.
Correct xtoa in ffasm and fix ffscript.cpp COMMAND_LIST entry for itoa.
xtoi now handles negative string values
xtoa() now works as intended, using hardocded ri->d[3].
Move static maths helpers into class FFScript.
	These formerly static or file-only functions are now part of
	class FFScript/FFCore:

	int xtoi(char *hexstring);
	double ln(double temp);
	int numDigits(long number);
	int Log10(double temp);
	double LogToBase(double x, double base);
Add/Fix Experimental xtoi() and xtoa() internal ZS commands.
	( Timelord, 3rd March, 2021 )
	
Add padding to 'Ambient Music' for arrow.
Fixed and optimised speed for ZScript utol, ltou, and convcase.
	( Timelord, 2nd March, 2021 )

Fixed the behaviour of items where the Item Editor Weapon type field is
	set to Arrow or Sword from using the wrong flags to determine if they pierce
	or penetrate enemies.
Added QRs under the Options->Weapons->LWeapons tab: Arrows Always penetrate, and
	Swordbeams Always Penetrate to allow scripted / other weapons to always penetrate.
	( Timelord, 26th February, 2021 )
	
Add directory access from ZScript
	( EmilyV, 15th February, 2021 )
	
Preliminary work for ZScript directory reading
	( EmilyV, 14th February, 2021 )
	
//Alpha 89

Move the GNUG check to the top.
Add patch for allegro 'fix' class conflict and glibc 2.28+
Patch for Linux/G++ bitching about gotos crossing an initialisation.
	( Timelord, 14th February, 2021 )

<std> Add vbound(int x, int h, int l) with auto rev-args.
Properly document npc->ParentUID in ZSA.txt
	( Timelord, 13th February, 2021 )
	
Add QR related to NES dungeon dmap 'bmaps' data
Script modification of 'Screen->OceanSFX' now updates the playing sound.
	( EmilyV, 12th February, 2021 )

Removed the requirement to hold shift to set Quest Number.
	( Timelord, 11th February, 2021 )
	
Fix minor errors with long/octal
Fix 'printf' error with values '-1 < x < 0'
Fix nonsensical 32-bit binary mode on l/r bitshift operators
Add 'DrawFrame()' function for 'frame2x2()' script draws
	( EmilyV, 10th February, 2021 )
	
Feat: Added npc->Frame to ZScript.
<std> Added const RT_CURRENT
Fixed Blit(), RevBlit(), Mode7() use of RT_SCREEN and RT_CURRENT (-2)
	( Timelord, 10th February, 2021 )
	
Added IsDungeon() to <std>
	( Timelord, 7th February, 2021 )

Make 'Game->Time' long typed
Add octal literals, '7o', and long variant, '7oL' or '7Lo'
Add hex long literal
Document 'long'; convert internal variables that should be 'long'
Handle binary operations as 32-bit with regards to 'long'
Added decimal long literals: '50L' == '0.0050'
Added binary long literals: '1010Lb' == '0.0010'
Add 'long' type, with auto-cast to int.
	( EmilyV, 7th February, 2021 )

Documented itoacat in ZSA. Next step, change itoa_c to itoa.
Fixed remaining issues with itoa_c and itoacat.
Fix negative values leadign with zero on itoa_c and itoacat.
itoa_c and itoacat now work, but negative numbers have leading zero.
Fix typo, add traces to itoa_c() (FFCore.do_itoa)
Resize itoa_c() and itoacat() strings based on digits.
Add (untested) implementation for itoacat()
Fix: Try to fix itoa_c() and add itoacat() initial stuff.
Fix Daira NPC Script (Classic.zh)
Experimental change to combodatga->Pos commands.
Corrected ZSA Docs for itoa(). The args order was documented backwards.
	( Timelord, 7th February, 2021 )

Fix new hero movement clipping through combos
Fix overworld map charting offset
	( EmilyV, 6th February, 2021 )

Changelog: Added npc->Halt to r/w the halt clock of enemies.
Added npc->MoveStatus to r/w the MoveStatus of npcs.
Added enum NPCMoveStatus to <std>.
Added Game->STD[256], Ghost[256], Tango[256] to ZScript.
Removed a vbound in SlideClock
	( Timelord, 4th February, 2021 )

Fixed bad script types in debug prints
	( EmilyV, 4th February, 2021 )

Further clarify SlideClock for splitters.
Clarify int SlideClock in ZSA.txt
Added npc->Fading, npc->SlideClock to ZScript.
	Fading is used for when npcs die to determine how they wink out,
	and uses the types provided in the enum NPCFadeType in <std>.
	SlideClock is the timer used for knockback.
Added enums NPCWalkType and NPCFadeType to std_constants.zh
Fixed logging combodata script errors as subscreen script errors.
Changed 'Link' script to 'Hero' script in script errors.
Combodata scripts now clear on quest load, like other scripts.
Fixed the array pointer passed to some npc functions being random memory.
	( Timelord, 3rd February, 2021 )

Fixed default game over MIDI.
Added Hero->CSet to ZScript.
IsBackgroundLayer now XOR checks dmap layer flags; fix globalsymbols.
Added dmapdata->Flagset[32]; added DMFS_* constants for it to <std>.
<std 1.7112> Added IsBackgroundLayer(int,mapdata)
<std 1.7112> Removed duplicate IsBackgroundLayer() function.
Fixed a bug with npc->HitDir.
Added npc->hitDir as an experimental, READ-ONLY ZScript variable.
	( Timelord, 30th January, 2021 )

Added Hero->ClockActive and Hero->ClockTimer. These r/w the
	Clock/Stopwatch item states.
	Made the array inputs for ArrayCopy untyped.
	( Timelord, 29th January, 2021 )
	
//Alpha 88

<std> version now 1.7111.
Fixed crash caused by eweapon->GetByUID() trying to load LWeapon data. 
Fixed crash when using the ZASM command ARRAYCOPY;
	ZScript `ArrayCopy(dest,src)` caused by an illegal pointer in the
	interpreter.
Added FFCore.copyValues(arr1, arr2). This functions like strcpy,
	but for ZScript long arrays.
	( Timelord, 26th January, 2021 )
	
Update ZScript_Additions.txt revision date
Add script access and docs for onMap slot
Implement onMap script slot
	( EmilyV, 21st January, 2021 )
	
Document scoped function declaration
Add error when scope not found
Handle scoped function decls at registration phase.
Bison: Make function name 'Identifier_List'
	No implementation to the list as of this commit.
Handle prototype 'void run()' functions
	( EmilyV, 20th January, 2021 )
	
Forced all system vars in ZQ to init at 0, as SkyLizardGirl
	reported that sometimes, the KB Repeat rate underflows to a random value.
	This is just one step in diagnosis.

Added View->Layer 3 is Background, View->Layer 2 is Background.
	This forces these to view on the current screen (not on borders),
	so that when the user wants to design an entire map with the layers
	as GB layers, they can, and then they need only flip one bit in the
	DMap settings for it. (i.e., this helps design maps to be used with the
	DMap Flags 'Layer N is Background'.

	TODO: Xor this with the Screen Bit, add the Edges  (zmap::draw,
	zmap::drawrow,	and zmap::drawcolumn) in zq_class.cpp.

	( Timelord, 17th Jan, 2021 )

Update docs, 'void' saves 1 opcode
Change internal names from 'abstract' to 'prototype'
Rework of function prototypes to obey typing
CRITICAL FIX: Fix parser crashing when using extra parens on a function.
	( EmilyV, 14th January, 2021 )
	
Add 'forward-decl' / 'abstract' functions
A function can be forward-declared, and if not found, will be treated
	as a valid function which simply returns a default value.
	The default value can be set by the user, or left at '0'.
	( EmilyV, 13th January, 2021 )

//Alpha 87

Merged rewrites of ZScript Parser/Compiler by SyrianBallaS to reduce leaks and overhead.
	( Timelord [merge] , SyrianBallaS [work], 13th Jan, 2021 ; commit 787b72600d2a9a7c20cede67ac11f5b2bdd5f97b ; commit d64a4c7cf3229520f45216ae906e0f27dd949d53)
	
Improve compile timer to be more precise.
	( EmilyV, 13th January, 2021 )

//Alpha 86

Fix sideview platform ignoring right half of Link's hitbox
	( EmilyV, 12th January, 2021 )

Added the preliminary implementation of LinkClass::Defend.
	This should be viable, but it requires testing.
	At present, Defence[] can only be written by script, but a GUI
		panel is forthcoming.
	This requires extensive tests, and it will require two new SFX,
		set by the special SFX control panel, same as pitfall sounds.
Added QR for fixes to LinkClass::Ringpower().
Build now 56.
Fixed incorrect margins on item collect strings and cloned
	new string properties to them.
Fixed item messages breaking shops and take one item rooms.
	( Timelord, 12th January, 2021 )
	
Fix negative power ring math
	( EmilyV, 10th January, 2021 )

Fix inverted TILE_WIDTH and TILE_HEIGHT sizeflags
	( EmilyV, 9th January, 2021 )

Fix dialogue issue pointing to now invalid menu option.
	( Timelord, 8th January, 2021 )

Add compile time traces
Correct <std> documentation: Showed 'SCR_SEC_*' as std_constants prefix, should be 'SECCMB_*'
	( EmilyV, 8th January, 2021 )

Force null termination when loading WAV names in qst.cpp.
	( Timelord, 3rd January, 2021 )

Fix 'currcset' not updating via script-change of palette
Fix DMap Palette via script issues 
	Level pal only needs to be recalculated for 'Game->DMapPalette[]' if
	ID == currdmap! Doing otherwise can cause large lag in certain
	circumstances.
	The same is true of 'dmapdata->Palette', which was NEVER recalculating it;
		it MUST recalculate it if 'ri->dmapsref == currdmap'!
	( EmilyV, 3rd January, 2021 )

lib: Added boost files that couldn't be added because of gitignore rules
	( SyrianBallaS, 3rd January, 2021 )
	
Fix pixel misalign in 32x32 link preview
	( EmilyV, 2nd Jan, 2021 )
	
Also convert slash and bslash in track names to hyphens.
When saving a WAV file from the SFX Editor in ZQuest. the save
	dialogue defaults to the in-ZQ name of the sound effect, converting
	spaces to hyphens, for maximum filesystem compatibility.
Better error message when quest version and required version. 
	(Sideported from a DD commit IN A DEAD BRANCH.)
Feat: Add Save WAV / SFX / Sound Effects to ZQuest
	( Timelord, 2nd Jan, 2021 )
	
Fix issue '#double-function-call-crash', maybe?
	( EmilyV, 1st January, 2021 )
	
Max Playtime, with QR enabled (on by default for new quests)
	is now expanded from 99:05:54 (arbitrary much?) to
	9000:00:00 (A nice even number close to MAX_INT frames).
	This is *375 DAYS* of playtime.
	( EmilyV, 31st December, 2020 )

More options for Advanced Paste of combos
Fix background issue on Game->GameOverScreen[]
Further work on Game->GameOverScreen[]
	( EmilyV, 30th December, 2020 )
	
 
Attempt to implement Game->GameOverScreen[] fully
Revert version to 2.55; was incorrectly changed by Z. 
std_constants: Comment out too-large contants
Fix constant typos in <std_constants>.
	( EmilyV, 29th December, 2020 )
	
You can now set the rule 'Weapons Cannot Stunlock Enemies' in
	Options->Weapons->LWeapons. If enabled, weapons that would stun an
	enemy are blocked if that enemy is already stunned, replicating the
	behaviour of Z3.
	( Timelord, 29th December, 2020 )
	
<std 1.7110> Rewrote AdjacentCombo, Added IsBackgroundLayer
	( Timelord, 28th December, 2020 )
	
Add rule for invalid UID logging
	( EmilyV, 28th December, 2020 )
	
Fix step for new wand stuff
Fix Minimap always using 'Without Map' map on overworlds, regardless
	of having the map or not.
	This uses a backwards-compatibility rule for older builds.
Document 'Screen->Palette' for zscript
	( EmilyV, 26th December, 2020 )
	
Magic Book items can now fully replace the primary weapon of the wand,
	instead of adding a weapon on impact.
	THis occurs if the user does the following:
	 1. On the Book item Flags tab, enable the flag 'Replace Wand Weapon'.
	 2. On the weapon tab, set the Weapon Type to something other than 'none'.
	 3. The new weapon will have the sprite set on the Action tab as 'Projectile Sprite'.
	 4. The weapon will use the step value provided in the Data tab as 'Special Step'.
	 5. The weapon will have the damage value provided on the Data tab as 'W.Damage',
		unless that value is zero, in which case it inherits the damage power of the wand.

	Note: The Special Step field feels off to me. Rob, please look at this in weapons.cpp, line 6327!!!
Fixed the wand playing the book sound when the player has a book.
Added the ability to override the wand SFX using book items.
Fixed the wand playing the book sound when the player has a book.
Added the ability to override the wand SFX using book items.
Alpha now 56. -----This was an ERROR. I meanty to bump Alpha vers, but I bumped SUBVERS. This was later fixed 
	and some of these commits, until 29th December, 2020, represent an interim version that misrepresented itself 
	in its metadata. 
	( Timelord, 26th December, 2020 )
	
Fix armos speed not varying
	( EmilyV, 21st December, 2020 )
	
Prevent random memory read/writes in recolor dialog
	( EmilyV, 16th December, 2020 )
	
Fix cmake file for MSVC > 15.xx.
	( Timelord, 7th December, 2020 )
	
Moved mapscreen flag/enemyflag into class FFScript/FFCore.
Added helper functions and an enum to ffscript.cpp to assist
	with reading the clustre fcuk that is mapscr->flag* and ->enemyflag.
	The enum, and the new functions are:

	enum mapflagtype
	void set_mapscreenflag_state(mapscr *m, int flagid, bool state)
	long get_mapscreenflag_state(mapscr *m, int flagid)

	These can be used for a new array for r/w flags and enemy flags for
	both the Screen-> pointer and mapdata-> pointers.

	I'm going to call the array ScreenFlags[MSF_LAST]. This will overshadow
	->Flags[],EFlags[] and similar and should be used in its place.

	I can also add a rule that these functions should be called in place
	of the original Flags[].

	NOTE: The following cases are very probably wrong for each function:
	case MSF_MIDAIR
	case MSF_TRAPS_IGNORE_SOLID
	case MSF_ENEMEIS_SECRET

	I have no clue what the bitshift magic is intended to do, right now.

	This is entirely untested, and has no implementation in the interpreter,
	and no implementation inthe parser at this time, but it should be easy to
	add.

	On a final note, it may be best to move this into class ffscript.
Added ->enemyflags to set_mapflags2 file
Added the missing dummy proc element.
	TODO: m->enemyflags and spawnflags
Fix and add missing screen flags to set_mapflags2.cpp
Files: Mapflag setter files
	( Timelord, 3rd December, 2020 )
	
These files are needed to compile
Make some pointers related to parser unique for extra speed
	( SyrianBallaS 22nd November, 2020 )

Rework sanity checks on Get/SetCombo*
	Let's see if this breaks aught. 
	( Timelord, 18th November, 2020 )

Fix CMakeLists to set linker flags based on MSVC version.
Fix CMakeLists to set linker flags based on MSVC version.
	( Timelord, 14th November, 2020 )

Get rid of all "using namespace std;" in parser folder.
	( SyrianBallaS, 14th November, 2020 )

//Alpha 85

Default new rule on in new quests or on Pick Ruleset.
Fix position of new Instruction Rule in Dialogue
Added a script quest instruction setting to cause Link's respawn
	points to match script-written EntryX and EntryY for Screen->Entry*.
Fixed the bug where Link's spin attack animation is mused when he falls
	into pits if he is holding a charged sword.
	( Timelord, 12th November, 2020 )
	
<std 1.7109> : Fix error message on invalid CanWalk dirs.
	( Timelord, 5th November, 2020 )
	
Fix Keyboard Cheat Modifier Dialogue
	( Timelord, 4th November, 2020 )

Updated allegro to v4.4.4 (Lib file date 28-Sept-2020)
Added a special colour (teal) to water combos when drowning is off
	when viewing combo solidity. 
	( Timelord, 16th October, 2020 )
	
Updated Classic.zh to v2.14, adding the itemdata script:
	CollectHeartContainer. This allows showing a un iue message per 1/4
	of the heart contaier collected.
Updated Classic.txt.
	( Timelord, 1st October, 2020 )
Added, Classic.txt.
	( Timelord, 29th September, 2020 )
	
The combo re-init code from the prior commit should also occur
	on mapdata->ComboD[] if the mapdata pointer is to a tempscr or
	a scrolling screen.
Writing ComboD[] or SetLayerComboD for the current screen was
	not launching the combodata script for the replacement combo.
	In theory, this should fix it, but it i untested and if it starts feking
	up the stac wity overflows or other errors, then combo scripts may
	need another doscript state. (Yuck).
	( Timelord, 24th September, 2020 )
	
Linux: Add option for monochrome debuggers to zc_sys on ifdef. (Unused)
Linux console should now open with correct timing.
Added two safety guards for free() calls.
The Linux console will only tr to run if zscript_debugger!=0
	( Timelord, 19th September, 2020 )
	
Further relocate linux console init.
Move linux console to open after allegro init.
	( Timelord, 18th September, 2020 )
	
Make storage class enum nonstatic for g++
Don't use a label for quick quit. It breaks Linux.
Writing eeLEV->CSet by Script also writes ->dcset
`	This affects the submerged CSet.
	( Timelord, 17th September, 2020 )
	
Link can no longer change his direction while stunned.
Fix OoO issue in link.cpp
Change stun debug messages to zprints.
	( EmilyV, 11th September, 2020 )
	
	
//Alpha 84
Add forced NULL terminator to pointers passed to TraceS() and printf(),
	to prevent crashes in the event that the user passes
	an ZScript client array w/o a NULL terminator.
	( Timelord, 6th September, 2020 )

Added 'Snap to Grid' to FFC Right Click contextual menu.
	( Timelord, 5th September, 2020 )

Added npc->OriginalHP, **except** to globalsymbols. 
	Waiting to see if we resolve parser issues before I modify those tables.
Raised max deaths count from 999 to 65535. 
	Requested by zcfan27330 on AGN as he hit 999 deaths in Gleeok's 6th.
	( Timelord, 4th September, 2020 )

//Alpha 83

If the zquest.exe RAM use is >= 3GB the compiler will refuse to
	compile and give a Memory Exhausted error instead of crashing.
	This leaves a ~500MB buffer before crashing and is polite.
	We need a Linux implementation for this, too.
	( Timelord, 1st September, 2020 )
	
Added a flag to TF Fragments: Don't Dismiss Messages
	If enabled and the cutscene is allowed to run Screen Messages (ZQ Strings)
	will not be cleared by the cutscene.
Added a flag to DMaps: Use Enemy List for Cellar Enemies
	If enabled, when using item cellar and passageway screens, the
	normal enemy list for screens 0x80 and 0x81 will determine the
	enemies spawned (0 to 10) rather than fhardcoding precisely four
	enemies, which if left unspecified (set to None) would spawn keese.
	This allows cellars and passageways with no enemies, or any normal
	combination of enemies.
	Note that this uses the mapscreen from the map used to generate the
	DMap, and thus will apply to all uses of screens 0x80 and 0x81 used by
	any dungeon that shares the map.
	--Fills feature reuest from user cbailey78
	( Timelord, 31st August, 2020 )
	
Added an attribute to TF Shard items: Custom Refill Frame.
	If this is > 0, then instead of the hardcoded frame 88, the engine
	will refill HP/MP on the specified frame of the TF cutscene.
	This does not appy if the cutscene is disabled.
	If this is set to a value > Custom Cutscene Duration, it will not occur.
	Refilling reduces the cutscen frame clock, until it completes, and thus
		the duration of HP/MP refill adds to the total cutscene duration.
The cutscene duration for TF Fragments can now be set to a custom value.
	The cutscene will play until any of the following conditions are met:
	The frame count is >= the custom duration (if>0) or 408 frames, otherwise.
	The cutscene plays a MIDI and the MIDI is playing.
	The cutscene affects music, music is playing and the music counter is < 800.
		If the flag 'Don't affect music' is enabled, the music position check is skipped.
		If the Don't play MIDI flag is enabled, then the MIDI pos check is ignored.
The TF Shard cutscene no onger paues the action script if the
	Run action script on collection flag is enabled uness the user
	also enables the new flag:  Cutscene Interrupts Action Script
TF Fragments now have a flag 'Don't affect music'. If the user
	enables this flag then the item will not stop the current music
	before the cutscene, or resume/play the level music after the cutscene.
	This allows scripts to better control musical cues for the item.
	( Timelord, 30th August, 2020 )

//Alpha 82

Updated classic_qst.dat with diagonal hookshot gfx.
	( Timelord, 30th August, 2020 )
	
Fixed filename on zscript_manual.rtf.
<std 1.7017> 
	Added function set void HoldUpItem(..., int) to std_extension.
	Fixed enum HeroAction values starting at LA_CLIMBING_RES.
	( Timelord, 29th August, 2020 )

Feat: Triforce Fragment Options
	Added the ability for TF pieces to run an action script, on collection.
		This requires enabling a flag: Run Action Script on Collection
	Added the ability to play a second sound effect.
		This requires enabling a flag: Play Second Sound Effect, and the
		sound must be set in Attribute 'Second Collect Sound'.
	Added a flag 'No Cutscene' to allow fully scripted cutscenes.
	Added a flag 'No MIDI'. This allows the cutscene MIDI to be silent.
	( Timelord, 27th August, 2020 )

Continued work on ZS Docs.
Added until() and unless() macros to zdefs.h.
Spiral.zh: Initial Commit
Feat: Boss keys also run scripts; identical to other keys.
	Next: Door / lockblock combo sfx?
Item action scripts on keys use the lowest numbered item of the
	type I_KEY, and item action scripts use the lowest numbered item of
	the type I_LKEYto determine what script to run.
Allow keys to run action scripts.
	( Timelord, 25th August, 2020 )

The diagonal hookshot now uses the appropriate diagonal sprites.
	Note: This has a visual bug, where if the player stops holding the
	directional inputs as chainlinks are added, they default to the normal
	sprite, so we need a way to forward to chainlinks that the PARENT
	hookshot weapon's dir is diagonal.
	( Timelord, 23rd August, 2020 )
	
Changed hardcoded tile offsets to use three new sprites in the
	Item Ediitor, for Diagonal Action on the Hookshot:
	wpn5 (Sprites[4]): Diagonal Tip
	wpn6 (Sprites[5]): Diagonal Handle
	wpn7 (Sprites[6]): Diagonal Chain
	( Timelord, 22nd August, 2020 )
	
//Alpha 81

Added diagonal hookshot test quest file to /output/tests
Corrected visual offsets for diagonal hookshot handle and head.
This may severely change where they visually connect with theit hitboxes
	on HSGRAB combos, but those coordinates need refinement.
Add diagonal tiles for hookshot and initial settings.
Ported the diagonal hookshot from 2.future.
This still requires code to set diagonal graphics, and some grab point
	bugtesting and positional fixing.
	( Timelord, 21st August, 2020 )
	
//Alpha 80

With the QR SHOPCHEAT enabled, and the QR qr_NEVERDISABLEAMMOONSUBSCREEN
	disabled, buying an item in shoppes would corrupt the A button item
	slot if the total of dcounter was > than -mcounter.
	This prevents abs(dcounter) from ever being greater than mcounter,
		and prevents that corruption.
	Having the QR qr_NEVERDISABLEAMMOONSUBSCREEN ENABLED also prevented
		that corruption, but I did not see a spot where that behaviour
		and shoppe code were entwined.
	( Timelord, 20th August, 2020 )
	
Sparkle lweapons now run scripts.
Fixed Sword Separation in Carryover through Warps
	( Timelord, 19th August, 2020 )
	
Fix BS Patra Children not setting isCore.
Parser: Fix logical OR with Short Circuit OFF.
Parser: Apply logical AND for to logical OR. Logical XOR may
	still need this, too!
Fixed writing dmapdata->Flags and added DMap Intro Demo Script
Added a Sprite Attribtes field, to select a custom weapon
	sprite. and added the flag 'Direct Damage' to Step->Effects combos.
	If the Sprite value is between 1 and 255, the weapon will use this
	sprite, rather than its default sprite.
	If the payer enables the 'Direct Damage' flag:
		If the weapon type is an lweapon of a Custom/Script type, a Sparkle type, or
		a Fire Sparkle type, then you may also set it to deal direct damage without
		knocking the player backwards. This is useful, e.g., for fire floor tiles where
		you want to create a fire sprite behind the player and damage the player if
		they walk on them, every few steps.

		This option respects ring damage divisors.
Fixed some weapons not having the correct power.
Step->Effects combos now have a 'Landmine' flag.
If enabled, when the player steps on one, it will generate either an
eweapon, or an lweapon.
The user can set the weapon type in Attribytes[1]: 0 or invalid default to an eweapon bomb
	explosion.
The user can set the initial direction in Attribytes[2]. It defaults to up.
The user can set the weapon damage in Attributes[0]. The defaut amount is 4.
This combo type will always advance by one (as Next) if activated f the Landmine
	flag is enabled, unless the user also toggles the flag 'Don't Advance'.
	If that flag is enabled, the combo will spawn another weapon when the player
	walks on it.
Finally if the weapon type is set to a wScript (custom) weapon type, the weapon
	that the engine generates will default as an eweapon, unless the user
	toggles the flag 'wCustom is LWeapon'.
	( Timelord, 18th August, 2020 )

Fix sideview platform landing and solidity.
Parser: Fixed short-circuit with lgical AND and negative 
	numbers on RHS.
	( EmilyV, 17th August, 2020 )
	
Fix typo in classic.zh; version now 2.13.
	( Timelord, 16th August, 2020 )

Parser: Fix function matching with regards to namespaces/scripts.
	( EmilyV, 15th August, 2020 )
	
Updated classic.zh to v2.12. The 'ChangeRoomGuy' script now
	ignores NPC_FIRE.
Added a behavioural flag to walking enemies: 'Split in Place'.
	If enabled, when the enemy splits the new enemies appear on the
	x/y position of the enemy that split (on hit), rather than randomised
	locations near the enemy that split (on hit).
	This means that a Zol will split into two gels, with both gels
	spawning where the Zol was when it was hit, rather than spawning
	in nearby grid positions, potentially on top of the player, as
	has been the case until now.
Enemies that shoud split (e.g. Zol), now split again.
Added a flag to Gleeok enemies in the Enemy Editor under the
	Behavioural Flags dialogue, to centre the Gleeo over 
	two tiles when spawning with the Obeys Spawn Flags behavioural
	flag enabled.
Allow setting enemy size on all types except lanmola, moldorm, and gleeok.
	This means that you can set hit size and offsets, and draw
	size and offsets on all normal enemies, and on some bosses, but
	the results for bosses are not guaranteed.
	This fixes some normal types not respecting the size settings.
	( Timelord, 14th August, 2020 )
	
The following combo types now have a sfx option, that will play
	an ambient sound when Link walks over them , while action==walking
	and that sound is not playing:
	Shallow Water
	Tall Grass
	Tall Grass->Next
	Tall Grass (Touchy)
	( Timelord, 13th August, 2020 )

//Alpha 79

Added Combo Type (Step->Effects). At present, this
	would allow for playing a SFX when stepping on the combo, with
	no side effects. It plays the sound if it is both not already
	playing, and Link action == walking.
Added placed and inherent flags:
	Spawn No Enemies:
		Enemies will never spawn here.
	Spawn All Enemies:
		EVERY enemy on the screen spawns here.
	( Timelord, 12th August, 2020 )
	
More fixes for script draws in warps.
	( EmilyV, 11th August 2020 )

Add diagonal tiles for hookshot and initial settings.
Display of quest metadata was stale in the console. This timing
	change ensures that the data will be accurate.
	( Timelord, 11th August 2020 )

The console now shows the slot ID that it is loading, and
	by default, uest metadata is not printed unless both the quest has
	an icon AND the user sets 'print_metadata_for_each_save_slot' to '1'
	in zc.cfg.
	In any event metadata was not shown before for quests without an icon.
	Selecting the quest (loading it) in ZC Player will always output its
        metadata. This simply channges the initial information that
        the console shows; and it ADDS notification of its PROGRESS
        in reading the .SAV file.
Added final sanity guards against loading or accessing invalid npc IDs
	with tmpscr->enemy[] and removed zprint2 logging from them. 
	This resolves the mysterious enemyid==768 crashes in Waterford.qst
		for the present.
Fixed sprite, weapon, and mapscr constructors (memory holes).
	( Timelord, 10th August 2020 )
		
Port 2.53.1 MIDI fix to 2.55.
	( Timelord, 8th August 2020 )
		
Added demo onDeath and F6 Menu Scripts
<std 1.7106>
	Added sanity guard on SetLayerCombo/GetLayerCombo functions.
	These now check to ensure that the layer is configured.	
	( Timelord, 7th August 2020 )

Remove duplicate element and offset, in CSet Palette Cycle dialogue.
	( Timelord, 3rd August 2020 )
		
Added Waitdraw support for combodata scripts, and corrected the calls
	to run combo scripts, and their timing.
Fixed error on combo_doscript where it was using do_script info only for
	combos on layer 0. The correct index is not [pos]., it is [pos+(176*layer)]
	Update ZScript Timing Docs
	( Timelord, 2nd August 2020 )

Fixed crash on Options->Combo Rules->2.
	( EmilyV, 30th July, 2020 )

//Alpha 78

Fixed duplication of Enemy Editor 'Attributes[24] label.

<std 1.7105>
Fixed a compiling error, and added constants for new npc types. 

Hero->Stun was inappropriately sized as a byte; and I have now
	corrected it to be sized as an integer.
Jumping enemies (vire, pols voice) now jump properly again.
	There is some sort of bug in zfix where if you divide an integer by a
	zfix value, it is not returning the correct value.

	In this case, 32 / (step .50) was returning -22.

	EDITOR step is 50 on both enemies.

	polsvoice jump_width is: 2
	polsvoice raw step is: 5000
	polsvoice step.getInt() 1 is: 1
	setting clk2 on polsvoice to: -22

	!! 32 / step is -22

	vire jump_width is: 1
	vire raw step is: 5000
	vire step.getInt() 1 is: 1
	setting clk2 on vire to: 32

	!! 16 / step is 32

	I changed the lines to use: int((16.0*jump_width)/step.getFloat());
	   ...thus float literal divided by zfix.getFloat, but under the old fix
	      datatype, this happened without any special reuirements.
		16/0.5 == 32
		32/0.5 == 64
		but now...with integer/zfix or float/zfix
		16/0.5 == 32
		32/0.5 == -22

	While conversion to getFloat is feasible, I daren't guess how many places
	lack this conversion, and need it. I do not know why zfix handles this for
	other units such as 8 and 16, but not for 32.
	( Timelord, 30th July, 2020 )
	
Reading combo labels by script (Game->GetCombo("") should now be faster.
	( Timelord, 27th July, 2020 )
	
Fix wpnsbuf[].tile usage, should be newtile
	( EmilyV, 20th July, 2020 )
	
	
Added Module->GetItemClass(char32 *buffer, int itemclass)
	This copies a string used for itemclass ID 'itemclass_id' in the 
	current module to the buffer string.
	( Timelord, 20th July, 2020 )	
	
Added the global pointer class 'Module->' to ZScript.
Added int Module->GetInt(char32 *section, char32 *element);
Added void Module->GetString(char32 *buffer, char32 *section, char32 *element);
	( Timelord, 19th July, 2020 )
	
//Alpha 77
Fixed the script name reports in error messages, adding new
	types and correcting the offsets.
Using a function or a variable on null pointer will now give its on
	error message.
Fix params for CreateLWeapon.
Added new weapon variable, specialinfo, used at present by wWind lweapons.
	This *should* fix wind warps.
Fixed some weapon constructors in Link.cpp.
Added lwpn->Special to ZScript
Changed the subscreen code so that if a script forces a weapon to A or B, that
	the subscreen does not refuse to display it when aout of ammo.
	( Timelord, 18th July, 2020 )
	
Add access to dmapdata-> for subscreen script vars
Fix zscript string functions truncating at 256 chars
	( EmilyV, 18th July, 2020 )
	
<std.zh 1.7104> 
	Added constants for minimum, maximum, and count of counter types.
	Fixed typo on IC_WPN_CUSTOM_* chain of constants.
Fix lexer state not clearing
	( EmilyV, 18th July, 2020 )

//Alpha 76
Fix 'npc->LinedUp()' return *10000
	( EmilyV, 16th July, 2020 )
	
<std 1.7103> Add 'SHD_' constants for shadow types on strings.
Add shadows to DrawString as an overload
	( EmilyV, 15th July, 2020 )	

Fix 'qr_SCRIPTSDRAWINWARPS'
Allow passive subscript to run during death anim
Update ZSA; #includeif / is_included
Fix multiple importstrs on one line not working
	( EmilyV, 14th July, 2020 )	

Fixed error messages for invald GOTO type instructions.
Fixed possible crash on invalid gotos from logging args order.
Epilepsy Protection is now set when you launch a NEW INSTALL of ZC,
immediately prior to loaing the player interface.
	If the zc.cfg value 'checked_epilepsy' is not present, or is set 
	to '0', then ZC will ask the user if they want this enabled
	and set this config value so that it is not re-checked:
		1. If there is no valid .sav file, then this will appear prior
		   to the .sa file creation dialogue. 
		2. If a .sav file exists, this will occur prior to the title
		   screen, if the config int 'checked_epilepsy' is not present
		   or is set to 0 in zc.cfg.
		3. If 'checked_epilepsy' is in zc.cfg and is set to '1', then
		   this dilogue will not open, and the user's epilepsy protection
		   settings are used as normal.
		4. The dialogue defaults to NO. 
Reduced the amplitude of screen wave effects when epilepsy protection is enabled.
	( Timelord, 14th July, 2020 )

Updated combos.txt to v6.
Merged:
	Convert zfix mul/div to use 'long long'
		( Commited by EmilyV on 18th June, 2020; merged on 12th July, 2020, by Timelord)
	Add conditional include '#includeif'
	Sanity; prevent parser error on forgotten string
	Add 'IS_INCLUDED()' to check included files.
		( Commited by EmilyV on 9th May, 2020; merged on 12th July, 2020, by Timelord)
	( Timelord, 13th July, 2020 )

//Alpha 75
Fix changing CSets
Add 'sprite::get_pit()'; no side-effects pit checker
	( EmilyV, 11th July, 2020 )

Enemy shadows no longer fall into pits.
	This may need revision when we add larger shadows.
Use call to enemy::overpit
Further fixes to prevent flying enemies, particularly bats,
	from landing in pits.
Added bool enemy::overpit(enemy *e)
Fix: Don't allow *Bats* to slow to a step of 0 over a pit.
<std 1.7102> Update FFRules to v1.6
Added a rule under Options>>>Other>>>2: Instant Respawn on Death.
	This allows you to instantly respawn the player, and should work in
	conunction with Skip Continue Screen, to allow games that do not
	fall back on the file select.
	( Timelord, 11th July, 2020)

Fix: Lanmolas also shoudn't spawn over solid combos, or water.
Flying enemies with a Z <= 0 ignoe pits unless they are stunned.
Moldorms now also allow using spawn flags.
Fixed moldorm and lanmola segment spawn points if the parent enemy
	uses spawn flags.
Fixed lanmola segment spawn points when spawning in pits.
The following bosses now obey spawn flags, if the Behaviour
	Flag 'Obeys Spawn Flags' is enabled:
	Aquamentus
	Gleeok
	Patra
	Gohma
	Lanmola (from previous commit)
Enemies do not fall during spawn animations.
Floaters do not land over pits.
Lanmolas do not spawn inside pits: All enemies need this code.
	Search for comment: //Don't spawn in pits.
Lanmolas obey enemy spawn flags, if you set their behavioural flag
	in the enemy eitor to do that.

<std 1.7101>
Added file std_sideview. OnSidePlatform function are now in this file,
	along with some settings.
Added config OLD_ONSIDEPLATFORM to std.cfg

Corrected file date and version on ffrules.zh
<std.zh v1.7100>
	Added the following enums to std_constants.zh:
		enum roomtypes
		enum catchalltypes
		enum dmapgridpositions

	Added the following functions to std_functions.zh:
		int DMapMapGraphicsIndex(dmapdata dm);
		int DMapMapGraphicsIndex(int dmapID);
		int DMapMapGraphicsIndex();
		messagedata GetInfoString(int shop_id, int str_id);
		void GetInfoString(char32 buffer, int shop_id, int str_id);
		int GetInfoStringID(int shop_id, int str_id);
		void SetVisibleOnDungeonMap(bool state);
		void SetVisibleOnDungeonMap(int scr, bool state);
		void SetVisibleOnDungeonMap(dmapdata dm, bool state);
		void SetVisibleOnDungeonMap(dmapdata dm, bool state);
		void SetVisibleOnDungeonMap(dmapdata dm, int scr, bool state);
		void SetVisibleOnDungeonMap(dmapdata dm, int x, int y, bool state);
		void SetVisibleOnDungeonMap(bool no_offset, bool state);
		void SetVisibleOnDungeonMap(int scr, bool no_offset, bool state);
		void SetVisibleOnDungeonMap(dmapdata dm, bool no_offset, bool state);
		void SetVisibleOnDungeonMap(dmapdata dm, int scr, bool no_offset, bool state);
		bool VisibleOnDungeonMap(int x, int y);
		bool VisibleOnDungeonMap();
		bool VisibleOnDungeonMap(int scr);
		bool VisibleOnDungeonMap(dmapdata dm);
		bool VisibleOnDungeonMap(dmapdata dm, int scr);
		bool VisibleOnDungeonMap(dmapdata dm, int x, int y);
		bool VisibleOnDungeonMap(bool no_offset);
		bool VisibleOnDungeonMap(int scr, bool no_offset);
		bool VisibleOnDungeonMap(dmapdata dm, bool no_offset);
		bool VisibleOnDungeonMap(dmapdata dm, int scr, bool no_offset);
		void SetVisibleOnDungeonMap(int x, int y, bool state)
		catchalltypes GetCatchallType(mapdata m)

	Deprecated the separate files:
		infostring.zh
		dmapgfx.zh
		dmapgrid.zh
		roomtypes.zh
		
Updated ZSA.txt to explain dmapdata instructions and IsBlankTile.
Fixed the table in ffscript.cpp that converts ASM to strings to include all new
	variables.
Added Graphics->IsBlankTile[214500]; to ZScript.
	This returns 1 if the tile is blank, 0 if it is not, and -1 on
	passing an invalid tile to its index.
Fixed fallthrough on dmapdata->MiniMapCSet.
Fixed logging message for dmapdata->MapTile, MapCSet.
c

Fix: Moving Pushblocks now respect Pits
Fix '->ReadChars()' and 'ReadString()' missing *10000
Update 'ffrules.zh'
Fix offset of keyproc dlg
	(EmilyV, 9th July, 2020)
	
Fix various things having collision while falling
Fix Link being hittable while falling
	(EmilyV, 8th July, 2020)
	
dmapgrid.zh: Fix column calculation
	(EmilyV, 7th July, 2020)

Add ENGINE PITS! These have a lot of interaction with
	enemies, items, weapons, and Link.
Add new Link sprites; 'Drown' and 'Falling' are implemented

Fix issue with importing '.zcombo' files

Remove extraneous Y grid-snap in sideview
Fix column calculation in 'dmapgrid.zh'
Fix subscreen script slot waitdraws
Add QR allowing passive subscreen script to run
	during opening wipes / potion refilling
	(EmilyV, 8th July, 2020)
Add new features to 'printf'; now can use '%02d' format
	(EmilyV, 7th July, 2020)
Fix minus key shifting combos on screen
Fix combo editor 'X' in titlebar not working
	(EmilyV, 6th July, 2020)

Alpha is now 75
	(EmilyV, 8th July, 2020) (affects prior commits)

//Alpha 74

Fix 'bitmap->Create()' wrongly assigning NULL to pointer var
	(EmilyV, 2nd July, 2020)

<std 1.7055>
	Added GetMapscreenEFlags(). This is like GetScreenEFlags, but for mapdata.
	( Timelord, 2nd July, 2020 )
	
Fix 'bitmap->Create()' reassigning null
	( EmilyV, 1st July, 2020 )
	
File: Added dmapgrid.zh
	This is a set of helper functions to set or get is a square in the
	passive subscreen minimap is displayed as part of the dungeon when
	the player has a map item, or explores the screen.

	The calcs for dmap offset might be backwards. Untested.
	( Timelord, 30th June, 2020 )
	
<std> Fix logic errors in SetMapscreenFlag
Added mapdata->SFlags[] to replicate how Screen->Flags works.
	Added a rule bit (not implemented in GUI) to make reading
	mapdata-Flags work in the same way as SFlags[]
<std> 1.7054 
	Added enum mapscreenflags to std_constants.
	Added GetMapscreenFlag, and SetMapscreenFlag to std_functions.
	Added files (to inspect, and later merge):
		astar.zh: 		AStar algorithm
		infostring.zh: 	Get Info Shop Strings
		nme.zh:		Generic NPC Script
		roomtypes.zh:		Helper function and enum for roomtypes.
	( Timelord, 28th June, 2020 )
	
Fix Feather/Fall and Integer Truncation in zfix
	( EmilyV, Timelord, 27th June, 2020 )
	
Enable new 'No Scrolling In Air' QR in Modern ruleset
Add QR to prevent scrolling while z>0
	( EmilyV, 26th June, 2020 )
	
Fix type and size of InitD and Misc array descriptions in ZScript.txt
Minor fix in nme.zh
Files: Added some work files to <std>; to be integrated in std.zh v2.0
	( Timelord, 23rd June, 2020 )
	
Fix WarpEx ignoring dmap offset when calculating warp return
Fix 'npc->Remove()' not using refvar
	( EmilyV, 21st June, 2020 )

Add 'FileSystem->Remove(char32)' and 'file->Remove()'
	( EmilyV, 20th June, 2020 )

File: Roomtypes an Catchalls for ZScript
	( Timelord, 19th June, 2020 )	

Fixed a bug where npc->Step with the rule qr_STEP_IS_FLOAT **DISABLED** 
	was returning wildly incorrect values.
Fixed a bug where old quests were trying to set emulation[qr_STEP_IS_FLOAT],
	not set_bit(quest_rules,qr_STEP_IS_FLOAT).
	( Timelord, 17th June, 2020 )
	
Added a ZQE hotkey for '?' that opens the version info display.
	( Timelord, 13th June, 2020 )
	
Add raft speed modifiers for faster/slower moving raft
	Negative values slow the raft by (2^-n)
	Positive values cause the raft to move at (2^n)
	Value of 0 stops all movement on the raft
	Valid values: -7 to 5 (where -7 is approx. 1 pixel every 2 seconds,
		and 5 is 1 full tile every frame)
	( EmilyV, 11th June, 2020 )

Implemented a request from ShadowTiger, whereby when you edit a
	DMap, and select a map tile, when you go to edit further
	DMap map tiles within the same session, the DMap editor will
	remember the last tile that you used. 
	This will clear on loading any quest, but it remains static
	while working on a quest in memory, updating each time that
	the user selects a different tile in this editor. 
	( Timelord, 11th June, 2020 )
	
Added the following configs to ZQuest:

	PreFillTileEditorPage = (0|1)
	If set to 1, the page field of the Goto Page dialogue in 
		the Tile Editor will be populated with the current page.
	If set to 0, the page field of the Goto Page dialogue in 
		the Tile Editor will be populated '0', as was always
		the case in the past.
	If unset, the default value for this config is '0'.
	
	PreFillComboEditorPage = (0|1)
	If set to 1, the page field of the Goto Page dialogue in 
		the Combo Page Editor will be populated with the current page,
		as was always the case in the past..
	If set to 0, the page field of the Goto Page dialogue in 
		the Combo Page Editor will be populated '0', like the prior 
		behaviour of the Tile Editor's Goto Page function.
	If unset, the default value for this config is '0'.
	
	PreFillMapTilePage = (0|1)
	Reserved for a feature request regarding the DMap Editor, when setting
		Map Tile values for DMaps.
		The desired outcome is that, if set to '1', that the DMap editor will
		memorise the last used tile page when selecting Map Tiles.
		The internal ZQE global variable 'DMapEditorLastMaptileUsed' is 
		reserved for this purpose.
	
	( Timelord, 10th June, 2020 )

Don't allow taking ZC GUI snapshot, with menu open, with wonky colours.
	Use only the tre screen colour with shaded effect.
ZC GUI snapshot (Shift+F12) uses correct ame colours, as long as the
	menu isn't active.
Added a way to detect if the system menu is open (bool MenuOpen).
	This is enabled and disabled exclusively in System() and
	writing to it elsewhere is **unefined**. 
	In theory, alt+tab could call System() to force-pause ZC Player,
	but win32.cpp cannot access System() during its callbacks.
Allow taking a screenshot in ZC that shows the subscreen area
	when the NOSUBSCREEN flag is enabled, by holding the
	ALT key when taking the snapshot.
Preserve the quest colours when taking a GUI snapshot in ZC Player
	unless the user holds the CONTROL key when taking the snapshot.
Fixed a crash reported by ywkls,that when trying to use the
	tile grabber on .qst and .qsu files, where the tile 
	grabber would allow the user to scroll outside the 
	bounds of the .qst tile buffer. 
	It is now clamped to MAXTILEROWS.

//Alpha 73
Build now 51, Alpha now 73
Fixed issues where the old system for calculating STEP for sprites from
	scripts produced incorrect values, including slow projectiles and
	breaking ghost.zh sine wave weapons.
Disabled the rule qr_STEP_IS_FLOAT on quest load for quests made before this version.
	( Timelord, 5th June, 2020 )
	
//Alpha 72
2.10 Water/Ladder is now set by default on loading a 2.10.x quest.
	( Timelord, 4th June, 2020 )
	
Made a slight reversion to fix Module>>Ignore.
	This still creates a visual glitch when creating a quest slot
	that uses a quest keyword, however this lasts for only the duration
	of the popup dialogue, and can probably be fixed in the section
	where special quest icons (e.g. 2nd, 3rd, 4th) are loaded.	
	
Moved the config to ignore internal quests to moduledata, and added
	a menu option to ignore them. This now triggers a popup, but cancel out of
	that popup opens a new popup.
	( Timelord, 1st June, 2020 )
	
Allow auto-popup of choose qst dlg on creating new save
Re-tab title.cpp
	( EmilyV, 30th May, 2020 )

Added functional code for Iron Boots and Step Combos.
	Step Bombos now have a 'Heavy Flag'. They are not triggered unless
	the player has a boots item with the 'Iron' flag enabled.
std.zh v1.7053: Added bool HasHeavyBoots()
Fixed a compilation error due to copy/paste from 2.53.
	( Timelord, 30th May, 2020 )
	
Fix combo scripts re-initializing every frame.
Fix GSymbols error which caused compile errors in ZQ
Fix crashes relating to combo scripts
	( EmilyV, 26th May, 2020 )
	
Slight change to 2.10 water emulation description dialogue.
Added '2.10 Water/Ladder Up/Down' emulation to ZC Player.
	This is intended as a patch for old 2.10 quests that have
	very-specific water combo placement where you are expected
	to use the ladder (while you have the flippers), but the flippers
	engage before the ladder deploys, when facing up or down.
	( Timelord, 26th May, 2020 )
	
<std> Add AStar (A*) library for 2.55.
	( Timelord, 24th May, 2020 )
	
Fix division by 0 error in zfix, instead of guys.cpp
	This required returning NaN to respect how fix float model) 
	used to work. 
	( EmilyV, 23rd May, 2020 )

Try to properly initialise directItem and directItemA.
Slight changes to the directItem init when loading quests, that
	now checks if the prior quest was a B+A subscreen type.
	( Timelord, 22nd May, 2020 )
	
Fix ZSA typo
	( EmilyV, 21st May, 2020 )
	
Fixed FFScript::getLWeaponByScriptUID(int sUID) and
	FFScript::getEWeaponByScriptUID(int sUID).
	They were iterating based on guys.count() and returning -1
	when they should have been latching onto a weapon UID.
	( Timelord, 21st May, 2020 )

Delete temporary script data that causes a leak if the user
	cancels out of a compilation.
	Note, we probably need to do this for metadata, too.
	( Timelord, 19th May, 2020 )

Fix Link->Jump
	( EmilyV, 17th May, 2020 )
	
Note ZScript Compiler Probably Leak Location
	( Timelord, 16th May, 2020 )
	
Add option to disable screen preview
Re-tab 'guys.cpp'/'guys.h'
Fix row labels in palette editor (large mode)
	( EmilyV, 13th May, 2020 )
	
Further modified ->Step for weapons, and npcs, based on the QR,
	to emulate the prior behaviour.
Renamed the QR in the dialogue to better reflect its intent.

Added a ZScript Quest Script Instruction Setting:
	sprite->Step is float.
	This preserves values without rounding or truncation.
	Otherwise, ->Step *should* now behave as it always had.
	This should correct issues in older quests where truncation was
	either expected, or the result of user-error.
Docs: Fix int/float type for Step in ZS Docs.
Don't ever permit div by 0 if step==0.
	( Timelord, 12th May, 2020 )

//Alpha 71
Added sanity guard to inline bool get_item(int id).
	( Timelord, 12th May, 2020 )
	
<std 1.7052> Added missing constants for CT_SCRIPT6 to CT_SCRIPT20, 
	and CT_GENERIC.
	( Timelord, 10th May, 2020 )
	
Fix enemies walking through walls.
	( EmilyV, 10th May, 2020 )
	
Allow writing npc->Type, although this has no immediate effect at present.
	( Timelord, 8th May, 2020 )

Slight improvement on read combo error messages.
Revise the bounds check routine for combo positions.
Fix: Possible crash and bad error message for Screen->Combo[] errors.
	* These may have been in Alpha 70, or might be 71.
	( Timelord, 6th May, 2020 )

//Alpha 70
Fixed wallmasters not emerging from walls 
	This was due to a maths issue caused by converting to zfix.
Enemies should now obey scripttile and scriptflip if > -1, with
	old sprite draws
	( Timelord, 6th May, 2020 )

//Alpha 69
Fix pasting strings not setting 'saved=false'
Fix broken 'saved' checks; F4 not responding issue
Fix default new string settings based on compat QR
Fix 2x2 frame using incorrect width/height values
Re-space 'zq_strings.cpp'
Fix inconsistent ZQ string display
	( EmilyV, 4th May, 2020 )
	
Feat: Added zc.cfg setting zc_menu_on_left; to align with ZQE.
Fix: Hotkey conflict on Pick Ruleset.
Addeed config int: zc_menu_on_left
Rework of main ZQ menu. 
	If in small mode, change from the_menu to the_menu_small.
	If in large mode, use the_menu_large.
Prune 'ZScript' submenu under ZC menu; it now fits small mode.
	( Timelord, 2nd May, 2020 )
	
Fix fixed-point errors in ffscript.cpp
	( EmilyV, 2nd May, 2020 )
	
Remove 'Editor' from ZQ programme name.
<std, 1.7051> Fixed the value for CF_SIDEVIEW_PLATFORM.
Added the following Favourite Commands that Avataro requested:
	Take ZQ Screenshot
	Screen Script
	Rules - Weapons
The internal printf() was converting the decimal portion of
	negatively signed floating point values using format %f and %d
	improperly, by wrapping them backwards from '0'.
	I fixed this with some discrete calls to abs().
	( Timelord, 1st May, 2020 )

Slight timing fix to directItemA, for B-only quests. 
	( Timelord, 30th April, 2020 )
	
Fixed repeat() copying data extraneous to its contents. 
	( EmilyV, 30th April, 2020 )
	
//Alpha 68
You can now press C in the Tile Editor to copy a tile, then
	select a range of tiles and press F to FLOODFILL paste the copied
	tile to every position.
In the Tile Editor, electing multiple tiles, pressing C, 
	then selecting multiple tiles and pressing O will now overlay
	the copied selection tot he dest selection, triming overflow.
Mass Overlay now works properly, overlaying to each tile space, rather
	than overlaying to the first tile and copying the result of that
	overlay to the remaining spaces.
	( Timelord, 29th April, 2020 )

//Alpha 67
ghost.zh: Updated to version 2.8.15.
std.zh: v1.7050
	Updated ffrules.zh
	The printf() and sprintf() functions from std.zh
		now are in the namespace std::string. 
		They have been replaced by internal instructions.
Docs updates and fixes to ZScript_Additions.txt.
Fix signing issues and hopefully make ZScript printf() safe for Linux.
	( Timelord, 28th April, 2020 )

Fix enemies moving slowly with fixed point update.
Report duplicate keybinds explicitly.
'box_out' can now use set height/width, and scale text
	( EmilyV, 28th April, 2020 )
	
Add 'stricmp()' and 'strnicmp()'
Add 'npc->Dropset', as another name for 'npc->ItemSet'
Set 'fix' QR in Modern ruleset.
Add mid-air jumps to the Roc's Feather, number based on Attributes[0]
Add flag to hover boots to make it's timer not reset until you land
New internal type 'zfix', replaces Allegro's 'fix' type.
	This gives perfect precision to 4 decimal places, unlike Allegro's,
		which had poor precision.
	This now means there will not be floating-point rounding error on
		internal values such as 'X','Y','Z','Step'.
	The QR 'Sprite Coordinates Are Float' now gives PERFECT precision
		access to ZScript for X/Y/Z of sprites.
Alpha is now 67
	( EmilyV, 26th April, 2020 )
	
//Alpha 66
Make default cheat modifier keys 'SHIFT', not 'CTRL+SHIFT'
	( Timelord, 26th April, 2020 )

Fix the Favorite Commands list; Zoria offset it MORE in his
	prior commit. Now it should line up properly.
Made old favorite commands which have been removed reset to '(None)'
	upon loading ZQ. This prevents invalid commands from being usable.
	( EmilyV, 25th April, 2020 )

Fix printf '%f' error
Replace Allegro 'fix', using floating point, with 'zfix', as true integer fixed type. 
	NOTE: This was not in Alpha 66. It was in 67, as although it was committed on this
		date, it was NOT MERGED for a few days. 
Fix 'Default Defense' on weapons being reset when opening the item editor
	( EmilyV, 24th April, 2020 )
	
Separate errors for file missing and file errored
Update ZScript compiler errors to be more clear about included files
	Changed compiler error P0 a bit, too.
	Clean up the message of compiler error P1 for include directives.
	( EmilyV and Timelord, 23rd April, 2020 )
	
Fix hover decoration timing
Allow permanent secrets in Dungeon dmaps
	( EmilyV, 23rd April, 2020 )

Fixed the Favourite Commands list: It was offset.
	Condensed the existing Import ASM commands into Import ZASM,
	and Export ZASM. Added missing commands for Compiler Settings and
	for hero Rules. Made naming uniform.
	Fixed Integrity Favourite Commands Check being too long for the array.
	( Timelord, 23rd April, 2020 )
	
Add mid-air jumps to the Roc's Feather, number based on Attributes[0]
Add flag to hover boots to make it's timer not reset until you land
Allow scripts to overwrite Link's action when it is LA_HOPPING (with compat QR)
	( EmilyV, 22nd April, 2020 )
	
Added a new Quest Report type: Bugged Next-> Combos.
	This will scan a quest for any Next-> combo type that also has a secret
	flag on it, and report that this may be erroneous. (It is legal to
	place these flags, but they must be EXTERNALLY triggered. They no
	longer trigger when the Next-> combo is activated.)
Added extra sanity guards and reports to Hero->Warp, PitWarp, and WarpEx.
	( Timelord, 22nd April, 2020 )

//Alpha 65
Fix Registration system bug causing it to recurse more than necessary
	This was causing some compile errors to be reported multiple times
Fix 'on' in '#option'
	It was 'true' before, which interacted VERY dangerously with the
	option 'BOOL_TRUE_RETURN_DECIMAL', causing options that you set
	to 'on' to actually be set to 'off' instead.
Add CONST_ASSERT to ZScript
	This allows creating custom compile errors in your scripts.
	( EmilyV, 21st April, 2020 )

//Alpha 64
Updated the ZSA docs to cover the new instruction, and added section anchors. 
Ported some module family members (startingScreen, startingDMap) from 2.53.1. 
Ported Game->IncrementQuest() from 2.53.1, Beta 40
Added a termination to the quit state enum as qQUITLAST, and added qINCQST.
	( Timelord, 20th April, 2020 )

//Alpha 63

Fixed a longstanding issue where if the player runs a quest with an A_B subscreen,
	and the last item set inside an active subscreen wrote the value of button item 'A',
	then they exit the quest and load a quest with only B-item subscreens, that the A-button
	would become unresponsive (swords fail to work, and so forth).
	This was caused by DD making an oversight for setting directItemA = directItem on quest 
	load. 
	Quests sould now clear properly, and you should be able to use A+B and B-only quests
	freely, without needing to resrt/exit ZC Player.
Fully initialise all global vars; set game-> values on firstplay. This may be trivial, but it 
	prevents C memory holes in the assembled x86 code. 
Fix Overlays in Item Editor
	( Timelord, 19th April, 2020 )

Fix graphical bug with droplists
	( EmilyV, 19th April, 2020 )
	
Port: Allegro config.c to C++ and insert into ffscript.cpp/h.
	All of the allegro 'get_config_ type functions are nor accessible inside ffscript.cpp
	using fully C++03 compliant functions. 
	( Timelord, 18th April, 2020 )
	
Fix dialog centering.
Added 'Export ZASM' menu
Added 'Import ZASM' menu
	Replaces the old individual 'Import [type] ZASM Script' menus
Fix some typos, and change debug messages to use 'zprint()'
	( EmilyV, 18th April, 2020 )

Alpha is now 63
	( EmilyV, 16th April, 2020 )

//Alpha 62
Switch-case Upgrades
	Added a register SWITCHKEY to store the key of switch-cases, so it doesn't need to repeatedly push/pop it
	Optimized constant values in cases... which should be all of them. Why wasn't it already optimal? :shrug:
	Added switch/case ability to switch Strings. Simply use a string literal as the constant for the case.
		Strings and ints cannot be combined in a single switch/case.
		Matching is case-sensitive by default; though '#option STRING_SWITCH_CASE_INSENSITIVE on' will
			make it case-insensitive.
	Optimized switch/case with only default case.
		If the only case is default (even in a situation like 'case 1: default:', it's one joint case)
			then a sizable amount of overhead can be skipped while maintaining identical functionality.
	( EmilyV, 16th April, 2020 )

Updated 'string_functions.zh'
	Moved 'printf' and 'sprintf' into 'std::string::'
	This allows them to be used if desired, but the new internal versions will be used by default.
Internalize 'sprintf' and 'printf' functions.
	These should be MUCH faster than their ZScript counterparts, with 99% the same results.
	Take 0-16 varargs at this time; could theoretically expand to 18...
	Only difference from ZScript functions: if you would have gotten an array out-of-bounds error
		by having too many '%' in the formatstr, these will simply use '0' as the value instead of erroring.
		This matches the behavior of the ZScript function for <16 args, though the ZScript function used
		a size 16 buffer, thus going beyond that caused avoidable script errors.
	( EmilyV, 13th April, 2020 )
	
Fix minor errors with 'file'->
	Remove a debug trace
	Fix file->OpenMode not reassigning pointer
Add new ZASM Debugger modes
	Holding 'Ctrl' in addition to either 'Shift+Insert' or 'Alt+Insert' will perform
	the normal operation of the given combination, but will skip all ZASM printing until
	it reaches the next break- allowing higher FPS during that time.
	( EmilyV, 12th April, 2020 )
	
Add last-known version of LISP.zh by Grayswandir, to ./headers. 
	This allows writing ZScript in LISP syntax, and it is unsupported, but a rather
	remarkable technical achievement. It is a custom parser and AST, written in ZScript:
	I do not know the current status of it, nor its limitations, as I do not use LISP.
	( Timelord, 11th April, 2020 )



Heavily optimize array initialization, and somewhat optimize array access.
	Arrays now use new ZASM instructions:
		WRITEPODARRAYRR, WRITEPODARRAYRV, WRITEPODARRAYVR, WRITEPODARRAYVV
			-These write to arrays, either using 2 registers, 2
				values, or a combination.
		READPODARRAYR, READPODARRAYV
			-These read from arrays, using either a register or
				a value for the index.
Alpha is now 62
	( EmilyV, 11th April, 2020 )

//Alpha 61
Add a clear slots dialog to the script assign menu. This replaces the two clear buttons
	present prior, and allows more specific options. You can clear only missing, only
	preserved, and only imported ZASM, as well as any type of your choice, or all slots.

Added a config+checkbox to allow toggling recovering missing ZScript scripts.
	Imported ZASM scripts are unaffected by this option; they're always saved.
	If off, any scripts that would have been '++' will instead be '--'
	Config name is 'try_recovering_missing_scripts', under the '[Compiler]' heading.

Assign Slots now differentiates between preserved ZScript, and imported ZASM.
	The former shows as '++' still, the latter now uses '=='
Assign slots dlg now only shows the pertinent messages, and resizes to show
	only what it must.
Fixed crash on printing metadata >=512 characters.
Bump ZASM_VERSION to 3
	( EmilyV, 9th April, 2020 )

Alpha is now 61
	( EmilyV, 8th April, 2020 )

//Alpha 60
Add more copy/paste options to String Editor
Fix new combo animation respecting ASkipY
Fix register_used_tiles not respecting ASkipX/Y
Fix tile overwrite protection not respecting ASkipX/Y
Fix tile move not respecting ASkipX/Y
	( EmilyV, 7th April, 2020 )

Alpha is now 60
	( EmilyV, 6th April, 2020 )

//Alpha 59
Added 'messagedata->TextHeight' and 'messagedata->TextWidth'
	These are shortcuts for 'Text->MessageHeight' and 'Width' respectively.
	Should return the same values; which is the height/width of the message if
	drawn using '->DrawString', with the font set in the messagedata.
Fix the right 'Script Info' button.
Add 'Clear' and 'Clear All' buttons to slot assign dialog.
	'Clear' clears all scripts of the current type.
	'Clear All' clears all scripts, period.
	This is good for clearing scripts for re-organization,
		or clearing scripts from a tileset you don't desire.
	Both clear buttons have a confirmation, to prevent accidental clearing.
Added automatic inlining for internal functions in GlobalSymbols.cpp
	( EmilyV, 6th April, 2020 )

Added 'Game->Reload()' to ZScript
	Using this command is similar to 'Game->End()', in that it exits the quest
	without saving. However, instead of going back to the save select screen,
	it will automatically load the current save slot again; effectively reloading
	from the previous save.
Add compile warning for bad reassign calls; the behavior for bad calls
	has not changed, it is simply ignored; but now it will warn the user.
Clean up warning format; now functions will appear in errors/warnings as
	ex. 'npc->Create(float)', instead of prior 'Create(npc[Class 6], float)'
Fix combodata->o_tile interaction with tile moving
Alpha is now 59
	( EmilyV, 5th April, 2020 )

//Alpha 58
Fix bitmap->GetPixel for SYSTEM bitmaps not being offset by -10.
	Loading RT_SCREEN through RT_BITMAP6 via Game->LoadBitmapID now 
	works as intended with bitmap->GetPixel(x,y).
Corrected the behaviour of Graphics->GetPixel when working with RT_SCREEN
	and oter system bitmaps.
	( Timelord, 4th April, 2020 )	


//Alpha 57
Added the function `add child` to use when sumoning enemies.
	When a summoner such as a batrobe creates an enemy, the script UID 
	(npc->UID) of the summoner is now stored in the parent_script_UID 
	value (npc->ParentUID) of the summoned enemy.
	i.e., ZScript can now read the parentUID for the summoner from its spawn.
ZScript.txt: Fixed a minor docs error and a typo.
	( Timelord, 3rd April, 2020 )
	
Fix mistaken refVar ommision in variable getters.
	This was causing a lglitch where loading an npc or other indexed 
	pointer in a loop would read the same register for each index.
	( EmilyV, 2nd April, 2020 )
	
Add POPARGS opcode to optimize drawing commands.
	Drawing commands now use from 2 to 15 fewer opcodes per call; no joke. 
	( EmilyV, 1st April, 2020 )
	

//Alpha 56
Add 'Annotations', to allow specifying special data in ZScript.
	Presently, there is only the annotation '@Author("Name")', which
		allows you to specify the author of a script. This will be saved
		in the ZASM metadata generated for that script.
Add 'Script Name' and 'Author' to ZASM metadata.
Some changes to rules.
	Drawing commands use from 2 to 15 fewer opcodes per call. ets:
	Restore some rulesets which were changed wrongly previously
	Fix an old bug in rulesets present since at least 2.50.2
	Add new rules to the list of rules to always be on; and standardize that
		list between rulesets and new quests which ignore ruleset.
	Make rulesets no longer write to parser compile options at all
Fixed an issue relating to global script slots in the quest loader.
	This likely has existed since the last set of slots were added...
Added 'global script onSave', a 1-frame script that runs when the
	game saves it's data.
	This allows for anything such as file IO, bitmap writes, or SRAM
	saving to occur when normal save-file saving occurs.
Added a QR which makes 'bitmap->' and 'FileSystem->' functions
	read/write relatively to the same directory that 'file->'
	functions do. On by default for new quests.
	( EmilyV 31st March, 2020 )
	
New bitmap allocation system. Now, pointers can be re-used after being
	freed by a call to '->Free()'.
	Also: '->Create()' and '->Read()' work on non-initialized and invalid
		pointers, automatically allocating a new pointer. This creation
		is NOT deferred to draw-time; as it reassigns to the pointer.
	Fixed crash on trying to '->Read()' from non-existant file.
	Changed success messages for 'Read()'/'Write()' to debug, from error.
	Changed 'POP_ARGS()' calls to pop to 'NUL', instead of 'EXP2'.
	Fixed memory leak in 'bitmap->Read()', and 'bitmap->Write()'.
	Commented out various traces relating to bitmaps.
	( EmilyV 29th March, 2020 )
	
Fix linux flex/bison error relating to '#option' commands
	( Timelord and EmilyV 29th March, 2020 )
Feature: ZScript now has the ability to read/write files.
	Files can be created and read from within the directory
	"[zc root]/Files/[questname]/". When creating a file,
	any directories specified which do not exist will
	be created. This also applies to 'bitmap->Write()'.
		See 'ZScript_Additions.txt' for more details.
	( EmilyV 28th March, 2020 )
		
Attempt a Linux console
Alpha is now 56
	( Timelord 28th March, 2020 )


//Alpha 55
Various fixes for compiling on linux
Alpha is now 55
	( Timelord and EmilyV 27th March, 2020 )


//Alpha 54
Various fixes for compiling on Linux
	( Timelord and EmilyV 27th March, 2020 )

Port PC Overflow Handling from 2.53.1
	( Timelord 27th March, 2020 )

Fixed 'npc->Create()' not assigning the npc pointer
	( EmilyV, 26th March, 2020 )

Previously, `Ctrl+Plus/Minus` increment/decremented the
	tile of selected combos. Shift+Ctrl moved by a tile row.
	Now, Alt+Ctrl moves by a tile page, while Alt+Shift+Ctrl moves
	by 10 tile pages.
Alpha is now 54
	( EmilyV, 25th March, 2020 )


//Alpha 53
Fixed tile bug with Mass Combo Creation, as well as the Ctrl+Shift+PLUS
	combo editor shortcut.
	( EmilyV, 25th March, 2020 )
	
Clear forced_wpn if setting an item slot from the real subscreen.
If the user config for ZC Player speifies a custom SAVEFILE
	filename, and that file is absent, create it. (Don't try creating
	a .sav with a different filename!)
Values set when writing Link->Equipment now write to
	gamedata->forced_awpn and gamedata->forced_bwpn.
	These values are saved with the quest, and restored on load, so
	that the items set to the A/B slots remain corret.
	Witing -1 to an item with Hero->Equipment sets gamedata->fored_
		to -1, and if the gamedata strut value is -1, then nothing
		special happens.
	If the values of these gamedata (signed short) variables != -1,
		then calls to update A/B weapon (speific to the non -1 value)
		return early.
	If a forced item is removed from inventory (with a script, or with
		a string), then its forced value is set to -1.
	This also affects Hero->SetItemSlot(), Hero->ItemA, and Hero->ItemB.
Alpha is now 53.
	( Timelord, 25th March, 2020 )

//Alpha 52
NOTE: From here onward, only 10 changes max per Alpha; and 
	NO MORE THAN TWO _LARGE_ CHANGES will be acceptable.
		Bump the alpha so that we know what builds introduced
		any new issues! -Z
	

Don't save configs that cannot be changed in the GUI!
Fix brace misaligns.
	( Timelord, 23rd March, 2020 )

Finish up abclister pattern matching
Fix abclist scroll bug
	( EmilyV, 23rd march, 2020 )

std.zh v1.7049: Added bool inRoom() to std_extension.zh
	This returns if the player is fully inside dungeon DMap
	screen (i.e., not in a doorway).
Fixed an infinite loop condition in Windows Explorer style abclist jumping.
Segregate drawing abslist and other lists.
	( Timelord, 22nd March, 2020 )
	
Config: Allow choosing lister behavior
	lister_pattern_matching = 1 -- ( full pattern-match, like MacOS System 7 )
	lister_pattern_matching = 0 -- ( Windows Executive styled jumps )
	( EmilyV, 21st march, 2020 )
	
Fix crash in filelisters and optimise abclist_proc.
	( Timelord, 21st March, 2020 )
	
No-matter what colour you set as trans, the unused tile spots in
	the tile editor are now always black with a grey X. They no longer
	use the colour assigned to the 0th index of their cset.
	InvalidStatic mode is unchanged.
ZVersion 0.7.3: Fixed missing lessthan token.
ZVersion 0.7.2: Fixed a compile error. How long has this been there?
Fix: Sort lowest match in ABC List Search and jump to it, not highest.
Feat: Can now type more than one character to jump to an abc list item.
Make all ANSI chars legal for the pattern string.
Show what the user types in abclists.
Clicking in an abc_proc now clears the proc's char buffer.
The Save Palette dialogue no longer adds two dots to the file
	extension, and the dialogue title is now correct.
Add void wipe_abc_keypresses() to jwin.h
Add caching letters to abclist_proc. This is unused and not cleared.
Allow Disabling the 'Use Pal CSet' Box in Enemy Editor
	Prior to this change, if the user were to set the 'Use Pal CSet'
	tickbox in the Enemy Editor, they could not un-set it without mucking
	about with the CSet on the tile. This change fixes this issue, and
	un-ticking the box will now revert rhe CSet of the enemy from '14' to '8'.
	( Timelord, 20th March, 2020 )
	
Instead of jumping to the first entry starting with the
	pressed letter, ABC listers will now jump to the
	NEXT instance, after the current index (wrapping around).	
Add confirmation before pasting to all screens
	( EmilyV, 20th March, 2020 )
	
Help Rob with his OCD.	
Fixed another QR related array size issue.
Fix Improper location for zero QRs on loadquest()
Fix Size of QR Cache in loadquest()
Cache QRs and Restore them when ripping/grabbing tiles from .qst filetypes.
Update metadata to Alpha 52
	( Timelord, 19th March, 2020 )
	
Feat: View ZASM Metadata in Assign Slots
	( EmilyV, 10th March, 2020 )
	
Add SCCs GOTOIFSCREEND, CHANGEPORTRAIT as 23 and 24
	( Timelord, 9th March, 2020 )
	
Docs: messagedata vars
std.zh: messagedata->Flags[] constants
Feat: ZScript access to new messagedata vars
Added proper portraits to the String Editor.
Fix: Backwards-compatibility QR 
	This was needed for old quests' strings to
	not have margin issues with the new margins.
Feat: String editor Margins. May break old quests; compat QR coming up next.
	( EmilyV, 9th March, 2020 )	
	
Make GlobalSymbols.cpp's opcodes more consistent,
	and labelling opcodes more convenient.
Merge pull request #533 from ArmageddonGames/2.55-runscript-wrapper
	This adds runscript to the sprite:: class. 
Chore: Requested change (use 0 instead of false for byte)
Fix: Missed line in merge conflict
Added ZASM Metadata and label revisions to go with it. 
	( EmilyV, 8th March, 2020 )	

Feat: Add type `zstruct` as a variation of untyped script.
ZSA.txt: Fix documented args list for DSrawPlane (Mode7)
	( Timelord, 8th March, 2020 )

Missed in prior commit about scriptmenu-style script slots
Feat: Game->Scrolling[5]. 
	This gives data to scripts which is useful for drawing during scrolling.
	( EmilyV, 7th March, 2020 )

Fix GUI error in 'Quest >> Misc[]' 
	TABPANEL was covering 'OK'/'Cancel' buttons.
Fix F6 and other scriptmenu-system scripts
Fix: SFX now pause for scriptmenu-system scripts.
	They are killed in the case of `onDeath`.
Fix: F6 script can now run from other scriptmenu-system scripts.
	( EmilyV, 6th March, 2020 )

Added a new token `zstruct` as an alternative to
	`untyped script` + script typedef. This allows using the script
	'struct-like' syntax, without a misleading 'script' token such
	as STRUCT script.
ZSA.txt: Fix documented args list for DSrawPlane (Mode7)
	( Timelord, 6th March, 2020 )

Parser MAJOR Optimization 
	POPREF() -- new Macro. This will carry out logic to pop the refVar.
		If refVar==NUL, this sets the flag to skip the
		refVar, instead of popping.

	ASSERT_NUL() -- new Macro. If `POPREF()` won't work, this can be
		used instead, if `refVar==NUL`, to assert that it must
		be NUL, and set the flag to skip it.

	RETURN() -- new Macro. This will push a new OReturn(), returning from
		the function. It automatically skips this if FUNCFLAG_INLINE
		is set.

	IFUNCFLAG_SKIPPOINTER -- new Internal Func Flag. If this flag is set,
		the parser will skip PUSHing the reference pointer.

	Compiling scripts for MM2D, these optimizations saved ~20k instructions.
		This is a MASSIVE optimization!
Fix: ZASM debugger wrong register names
	( EmilyV, 5th March, 2020 )
	
Inline numerous functions which give 'straight-gain'.
	This means scripts will generally just be faster.	
Fix: Inline missing check
Error on duplicate labels; cleanup
Allow labels on their own line, ARM style
Optimize special case arithmetic
Inline several zscript internal functions
Optimize multiplying by constant 0
	( EmilyV, 3rd March, 2020 )

Docs: Updated cset.txt
Docs: Added cset.txt
	( Timelord, 3rd March, 2020 )
	
std.zh, v1.7048: Correct limits.zh max/min int
Updated ZScript.txt
Always dereference PC in the interpreter.
Feat: Add ASM PC and Debug->PC
Added the .zdoors file type.
	Added Import Doorsets: You can set a desired first destination,
	first source, and count fro the first source. This will load
	doorsets starting at src, ending at src+count, to dest, ending at
	dest+count-1.
		Overflow beyond the current doorcount is skipped, displaying
		a dialogue that it overflowed.
	Added Export Doorsets: You can specify a starting doorset, and a
	count (min 1), exporting doorset 'first' through 'first+count-1'.
	Added a contextual menu to the Edit Door Set list dialogue with
	the options 'Save' and 'Load'.
		Saving will save that doorset only; while loading loads
		the first doorset from a .zdoors file to the selected index
		of the lister.
	( Timelord, 2nd March, 2020 )	
	
Feat: Major adjustments to slot assignment 
	Bugfix - scripts can no longer be auto-assigned to a same-name slot
		of the wrong type. Instead, the bad slot will have a number
		appended/incremented at the end of it to separate them.
	Feat - ZASM scripts will now not be deleted on compiling ZScript
	Feat - Lost ZScript scripts will be preserved as ZASM scripts
		on compiling ZScript with missing scripts.
Now metadata is read on import ZASM, and written on
	'output ZASM to allegro.log'.
	Also now stores run() types
	Metadata is now saved/loaded in the .qst
	( EmilyV, 2nd March, 2020 )
	
Add metadata to ZASM
	Still WIP; needs import/export, and .qst save/load.
Include 'zdefs.h' in parser files
	#undef's to prevent conflicts
	( EmilyV, 1st March, 2020 )
	
Fix Crash: Long Filenames overflow buf[80], now supports 255-char filename lengths.
	( Timelord, 1st March, 2020 )
	
Fixed isSubmerged in zsa.txt; the identifier is `Submerged`.
	( Timelord, 25th February, 2020 )
	
Redo the Palette Editor	
Feat: New Palette Editor options	
	Can now type values, and view 8-bit color values.
Finish converting old palette editor; Now all using DIALOG.
Work: Finish HSL proc Further work towards a new palette editor
	( EmilyV, 24th February, 2020 )	
	
Created new error system, removing the `syncDisable` slow as hell bullshit.
	Now, NO_ERROR_HALT is ingrained in the standard `failure` system, which has been expanded.
	With NO_ERROR_HALT set to Do Not Halt, once an error is reached, it will temporarily
	halt until it reaches the next block-level recursion, where it will resume. This should prevent
	any of the crashes that the old system was causing from ever occurring.	
	( EmilyV, 22nd February, 2020 )	
	
Begin remaking the Palette Editor/CSet dlg
	( EmilyV, 21st February, 2020 )	
		
Update ZScript Manual
	( Timelord, 19th February, 2020 )
	
Update ZScript Manual
Begin conversion of te GNU C Manual to ZScript Manual
	( Timelord, 17th February, 2020 )	
	
Remove ZShark Quest Memory Obfustification
	Disable anti-cheating memory obfustification to see if it
	is the cause of virus scanner red flags.
Added ASCII Art Logo to Console
Quest [METADATA] is now shown again in the console, and I added
	logging for older formats (back to 1.80) along with build, gamma,
	and beta metadata, as much as possible with known variables and the
	available source allows.
Added zprint2(). This ALWAYS prints, with no regard to log level settings, to
	be used for critical metadata displays and special system messages
	such as holiday greetings (e.g. terminal motd).
	( Timelord, 15th February, 2020 )
	
Fix: Figured out the transparency issue
2.55 new messagedata	
	( EmilyV, 15th February, 2020 )	
	
Feat: Fulltile BGs and transparency for strings 
	Flag: Full Tile Backgrounds-
	Do not use the `tile` as part of a 2x2 frame, but
	as the upper-left of a full tile block BG
	Flag: Transparent BG-
		Draw the string background transparently to the screen
	Flag: Transparent FG-
		Draw the string foreground (text) transparently to the screen
	( EmilyV, 14th February, 2020 )	
	
Split messagebuf bitmaps into txt and bg
	( EmilyV, 13th February, 2020 )	

//Alpha 51
Copied Screen->Combo*[] Sanity Bounds to mapdata->Combo*[]
Added sanity bounds and error logging to Screen->Combo*[pos].
	Assigning an illegal alue, or accessing an inalid
	index will now generate errors instead of crashing ZC.
	( Timelord, 12th February, 2020 )
	
Seemingly fixed 2.55 quest rulesbeing carried oer to older quests
	loaded/saed in 2.55.
Added Quest->Pick Ruleset menu dlg.
Repeatedly try to fix QR porting from old quests.
If a quest was saved in 2.55, enemies will hae their tile
	set to their o_tile. If it was saved < 2.55, aNone (Animation)
	rill not exit its body. This prevents graphical issues when
	converting quests. Probably needs an anim rule.
Removed qr_ANIMATECUSTOMWEAPONS, disabling it in all locations.
	( Timelord, 11th February, 2020 )
	
Fixed some missed references to the animated combo table that now should
	reference the combo struct
Added ZScript access to 'combodata->AClk'
	( EmilyV, 10th February, 2020 )
	
//Alpha 50
std.zh: 1.7047
	Fix typo in <limits> and duplicate const in std_cxonstants.
	Moved version metadata into its own file.
	Moved include of std_vars abd std_extension into std.cfg
	Updated version of ffrules.zh
Quests created using the 'Modern' template now enable the
	following QRs by default:
	qr_NEW_COMBO_ANIMATION
	qr_DISABLE_4WAY_GRIDLOCK
	qr_NEW_HERO_MOVEMENT
	qr_BUSHESONLAYERS1AND2
	qr_CUSTOMCOMBOSLAYERS1AND2	
Fix Quest Template Dialogue in Small Mode
Added missing commas in Ruleset Info
Changed the Quest Template language a bit.
Reised all rulesets, remoing fallthroughs using code block
	duplication; that I sincerely hope remains correct (asd before).
Added new 'Modern' Ruleset, enabling all 2.55 enhancements.
Resized the ruleset description frame and fixed centring/pos issues.
Renamed the rules to be more generic (non-infringing).
	( Timelord, 8th February, 2020 )
	
Feat: New Combo Animation
	( EmilyV, 7th February, 2020 )
	
Fixed clash between tile warp and warp ring dialogues where data
	from one was corrupting the other.
	( Timelord, 6th February, 2020 )

Fix zcplaer.dat and add fire to logo; fix compile.
Added fire/animation to the new AGN logo. It's done. Please...No more.
Add master WAV for new logo to output/common/logo
Add master sources of new logo by King_Aquamentus to common/logo
Updated Logo WAV with a theme by stk13; added credits.txt
	( Timelord, 4th February, 2020 )

Converted ZC Player to use the new AGN Logo / Sound on
	the splash screens.
	Updated the .dat files in the Default and Classic Modules.
	Updated the title screen copyrights in te Classic and Default Modules.
cTRIGOFLAG/cTRIGFLAG are Step->Secrets Perm/Temp
	cSTRIG* is 'sensitive'
	Fixed the label in the combo editor for non-sens step->secret
	combo ound attribyte field.
	Reverted a change for sens types in Link.cpp.
Feat: Added SFX Step->Secrets Combos
	( Timelord, 3rd February, 2020 )

Disabled a trace on dustpile generation/linking.
	( Timelord, 30th January, 2020 )

All roomtypes now allow a 'Generic Catchall' set via the menus.
Begin documenting how ZASM/ZScript Arrays and Vars Work
	( Timelord, 27th January, 2020 )

Better ZQ Minimap 
	Large mode:
		No more border highlight
		X's instead of black for invalid screens
	Small mode:
		Border highlight only if !InvalidStatic
		Highlight is better calculated
	Both: Better minimap frame
	Optional blinking cursor, swapping colors
std_zh: Update 'ffrules.zh'
Docs: Update ZSA.txt
Finish: Integrate the "zinit" field for "heroStep"
	Now it is integrated with the system, and works as intended.
	( EmilyV, 26th January, 2020 )

Amend: Last commit, also ignore money for item2 and item3
The Item 2 and Item 3 counters of subscreen objects are intended
	to stack with counter 0, but someone disabled that to prevent stacking
	values with Life at all times.

	I corrected the issue by making '0' for item2 and item3 an ignored
	field.

	Further, if item 2 == item 1, or item 3 == either item1 or item 2,
		then they will not stack. This will prevent having all
		three at the same ID from tripling, or two or more of the same
		ID from doubling the true count.

Fixed an unintentional fallthrough in switch(itemtype) inside subscr.cpp
	where there is a missing break instruction after all script cases.
	Should someone have added anything after those, then script counters
	would fall through to the newly added counter.
	( Timelord, 26th January, 2020 )

Edited the Init Datadialogues to add 'Hero Step' to the
	'Constants' tab, and renamed thattab to 'Variables'.
	V_INITDATA is now 20. uest loaders will populate Hero->Step
	to a value of 150 if the s_version is < 20.
Fix missing comma in suspTypes enum.	
Added value ranges to zsa.txt under switch-case
Fix ZC Player to read ./sigs for dev sig.
	( Timelord, 25th January, 2020 )
	
Feat: script-modifiable step rate for Hero 
	Also updated `Hero->Step[]` to `Hero->Steps[]`
Feat: Add "Quest->Rules->Hero" for hero rules. 
	Contains both new rules, as well as Diagonal and BigHitbox rules.
Fix: Link QRs with `Hero->` vars
	Writing to Hero->Diagonal affects 'qr_LTTPWALK', and vice-versa.
	Writing to Hero->BigHitbox affects 'qr_LTTPCOLLISION', and vice-versa.
Fix some rewrite stuff, add 4-way movement w/o gridlock.
I don't recommend using new-movement with 4-way unless you also
	disable gridlock, as decimal movement + gridlock is...
	a little wonky, even at my best optimization.
	( EmilyV, 25th January, 2020 )	
	
Added Troy Gilnert's explanation of NES Hero Grid Snapping & Related
	( Timelord, 24th January, 2020 )
	
Feat: Finish diagonal movement rewrite 	
	Now collision and logic is done for diagonal movement.
	TODO: Try to rewrite for 4-way, add a steprate var,
		and ZScript steprate var access.
	( EmilyV, 23rd January, 2020 )	
	
Added a URL note for how to make *ptr not conflict with * multiply in flex.
Added some flex notes.
Added the following alt tokens to the lexer:
	appx_eq, appx_equal : ~~
	bitnot_eq, bitnot_equal : ~=
	Corrected ~~ info in zsa.txt
Fix: Added sanity bounds to Game->Suspend[]	
Reserved space in the suspend types enum.
Fixed some numbering comments in n enum.
<std 1.7026> Corrected theenum for Game->Suspend[] in std_constants
	( Timelord, 23rd January, 2020 )
	
Aded a combodatascript that changes if Link is in a surrounding combo.
Fix counter min/max in std_constants
Fix DCounterAdd/Reduce, CounterAdd/Reduce
Restrict item->Pickup Flags by Version
<std> Add counter consts to limits.zh	
	Add/Reduce Counter/DCounter functions require a rewrite.
	( Timelord, 22nd January, 2020 )	
	
sram v1.0002 : Generate hash if the user destroyed the old one.
hash.zv v1.0001 : Use numbers in the hashmask.
Added sram.zh
	( Timelord, 21st January, 2020 )
	
Set default approx equal margin to `0.0100`	
Feat: Approximate Equality 
	`a ~~ b` returns true if the numbers are "Approximately Equal".
	The margin of approximation is set via a compile option.
Feat: '~=' (bitnot assign)
	( EmilyV, 20th January, 2020 )	
	
Adjust OnSaveLoad script timing to run ere opening wipe.	
Fix: SRAM also must reset combo anims.
Reset combo anims before importing or exporting .ZCOMBO files
	as otherwise they will be corrupted by offsets.
	( Timelord, 19th January, 2020 )
	
Feat: Make case ranges FAR better
Feat: Add case ranges
Fix: Block issues in parser
	Now if and while statement types (and variants) use a forced block-scope.
	This fixes several bugs, while changing nothing on the user's end.
	( EmilyV, 28th January, 2020 )
	
//Alpha 49
Make ZASM errors for scommand printf format %lu, not %ld.
<std> 1.7044 Added null, Null, and TF_CENTRED to std_constants.
Fixed the DMap Selection window not drawing a preview or other data.
	The array passed to dlg->dp3 was passing invalid data, but it is hardcoded
	to specific values, so I coded it into the function as 
	nothing else uses this jwin proc type. 
	( Timelord, 18th January 2020 )
	
<std> 1.7043 - Add itemclass constants for new classes.
	( Timelord, 17th January 2020 )
	
Work: Begin rewriting Link::move() 
	This will eventually allow modifying Link's step speed by script.
	( EmilyV, 15th January, 2020 )
	
//Alpha 48
Now includes ghost 2.8.8
Updated copyright year to 2020.
Fixed Link->Steps[] datatype.
	( Timelord, 15th January 2020 )
	
Fixed a crash with no error halt and undeclared const/var in array literals.
	( EmilyV, 15th January, 2020 )
	
If the weapon is brought back to life by script, the dying frame variable
	must be reset, else it would remain alive but invisible, and not
	get another frame if it died again. Fixed.
	( EmilyV, 13th January, 2020 )	

Because some quests may rely on the specific, old timing, of
	when the global init and global saveload (formerly continue) scripts
	run, I added a flag to ZScript>>>Quest Script Settings>>Scripts
	as 'Use Old Global Init/SaveLoad Timing'.
	This bit is enabled when loading a quest made before 2.54.x.
I also added an emergency flag to ZScript>>>Quest Script Settings>>Bugfixes
	that prevents deallocating arrays from the global init and saveload scripts.
Added a comment about scripts during Link scrolling.
	( Timelord, 13th January 2020 )
	
<std> 1.7042 
	Add missing remchr(ptr) to string.zh.
	( Timelord, 12th January 2020 )

Corrected docs for Link->Step[]
Changed Link->Steps[ to Step[ for Uniformity
	( Timelord, 11th January 2020 )

Added Hero->Steps[8] to Adjust Walking Speed
Update 2.53.x Version of TheRandomHeader to v.2.1 to match 2.53.1
Optimised TheRandomHeader for 2.55 as v 3.0
	( Timelord, 10th January 2020 )

File: Add TheRandomHeader, Optimised for 2.53.x to ./headers
	( Timelord, 9th January 2020 )

Made ->Power and ->Damage uniform between *weapon and itemdata.
Fixed a bug in shopdata->String[3]
Corrected shopdata documentation.
Added int shopdata->Type as read-only.
	( Timelord, 8th January 2020 )
	
Fix: WarpEx() forcedir 
	Wasn't working at all as supposed to. Now, given a valid dir,
	that dir will be used; given an invalid dir, it will automatically
	determine the direction to use.
	( EmilyV, 5th January, 2020 )
	
Only set map flag mTMPNORET for traps if it is not already set
	on the current screen. This prevents logging slowdown from setting
	it every frame.
For some reason, D_REFRESH isn't occurring on the first time
	that the user sets a KB button. This circumvents text errors
	by padding both key strings and key/button integers.
	( Timelord, 4th January 2020 )
	
Add Link->ScriptCSet, and fix combodata->Attribytes in globalsymbols
	( Timelord, 3rd January 2020 )

XOR was missing a typecheck entirely.
	Now all logical operators (&&, ||, ^^) are typechecked
	with UNTYPED,UNTYPED. This alows 'if(npc && bool)' and such.
Fix: Void cast to Untyped. Nothing can cast to void, and void can cast to nothing, now.
All global pointer constants now have value '1' instead of '0'.
Decimal map number was too large to fit in small mode. Removed.
	( EmilyV, 3rd January 2020 )
	
<std> Expanded a comment.
<std> Updated Doxygen comments in limits.zh.
<std> 1.7041 
	Fixed compiler warnigs when using limits.zh w/o TRUE_INT_SIZE.
	Fixed a sanity check in float Distance(int x1, int y1, int x2, int y2, int scale)
	( Timelord, 2nd January 2020 )
	
std.zh v1.7040 
	Added Collision(combodata this);
Added demo scripts:
	combo_scripts/tollroad.zs
	item_scripts/brangcontrol.zs
	item_scripts/weapon_dir_control.zs
	npc_scripts/stealitem.zs	
Updated ZSA.txt with combodata script information.
Added the following combodata members in ZScript:
	int Pos();
	 * Returns the combo screen index of a combo from a combodata script, from the 'this->'
	 * pointer as 'this->Pos()'.
	 * Using this from any other combodata variable is illegal and undefined. Y;

	int Script;
	 * The combodata script used by this combo.

	untyped InitD[2];
	 * The two InitD args used by the combodata script for this combo.
	( Timelord, 31st December, 2019 )
	
Updated Combos.txt to v4
Lockblocks: Added Option for Counter Requirement 'No Drain'.
Added Troll/Thief Lockblocks Req. by ShadowTiger
Room Guys with Anim==aNONE once again Update Every Frame
Check [cid] not [MAPCOMBO)-1]. If Any new combo stuff breaks, look here.
Restore tall grass drops to combos without flag2 set.
	( Timelord, 30th December, 2019 )
	
Add comboscript->this->PosX(), PosY()
Add parser comment for 'this->'
Parser: Fix 'this' mismatches, esp. for combo scripts.
Add Import Combo ASM Script Menu Option
Combo scripts now run on each screen load.
combo doscript now triggers on new screen, but script does not run
Combo scripts now run on layer 0 of the first screen of the quest.
Call combo_script_engine() in game_loop()
	Add suspend type for combo scripts.
	Default that combo scripts run on layer 0.
FFScript now assigns the combo script.
Fixed crah due to invalid data in comboscripts[].
Fixed mismatch in combo save/load for newcombo.initd[]
Minor Combo Editor Script Tab Cleanup
Fix Combo Editor Sctipt Tab
Added Scripts tab to Combo Editor; fixed linker errors.
Added the compiler tab for 'Combo' script types.
Combodata: Start adding script storage and compiler recognition.
	( Timelord, 29th December, 2019 )
	
Minor fix to combodata->X(), Y()
Move Combodata X(), Y() back into get_register, with slight change.
Startmoving COMBOXR/COMBOYR to Commands
Add missing defines to zdefs
Add combodata->X() and Y() and other combo script code.
Start adding Combo Scripts and InitD
	( Timelord, 25th December, 2019 )
	
//Alpha 47
Overload Link->Warp with WarpEx
Add ./zsdocs
	( Timelord, 23rd December, 2019 )
Updated doc revision data for zscript.txt
Fixed errors in the description of Triangle3D in zscript.txt
Added chapter title for timing, to head of zsa.txt
Update zsa.txt with script timing.
	( Timelord, 19th December, 2019 )

Added an emulation flag for buggy ->Next combo behaviour.
Fixed the issue reported by Matthew, where a Slash->Next combo
	that transformed into a Step->Secrets combo would immediately transform
	into the secret combo of the step combo, without being stepped upon,
	immediately after being slashed.
	( Timelord, 17th December, 2019 )
	
Fixed a crash when using Generic Trigger combos with IDs > 255. 
	( Timelord, 14th December, 2019 )
	
//Alpha 46
Added npc script wolfie.zs (1x2/2x1 enemy) to test_scripts.
Added Waitdraw to npc and lweapon scripts.
Added npc->Random to ZScript
Disable array size logging on npc->ConstantWalk
Added comment about wCByrna spacing to link.cpp
Byrna beam orbit spacing was affected by changes that use w.type
	properly (as w->Level). I added w->quantity_iterator that is now
	used by wCByrna to determine the iteration index for spacing to
	correct this issue.
Fixed sparkles not rendering.
	( Timelord, 8th December, 2019 )
	
Fixed an array literal crash from misplaced ZASM when using dereferenced
	member functions in array literals.
	( EmilyV, 13th December, 2019 )
	
Step trigger combos now use attribytes[1] to require an item
	(e.g. iron boots) to trigger them.
Fix logical order bug preventing Step->Next sfx
Pit, Stairs, Dive/Water and Step combos now all have a 'Sound'
	attribyte as Attribytes[0].
	Warps play sfx during instawarps, but not cave/passageway transitions.
	Step triggers should play their sound once, when triggered, such
	as Z3 pressure plates clicking.
Fix timing for aNONE
aNONE ZQuest frontfacingtile should be the first enemy tile by default.
ZC Bosses and Old Draws should respect do_animation.
	( Timelord, 12th December, 2019 )
	
Applied ArmageddonGames/2.55-fixheaderguard
	( EmilyV, 12th December, 2019 )

Fix: Header Guard not precise enough
	( EmilyV, 10th December, 2019 )

//Alpha 45
You can now spawn large (2x2 or larger) enemies from armos combos,
	and arrange the statue combos in a block equal to the size of the
	enemy that they spawn. The enemy will remove all combos in that block.
You may now specify enemies that span when touching an armos
	combo, and if one specific enemy, or one of two random enemies spawn.
Add Docs for ZScript Timing
Added combos.txt
	( Timelord, 8th December, 2019 )

Corrected the flag used for No Spawn Poof in weapons.cpp
The flag 'Room Item' becomes 'No Poof' if the 'Drop Enemy'
	flag is enabled in the combo editor for script and generic combo
	types.
	Enabling this causes enamies to instantly appear, instead of spawning
	in with a spawn poof animation.
Added flags for custom/generic/script combo types to drop an
	enemy instead of an item with flag 14, and to 'always drop' as a
	planned 'constant event' that would occur on loading the screen.
	Constant events  will require the combo_script_engine to run, and
	will run prior to the script execution.
	As such, I added a preliminary FFScript::combo_script_engine()
	function template to ffscript.cpp.
Renamed some combo editor flags, for clarity.
	( Timelord, 7th December, 2019 )

Fixed a possible crash when saving MIDI files from ZC Player.
Std.zh, v1.7032
The ffruletype enum is now in its own file, which serves double-duty
	as the documentation for each index is inlined in Doxygen format.
Added file: std_zh/ffrules.txt, now imported immediately after std_constants.zh.
<ffrules.txt> v1.2, Allow to be inline in std_constants.zh
Feat: UseWeapon works with slash combos on layers 1 and 2.
Slash combos now work on layers 1 and 2 with an actual sword.
	This requires enabling a QR.
	To-do: Emulation of other weapons for them on higher layers.
Custom/Script combo types now work on layers 1 and 2, if the
	user enables the quest rule for this behaviour.
	( Timelord, 6th December, 2019 )
	
cSCRIPT flags are now generic, expcept for flag9 ('Engine')
The function pointer for jwin_button_proc (and for
	jwin_check_proc) now returns int. The dialogue will return what that
	function returns.
	Example function returns D_CLOSE, allowing a callback that affects
	the dialogue base don return type.
If ->dp3 is passed to jwin_check_proc or jwin_button_proc,
	then it will run the function and D_EXIT the dlg.
Selecting the 'engine' flag on script combos will shift out the user labels
	set in the .zmod for engine labels.
Improved cuttable type sprites.
Adjust some default combo attribute labels.
[JWin]
	Fixed jwin_numedit_byte_proc
	Added:
	int jwin_numedit_zscriptint_proc(int msg,DIALOG *d,int c);
		//bound to ZScript int, no decimals.
	int jwin_numedit_byte_proc(int msg,DIALOG *d,int c);
		bound to unsigned byte (8b)
	int jwin_numedit_sbyte_proc(int msg,DIALOG *d,int c);
		//bound to signed byte (8b)
	int jwin_numedit_short_proc(int msg,DIALOG *d,int c);
		//bound to unsigned short int 16b)
	int jwin_numedit_sshort_proc(int msg,DIALOG *d,int c);
		//bound to signed short int (16b)
Fix: cGENERIC room item flags
Rename tabs to Attributes 1, Attributes 2
Fix: Set labels for attrybytes[3] and attributes[3]
Check by combo type, not ID
<std> Remove extraneous file date from std_vars.
Added unsigned byte combodata->Attribytes[4]
<std> 1.7031 Fix typo in limits.zh
Bound strings in combo editor with jwin_numedit_byte_proc.
Added jwin_numedit_byte_proc
Port attributes to attribytes
	Add module data
	Merge values
	Add constants for combo usrflags
	( Timelord, 2nd December, 2019 )	
	
File: Added Playing Card Rendering FFC Script
Added two suspend values to Link->HealthBeat.
 * The timer for the health beep sound, if it is not constant.
 * Setting this to -2 suspends system control over stopping the sound,
 * and setting this to -4 suspends system control over both stopping,
 * and starting it.
 * The normal operating range used by the system is 70 to -1, where -1
 * wraps around to zero internally.
Added int Hero->HealthBeep;
	This is a clock for the duration of the health warning noise if
	it is not set to be constant.
Cleaned up ZQuest Creator I/O Error messages.	
Added more information to ZQ_scale error window.
Video mode failure now inits allegro, and displays a console
	window that reports the issue.
	This required adding an extra init process,  then creating the
	console, as without this process the console has no parent process.
	After constructing the console, we call allegro_exit(), which
	should (hopefully) uninstall the timers and objects, and clean
	up after itself with no leaks.
Added bitmap->RevBlit(...) as an alternate toi bitmap->BlitTo(...).
Minor fixes to the console routines.
	( Timelord, 30th November, 2019 )
	
Add void zprint() to ZQuest (internally)
Added ColorConsoleLogger:: to ZQuest.
Abort running ZC Player, or ZQ Creator if the moduke path specified
	in the .cfg file is invalid; and log an error to allegro.log,
Validaate that module files are valid, before reading from them.
Update default module path from root, to .//modules, specifing modules/default.zmod
	for an empty config string.
	( Timelord, 29th November, 2019 )	
	
Finish adding Combo Attribute/Flag Labels to .zmod
Auto-set editor labels on Custom/Script combo types.
Add Combo Attribute and Combo user Flag fields to Modules for all 20
	Custom/Script combo types.
If the user toggles combo user flag 0x100, on 'Custom' ('Script')
	combo types, then they may use that combo type as an extra 'generic' type.
Script/Custom Combos now work as 'Generic' types.
	Begin adding the ability to set their labels in modules.
Fix lockblock item removal flag value.
Added flag 0x10 as 'Eat Item' to Lockblock combos.
	Now, if this flag is enabled, and a specific item is needed to pass
	the lock, that item will be removed from the player's inventory.
	This should downgrade lvl based items such as potions.
Lockblock combos now have the following attributes and flags:
	Item: An item ID to require.
	Require: The lockblock will not open unless Link has the required item.
	Only: Require the item, but not keys.
	Counter: (Flag: Enable); the lockblock drains this counter instead of keys.
	Amount: The amount that 'counter' is reduced if 'Counter' flag
		is enabled; otherwise the required number of keys.
	Sound: A SFX ID: This sound plays if the 'SFX' flag is enabled,
		instead of the engine unlock sfx.
Initial rework of lockblocks for combo attributes.
Fixed text for damage combos spiing out of bounds.
You can now pass negative values to the 'Sprite' field for
	Generic combo type combos, where:
	-1: Bush Leaves
	-2: Flower Clippings
	-3: Grass Clippings
Sanity bound and correct some logic in do_generic_combo()
If you pass a negative value to 'Dropset' in the Combo Editor,
	on the 'Attributes' tab, the combo will drop a *specific* item,
	rather than using a dropset.
	e.g. -28 will have the combo drop a heart container (item 28).
Sanity bounded item IDs.
The timezone in which ZQ was last compiled is now properly
	saved and stored in the quest header, rather than using the local
	__TIMEZONE__ macro.
Added a new 'generic' combo type, that uses its flags and its
	attributes to determine triggers and properties.

	Flags:
	Visuals: If enabled, the trigger will cause sprite set in attributes[0]
		to appear onscreen at the combo location ('Sprite').
	Itemdrop: if enabled, when triggered, the combo will drop an item
		from the dropset of attributes[1] ('Dropset').
	SFX: If enabled, when triggered, the combo will play the sound set
		in attributes[2] ('Sound').
	Next: if enabled, when triggered, the combo will advance by one, as
		slash->next or step->next.
	Continuous: If enabled, when triggered, the ->Next property will
		advance until it reaches a non-next, non-continuous generic combo.
	Room Item: If enabled, when triggered, the combo will spawn a room
		secret item at its location.
	Secrets: if enabled, when triggered, the combo will trigger the screen
		secret ID set in attributes[3] ('Secret Type').
	Kill Wpn: if enabled, when triggered, the weapon that triggered the combo
		will be killed.
Generic Combos now have animated effect sprites.
Generic combos handle ->Next, and ->Continuous
Implement screen secret triggers.
Begin adding Generic Trigger Combo Type
	( Timelord, 28th November, 2019 )	
	
Don't allow the player to change Link.dir when stunned.
Cancel Link;'s attack if he is stunned.
Fix labels for cBUSHNE
Fix typos in ZDefs combo types.
Fix combo editor field labels from setComboLabels.
Cleanup combo types in ZDefs.
	( Timelord, 27th November, 2019 --or so GH claims. I'm pretty sure these are later commits than the ones from the next day... )	

Clear the panel recent screen buttons when creating a new quest.
Clear the panel recent screen buttons to prevent crashes from invalid maps.
Some work on future <std> lib files.
std.zh v1.7030: Added limits.zh.
Fix reversed operator on hammer checks.
Fix Combo Editor Saving Bugs
Additional screengrid checks.
Added zprint(...) for internal loging (in magenta).
Completely rewrote the combbo editor so that it refreshes in the same way as the 
	Item Editor and the Enemy Editor.
	Changing the combo type will not allow refreshing the Attributes
	tabs--I added a std::map for this--and update the flagsetand other labels
	based on the combo type.
	Note that this uses the combo type from ther //list//, not ther cCOMBO constants. 
	I added a case for list entry 122, for now.
	I'll need to add a function to match these to combo
	type constants and make it saner. 
	Absolutely nothing uses those now--just the deprecated defdata
	code.
	Note: If you want a droplist to pass a value to 'ret', so
	that you can refresh using changes it it, you must set the
	proc flag D_EXIT ---NOT D_DIRTY--- !!
	( Timelord, 26th November, 2019 )
	
ZQ now displays the decimal value of a screen number in parentheses
	next to the hex value in ZQ.
	( EmilyV, 26th November, 2019 )

Minor cleanup of the Combo Editor Attributes fields. 
Added eight additional flags to Combo Attributes (the new total is 16)
	and renamed them from 'Misc Flah 0x00' format to 'Flag 1' to 'Flag 16'.
Added eweapon script toggleBossFireball.
Added The ability to set a specific damage amount on damage
	combos in Combo Attributes[0].
	Combo Flag 1 must be enabled to use the custom amount.
Added the ability to set a specific sprite (>0) to use instead of the system
	default sprite as Combo Attributes[0] for bush, grass, and flower
	clippings.
	Combo Flag 1 must be enabled to use the custom sprite.
	This still uses the timing for the normal internal sprite.
Added the ability to set a specific item dropset as Combo Attributes[1]
	if Combo Flag 0x02 is enabled. This overrides the engine dropsets.
Sparkle graphics are now pulled from wpn->linked_parent,
	not from wpn->type.
Store sparkle type in linked_parent in Link::addsparkle()
Don't draw dying weapons. This fixes flitched sparkles. 
Link wBrang and wArrow Sparkles to their Parent (later, redacted in the next commit).
Vast rewrite of all Combo Editor 'Triggered By' code.
	Triggers no longer cascade, they are now absolutely specific to the
	weapon types that the user sets.
Disabled a bugged QR (qr_WEAPONS_EXTRA_FRAME) and disabled the QR
	qr_VERYFASTSCROLLING for Z3 style quests, as people didn't like it.
The Combo Editor 'Triggered By' Tab flags now work for map flags (placed and inherent combo flags), and for slash combos, pound combos, and wand strike combos.
	Combo Editor 'Triggered By' Now Works with Most Map Flags
Feat: Wand Triggers and Hammer triggers now respect 'Triggered By'
Started implementing 'Triggered By' for combos.
	Slash combos now respect this flagset.
	( Timelord, 25th November, 2019 )
	
Fix: xtoi bad parens in std.zh; version is now 1.7021
	( EmilyV, 25th November, 2019 )

//Alpha 44
Fix Weapon Rules Dlg
Update New Quest Default Rulesets
Fix Weapon Rules
Add QR 'Mirrors Use Weapon Centre for Collision'
Add QR to Reflect Angular Weapons off Mirrors
Break weapon->Dir switches if a nonstandard dir.
Converted burn flags for candles and Din's Fire to use the new
	linked_parent variable, and fixed ->Level so that it works with wFire.
	This fixes wpn->Level not working properly with wFire lweapons.
	All burn triggers appear to work as they always have in the past.
wFire now loads gfx based on parentitem, not ->type.
weapon::weapon(...) no longer sets ->type for wFire lweapons.
	The issue here, is that wFire uses (type) to determine if it came from
	a wand, a candle, or din's fire.
	We need to get that info over onto linked_item instead.
Add int degrees (D1) to eweapon script 'addtwoangularshots'
std.zh: v1.7020; added weapon.zh and namespace weapon.
eweapon script 'eweapon_add_angular_shots' now respects true
	angular shots, not just directional shots.
Added eweapon script addtwoangularshots to:
	./demo_scripts/eweapon_scripts/eweapon_add_angular_shots.zh
	This will duplicate a weapon created by an enemy, and add
	two copies of it, flying off at 45 degree angles to the first.
	It should respect 'boss fireball' and other boss weapon
	status values.
	( Timelord, 25th November, 2019 )

//Alpha 43
Added eweapon->Level
std.zh: Version 1.7010
	Added MakeUnblockable(eweapon), MakeBlockable(eweapon)
	*weapon Duplicate() now clones wpn->Level
Added Math.zh, appended it to std.zh, and moved the functions
	std::Floor and std::Ceiling to math::
Added internal global functions:
	int Floor(float n);
	int Ceiling(float n);
	int Integer(float n);
Std.zh: Moved old std Floor(), and Ceiling() into namespace std.
	Version is now 1.7000.
Disabled render src logging on bitmap->Triangle()
Completed the following set of global functions:
	untyped Byte(untyped n);
	untyped Int8(untyped n);
	 * Clamps and returns 'n' sized to an unsigned byte, with appropriate oberflow.

	untyped Word(untyped n);
	untyped Int16(untyped n);
	 * Clamps and returns 'n' sized to an unsigned 16-bit integer, with appropriate overflow.

	untyped Short(untyped n);
	 * Clamps and returns 'n' sized to a signed 16-bit integer, with appropriate overflow.

	untyped SignedByte(untyped n);
	 * Clamps and returns 'n' sized to a signed byte, with appropriate overflow.
Time.zh: Add routines to get time elapsed in a quest.
Add missing types to script_types[]
	( Timelord, 24th November, 2019 )
	
The Tile Editor now also displays colour values in hex format.
	( EmilyV, 24th November, 2019 )
	
Animate DrawCombo/FastCombo in F6 and onDeath Scripts
Allow combo animaion during scripted active subscreen.
Move case 0xFFFF to always-first.
Added case 0xFFFF to switch(scommand)
V_LINKTILES is now 6.
	Tiles are now written as int. I added a secondary function to
	read Link's tiles if the version is >= 6. Old quests still use
	the function that casts them to word.
	This allows setting tiles with values > 32767 to any of Link's
	animations.
Added 'timezone' string to [METADATA], max [6] chars.
	The string can fit UTC+10. It's internal size is [7] to fit NULL termination.
FFScript::GetDefaultWeaponSprite now returns default values for
	lweapon, and Script/Custom weapon IDs; and it will return sprite
	IDs 246 though 255 if the appropriate rulebit is enabled.
Added ZScript Rule: Instructions->npc->Weapon Uses Sprite 246-255 for EW_CUSTOM
Added initial Weapons Rules dialogue, with tabs 'lweapons' and 'eweapons'.
	( Timelord, 23rd November, 2019 )
	
Build is now 48.
Alpha is now 43.
Ported the remaining, legacy extra_rules, to quest_rules, adding:
	Quest>>>Rules>>Compatibility>>>2>>>1.92 Diagonal Walk Speed
	ZScript>>>Instructions>>>Writing npc->Weapon Sets its Weapon Sprite
	ZScript>>>Insructions>>>Broken DrawInteger and DrawCharacter Scaling
LWeapon->Level is now Set in the Constructor
	( Timelord, 22nd November, 2019 )

//Alpha 42
Fixed a typo in the Defaul Module [LWEAPONS] section.
Added death.zh to ./headers
Changed menu entry 'The Travels of Link' to 'Ambient Music'.
Fixed ambient and boss sounds being killed when using potions.
	The prior fix did not work.
This fix should pause sfx when refilling (potion, magic, hearts
	or both, including from refill combos; then resume them when the potion
	effect ends, matching the NES behaviour.
Found and removed additional mirror memory leaks.
Now that weapons set useweapon and usedefence in their constructor
	Link.cpp's functions that used to check itemsbuf[prnt].useweapon
	now read w->usewepon, instyead of reading itemsbuf[parentitem[.useweapon.
Copy useweapon and usedefence to lweapons in constructor from itemsbuf.
Possibly fix memory leaks with mirror reflected weapons.
Note where memory leaks occur with mirrors.
	( Timelord, 20th November, 2019 )

Fix inverted logical operator
Fix: Header Guard case-sensitivity
Overhaul bitmap.zh; removing unsafe pointer math, and setting it up
	more similarly to my prior bitmap rental system I coded.
This was written before Zoria added locking, so that was lost; will
	need to be re-added.
	( EmilyV, 19th November, 2019 )

Fix: utol() and ltou()
Fix ffcore string header prototype sigs.
Fix some string functions in FFCore to take pointers.
Fixed a ZASM logging message in LowerToUpper
Bitmap.ch: Change casing for including time.zh
Fix: Restore itemdata->Max
Time.zh: Fix Compile
Time.zh: Added GetMonth(*buffer,m), GetDay(*buffer,d), GetZone(*buffer,z)
	Print and Get Date functions now call these, rather than repeating
	large blocks.
	Changed ::versioninfo to ::version
Bitmap.zh: Moved version metadata into bitmap::versioninfo
Time.zh: Added time.cfg, and namespace versioninfo
Bitmap.zh: Move PrintTime to Time.zh
File: Added Time.zh to ./include
Bitmap.zh: Add lock() and timezones
File: Add bitmaps.zh to ./include
Added zc.cfg section [ZSCRIPT} with config int ZASM_Hangcount.
	This is used in place of the hardcoded number of instructions to
	wait, ere checking quit keys. It defaults to 1000.
Check for hangs every 1000 ZScript instructions, instead of 100,000.
The Item Editor 'Default Defence' list no longer displays
	unimplemented enemy defence resolution types.
Removed Lit Bomb and Lit Superbomb from the LWEAPONS list in
	both the Classic Module, and in the Default Module
Weapon Type List (Weapon tab in Item Editor) is now resized
	to the number of valid weapons. Starting a weapon string with '-'
	will remove it from the list. It no longer displays 'n/a' types.
Fix: Check UseWeapon Every 16 Pixels Only, Plus Edge/Corner
The UseWeapon property now triggers secret combos set by screen
	and combo flags.
Fix missing braces.
Fix: UseWeapon Respects Hit X/Y Offsets
Weapons with a UseWeapon set are no longer continuous, and
	they now check combos along every 8 pixels of their hitbox.
	Each weapon now has its own screengrid (wscreengrid) for this
	application.
Weapon->UseWeapon set to Hammer or Wand now activates
	hammer pound and wand strike combos.
Setting a weapon to mimic swords should now both correctly
	read the weapon's centre, and should no longer create a permanent
	location on the screengrid that cannot be affected.
	Exiting and re-entering the screen should reset its grid.
Alpha now 42, applies to all UseWeapon Commits
	( Timelord, 19th November, 2019 )

//Alpha 41
Re-designed ZSA.txt.
Added Strings Help to the Help submenu.
Changed 'ZQuest Editor Help' to 'Editor Help'.
Edited the item help info for shields to reference ZQ Shield Help
	instead of the ZC.com Wiki.
Changed 'Shield Block Flags' in the Help submenu to 'Shield Help'.
Add 'found file' messages for new help files.
Changed the menu entry for ZQuest>>>Help to a 'Help' submenu.
	Added ZQuest Help, Shield Block Flag Help, and ZScript Help to
	the new submenu. These require zquest.txt, shield_block_flags.txt,
	and zscript.txt, respectively.
Allow zstrings.txt to be in root or in ./docs
Updated .zmod files (Classic, Default) with Metadata
Remove duplicate 'nsf' value from .zmod files.
Add 'About Module' Dialogue to ZC Player, Fix ZQ Dialogue Spacing
Added 'About Module' Dialogue to ZQuest
Fixed ZMOD Metadata as follows:
	Fixed crash when printing the date.
	Fixed overflow with date_year.
	Fixed timing for reading from .zmod file.
Added the following Metadata to Module (.zmod) files:
	[METADATA]
	title = string
	author = string
	info_0 = string
	info_1 = string
	info_2 = string
	info_3 = string
	info_4 = string
	nsf = string
	version_first = int
	version_second = int
	version_third = int
	version_fourth = int
	version_build = int
	version_beta = int
	version_year = int
	version_month = int
	version_day = int
	version_hour = int
	version_minute = int
	( Timelord, 17th November, 2019 )

Fixed beam shard tiles being drawn when swiping your sword, due to the sword
	obeying the 'live one frame longer' QR. 'wSword' must ignore this.
	( EmilyV, 17th November, 2019 )

Continued to retab src files (through ffscript.cpp)
Spacing: ffscript.cpp, 'run_script()'
Spacing: ffscript.cpp, get_register()
Added 'skip_layer_warning' config int, under '[zquest]'
	If non-zero, the warning message when trying to place flags
	on layers they don't work on, is not displayed. This is helpful
	for scripts which read flags off of layers.
Changed the level palette editor, so that it starts with the
	palette of the current screen selected, instead of
	level palette 0.
	( EmilyV, 16th November, 2019 )
	
Fixed the error messages for Screen->LoadItem, LoadNPC, LoadLWeapom
	and load EWeapon to return a 1-indexed value.
	( Timelord, 15th November, 2019 )
	
Fix normal input keys. Pressing Enter as 'Start' on the Continue/Retry/Save screen
	was getting stuck in a loop.
Fix: MAXSPRITESNPC not returning a value.
Updated ZSA.txt
Fixed illegal/unsafe compare. 
	While C++ 'allows' bool == int, it is usafe and MSVC will warn you about this.
Set and Get Max Sprites 
Added:
	int Game->MaxNPCs();
	void Game->MaxNPCs(int newmax);
	int Game->MaxLWeapons();
	void Game->MaxLWeapons(int newmax);
	int Game->MaxEWeapons();
	void Game->MaELWeapons(int newmax);
	int Game->MaxItemsprites();
	void Game->MaxItemsprites(int newmax);
	These work globally.
All four current sprite datatypes (npc, lweapon, eweapon, and item)
	further, now have:
	int Max(); // Returns the maximum number of sprites
		   // that can be active at one time.
	void Max(int newmax); // Sets the maximum.
	These fail on null pointers, but on an initialised pointer,
	they are identical to the Game-> functions, and they work from
	uninitialised pointers; thus:
		lweapon l; l->Max(400); //This is legal and works.
	( Timelord, 14th November, 2019 )

Retabbed src files: 'a' -> 'ffscript.cpp (partially)
	Spacing: ffscript.cpp (incomplete) 
	Still need to space `run_script()` and `set_register()`
	Spacing: ffdebug.h to aglogo.cpp
	( EmilyV, 14th November, 2019 )

Add 'has_space()' to sprite list, for cehcking if there is a certain amount
	of space in a list. This is now used instead of checking
	'list.Count() < list.getMax()', everywhere this occurred.
Now keys are handled through a wrapper, rather than directly via allegro.
	This means that keys are accessible similarly to buttons (control_state[]) now.
	( EmilyV, 13th November, 2019 )
	
If the user attempts to create an  item, lweapon, or an eweapon
	but they are already at the system limit,
	set the script pointer to NULL, and give
	an error message.
	This replaces the old mechanic from 2.50.2
	that set the pointer to LONG_MAX.
Fixed assign to script npc pointerb (NULL, not LONG_MAX)
	if CreateNPC fails to create an enemy.
Fixed a crash when creating invalid eweapon
	types by script. May not be fully handled if
	the type is > enemyWeapons (new types), but I restored the
	old behaviour and added new logging.
Remove decompressed al_gif path. It was confusing git.
Because 'particle' and 'decoration' are potentially already common
	identifiers in scripts, I have reversed the reservation of these
	tokens, changing them to 'decorationsprite' and 'particlesprite'.
	We can add user typedefs to <std> if we want, later, to shorten
	the datatype to something like 'particles' or 'deco'.
	( Timelord, 13th November, 2019 )
	
Don't allow div by 0 in InvPow()
	( Timelord, 12th November, 2019 )

Added ZASM breakpoints, for the ZASM debugger
	In ZScript, 'Debug->Breakpoint(string)', or 'Debug->Breakpoint(NULL)'
	In ZASM, 'BREAKPOINT reg', or 'BREAKPOINT NUL'
	Controls:
	INSERT - Break, or if broken, step once
	SHIFT+INSERT - Step to next script start, or next breakpoint; whichever first
	ALT+INSERT - Step to the next breakpoint
	CTRL+INSERT - Kill the ZASM debugger, ending debugging
Parser: Reserve 'particle', 'decoration'
Made SLMAX member of sprite_list 
	Sprite maxes for each sprite type are now per-list
	Default is 255 for all types, save for particle
	Particle is '255*(255*4)+1'
	( EmilyV, 12th November, 2019 )
	
Centralize weapon type conversion
	( EmilyV, 11th November, 2019 )

Delete dangling weapon pointers.
LWeapons generted by mirror combos no longer
	inherit the script from the eweapon that
	was used to spawn them.
	Their InitD, doscript, and initialised status
	is further, cleared to zero.
Increased the sprite limits per type by +1 in ffscript.h
Add MAX_*_SPRITES constants to ffscript.h
	Called MAX_LWPN_SPRITES in weapons.cpp
Cap reflected weapons from prisms at 255.
Other changes to cloned weapon constructor.
Give cloned weapons a script_UID
Fixed cloned weapon crashes with mirror beams.
	( Timelord, 11th November, 2019 )

Merged fixSP, tempLayerMapdata
	( EmilyV, 11th November, 2019 )
	
Parser no longer pushes/pops a ton of 0's in ~Init
Uncommented an error message in ffscript.h
	( EmilyV, 10th November, 2019 )
	
Converted 'ri->sp' from a byte to a bitfield, sized to 0->1023.
Fix ternary crash & 'Undercombo' typo
Fix: Capitalization typo
Fix: NO_ERROR_HALT crash Ternary
Docs: Update ZSA
Add access to temp layers, and scrolling layers
	'Game->LoadTempScreen(int layer);'
	'Game->LoadScrollingScreen(int layer);'
Using these pointers can write temporarily to the screen and layers,
	as well as to the "scrolling" screen buffer; which is displayed
	only during scrolling. While not scrolling, the 'scrolling' screen
	represents the previous screen you scrolled from, including temp
	changes made when you were there.
Add 'Screen->' and 'mapdata->isSolidLayer(x, y, layer);'
	These function similarly to 'isSolid()', but instead of
	returning if there is solidity on layers 0,1, or 2 of the
	given screen, it will return for only the specified layer;
	so you can check just 0, or just 1, or even check 5, or 6.
	( EmilyV, 9th November, 2019 )
	
Disable logging tile ID during export.
Fixed instability and improper offsets from Import/Export tiles.
It is now possible to write to eweapon->ParentUID
	and to npc->ScriptUID.
	This does NOT automatically associate the object
	with the parent, and it exists purely for
	the semantics of allowing fully-scripted sprites
	to set the parent UID of child sprites solely
	within the context of the script.
	It may be overwritten by the engine animation
	of the normal parent sprite, particularly if
	used on a normally segmented enemy type.
Added new instructions to debug commands list.
Added npc::parent_scriptUID to guys.
	Moldorm, Lanmola, Manhandla, Gleeok, and
	Patra set this during their animate functions.
	ZScript can read npc->ParentUID, and compare
	it against other_npc->UID to find the parent
	and core of segmented enemies.
	ParentUID is read-only.
	( Timelord, 8th November, 2019 )

Abstracted loading of mapscr* for FFCore functions
	Now will load the appropriate tmpscr for special vals
Set up FFCore functions for loading special mapdata pointers
	Still need to add to GlobalSymbols/Opcodes
Set up FFCore for 'mapdata->isSolidLayer(int x, int y, int lyr)'
	Still need to add to GlobalSymbols/Opcodes
	Still need to add Screen-> version
	( EmilyV, 8th November, 2019 )

Fixed the .cfg file to read monochrome_console under [CONSOLE]
Add zc.cfg value monochrome_console to display the new
	ZScript Debugger in monochrome (white) for those who dislike colour [i.e., Moosh].
Fix version info on ZSA.txt
Chore: midi_patch_fix now defaults at 1 if not set in zc.cfg for weird people who use soundfonts.
	( Timelord, 7th November, 2019 )
	
//Alpha 40
Converted the hardcoded removal bounds macro
	NEWOUTOFBOUNDS into a function that pulls
	variable values from FFCore.
Fixed the placement of a dialogue element
	in the ZScript Instructions dialogue.
The QR and the Enemy Editor bits that allow
	enemies to move offscreen, are now logically
	xor'd, so that you can deselect enemies that
	are allowed to move offscreen.
	Both are destroyed if they are not immortal
	and their coordinates are outside -/+32768
	of the visible screen, on any axis.
	We'll need to make this new removal bound
	into a variable.
Added behavioural flag 'Fast Draw' to the
	Enemy Editor. If set, the sprite will always
	use old/fast draws. All sprites have this bit,
	not only enemies; but at this time, only the
	Enemy Editor can write it.
	This bit disables scale and rotation for the sprite
	and we need to give ZScript access to it.
Added a behavioural flag to the Enemy Editor that
	allows the user to set *specific* npcs to move
	offscreen. This does not conflict with the quest
	rule -- I suppose we could xor it? -- nor
	does it replace it.
	( Timelord, 6th November, 2019 )

Fix: New Quest Should Have qr_LOG On By Default
Updated std.zh to Version 1.6004
	Added names[ace std, and sub-namespace std::version
	Moved GlobalRAM into namespace std, along with accessors
	for it, and for date and time,
	Added file std_legacy.zh, where legacy functions
	will go, once ported into namespace std.
	Added file std_user_defs.zh for user typedefs
	and moved those out of std_constants.

If an item is running a passive script, and the
	user writes ->Item[]=false, then Item[]=true
	in the same frame, reset the running state of
	that script back from '4' (exit next frame),
	back to '1' (running).
	This fixes scripts magically aborting, but it means
	that if you want to start a script completely
	fresh, that you need to wait one frame to restart
	it after setting the item false; so item[]=false,
	then Waitframe, then Item[]=true.
Un-set waitdraw on item scripts, and comment out the old, wrongly timed waitdraw removal.
	( Timelord, 5th November, 2019 )

Fixed the 'Load Module' function in both
	ZQ Editor and in ZC Player.
	It now refreshes the lists, such as item family
	name, npc family name, and so forth instantly
	on loading a .zmod file.
The build date in ZC Player/ZQ About strings is now in a
	format of: 0th Month, 9999
	Thus, 4th November, 2019, not 4-11-2019.
	This avoids day/month transposition, and is for clarity.
	The datestamp remains auto-generated.
Refactored .zdmap, removing .zdmapset and merging both types
	into one file.
	You can now import from the dmap editor (single dmap) or from the
	Import menu (single, or multiple dmaps).
	If you load a .zdmap file from the import menu,
	then ZQ will load the DMaps into the slots that they
	occupied in the quest from whence the .zdmap
	file originated on export.
	If a file contains multiple dmaps, the *DMap Editor* will load the
	FIRST dmap in the file, into the selected slot.
Begin Adding Loose File Versioning; add multidmap r/w functions
Fix: Export Combos (all) File Type; Minor Menu Changes
Feat: Add Combo Don't Overwrite on Import
	( Timelord, 4th November, 2019 )
	
Fix: Background Layer stuff in ZQ 	
	Hiding layer 0 no longer hides BG layers
	Next-screen previews now draw BG layers properly
	( EmilyV, 3rd November, 2019 )

Fixed the Goto Page Hotkey (P) in the ZQ main editor view to
	jump to the specified page for combo aliases. Each page is 256
	alias swatches tall (one full bank), and the last quarter page
	cannot be jumped into without overflow, but that tiny limitation
	is, IMO better than not being able to do this, at all, at all.
Notes on ganon revival bug (#ganon-comes-back-once)
Fixed the drop of the large TF (relly, and trully), to spawn over
	the ASHES if they have moved.
	( Timelord, 3rd November, 2019 )
	
The little arrows above the combo alias banks now work as intended.
	( Timelord, 2nd November, 2019 )
	
Fixed Item 0 not being sorted properly, due to changes to sorting (none) in lists.
Fix: Overlapping QR
	( EmilyV, 2nd November, 2019 )
	
Feat: Active layer button is highlighted
Fix: Small memory hole, local array leak 
	Forgot to initialize 'active_iterator'
	Forgot to deallocate arrays allocated to the object being deleted
	( EmilyV, 1st November, 2019 )

Because Grayswandir's variable name / pointer or datatype
	identifier stuff had to be removed, I am reverting
	the *data identifiers that he shortened back to how
	I originally named them.
	Typedef removes the need for internally short identifiers, and
	these are likely to have conflicts with variable identifiers
	somewhere.
	I als reserved "try" as a token and it gives an errr message
	in the output window. May need NO_ERROR_HALY stuff or
	something to convert it into a warming.
	( Timelord, 1st November, 2019 )

Feat: 'npc->Remove()' instantly deletes
	Standardized runscript return values via defines
	Added 'active_iterator' as a member of sprite_list
		This is automatically modified by del() if it is called while the list is
		being animated, used instead of a local 'i' variable
	Added handling for a script object deleting itself, via returning
		RUNSCRIPT_SELFDELETE; this handles returning to avoid NULLPOs
	Updated ZScript_Additions.txt
std_zh: Fix GetHighestLevelItemOwned 
	Now no longer has a critical bug, and is much faster.
	Now works the same way 'current_item_id()' does internally.
	( EmilyV, 31st October, 2019 )
	
Fix: NO_ERROR_HALT crashes
Revert "Parser: Slight optimization"
	This reverts commit 5f36fe9.
	Was causing crashes.
Change: Identifiers for item-related types
	"item it;" -> "itemsprite it;"
	"item script" -> "itemdata script"
	Added typedefs to "std_constants" for old scripts
	( EmilyV, 29th October, 2019 )
	
Scripts: Added Subscreen Demo v9 Script and Files	
Possibly fix some memory holes for DMap Subscr Active Script
Themes: Asdd Ruby.ztheme and Dark.ztheme; update all other files.
Changed default cursor size in config files for large mode to 1.0
	( Timelord, 29th October, 2019 )
	
Because C lacks logical xor (^^), the alternate
	token for bitwise xor (^) is 'xor', HOWEVER, sll
	other witwise alt tokens are prefixed with 'bit:
		bitand, bitor
	...but the logical operator alternative tokens for logical
	AND and logical OR (&&, ||) are simply 'and', 'or'.
	Thus, for the sake of linguistic uniformity, I changed
	our alternative tokens for bitwise and logical xor.
	Now, logical xor (^^) uses 'xor' as an alternative token, and
	bitwise xor (^) uses 'bitxor'.
	WHile this differs from C, I feel that this change makes
	the alternative tokens more uniform, and easier to remember.
Fix crash if compiler sounds are set to 0 and vbound them between 0 and 255
	( Timelord, 28th October, 2019 )
	
Parser: Slight optimization
	Remove overload of syncDisable, really no reason to allow pass by pointer
	and pass by ref. Now only pass by ref is allowed.
Fix: NO_ERR_HALT crash on 'return undecl_var;'
	( EmilyV, 28th October, 2019 )
	
Classic.zh: Push v 2.12, fixing compile issues.
	( Timelord, 27th October, 2019 )
	
Implement `dropset` type, with:
	'int Choose();'
	'int Items[10];'
	'int Chances[10];'
	'int NothingChance;'
	Documented in ZScript_Additions.txt
Vers: Now at Alpha 40
	( EmilyV, 27th October, 2019 )
	
//Alpha 39
Re-update .cfgs
Updated ZScript_Additions.txt.
Fixed errors in zscript.txt, now v0.7.6.
Fixed crashes saving files with very long paths.
Fixed npcs firing weapon 0.
Removed some logging.
Added the alternate token 'logicalxor' for '^^'
	and added docs for both to ZSA.txt
Replaced deleted zsa.txt file.
Deleted zsa.txt to replace with cleaner whole file.
Fixed off By One Error in .ztile and .ztileset files.
Updated ZSA.txt
EWeapon Script: Updated laz demo to use faster octos.
EWeapon Script: Assed Laser Weapon Demo Script (.zs and .zasm)
Fix: Don't reset script_parent_uid to 0.
	( Timelord, 27th October, 2019 )
	
Parser: Added Logical XOR (^^) operator 
std_zh: Fix IsSideview() 
	Now match the XOR functionality. Might update later with a proper '^^' operator.
Abstract all sideview calls in the entire source through a couple functions,
	so that the checks can be changed in those functions as needed.
	ZQ function: returns the screen flag for the current screen
	ZC function (Link): returns '!ignoreSideview' && (the next function)
	ZC function (general): returns the logical XOR of the screen flag and
		dmap flag. This makes them a toggle, like other similar flags.
Added combodata->ASpeed
	( EmilyV, 27th October, 2019 )
	
std_zh: Add missing QR constants (again)
std_zh: Add new QR constants
Added Game->Gravity[3] 
	Allow modifying the quest's gravity, terminal velocity,
	and jump sprite layer threshold via script.
	( EmilyV, 26th October, 2019 )
	
Slight change to dmapdata->Sideview in interpreter.
Fix: Missing EWPNPARENTUID in ffasm.cpp
Fix: Forgot that script_UID is not Div by 10000.
Added parent_script_UID to weapons (weapon class)
	Set this on creation of eweapon.
	Added accessors for getting an npc, lweapon, or an
	eweapon by script_UID.
	Added the following to ZScript:
	Screen->LoadNPCByUID(int UID);
	Screen->LoadLWeaponByUID(int UID);
	Screen->LoadEWeaponByUID(int UID);
	eweapon->ParentUID
Changed the new ZScript console to report the current version of
	ZC Player if it is opened on launch of zelda.exe.
	If the user opens if AFTER loading a quest, it will still report
	the version in which the quest was made, but this change prevents it
	from reporting 'Quest Made in Version 0, Build 0'.
Fixed an issue where writing to OriginalTile
	would pre-emptively overwrite a call to write wpn->Tile
	that occurs AFTER the call to write OriginalTile.

	I don't remember why I originally added script_wrote_otile,
	nor do I recall what this was trying to address.

	For now, I am just disabling it entirely.
Refactored build_biew_list and biew[] in general.
	The script weapons were being created as ids 159 to 169,
	instead of 31 ro 41. I had to essentially rewrite this
	function, change the array size, and refactor the
	enemy editor dialogue to get the correct IDs in use.
Changed enemy::FireWeapon() to allow firing IDs 31 to 41:
	The old function returned if the shot type was < wEnemyWeapons
	UNLESS the enemy was a summoner.
	Need to find out if this BREAKS summoners, now. ... :(
Fixed the Enemy Weapon List to show all ten
	Custom/Script weapon types, and added them to the
	.zmod format as:
		Custom_1 = Script 01
		Custom_2 = Script 02
		Custom_3 = Script 03
		Custom_4 = Script 04
		Custom_5 = Script 05
		Custom_6 = Script 06
		Custom_7 = Script 07
		Custom_8 = Script 08
		Custom_9 = Script 09
		Custom_10 = Script 10
	( Timelord, 26th October, 2019 )

Rewmoved the remaining dependency on IS_BETA,
	and removed ZELDA_VERSION_STR, VERSION_BETA, DATE_STR,
	and ZELDA_ABOUT_STR from zdefs.h.
Chore: Add qr_250WRITEEDEFSCRIPT to qst.cpp
Fixed the setter in the ZASM interpreter so that
	quests made in versions < 2.54 that wrote to npc->Defense[NPCD_SCRIPT]
	FORWARD those writes to Defense[NPCD_SCRIPT_01] through [NPCD_SCRIPT_10]
	and added a QR:
		Writing npc->Defense[NPCD_SCRIPT] Sets All Script Defences
	in the Script Instructions dialogue to enable this
	behaviour in 2.55 quests.
	( Timelord, 25th October, 2019 )

//Alpha 38
Added QR: Weapons Can Always Move Offscreen
Added QR: Check clip for script weapons on screen edge.
Added the following to sprite:
	byte screenedge -- bitwise only!!
	byte shadowsprite -- for future, custom shadows.
	int scriptshadowtile -- for future, scripted shadow overrides.
Implemented the screenedge value for weapons.
	If screenedge&1, then weapons can move offscreen.
	Ignore the ugly jump. The current check to eat weapons
	was already a skip, so I had to add a skip to empty
	braces to bypass it.
Possibly fix item script initD not always being set properly.
Possibly fixed item shadows.
Fixed eweapons not having shadows when QR is enabled.
	Eventually, these rules should be flags per sprite!
Add QR: Animation->2->Animate Custom/Script Weapons
Add notes to struct zmodule on needed new vars.
Fix script type weapons failing to animate.
	In 2.50.x, wScript had no animation. Now it does.
	( Timelord, 25th October, 2019 )
	
Fix: Reset itemscriptInitialized 
	Was not being reset in the init function, thus carrying between quest loads!
Fix: Item scripts during scrolling 
	Added itemScriptEngine() calls for scrolling
Fix: Combo editor flags offset 
	Writing was off by 1
Fix: combodata arrays wrong num params
Fix: ZASM issues 
	Increment "A" registers, instead of NON-"A" registers
	Fix negative numbers with decimal portions not working
		This has been tested in MM2D, so it should be fully functional now.
	( EmilyV, 25th October, 2019 )

Added ewScript1 to ewScript10 to the Enemy Editor
	'Weapon' droplist.
	TODO: Add module data for these, to assign user-generated
	labels for them. At present, they are hardcoded to
	'Custom 1' through 'Custom 10'.
	( Timelord, 24th October, 2019 )
	
Merge branch '2.55' into 2.55-assignSlotsGui
	( EmilyV, 24th October, 2019 )
	
Fix: Slot assign
	Global scripts were reading wrongly, as they use a different offset from other types.
	Changed `**name**` to `--name` for empty slots.
Feat: Assign slots dialog complete 
	Now disassembles ZASM, to allow re-assembly through the normal system.
	This includes a disassembly system which can be used as the basis for
	exporting scripts from a .qst as ZASM.
std_functions fix- account for DMap->Sideview 
	Update 'IsSideview()' to check the sideview status of the current DMap.
std_constants: fix/add constants
	Missed sideview ladder/platform constants added
Renamed `CF_SCRIPT_POT_LIFT_SLASH` (Pot (Liftable)) to `CF_SCRIPT_POT_LIFT`
	( EmilyV, 23rd October, 2019 )
	
Feat: F12 Screenshots Weapon, Enemy, and Sprite Editor
Port .ZTILEPACK and Organise Import/Export Menus
Moved the old 12.50 file pack export/import into new menus
	(2.50.x and Broken). The latter to be replaced by
	new formats.
Fixed map loading, as this one included the header in 2.50.
Added spacer in Export submenus.
Cleaned up old export saving success messages, and added saving success
	messages to .zalias, .zcombo, and .ztile file saving.
	Fixed some wrong dialogue titles for Combo Alias Packs.
The Z Hotkey works snapshots ZQ when in the tile editor.
Restore display of Z key in ZQuest menu for screenshots.
	( Timelord, 22nd October, 2019 )
	
Update notes on structs and pointers.
Added the ability to save and load Combo Alias files in the format
	of .zalias, with the same GUI options and mechanics as .ZCOMBO and .ZTILE.
	Alpha is now 38.
	( Timelord, 21st October, 2019 )
	
//Alpha 37

Fixed a .ZCOMBO off-by-one error, and wrong version ID
Added 2.55 combo variables.
Added .zcombo files, identical in function to
	the .ztile format, with the same options in the
	Import and the Export menus.
ZC Player About Dialogue is Now Entirely Based on versionsig.h
ZQuest 'About' Dialogue Now Pulls Exclusively from versionsig.h
Added the ability to load tile pack (.ztile) files either to their original
	locations, as they were located on the tile pages
	in the source quest from whence they were saved,
	OR to a specified starting point.
	Tiles will be written in a contiguous sequence and old tiles in their
	path will be overwritten.
	Failure to load or invalid files do not write any data to
	the tile pages.
Added the ability to save tile packs as .ztile
	with a specified starting tile and a number of tiles.
	This will preserve the format of the tiles (can
	be mixed 8bbp and 4bbp formats in the same file).
	The original location of the tiles (from whence they
	were ripped in the quest tile pages) is encoded into the .ztile file.
Update .gitignore
Fix compiler sigs issues.
	( Timelord, 21st October, 2019 )
	
ZQuest>>Take Screen Snapshot
Takes a screenshot of JUST the current screen, not including GUI elements.
	This captures at proper-scale; i.e. 1 combo is 16x16, regardless of gui scaling.
	If holding CTRL, things such as walkability and flags will appear (if you have them
	visible); if not holding CTRL these will be hidden as well.
This allows easy capturing of an entire screen, at 1:1 scale.
Renamed `Take Snapshot` to `Take ZQ Snapshot` to help prevent confusion.
	( EmilyV, 20th October, 2019 )
	
Headers: Add MSVC Compliant stdint.h, inttypes.h to repo, in case we need them.
Minor reported alpha version ID bugfix.
Bind .rc files to metadata/versionsig.h
Timezone for datestamps is now set in ./metadata/devsig.h.sig
Fix newlines in ZC Player About Dialogue
Finish automted build timestamps.
Auto-generate build date and timestamp during compilation.
Fix typo in versionsig.h
Metadata: Moved the new v4 Header Metadata into headers. 
	I moved the v4 Quest Header Metadata out of zdefs, and into
	individual headers in ./src/metadata.
	This both allows individual devs to sign off without committing
	changes to the metadata, and it speeds up compile time by
	not needing to recompile everything that uses zdefs.h.

	Always commit changes to metadata/versionsig.h.
	Never commit changes to sevsig.h.sig or compilersig.h.sig
	unless they are updates to the format (or enhanced automation)!
Polish ZQ Metadata Reported to allegro.log
File: Add compilerid.h
Header V4: Add auto-generated compiler data and some more logging.
	( Timelord, 20th October, 2019 )
	
Embed Automatic Compile TIme Date/Timestamps in Quest Header
Add a number of metadata information to the quest header (now version 4)
Fix: Load 2.53 .zwpnspr 'tile' to 'newtile' var.
Fixed some error messages on modular object file loading.
Fixed the sanity checks for section_version and section_cversion on modular
	object file loading.
Added the ability to save and load weapon sprites as .ZWPNSPR files.
Added a contextual (right-click) menu to the Weapon Sprites
	dialogue, allowing the user to copy and paste weapon sprites.
Added a contextual (right-click) menu to the DMap Editor.
	You can now Copy/paste DMaps from this, and you can Save and Load DMaps
	to and from .ZDMAP files, as .ZITEM and .ZNPC.
Changed the error message titlebar text a bit for all .Z*struct files.
Feat: Add Right Click Context Menu to DMap Editor
Item Scripts with a Passive Item Script Flag now
	start running as soon as Link acquires the item.
The user can now save individual npcs
	from the Enemy Editor in the format of .ZNPC, identical to
	how .ZITEM works.
Fix call to resource.h
Update resource scripts with build version information.
Add new MSVC Resource Deps
	( Timelord, 19th October, 2019 )
	
	
Fix: Don't alphabetize '(None)' in listers.
Fix: Better tile image export
	Fixed - selector no longer shows
	Added - instead of static or X's, it will display color 0 for hidden tiles

	Internal: draw_tiles() has new params, and an overload for default params.
Add 'Hide 8-bit Marker' to the 'View' menu, with the hotkey '8' to toggle it.
	This hides the small '8' in the corner of 8-bit tiles.
Fix Ctrl+U long-standing issue: It was meant to cycle through different sets
	of 'Hide' settings, but, it would always turn off 'Hide Blank', and
	could not turn it back on. Now, it will NOT modify 'Hide Blank' at all.
	( EmilyV, 19th October, 2019 )
	
Fix default cursor scale. Was 1.5, should be 1.
Add more VERSION METADATA to MSVC Resource Scripts
Add VERSION METADATA to Resource Scripts
More old notes on possibly adding ZASM structs and function pointers
	( Timelord, 18th October, 2019 )
	
std_zh: Add missing constants 
	There were category constants for Screen Enemy Flags, but no constants
	for the individual flags within those categories.
Fixed vbounding the size of the cursor!
	( EmilyV, 18th October, 2019 )
	
Feat: Cursor scaling 
	Config options 'cursor_scale_large' and 'cursor_scale_small', to scale the cursor
	added to zquest.cfg and zc.cfg. Range 1 to 5, decimal allowed.
Fix: Inverted warp return square error condition
	It was giving an error indexes <3, instead of indexes >3; thus rendering
	these commands useless. This has been corrected.
std_zh: NOCARRY and NORESET constants 
	Added bitwise constants for NOCARRY and NORESET, as
	NOCARRY_B_* and NORESET_B_*.
	The B is to signify bitwise, so that later adding a bool[] accessor
	will be able to have it's constants just be NOCARRY_*
	and NORESET_*.
	( EmilyV, 17th October, 2019 )
	
Added v_build to ZITEM format.
The mapscr selection marker rect is now red in InvalidStatic mode, as not to blend in (grey).
Changing the screen colour with hotkeys now allows F2/Memu to save.
Fixed crash caused by calling get_config_int before allegro init.
Disable load_mouse pixel logging.
Fixed the string writing on ZITEM load from file.
	It was writing to two locations, and one of them was wrong!
Added an Error message to the GUI if a ZITEM file cannot be loaded.
ZITEM: Add ZC Version to ZITEM Header, and add VC checks.
	You can now save single items in the item editor as .ZITEM files,
	and load .ZITEM files into the item editor. Uses the contextual menu only, for now.
	( Timelord, 17th October, 2019 )

Added ZCL 2.8.0.
You can now set -fast and -multiple CLI flags in zc.cfg:
	multiple_instances : 0 by default; set to 1 to permit multiple instances.
	skiplogo: 0 by default; set to 1 to skip the AGN startup banner.
Found the cause of the parser memory leak: Constants and programme/AST generated by the compiler
	aren't being deleted. Not sure what to do here, because grayswandir
	used idiotic C++03 smart pointers, which were deprecated in C++11.
	Perhaps MSVC > 15 will work properly. Who knows here?!
	( Timelord, 16th October, 2019 )

Feat: Assign Slots Dialog (WIP) 
	Implement the framework for the Assign Slots dialog.
	( EmilyV, 15th October, 2019 )
	
Now, instead of 3 separate keyboard control menus, and 2 separate gamepad menus,
	now there is one menu of each.
	This makes unique control conflicts less difficult to deal with, and
	overall makes more sense.
	( EmilyV, 14th October, 2019 )
	
RomView built from 2.55 master now runs again, but only in small mode.
	The public packages include the RomView from DD's old master branch, which DOES scale!
Docs: Add theoretical ZScript Struct Model notes
Add CMake Intermediates to .gitignore
CFG: Add baseline zc.cfg and zquest.cfg
ZScript Header: Add stdExtra.zh to repo
ZScript Header: Add Sprites.zh to repo
Modules: Add Classic_Dreams.qst from Binx to repo
ZS Header: Add ZVersion.zh to repo
Addons: Add missing Addon DLLs in repo
Vers: Add Version Semantics Docs to repo
Docs: Add Future version logic diagram to repo
File: Add combo scripts outline to repo
Flex/Bison: Commit Files for MSVC Win Flex-Bison to Repo 
	This is the version that you will need to compile using MSVC
	Eventually, we need to modify cmakeLists to use these for MSVC, so that
	installing Flex/Bison and adding it to the PATH is not required..
Update .gitignore -- do not mask out dlls!
Replace Allegro Grabber.exe in Utilities with newly built v4.4.1.
	4.4.3 was corrupting .dat file components.
DAT: Fix mouse cursors for themes for Default and Classic modules. 	
	( Timelord, 12th October, 2019 )
	
Fix: Misalign arrows hardcoded colors 
	They now load similarly to cursors.
Fix: advpaste_dlg always small 
	Was missing 'is_large' check to upscale the dlg.
Fix: Forgot to rename .ztheme config names
Enlarge layer checkboxes.	
Added the ability to set cursor colours in themes.
	( EmilyV, 12th October, 2019 )	

//Alpha 36
Fix a bug where init_game() as cllearing the current rendertarget to
	0, instead of -1 (screen), that was causing old ghosted
	enemies to be invisible.
	( Timelord, 12th October, 2019 )

DEVLEVEL Changes
Changed the minimum DEVLEVEL required to log Events, Script Errors,
and Script IDs from > 1 to > 0.
	( Timelord, 10th October, 2019 )

ZCL 2.7.7
Move RomView into a sub-directory and bundle old fonts.dat
and allegro.lib with it so that it runs in 2,55.
Change code from commandlibe process to exec process.
	( Timelord, 910h October, 2019 )

Fix: Don't eat preexisting zc.sav if the zc.cfg file line is blank!
	Sorry all users. :/
	( Timelord, 10th October, 2019 )
	
ZCL 2.7.6
Added Load Module (.zmod) butons to both the ZC Player and
the ZQuest Editor config tabs. 
	( Timelord, 9th October, 2019 )

ZCL 2.7.5
Split up Theme/Colour settings for ZC Player and ZQuest
Added / replaced some tab icons (drivers, colours tabs, notes tab).
	( Timelord, 9th October, 2019 )
	
ZCL v2.7.4
Added User Theme Load Button, User Theme lister selection, 
	and User theme preview image (using Legacy theme, small mode).
	( Timelord, 9th October, 2019 )

Added numpad PLUS and numpad MINUS with CONTROL or SHIFT to the last commit.
The keys used to change the current CSet (- and =, but let's call them MINUS and PLUS)
	now allow changing the Level Palette by +/-1 or +/-16, in addition
	to working on CSet as before.
	
	Unmodified Minus:	Reduce CSet by One
	Unmodified Plus: 	Increase CSet by One
	Shift Modified Minus:	Reduce Level Palette By One
	Shift Modified Plus:	Increase Level Palette By One
	Control Modified Minus:	Reduce Level Palette by 16
	Control Modified Plus:	Increase Level Palette by 16
	
Added the following hotkeys:
	% :Set Current Level palette to 15 (0 to 14 were previously possible). 
	( Timelord, 9th October, 2019 )

Fixed lvl colours not pulling an average for palettes enfing in E or F.
	( EmilyV, implemented by Timelord, 9th October, 2019 )

Fix: Clear RenderTargets set by Previous Quest
	( Timelord, 9th October, 2019 )

//Alpha 35
Theme: Added theme files:
	MooshMood: themes/mooshmood.ztheme
	Ice : themes/ice.ztheme
	Legacy : themes/legacy192.ztheme
	DarkBlue : themes/darkblue.ztheme
	Hotdog : themes/hotdog.ztheme
Feat: Allow .ztheme File to be Separate
	Added theme_filename string to [Theme] section in zc.cfg and in
	zquest.cfg. If set to a valid configuration file, the theme configs will 
	load from the specified file.
	I'm reserving '.ztheme' and '.zskin' for this file type, ZC Theme skins.
Added User Themes
	Added the ability for the user to define custom GUI themes for
	ZC Player, and for ZQuest. The GUI set for the user theme is '99'.
	The values for the theme are set in zc.cfg under [Theme] for ZC Player, and
	in zquest.cfg under [Theme] for ZQ Editor.
Updated Classic.zh to v1.11
	Added ffc script ScreenGuyMusic and fuction: bool __classic_zh_ScreenGuyAlive()
	Added arg for BossExplode ffc for enemy ID override as D7
Display a grid in the mapscreen selector box in ZQ if the current
	map is an overworld palette rank (0x00, 0x10, 0x20 ...).
	( Timelord, 8th October, 2019 )

//Alpha 34
Files: Add WinFlex/WinBison to ./other and unco,pressed al-gif to Repo.
	Added the CORRECT versions of WnFlex and WinBison to the repo so that
	anyone who wants t compile with MSVC has the files immmediately.
	Added ./other/algif_1.3 uncompressed to study the gif anim code. 
Parser: Add Pascal '<>' 'NOT EQUAL' Token.
npc->Submerged should now also return true if Zora enemies
	are underwater, and if Wallmaster enemies are inside walls.
Move sprite->Submerged() to enemy::Submerged()
Fixes to npc->Submerged()
Add Sprite->Submerged:
	Added bool npc->Submerged() to ZScript.
CMake: Add bool option 'Want ZScript Compiler' (On by Default)
	( Timelord, 5th October, 2019 )
	
Added QRs to enable/disable new DMap Subscreen Slots for testing. 	
Parser Optimizations on if(false) and similar:
	Shortcuts on `if`, `unless`, `if/else`, `if/unless`, `while`, `until`, and `for`
		These will reduce the total ZASM linecount, as well as cause slight speed optimization,
			when a compile-time constant is used for a condition.
		Note: `for` will still run the initializer, even if it's condition is a constant false,
			as the initializer is run before the condition is checked for the first time.
	( EmilyV, 5th October, 2019 )

Feat: QRs to run DMapActive/PassiveSubscreen slots during active subscreen.
Feat: Scripted Subscreen slots (in dmapdata) 
	Slot: Passive Subscreen (dmapdata)
	-runs constantly while on a dmap
	Slot: Active Subscreen (dmapdata)
	-runs continuously, like OnDeath, when you activate the subscreen.
	-REPLACES the normal subscreen, running INSTEAD of it.
	-Will still run with `Game->DisableActiveSubscreen==true`. To prevent this,
		simply add `if(Game->DisableActiveSubscreen) Quit();` at the start.
	New InitD (dmap->sub_initD[8])
	-Shared between these 2 new slots	
	Optimization: Changed `dmapscriptInitialised[512];` to `dmapscriptInitialised;`
		as it was wasting 511 bytes that it didn't need.
	( EmilyV, 30th September 2019; MERGED 5th October, 2019 )


//Alpha 33
Made all screen guys viewable in the ZQ Editor. Editing the, as yet, does nothing. 
	( Timelord, 5th October, 2019 )

Fix: Revert a Check for .SAV File Filenames
	Fixed incorrect handling of save file filename checking 
	that caused a bug where the save file was always loading the hardcode again.
Added ZCL-changelog.txt to packages.
Included ZCL v2.7.3, with a new button to select the .SAV FILE.
Added a config string for the filename of the SAVE file to zc.cfg.
	( Timelord, 3rd October, 2019 )

Added enum defWpnSprite for default weapon sprite ID values.
	Added FFCore.getWeaponSprite(int)
	Added LWpnH::getWeaponSprite(*weapon)
	Added EWpnH::getWeaponSprite(*weapon)
	CreateLWeapon and CreateEWeapon now call getDefWeaponSprite().
	!!! Blank/Newweaponsat present are coded to use sprite 45.
	!!! We will need to reserve unique sprites for each, plus add a set of 
	!!! rules for default sprites for each script weapon type
	!!! and a rule that created weapons use a BLANK sprite (45) at all times.
	( Timelord, 3rd October, 2019 )

//Alpha 32
Allow Selecting CSets 12 to 15bin the Tile Editor
	( Timelord, 2nd October, 2019 )
	
Fixed all instances of Mouse Y positioning (read and write)
	by script having inappropriate values during Quake screen shaking.
Fixed copying/pasting mapscreens missing newmapscr data
 such as script data.
	( Timelord, 30th September, 2019 )

You can now save the currnt (single0 palette in the level
	palette editor, then use the grab function to load it in nother quest
	or another palette index.
File: Add Abstract for Combo Script Implementation
	( Timelord, 27th September, 2019 )

Fixed screen palette not properly wrappping from,
	0 to 511 with < and > hotkeys.
	( Timelord, 26th September, 2019 )

Updated zscript.txt and fixed datestamp on std_functions.
std.zh: Added void SetEquipment(int a int b).
Fix: Writing Link->Equipment now works properly.
Files: Append Addons to ./output/Addons/ 
	Addons:
	DXGL
	MSVC10 C++ Runtime (for DXGL)
	AntiMicro
	ZCL
Added 'Clear' buttons to Joystick Button and Joystick Direction
	panels for every JS Button.
	The user can now clear them to 0 as desired.
Reducing the quest mapcount now also clamps the mapscreens
	that the nine panel buttons (map_page[9]) point to, so that you cannot
	visit an invald map (and thus crash ZQ).
	( Timelord, 23rd September, 2019 )

Corrected npc->Attributes[] and ffc->Flags[] in zscript.txt
Updated ZScript.txt with int Version and notes on GetRenderTarget.
Docs: Updated ZScript.txt with GetRenderTarget().
	This function is in 2.53 as of R3.
Added hotkeys for Save and 'Save As':
	Control+S : Save
	Control+Shift+S: Save As
	S: onString (edit screen string)
	( Timelord, 22nd September, 2019 )

std: Added CMB_QUADRANT_* constants for combo solidity/CSet2 mask bits.
	( Timelord, 21st September, 2019 )

Scripts: Added Example Keyboard Scripts
Fix: Compiler audio vars now properly sied to byte.
Compiler SFX now end as soon as their dialogue exits,
	which also helps to prevent  a crash if that sfx is playing while
	ZQ exits.
Added the following config ints for ZQ Editor Compiler
	Audio settings (in zquest.cfg):

	compile_success_sample = 20
	compile_error_sample = 28
	compile_finish_sample = 34
	compile_audio_volume = 200
Add audio alerts to the Compiler in the ZQuest Editor,
	at the following three prompts: Ha;t onError, Script Copilation Success,
	Script Assign Success.

	T/B/A, the option to mute them again.
	( Timelord, 19th September, 2019 )

Default Module: Add New Assets File (from Binx)
	( Timelord, 17th September, 2019 )

Add file information/version/date to Weapon Dir Control Demo Script
Item Script: Add Passive Weapon Control Demo Script
Fix: Fixed a typo in exploderang demo script.
Add extra +2 damage to explosion because brangs are usually power 0.
LWeapon Script: Add Exploderang Demo LWeapon Script File
std.zh v1.6003
	Fixed WeaponTypeToID()
	Added nstants for version year, month, day, hour, and minute.
	Added functions: __stdzh_getVersionDate(), __stdzh_getVersionTime().
	Flipped Superbomb Blast and Unexploded Weapon in WeaponTypeToID.
	( Timelord, 16th September, 2019 )

Updated classic.zh to v2.10
	Moved things into a new namespace, classic_zh
	Renamed old identifiers to use namespace.
	Added version, date, and time data.
	Added Z2 Lantern script.
	Refactored older scripts for performance.
Ensure that when reading an SRAM file, we ABORT of the
	SRAM file header version is GREATER than the SRAM_VERSION of the
	current running ZC build.
	( Timelord, 15th September, 2019 )

Fix: bitmap->FastCombo() param read offset
	Using the passed CSet for the combo isn't gonna work.
	( EmilyV, 12th September, 2019 )
	
Chore: Comment out some logging
Docs: wording
	( EmilyV, 11th September, 2019 )
	
Added 'bitmap->ClearToColor(int layer, int color)' to ZScript
Fix: Fixes to ItemA and ItemB ZScript instructions
std_constants: Add MIN/MAX_ITEMDATA
	( EmilyV, 9th September, 2019 )

Further clamp moldorm on overworld screens.
Hack: Prevent Moldorms from getting stuck on the bottom of the screen and pacing.
	( Timelord, 9th September, 2019 )	

Fix: 'for()' scoping
	Needs to store a scope of its' own, the same way ASTBlock does.
	( EmilyV, 4th September, 2019 )

Added dmapdata->ID
	his value is read-only and returns the value of the dmapdata pointer;
	or the current DMap (this) in dmapdata scripts.
Copied the code to clear dmap script data, refinfo,
	purge arrays, and clear initialised status from Link::dowarp
	to FFCore.warp_link()--used by WarpEx() and Warp SCCs.
Fixed the 8 d args in dmapdata scripts not always veing loaded
	during normal warps.
	( Timelord, 4th September, 2019 )

Added FileSystem->FileExists(char32[] path)
	As 'FileSystem->DirExists()', but, for files instead of directories.
	Example: 'FileSystem->FileExists("zscript.txt")'
Fix: Scoping error in BuildVisitor.cpp
	This fixes an error causing #option to not fully work properly inside functions.
	( EmilyV, 2nd September, 2019 )
	
//Alpha 31
Converted int SideWarpOverlayFlags to bool SideWarpOverlay[4]
	and int TileWarpOverlayFlags to bool TileWarpOverlay[4] for
	both Screen-> and for mapdata->.
Changed int Screen->NumFFCa to bool->Screen->NumFFCs[33]
	and int mapdata->NumFFCs to bool mapdata->NumFFCs[33].
	* The number of ffcs set up on the current screen.
	* Index [0] is unused, to match internal ZQ Editor FFC numbering.
	* Thus, this returns true/false for indices [1] through [32],
	* which equate to FFC IDs 1 through 32 on the current mapscreen.
Deprecated Screen->CSet and mapdata->CSet in favour
	of Screen->Palette and mapdata->Palette.
Added alts. CarryoverMpa and CarryoverScreen for NextMap
	and NextScreen on Screen-> and mapdata-> pointers, and documented
	what they do in ZSA.txt.
Removed erroneous vbound for ITEMPSTRINGFLAGS and ITEMOVERRIDEFLAGS
	that were clamping them to (msg_count-1) caused vby a copy/paste error.
	( Timelord, 1st September, 2019 )

Added int Screen->SideWarpReturnSquare[4], int Screen->TileWarpReturnSquare[4], 
	int mapdata->SideWarpReturnSquare[4], and int mapdata->TileWarpReturnSquare[4],
	to get/set the return square used by tile or side warps as their return point.
	( EmilyV & Timelord, 31st August, 2019 )

Updated std_constants.zh with the new, and some older, but missing, WARP_FLAG_* constants.
Added bool Hero->NoStepForward.
	If set true, the player will not take two steps into NES dungeon rooms.
	This value is reseto false, every time that the hero sprite is initialised,
		and thus, should be written ideally in the hero init script.
	Future versions may change when this is cleared.
Added warp flag WARP_FLAG_NOSTEPFORWARD to Hero->WarpEx().
	If set, then for this single warp instance, if the dest screen is a dungeon type, the 
	player should not take an extra two steps on entering the room.
	( Timelord, 30th August, 2019 )
	
Update fade out to have slightly more time on black
	( EmilyV, 29th August, 2019 )
Added Guardian.zs to included npc scripts. 
Added int Screen->GetRenderTarget();
	( Timelord, 29th August, 2019 )
	
Updated std_constants enum for fade types.
Add new wipe type: FadeBlack, which works similarly to tint to create a smooth fade to black.
Added "Screen->ClosingWipe()", to call a closing wipe
Added "Screen->OpeningWipe(int shape)" and "Screen->ClosingWipe(int shape)"
	as overloaded functions which allow you to specify the shape,
	as opposed to it being picked via which QRs are on.
Fixed a timing issue with F6 menu scripts and "Screen->OpeningWipe()", which lead to invalid ZASM errors.
	( EmilyV, 28th August, 2019 )
	
Docs: Add Version Semantics & Logic Diagrams for future version planning.
	( Timelord, 27th August, 2019 )

//Alpha 30
Refactor: npc->Knockback()
	Now scripted knockback is entirely separated from engine knockback, no longer
		tied at all to 'enemy::slide()'. It also can go in 8 dirs,
		and takes a 'speed' parameter.
	Changed ZScript access:
	removed bool NoKnockback;
	added bool NoSlide; - no engine knockback
	added bool NoScriptKnockback; - prevent ->Knockback() calls
	param update: bool Knockback(int time, int dir, int speed);
	removed int KnockbackSpeed;
	added int SlideSpeed; - speed for engine knockback
	return update: bool Slide(); -> int Slide(); (0 for none, 1 for scripted, 2 for engine)

	TODO: Diagonal knockback will dead-halt when hitting a wall,
		instead of carrying momentum in the other direction.
	i.e. Up-Right hits right wall, does not continue moving up
	( EmilyV, 25th August, 2019 )

Added 'Utilities' with thtree third-party add-ons. 
	The following third-party (add-on) utilities are now bundled with ZC 2.55:

	///////////////////////
	/// Allegro Grabber ///
	///////////////////////
	Used to edit Module Datafiles (e.g. qst.dat).


	///////////////////////////
	/// Allegro Font Editor ///
	///////////////////////////
	Used to create, or edit Allegro 4 Bitmap Fonts, used in
	the Module Fonts Datafile (e.g. fonts.dat).


	/////////////////////////////
	/// Allegro Sprite Editor ///
	/////////////////////////////
	An enhanced utility for editing sprite sheets used by ZQuest.
	This allows editing full tile pages with six levels of oom,
	operating on more than one tile at a time, while preserving
	the Quest palettes of the image, in a variety of formats.
	( Timelord, 24th August, 2019 )
	
	
Feat+Fix: 'npc->KnockbackSpeed', knockback collision checks 
	Added 'npc->KnockbackSpeed', representing the number of pixels per frame
		an enemy being knocked back will move. Range 0-255 (byte)
	Fixed some collision issues with knockback; most notably being unable to knock enemies
		into the upper row or leftmost column (regardless of qr_NOBORDER).
	-This is revertable via 'qr_OLD_ENEMY_KNOCKBACK_COLLISION'
		-> "Old Enemy Knockback Collision", a compat rule
	Modified a section of how knockback words based on 'KnockbackSpeed';
		an enemy will perform a solidity check for every 8 pixels it moves,
		to prevent clipping into/through walls at high speeds.
	-Perhaps something similar could be adapted to prevent high step enemies from
		walking through walls?
Feat: 'npc->NoKnockback' and 'npc->Knockback()' 
	'bool npc->NoKnockback', if set true, prevents knockback.
	'npc->Knockback(int time, int dir)' will knock an enemy back.
	Both have some sanity checks for keeping enemies on-grid.
	( EmilyV, 24th August 2019 )

It also has many other sprite animation/creation features.

Fixed two polymorphism oversights:
	Added ePatra::defendNew() and ePatraBS::DefendNew()
	as virtual class functions.
	Patras weren't using the newe defend system, and were instead
	calling the old ::defend() function, and getting improper ret
	values. This caused the core to be vulnerable prior to killing 1
	the orbiting rings, and this should fix that issue.

	Fixed Dodongo showing rubbish tiles on death.
	Fixed Gleeok body not flashing on hit,
	Fixed Gohma leaving legs behind on death,
	Probably fixed Ganon flash issue.
	( Timelord, 23rd August, 2019 )
	
Parser: Allow pointer types to be used in conditionals
	if(), unless(), while(), until(), for()'s test, and Ternary's condition,
	now all accept Untyped input, so that pointers can be read to check
	if they have been initialized (similar to how '!' already does this)
Fix: Items ignore script frame-change 
	Items with 0 frames set in their itemdata when they were created would
	ignore all further changes to their frame number.
	Compat QR
Fix: Hardcoded black UI Elements
	"Preview Text", from pressing "X"
	Small mode bottom-panel text
Fix: 'npc->ScriptFlip' missing '/10000'
	( EmilyV, 23rd August, 2019 )
	
Feat: Weapons live 1 frame longer (qr) 
	qr_WEAPONS_EXTRA_FRAME -> "Weapons Live One Extra Frame With WDS_DEAD"
	With this rule on, weapons get their own "last_hurrah" style life extension.
	This means that scripts can read '->DeadState==WDS_DEAD' as true for one frame,
		instead of it never being true.
	This allows for weapon death effects to occur easily from their scripts.
Feat: npc->Immortal 
	An NPC with this script-only flag set true will NOT die when it's HP falls below 0.
	This can allow scripts to revive it, or run death effects, as they wish.
	( EmilyV, 22nd August, 2019 )
	
Fix: Spells on Sideview Ladders 
	Whoops, spells wouldn't cast while climbing!
	Also cleaned up the 'CANFORCEFACEUP' macro
Fix: 'Always Face Up' on ladders, conflict with weapons 
	Only swords were apparently working with my fix. This new fix should allow ALL weapons
	to be fired in ANY dir, despite you being facing up, so long as you have the dir held
	when you press the weapon button.
Fix: Bumping head uses bigHitbox with 4-way movement 	
	For some reason, 4-way movement treats Hero as if BigHitbox=true in sideview,
	regardless of if it is or not. This makes this consistent, and can be fixed
	with a SINGLE compat-rule later, in both locations, instead of needing 2.
Fix: Hitbox size for sideview ladders 
	Slightly altered the calculations for grabbing ladders, and accounted for
	bigHitbox. Now, Hero can hold onto a ladder with any part of him that would
	be applicable for solidity checks, and ONLY those parts.
	This fixes some minor weirdness with certain combo arrangements.
Feat/Fix: Sideview Platforms Down+Jump falling, Ceiling Collision
	QR: "Press 'Down+Jump' to Fall Through Sideview Platforms"
This enables falling through platforms by using the Roc's Feather
	while holding "Down".

Fix sideview ceiling collision. There were ALL SORTS of issues,
	including clipping slightly into the ceiling,
	and bumping your head too early.
	-Use compat rule "Old Sideview Ceiling Collision" to disable this fix.
	Auto-enabled for old quests.
Chore: Mark Off-Grid flag "(WIP)" 
	( EmilyV, 21st August, 2919 )
	
Update refInfo + Timestamps, adding comboidref to refInfo for combo script functions
	such as X(), Y(), Layer(), Position(), and ID().
	( Timelord, 21st August, 2019 )
	
//Alpha 29
Fix: Incorrect flag in Classic and Default Module for Scripted Hookshot
	to bundle with final A29 build.
	( EmilyV, and Timelord )
Feat: Hero->Climbing
	ZScript access to 'Link.(s/g)etOnSideviewLadder()'
	Also, the docs to go with.
Feat: Sideview Ladders and Platforms
Feat: Sideview Platforms, some QRs for Platforms/Ladders 
	Added rules:
	qr_ITEMS_IGNORE_SIDEVIEW_PLATFORMS - As it says, items fall through ladders and platforms
	qr_DOWN_FALL_THROUGH_SIDEVIEW_PLATFORMS - Pressing down will make you fall through platforms
	qr_SIDEVIEW_FALLTHROUGH_USES_DRUNK - The above rule will respect Drunk when checking for Down
	qr_DOWN_DOESNT_GRAB_LADDERS - Down will only grab ladders if you are not in mid-air
	Enemy BFlag - Ignore Sideview Ladders/Platforms - As it says, enemies fall through ladders and platforms

	Fixed Always Face Up on Sideview Ladders rule:
	Can swing sword/etc in any direction regardless of rule, as in LA.

Feat: QR for Always Face Up on Sideview Ladders 
	If enabled, 'Hero->Dir' will be forced to 'Up' while grabbed onto a sideview ladder.
Added Sideview Ladders
	Flag 161 is now 'mfSIDEVIEWLADDER', GUI name '161 Sideview Ladder'
	This flag, placed or inherent, on layers 0, 1, or 2, will function as a sideview ladder.
	Enemies, Items, and Hero can walk atop the top ladder.
	-If multiple ladders are stacked vertically, only the TOP one can be walked on.
	-The combos used for this should be NON-SOLID.
	Additionally, Hero can CLIMB the ladder. Pressing down while standing on top of one,
		or pressing up/down anywhere on the ladder, will grab it. While climbing on the ladder, you
		can go in any direction, though if you walk off of the flag, you will stop holding on.
	Using the Roc's Feather, or script-setting 'Hero->Jump', will detach you from the ladder, and perform a jump.
	Also, fixed a minor issue with large sideview enemies, so that they properly can walk.
	( EmilyV, 20th August, 2019 )

Feat: Add 'Clear Directory Cache' menu option to ZC Player
Fix: ZQuest, Clear Quest Path
Change menu label: 'Screen>>>Room' to 'Screen>>>Room Data'
Fix room type text change occurring on wrong menu entry (enemies, not catchall).
	( Timelord, 16th August, 2019 )

The following changes were made over a period of several weeks in independent branches, and merged together on 14th August, 2019:

Merge: 2.55-largeEnemy-Solidity 
	Attempt fix: Large enemy solidity checks
	Attempt fix: Large enemy solidity checks (ef2d352)
	Merge pull request #433 from ArmageddonGames/2.55 8780f30
	Fix: Normal size enemies use old m_walkflag behavior 18c1c3b
	Merge branch '2.55-largeEnemy-Solidity' 3fd8483
	Revert: Some new walkflag stuff 60977ff
	Merge pull request #434 from ArmageddonGames/2.55 8df0884
	Fix: Broken top-half solidity, large enemy stuff 8486308
Fix: Handle diagonal movement checks for large enemies	
	( EmilyV, 6th->14th August, 2019; merged 14th August, 2019 )
	
Merge: venrob/2.55-tint-getter
	Add getTint(int color) function to get the tint sum from the array it is stored in
	Add enum for accessing the indexes of the array
	Commit: 93f5fbe
	(Found this branch from a while ago.... not totally complete, but, draft PR'ing so it isn't forgotten forever.)
	( EmilyV, Merged 14th August, 2019 )
	
Merge: 2.55-typedefScoperes 
	Parser: Allow scoperes of types
	Commit: a0ae879
	Array literal change: (int[5]){} -> <int[5]>{}
	Types can be scoperes accessed now.
	Script Types have NOT yet been changed!
	Known minor error- will use local type automatically even if there are conflicting types in 'using'd namespaces. Fix priority: Very Minor
	( EmilyV, 2nd August ->14 thAugust, 2019; Merged 14th August, 2019 )
	
Merge: 2.55-allowRaftingAction
	Feat: Allow `Hero->Action = LA_RAFTING`
	Commit: 6431d52
	Only allowed if there is a raft flag ahead
Add new script and data types:
	Datatypes: 'file', 'subscreendata'
	Scripttypes: 'combodata', 'subscreendata'
	Types do nothing yet, but are implemented. Script types have their `this` set to the datatype of the same name.
	( EmilyV, Merged 13th August 2019 )
	
Fix: Add compat QR for allowing rafting to preserve old behavior; commit: 4b2de97
Fix: Handle diagonal movement checks for large enemies
	( EmilyV, 12th August 2019 )

Pruned `Quest->Rules->Scripts`, and associated data, as it is unused/hidden anyway.
Added a TABPANEL to `Quest->Rules->Backwards Compatibility`
Added `qr_BROKEN_ASKIP_Y_FRAMES` ("Broken ASkipY Animation Frames") to compat rules, now that there is space
Added a TABPANEL to `ZScript->Quest Script Settings`; sorted into 5 tabs, by type of rule.
Fixed typo: "IetmSprite" -> "ItemSprite", for ASM import option
	( EmilyV, 9th August, 2019 )
	
Fixed screenshot colours when taking a screenshot in ZC Player, via the menus.
	( Timelord, 9th August, 2019 )
	
Fixed Combo Animations with SkipY
	The formula for calculating when to reset a combo animation to the start did not properly account for ASkipY, causing it to use the wrong number of frames.
	This has been fixed, though 'qr_BROKEN_ASKIP_Y_FRAMES' being enabled will cause it to use the old behavior.
	This QR is NOT yet in the GUI, and needs to be added to the second tab of 'Quest->Rules->Backwards Compatibility', when that gets it's tabpanel.
	( EmilyV, 8th August, 2019 )
	
In < 2.55a27, if you had an A+B subscreen, L and R didn't shift
through inventory.
	Now they **do**, unless you disable that behaviour.
	For the sake of compatibility, old quests with the A+B subscreen rule enabed
	now enable the disable L/R item swap on load.
	( Timelord, 7th August, 2019 )
	
Added to 'Screen->' and 'bitmap->' 2 new functions:
	'->DrawTileCloaked(int layer, int x, int y, int tile, int blockw, int blockh, int flip);'
	'->DrawComboCloaked(int layer, int x, int y, int combo, int tilewidth, int tileheight, int flip);'
	These will draw the appropriate tile using 'overtilecloaked16()'; a distortion effect.
	Distortion effects have issues with sub-bitmaps, so features such as scale, rotate, and transparency are incompatible with cloaked drawing.
	Distortion effects also ignore CSet, thus why that argument is not present.
	( EmilyV, 7th August, 2019 )
	
Remove shadow vars from enemy::m_walkflag params	
Added sanity check if ( ((unsigned)id) < MAXGUYS ) to reads into guys structs.
Add more clipping prevention to large enemies, ...and diagonals. 
	This seems to work far better but enemies can still occasionally clip
	through solid combos, and they seem to be bound too close in toward the middle of the screen
	from the left edge of the screen.
Try to add multi-pixel solidity checks to bool enemy::canmove
Fix: More checks for large enemies.
	Added some bounding to m_walkflag based on dir, but we need
	a routine for can_walk stuff that checks between points of the corners.
	Large enemies can still clip through solid stuff, quite easily.
Move m_walkflag into enemy class. 
	This gives it access to the current enemy internal vars, so that
	we can check txsz and tysz or hxsz / hysz for being on screen
	or touching solid combos.
	( Timelord, 6th August, 2019 )
	
Fix: Centre EWeapons for Large Enemies
Feat: Add H/V Flip Context Menu Entries to Tile Editor
Feat: Add options to Tile Editor Context Menu 
	Added 'Overlay' and 'Create Combos' to the Tile Editor
	right-click (contextual) menu.
	These perform OverlatTile, and Mass Combo creation, respectively.
Fix: Crash on ZQ Context Menu>>>Screen Submenu
Fix: Set Whistle Pols Voice Defence to OKHO 
	Force defense[edefWhistle] = OKHO for Whistle Pols Voice
	npc in versions < 2.55 Build 47, on quest load.
Condense and Rearrange ZQ Menus to fit Small Mode
Used Smaller Context Menu in Small ZQ Mode
Marked where config ints can be used to modify the Contextual Menu
Condense ZQuest Contextual Menu
	( Timelord, 5th August, 2019 )
	
The arrays that held combo animation tile data were sized to word,
	not int, and thus, combo animations would not work properly if the tile was
	> 16b.

	I've resized all of these arrays to int, and thus, they can now hold tile values
	large-enough to work properly from the extended pages.
Fixed Mass Combo Creation. 
	The bug was cased by edit_combo()
	returning the incorrect value, after old modifications to its DIALOGUE
	array, when we added Combo Attributes..
Fixed Give/Take Item SCCs failing to trigger passive item scripts, or disabling them.
Fixed array[9] passed to Link->WarpEx ignoring the last index value.
Feat: Add refInfo object fileref, and REFFILE for file datatype.
Parser: Added token 'equals' as alt for '=='
Docs: Added ffrules.txt v1.0
Chore: Correct typos in Item Rules
std: Update std_constants with new ffrules enum.
	( Timelord, 4th August, 2019 )
	
Change std::Blink() to std::blink()
std.zh - Add namespace std, and bool Blink.
	( Timelord, 3rd August, 2019 )
	
Fix lexical error in std_constants
Added the following to std_constants.zh:
	//Default array sizes
	const int INIT_D_SIZE			= 8;
	const int INIT_A_SIZE			= 2;
	const int MISC_SIZE			= 32;
	const int NPC_ATTRIBUTES_SIZE		= 32;
	const int ITEM_ATTRIBUTES_SIZE`		= 10;
	const int GAMEMISC_SIZE 		= 32;
Fix syntax err in typedef docs (ZSA.txt)
Parser: Add Pascal Style ASSIGN token (:=)
Parser: Added '..' as alt token for '::' (namespace scoperes)
Try to fix the pointer used by EditScreenScript(), that may have been causing Screen Script
	data to vanish at random.
	( Timelord, 1st August, 2019 )
	
Feat: `global_wait` for each slot, multiframe onLaunch 
	`global_wait` is now bitwise, matching `g_doscript`
	`onLaunch` scripts now can run for multiple frames, in the same style as onF6Menu and onDeath scripts. 
	As a side effect, F6 cannot be used during them.
	This script slot is now set up perfectly for use for quest Title Screens.
	Removed a trace that was left behind during F6 slot dev.
	( EmilyV, 1st August, 2019 )
	
Fix: FFRules[] setter broken 
	When reading a bool, do NOT use `value/10000`, 
	as this will break completely with `true==0.0001` compiler option on, as `1/10000`, 
	integer division, is `0`.
Feat: Add 'Game->SaveAndQuit()' and 'Game->SaveAndContinue()' 
	These do as their names say. They benefit over doing 'Game->Save(); Game->End();' 
	(or 'Game->Save(); Game->Continue();' respectively) in that they will save the game AFTER 
	the execution of the global script onExit.
	If an onExit script is important to the quest, these may be neccesary over the prior options 
	for scripts to function as expected.
Feat: Hero OnDeath matches Global onF6Menu 
	These script types now run with similar functionality to each other, 
	for consistency in menu scripts.
Also added `qr_ONDEATH_RUNS_AFTER_DEATH_ANIM`, which does as the name says. 
	With the correct toggling of this rule via script, it is possible to cause onDeath to run twice in a row.
Fixed 'Game->Continue' skipping exiting code, including passive item script cleanup (could cause CRASHES), and skipping the global script onExit's execution.
Moved Hero script onDeath's execution from 'link.cpp' to 'ffscript.cpp', runOnDeathEngine().
Fixed 'doScriptMenuDraws()' not applying the playing_field_offset to layers other than 7.
Moved `initZScriptLinkScripts()` into FFCore.
Fix/Feat: Fix, and FINISH, F6 scripts. 
	Also fix:
	`SKIPF6` now refs `qr_NOCONTINUE`, instead of separate thing
	`LinkClass::gameover()` now named `LinkClass::heroDeathAnimation()`, 
	because `gameover()` + `game_over()` is not good identifier names.
	Remove several duplicate `put_passive_subscr()` calls; `draw_screen()` already calls this!!!!
	`Game>>>End Game...` now calls F6 script.
	( EmilyV, 31st July, 2019 )
	
Fix Bounding Error on itemdata 
	'0' is a valid writable value, but VBound was 1-255. 
	This prevented making an item NOT have a script(either pickup or action).
Fix: Delayed F6
	FFCore.runF6Engine is now called from advanceframe(), unless the third parameter is passed as 'false'.
	This should be false for Link OnWin/OnDeath, as well as the F6 script itself.
	This is ALSO false for LinkClass::scrollscr(), as that needs custom F6 handling to draw the scrolling screen properly. This is handled via 'FFCore.runF6EngineScrolling()'.
	This still needs testing.
	( EmilyV, 30th July, 2019 )
	
Fix: Cannot F9 during Hero OnDeath
Implement F6 script via unsigned long GameFlags, add QR 
	qr_OLD_F6, automatic for quests <0x255 build 47; reverts all F6 behavior, 
	including prevent F6 script from running.
	F6 running moved to `FFCore.runF6Engine()`, callable from wherever we want.
	Add check to prevent wasting a frame running an empty F6 script
	Allow F6 from main menu to run script (but NOT `File->End Game`... should this as well?)
Feat/Refactor: Global Scripts 
	Each global script slot now has it's own stack/refinfo/doscript (bit)
	Added Global Script onF6Menu, runs when F6 is pressed, or 'Game->ShowContinueScreen()' is called via script.
	During this script, other action is halted. This script will run for multiple frames similarly to Link OnDeath and Link OnWin. If you cancel out of the menu (exit, with qr_NOCONTINUE==true,without setting Quit) then the game_loop and global active will resume right where they left off.
	Todo: Global InitD[], further testing of F6 scripts
	( EmilyV, 29th July, 2019 )

Feat: New Global Slots
	Renamed `onContinue` to `onSaveLoad`, for clarity
	Added `onLaunch`; runs after onContinue, regardless of `firstplay`
	Added `onContGame`; runs after `Continue`, after Link Init, just before opening 
	wipe (qCONT; Game->Continue(), F6->Continue, Game Over->Continue)
Fix: Link Init runs in Link.init() 
	Now runs on F6->Continue
Fix: Mapdata->Layer*[] throw errors on valid index 
	mapdata->Layer*[6] represents layer 6's data, but, throws errors when attempting to access.
	Fixed the index bounder on these getters.
Fix: Large Enemy Tiles 
	There should be parentheses there. Order of operations, ya know?
Fix: Itemsprite InitD[] should NOT * or / 10000 
	InitD is direct value, there should be no conversion. 
	This would truncate any decimal, as well as cause the parameter variables to be /10000 what they should be.
	( EmilyV, 28th July, 2019 )

Fix: Crash when writing negative combos 
	When writing a combo via script, now VBound between `0` and `MAXCOMBOS`.
	Previously, `Screen->ComboD[foo] = -1;` would crash ZC.
	( EmilyV, 26th July, 2019 )
	
Fix: Bounds check for mapdata->D[] 
	Corrected the bounds check for mapdata->D[8].
	The BC was checking < 9, not 8.
	I also simplified it with an unsigned cast.#
	**We need to go through ffscript.cpp and convert all if > 0 && < n
	checks to 'if ( (unsigned)v) < n )' to reduce overhead.
Fix: mapdata->D[] 
	Fixed offsets for mapdata->D[8] to account for it
	only working on normap mapscreens.
	Based on how SCREENSTATED works.
	( Timelord, 26th July, 2019 )
	
Update file date on std_constants and ensure consistency.
Added int Game->ZScriptVersion to ZScript. I made this r/w, with 
	the ZASM instruction ZSCRIPTVERSION so that it is possible to 
	modify ZASM scripts to get the current version, write a version to 
	use for the script, and set back the correct version when the
	script exits.

Versions of Zscript prior to 13 are now shown, rather than -1.
	NOTE however, that this merely reflects the constant V_FFSCRIPT used
	by ZQ when that quest was saved, and it does not reflect when it was truly
	last compiled (13+ do), but it is better than a generic '-1' and
	may prove useful.

	Linked all checks for this through 'FFCore.quest_format[vLastCompile]'.

Game->Beta now returns a negative value if the build is an ALPHA
	**and** the current compiled ZScript version is >= 13.

The internal ID of the ZScript version is stored when compiling scripts,
	during compilation. The value is stored in the QMisc struct.

	The 'Compile Script' dialogue displays the last language version used in a quest.
	Versions prior to 13 read as -1 at present.

	This feature should be used with GREAT CARE as individual scripts do not
	have this metadata and obviously, there is no way to determine in
	what build an ASM script was compiled.

	Build is now 47. Updated build date.
	( Timelord, 25th July, 2019 )

Fix: NO_ERROR_HALT crash with array accessing
	`arr[NONEXISTANT_CONSTANT]` now no longer crashes.
	( EmilyV, 24th July, 2019 )
	
Corrected the behaviour of Audio->AdjustMusicVolume
	and ensure proper reset to user defaults on quest exit.
	( Timelord, 23rd July, 2019 )
	
ZCL: Segregated ZC Player and ZQ Editor GFX Drivers.
	Version is noe 2.7.0
Added confirmation/warning dialogues when shifting between
	fullscreen and windowed modes in both ZQ Editor and ZC Player.
Corrected label for 'Ex3/Ex4' shifts A-button items.
	( Timelord, 23rd ]commit may show 18th] July, 2019 )

std_zh: Update QR enum
	Number of QRs have been added since last update; need to be available for `FFRules[]` access.
	( EmilyV, 23rd July, 2019 )
	
Fix: Crash on invalid script type
	That needs to call `program.addScript`, as that's where the error is handled!
	( EmilyV, 22nd July, 2019 )
	
Fix: Port 'linkedItem' from 2.53, to fix wand crash
	Book ID is now stored on this new var, instead of miscellaneous[31]
	( EmilyV, 19th July, 2019 )
	
Feat: Add item->InitD[8] to ZScriptl which is this->InitD in itemsprite scripts.
Added linked_parent to item sprite subclass, init to 0 in its
	constructor, and moved the == eeGANON check to use the new var, instead of
	Misc31; as the latter can be overwritten by scripts.
Fix setter for MAPDATASCREENSTATED
This commit completes a series as follows:
	Fixed itemsprite script initD being populated with '0' by ensuring that
	the sprite initD was read by the item::item constructor from itemdata.

	Fixed screen script initD by ensuring that tmpscr->initialised was not set to 1 by
	loadscr() in maps.cpp; it should always be set to 0 by loadscr().
Fix screen script initD init points.
Deallocate screen script arrays and only set initD on loadscr()
Fix Game->MapCount offset by 1.
Fix getter for MAPDATASCREENSTATED
Fix: Set items.sprite->initD in constructor.
	( Timelord, 18th July, 2019 )
	
//Alpha 28
sts.zh: Vers now 1.6002; Added constants and enums.

Changelog: Added font height constants.
Added mapdata->FFCFlags[32] constant for Invisible to Lens
Added Link Sprite Type enum for Link->GetOriginalTile(linkspritetype,int dir)
Added enum for Game->Suspend indices.
	Note: Indices higher than susptSUBSCREENSCRIPTS aren't officially supported and
	exist purely for testing purposes.
	( EmilyV, Timelord, 14th->18th July, 2019 )
	
Fix Missing checks in isValidArray()
	Was not validating global arrays.
	( Timelord, 17th July, 2019 )
	
Active scripts were not being deallocated in time for Link's OnDeath script. Added 2 deallocation calls to handle this.
Link->OriginalTile was broken in GlobalSymbols.cpp, causing crash on every zscript compilation.
Added IsValidArray: Returns true (10000) if the passed array is valid, false (0) otherwise. Global function table.
Fix: Add qr_ALWAYS_DEALLOCATE_ARRAYS, handle link/global script deallocation
	Link and Global scripts SHOULD now deallocate arrays properly
	ALL arrays are now deallocated upon exit.
	If the qr_ALWAYS_DEALLOCATE_ARRAYS is unchecked, only the array deallocations of FFCs on screen transition from 2.50.2 will remain active.
Added deallocation calls to immediately after running collect scripts, as well as to the case that sets item_doscript to 0 if multi-frame QR is off.
	Also, changed my debug messages to `Z_eventlog`, as they are not always running from a script, thus `Z_scripterrlog` prints invalid metadata.
Set array ownership to be a struct, instead of byte, and allow any script type to own arrays, instead of just FFC scripts.
Add `FFCore.deallocateAllArrays()`, given arguments `scriptType, UID` will clear all array ownership from that script owner. Given no arguments, will clear ALL array ownership.
	Set up to call this from various places, including sprite destructors, and warping.
	Also, call this on `Quit()`/end of scope for ALL script types.
	This ensures that arrays are not leaked at runtime.
	!!Note: Still need to do more for Global, Link, and item scripts!!
	Added more params to weapon constructors in Link.cpp; so that their isLWeapon byte is set true, which is required to deallocate scripts in weapon::~weapon().
	( EmilyV, 17th July, 2019 )
	

//Alpha 27
Add Link->OriginalTile(linkspritetype spriteid, int dir).
Added a QR to prevent uncapping.
Added a QR to prevent swapping B button items on L/R button presses.
Added a QR to enable swapping A button items on Ex3/Ex4 button presses.
	( Timelord, 14th July, 2019 )


//Alpha 26
Fix: Spamming Item Scripts 
	Spamming a button item with a multi-frame item script will no longer
	cause the script to restart before it completes.
Add sanity guard on idata->RunScript(2)
Fix crashes with itemdata->RunScript
Fix: Start/Resume Passive Item Scripts on Link->Item = true
Updated qst.dat files for classic and default module with QRs appropriate to Alpha 26.
Fix some QR defaults when reading quests < 2.66 Build 46
Modules: Updated default quest with appropriate rules.
std.zh: Update version data, and file dates.
	Version is now 1.6001
Fix: Another change to the MOUSEY logic.
Should fix mouse cursor position reading incorrectly during quake.
	( Timelord, 14th July, 2019 )

Fix: Item scripts quitting improperly on Link->Item[]
	when they set themselves false, it cleared their stack. Stack clearing needs to wait a bit.
	Also fixed stack not being properly chosen for collect/non-collect scripts. (from Zoria)
Added MIDIOFFSET_ macros to zdefs.h, and applied them where useful.
	Fixed offset on r/w of Screen->MIDI, dmapdata->MIDI, and mapdata->MIDI
	Added MIDI_ constants to std_zh, for use with these
	...Perhaps the offsets could be cleaner, but, the values are just a mess in the first place. Why such odd offsets?
Removed extraneous error messages during bitmap blitting.
	Attempting to blit to `-1` or `-2` (screen and current render target respectively), was going to the `default` case, for user bitmaps, and thus printing extraneous error messages.
	The `-1` and `-2` handling has been moved inside the switch, now with their own cases.
	( EmilyV, 13th July, 2019 )

Change bit priority for if !FFCore.system_suspend[script] to 1st boolean param.
Add checks to see if script types are suspended.
	( Timelord, 13th July, 2019 )
	
Remove ZASM instruction GAMERESUME. We didn't use it.
Add check to see if npc scripts are suspended.
Add check to see if LWpn Scripts are Suspended
Rearranged the category values for Game->Suspend ton better
	organise them, and to put those that we may not include in a public build
	at the end of the list.
	Added the missing script types to the list.
Feat: Added bool Game->Suspend[36]
Add check for doscript on Screen Script Waitdraw
	( Timelord, 12th July, 2019 )
	
Feat: Epilepsy Reduction reduces lens flash rate 
	That blinking is WAY too fast... but is this new setting good enough? Not totally sure...
std_zh: Add `CF_LENSMARKER`. This never existed?
Fix: npc->ScriptTile broken
	Should not boundcheck the tile to `checkTile`, as `-1` is a valid scripttile value (clearing the scripttile).
	Changed to work just like the other scripttile setters.
	( EmilyV, 12th July, 2019 )
	
Fix: Allow KEY_ESC to be disabled (and update docs) 
	This allows it to be disabled both with Input->DisableKey[], as well as Game->TypingMode
	Updated ZScript_Additionz.txt to reflect this.
Fix: Missed compile option QR in qst.cpp
std_zh: Add `enum EnemyPattern`, `PATTERN_` constants
Feat: Enemy pattern "No Spawning" 
	Does not spawn the enemies on the screen.
	Writing the pattern to a valid pattern via `Screen->Pattern` should instantly spawn the enemies via the new pattern (via standard spawning rules)
Feat: Rocs feather flag "Jump is Power*100" 
	This makes a feather power of 500 equivalent to writing Hero->Jump=5; allowing better precise control over the power of the feather.
	Implemented as ITEM_FLAG1.
	( EmilyV 11th July, 2019 )

Added doscript to mapscr.
Added sanity checks on screen scripts.
Add notes on screen scripts for debugging.
Fix: Inverted flags for Link->WarpEx
	( Timelord, 11th July, 2019; repo commit date is wrong due to system clock sync)

Fix: Script draws during scrolling 
	Renamed `qr_SCRIPTDRAWSWHENSCROLLING` to `qr_FIXSCRIPTSDURINGSCROLLING` (better description of actual issue)
	Set up new timings for script running during scrolling, during frames that previously skipped running scripts entirely.
	Update `LinkClass::run_scrolling_scripts` with `bool waitdraw`, so that it handles both pre and post waitdraw depending on the param. This fixes some potential issues, since previously it was only called for waitdraw if `global_waitdraw` is true, even though it also handled `link`, `dmap`, and `screendata` script waitdraws. Now, each waitdraw condition is checked individually.
	Moved `action = scrolling` from `scrollscr` to `run_scrolling_scripts`, so it doesn't need to be duplicated repeatedly.
	Re-tabbed a couple blocks, because OCD.
	( EmilyV, 10th July, 2019 )
	
Create FUNDING.yml in the GH repo, for future dev support fundraising.
	( Timelord, 9th July, 2019 )

Parser: Fix lexer error 
	Error carryover when finding unknown character, now fixed.
	( EmilyV, 8th July, 2019 )

std_zh fix: atof disrespects negatives 
	For strings not containing a decimal point, atof returns early. This early return lacked the negative status of the output. This has been rectified.
Parser: Refactor function matching 
	Move typechecking into lookupFunctions, fixing errors with using.
	Only functions whos params match will be returned to `caseExprCall`, though best cast checking still occurs there.
Fix: Bad function lookup with using 
	If a local function is found, then using namespace functions should NOT be checked.
	They should only be checked if the only found functions are filescope or higher.
	Fixed, by adding check for local functions found.
	( EmilyV, 7th July, 2019 )
	
Docs: Major update ZScript_Additions.txt
Feat: Add `bitmap->isAllocated()`
	This checks if a bitmap has been allocated. It will always return true for system bitmap values.
	This differs from `isValid()`, in that it will return true even if the bitmap is uninitialized; i.e. cannot be drawn to.
	A bitmap which is not valid but has been allocated can be used with `bitmap->Create()` or `bitmap->Read()`
	A bitmap which has not been allocated should not be used, and should be reassigned with `Game->AllocateBitmap()` first.
Fix: Convert bitmap->GetPixel() to work as Graphics->GetPixel() does
	Uses the same ZASM as Graphics->GetPixel(), save for not needing to pop the extra pointer to NUL. Should function perfectly identically in every situation, considering it's basically the same ZASM.
	No interpreter changes were made.
Fix: Update size of `ffc->Flags[]`
	( EmilyV, 6th July, 2019 )

std.zh: Add new FFCF_LENSINVIS constant 
Feat: FFC flag `Invis to Lens` 
	If this is checked, using the lens will not show the FFC
	If this and `only visible to lens` are checked, the FFC will be always invisible.
Changes to itemdata access by script
	Add accessor `itemdata->Validate` for new `only validate cost` flag
	Fix setters for `itemdata->` `Combine`,`Downgrade`,`KeepOld`,`RupeeCost`,`Edible`,`Unused`, and `GainLower`.
	These flags could be set true, but could not be set false; as it did an `|=`, but no `&=~`.
Feat: Validate Only item flag
	If checked, will only validate the cost, not actually pay it.
	It just does `return` in `paymagiccost`.
	Still needs script access!
Feat: mapdata->Map, mapdata->Screen
	These are read-only.
GlobalSymbols: Fix mapdata pointer 
	THIS SHOULD NEVER POP TO `NUL`. EVER. WHY IS IT POPPING TO NUL?
	THE POINTER SHOULD ALWAYS BE POPPED TO THE REFVAR.
	...Uhg.
	If this is not popped to `refVar`, then `ri->mapsref` will never be updated, and will not point to the correct mapdata.
	This pop is what updates `ri->*ref`, so, popping to `NUL` means not updating the ref. This should only be done in the case of global pointers. But, `refVar==NUL` for global pointers, so popping to `refVar` should always be safe.
Add item->ScriptTile
	( EmilyV, 5th July, 2019 )

Parser: Allow blank scoperes, fix wrong error msg 
	Fixed returning -1 when finding too many matches for using, as it should return 2 (or greater).
	Blank Scoperes Example:
	when `using namespace foo`, and `foo` contains `void bar()`, and there is a global function `void bar()`, calling `bar()` gives an error. Calling `foo::bar()` will call the function within foo. Now, you can call `::bar()` to call the global function. This is implemented as per C++.
std_zh: Fix NoAction() 
	It previously killed both `Input*` and `Press*`, but now it only kills `Input[]`?
	Restored it to killing both. Not doing so breaks existing scripts.
	( EmilyV, 3rd July, 2019 )
	
Fix: Diving in land? 	
	Reversion: Accidentally removed an `action==swimming` check! Diving in land is bad!
Abstract button input
	Now calls to `Up()`, `Down()`, etc all call `getInput()`, which can handle any of the buttons, as well as being a press check, and drunk; also can ignore a button being disabled.
	`enum controls` added to zdefs, with all button indeces.

	Several calls in title.cpp to `rSbtn()`, `rUp()`, and `rDown()` have been replaced with calls to `getInput()`, so that they ignore buttons being disabled (namely, save/continue menus)
	Actual title screen and such should have no disabled buttons to worry about, as that is cleared on quest exit.
	2 calls to `rSbtn()` in `ending.cpp` have also been given immunity to disable.
	The `rSbtn()` call to exit the fullscreen map has been given immunity to disable.
	( EmilyV, 3rd July, 2019 )

//Some commit dates here are incorrect, but I am placing them in the order of commits, not the datestamps in the repo. -z
Fix: Item script crashes 
	Collect scripts cannot use `item_doscript`. They will need their own array added. For now, commented out it's usage.
	Action scripts need to set `item_doscript` BEFORE they run, as it is set to 0 on quit, and setting it directly back to 1 causes errors.
std_zh: Optimizations 
	Force `#option SHORT_CIRCUIT on` for std_zh; nothing has func calls that matter non-first in a bool operation, so this is safe.
	Replace all calls to `Cond()` with ternary expressions
	Replace a number of `if(!`'s with `unless(`'s.
std_zh: string and char32 update 
	Update many instances of `int` to `char32`
	Change `string` to `ptr` (identifier change)
	Switch many `int buf[] = ""; TraceS(buf);` to `TraceS("")` (now using string literals)
	( EmilyV, 8th July, 2019 )s

Refactor: Input, ReadKey, key[] access
	Change `ReadKey()` to `zc_readkey()`
	Add `zc_getkey()` as a wrapper for `key[]` access
	Both of these now have `bool ignoreDisabled` defaulting to `false`
	Added `Input->DisableKey[]` and `Input->DisableButton[]`, referencing `disable_control[18]` and `disabledKeys[127]`
		If an index of disabledKeys is true, then `zc_getkey/readkey` will return false for the key, regardless of state, except for some reserved keys.
		If an index of disable_control is true, then the corresponding function (`Up()`,`Down()`,`cAbtn()`, etc) will return false regardless of control_state
			If qr_FIXDRUNKINPUTS is true, this will also disable the ability for drunk to toggle this key.
	( EmilyV, 7th July, 2019 )

CompileOption: Binary 32-bit operations/literals 
	With this compile option on, binary literals and operators will be direct (skipping `/10000` and `*10000`)
	This allows the use of 32 bits per variable.
	This option is forced to OFF in `std.zh`.
	This option defaults to OFF.
	( EmilyV, Merged on 1st July, 2019; committed 30th June, 2019 )

Copy fixes from itemScriptEngine to itemScriptEngineOnWaitdraw.
Experimental fixes to item scripts.
Fix placement of item_doscript.
Added item_collect_doscript.
Added a constant for using collect scripts on item 0 and corrected the code for it.
Added timestamp to build date.
Fixed compile, and added fine-tuning for sprite carryover warpflags:
	#define warpFlagCLEARITEMS 0x200
	#define warpFlagCLEARGUYS 0x400
	#define warpFlagCLEARLWEAPONS 0x800
	#define warpFlagCLEAREWEAPONS 0x1000
	#define warpFlagCLEARHOOKSHOT 0x2000
	#define warpFlagCLEARDECORATIONS 0x4000
	#define warpFlagCLEARPARTICLES 0x8000
Added a new warp plag to WarpEx:
	warpFlagDONTCLEARSPRITES 0x100
	This should emulate Sprites Carry Over
	If we need segregated flags, we can add those later.
Allow setting doors and templates on higher MAPSCRs
	This fix should allow setting doors and other templates on
	MAPSCRs up to 0x87.
Copied rule-based call to drunk_toggle_state[] in ffscript.cpp
	to BUTTONPRESS, and added clamp to restrict it to buttons 0 through 10 in all places.
Display Build Date in ZQ Editor Info/About Dialogue
Fix compiler warning.
Console: Add new mapdata commands to ZASM Logging
Fixed the accidental removal of reading 'preloadscript' in readmapscreen().
	( Timelord, 1st July, 2019 )
	
APPLIED PARSER REGISTRATION PHASE TO BUILDS on 30th June, 2019.

Registration: Handle change in SemanticAnalyzer from other commit
	caseExprNegate was modified in another branch, and that change needed to be handled for RegistrationVisitor.
	This handling is required for constant `-214748.3648` to work.
Feat: qr_SMARTDROPS 
	Makes it so that if you have no counter max for a counter, items that refill that counter will not drop, and will be rerolled instead.
Parser: `MAX_INT_ONE_LARGER` now `TRUE_INT_SIZE` 
	This allows `214748.3647`/`-214748.3648`
	All appropriate constants in std_constants have been updated.
	Also, `ftoa` has been patched to not bug out on constants of `MIN_CONSTANT`. A variable of MIN_CONSTANT will potentially still have issues, but those were also present before this commit.
	( EmilyV, 30th June, 2019 )
	
Fix: Invalid *10000 when casting Link's coords 
	*10000 must be AFTER the cast.
	Doing it inside is doing something wrong, likely simply overflowing max fix (only has 16-bits for the integer portion)
	( EmilyV, 29th June, 2019 )
	
Parser: Move `logDebugMessage()`, fix some issues 
	`logDebugMessage()` moved to `CompileError`, so it is callable from files such as `AST.cpp` as easily as `RecursiveVisitor.cpp`
	Fix: Require errorHandler/scope parameter for all `getCompileTimeValue`.
	Fix: `ASTExprVarInitializer::getCompileTimeValue()` now handles local constants
	( EmilyV, 28th June, 2019 )

Parser: Handle global variable initializers 
	Added ASTExprVarInitializer, as a wrapper node.
	ASTDataDecl->setInitializer() still takes ASTExpr, but will now construct an ASTExprVarInitializer from it.
	Datum can now give a compiletimevalue for non-constants, but takes a bool for if it should or not- defaults false.
	New error, thrown when trying to initailize a global variable to an array.
	New error code letter: `R`, for Registration errors.
	`Scope* scope` moved from RecusiveVisitor to ASTVisitor, so LValBOHelper can inherit it (which is required for things not to crash)

	Now `int a = b; int b = 5;` will work again. In any order.
	`int a = 5; const int b = a;` also works, since the initializer is considered compile-time constant.
Parser: Add debug definition, debug message logging

Moved the `ASTImportDecl` checked calls inside `checkImport`, rather than having them in every place outside of it.
Moved the node disabling in the same way.
	This should change nothing functionally, it's just cleaner/faster code.

Registration: Fix HEADER_GUARD and Using issues 
	Using was finding duplicates due to rootscope duplication, when using `always using`. Fixed with `!isRoot()` check.

	HEADER_GUARD was checking the same node multiple times, thus disabling entire imports. I don't know how this was causing as few issues as it was.
	Fixed this by adding `bool checked` to `ASTImportDecl`. If a decl passes check once, it is marked checked, and will not be checked on subsequent checks.
Registration: Handle strings
Fix crash: always using 
	At some point I missed that `always using` will deref null here. Whoops.
	Added sanity check.	
Files: Remove Zoria's CMakeCache.txt 
	Shouldn't be in the repo, dammit.
Registration: Fix crash, ZScript Compile 
	ZScript couldn't compile global arrays with initializers!
	Also, after adding that, realized I had a major crash issue.
	Also, returned early on some instances in SemanticAnalyzer.
	All 3 fixed now.
	( EmilyV, 27th June, 2019 )
	
Registration: Fix errors
Registration: Fix Compile
CMake: Add RegistrationVisitor.cpp
Registration: Finish up cases
	Got the last few cases done. Now to actually start testing this thing.
Registration: More cases handled, fix using issue 
	Handled remaining expressions, except Call and Arrow
	Handled File, Namespace, Script, Using, SetOption, ImportDecl
	`using` a non-existant namespace previously would not error (it could not do so reliably due to a timing issue).
	Now, it will error (in SemanticAnalyzer), if it finds no match.
Feat: Add `bool Screen->ScriptDraws[8];` 
	These default to all true, setting false hides script draws for the respecive layer, 0-7.
	( EmilyV, 26th June, 2019 )

Added bool mapdata->LayerInvisible[7]
Added bool mapdata->ScriptDraws[7]
Added hidelayers and hidelayers to quest save/load format, and
	to SRAM script save data.
	V_MAPS is now 22.
	V_SRAM is now 2.
Fix Y Position of new Script Rule Tickbox
Fix: Some Init Data Issues 
	Fixed Uninitialised value in zinit, and zinit2 (ZC Player, Cheat Link Data) struct.
	Fixed use of wrong value in setting bomb item true.
	This fixes superbomb count being set to random values.
Add script rule 'Script write to INPUT overrides Drunk State'
	( Timelord, 26th June, 2019 )

Registration: Handle most basic expression types
Registration: RegistrationVisitor.h Setup 
	Add files `RegistrationVisitor`(.h and .cpp)
	Lay out the groundwork for the new system in RegistrationVisitor.h
	Add registration members to class AST
	Move some members from SemanticAnalyzer to RecursiveVisitor, for inheritance purposes
	Set up `caseRoot`, for handling the main looping through the script. This is unique, and not an override of an existing function like most other cases.
	( EmilyV, 26th June, 2019 )
	
Parser: Fix enums 
	Now, referencing an earlier constant in the same enum no longer has continuity issues.
	Also fixed a precision-loss issue, involving integer division.
Parser refactor: Remove `using namespace std;` from `ByteCode.h` 
	`.h` files should not `using`. This broke the ability to include `zdefs.h`.
Feat: Add `bool Screen->LayerInvisible[7];`
	Internally, `byte hidelayers`, where the flag for each layer is (1<<layer)	
	If true, that layer will not be drawn (except for script draws)
Fix: Didn't handle scripts writing LA_DIVING 
	Use the length and cooldown of current flippers, same as pressing A while swimming, on writing LA_DIVING
Feat: New flippers options 
	Attribute 1: Flipper dive time
	Attribute 2: Flipper cooldown time
	Flag 2: Cancellable dive
	Updated V_ITEMS to 45
	Replaced various `diveclk>30` calls with `isDiving()` calls, which previously just returned `diveclk>30`, but now handles the new options.
	Included sanity checks for this at several points.
	If no flippers are had, the default values of 50 (dive) and 30 (cooldown) will be used.
	( EmilyV, 25th June, 2019 )
	
Added an error message for wrong extension (e.g. '.sram' instead of '.zcsram')
	when saving or loading SRAM files. 
Added a sanity check on SRAM flagset mismatches.
Added a flagset param to SaveSRAM and to LoadSRAM. The functions are now:
	void SaveSRAM("filename.zcsram", int flags);
	void LoadSRAM("filename.zcsram", int flags);
	If the user passes '0' to int flags, then the packfile will contain/is expected to contain
		every section.
	Otherwise, the user can OR together the section types that
		they want to use, by using the SRAM_* constants in std.zh.
SRAM now saves the following datatypes:
	npcdata, itemdata, spritedata, combodata, dmapdata, mapdata.
Renamed SRAM functions to SaveSRAM("filename.zcsram") and LoadSRAM("filename.zcsram").
Added version control to SRAM functions.
	SRAM files store the SRAM version in the first 4 bytes of the file.
	( Timelord, 25th June, 2019 )
	
Begin adding the ability to save struct data toi .zcsram files, and to load those files
	back into ZC using LoadGameData("filename") and ReadGameData("filename").
	These support npcdata right now, at SRAM_VERSION 1.
Fixed mapdata->InitD[] using the InitD for the current screen, and fixed
	it mult/div by 10000.
Ensured that dmap scripts have their InitD set up correctly
	both when they first run, and after warping.

	Added a flag to WarpEx as 0x80 to prevent reloading the DMap script.

	Fixed dmapdata->InitD[] not compiling.
	Fixed Screen->InitD[] not returning the appropriate value.
	Fixed maodata->InitD returning * 10000.
	( Timelord, 24th June, 2019 )

Corrected the behaviour of Link->GetX, Y, Z with qr_LINKXY_IS_FLOAT.
	Note: All operations using the rule Sprite Coordinates are Float
		suffer from precision loss due to double typecasting during
		the / 10000.0.

Fix: Add `Constant Script' flag label to CustomXX itemclass items.
Added a QR that disables using enemy family Custom* and enemy
	family Friendly*.
Fixed script names when logging from dmap, eweapon, and screen scripts.

Added a variable to all script types to use to check if
	the initD for the current script was initialised, or not.

	Only set the ri->d if the script isn't initialised.

Fixed UI text of item/enemy metadata overlapping UI buttons
	in the SCREEN place item / SCREEN set enemies dialogues.
Refactored Link->WarpEx() to try to prevent crashes if non-constant
	scripts (e.g. ffc, npc, screen) try to execute the instruction.
	It still works as before from constant script types (e.g. global, hero).
This change is to the interpreter-side, not the ZASM-side.
Added Link->Gravity to ZScript (implemented fully).
Add proper constructors and subclasses for eScript/eeSCRIPT and
	for eFriendly/eeFRIENDLY class enemies.
	Friendly enemies have their hitbox offset by -32768.
Fix Enemy Gravity for type 'Other' and for type 'Leever' to match 2.50 defaults.
	( Timelord, 23rd June, 2019 )
	
Console: Add variable console_on_top and load/save configs for it.
Moved the new ZConsole configs into their own section of zc.cfg ([CONSOLE]).
Renamed 'ConsoleLoggerHelper.exe' to 'ZConsole.exe' and made a version
	that always floats on top of other windows as 'ZConsole_OnTop.exe'.
Added an option (console_on_top) to zc.cfg to call one of two versions of
	ZConsole.exe, with one version floating on top of all other windows at all times.
	
Added obeys_gravity checks to npcs and guys.
	1. Initialise obeys_gravity for each enemy subclass, with its
		most-appropriate value (needs verification in playtests).
	2. Add enemy::enemycanfall(int id).
		This is used in places where the old canfall() check needs access to
		the enemy class member variables.
		The old, global canfall(int id) remains, and is still used in a few places
			where the enemy pointer would be unknown.

Fixed itemsprite script number metadata reading from itemmap,
instead of itemspritemap.		
	
Timing: Run itemsprite scripts before their animation. 
	I moved itemScriptEngine() immediately prior to items.animate().

Implemented bool Gravity for items. It is set to true for
	all items by default, and the user can disable item gravity by script.

	Perhaps we will add a flag to the item editor 'Obeys Gravity' in the future,.
	to establish a user-defined default, without scripting.
Fix: Inverted version check (itemsprite scripts).
	( Timelord, 21st June, 2019 )

Added char32 datatye to ZScript.
	This is still a float type, but it allows ensuring a string-specific function signature.
	String literals are now char32 typed.
	Two-way casts between char32 and float. If a type if char32, the AST will match it to
		char32 sigs first, and float/int second.
std_zh: Add `SIDEWARP_NONE`
Fill in interpreter blocks for the ->SideWarpID[] instructions, 
	so they actually do stuff.
Parser: More detailed ambiguity error; List namespace names of each function candidate.
Parser: Fix `using` errors:
	Rootscope Duplication in BasicScope::useNamespace:
		-Add `assert`, to make sure that any future errors here won't be silent
		-Add `!isFile()` check to prevent RootScope duplication.
	Using search logic error:
		-Was only searching local using, instead of local and parent using! Fixed with `lookupUsingNamespaces` call.
	Also added some comments.
	( EmilyV, 21st June, 2019 )

Add new ZASM tommands to debugger array (updated with missing/new instructions).
Fixed ffc->Flags[2]; it is now [13].
	How the heck did this go un-noticed for all these years?!
std.zh: Add constants for new ffc flags.

Added byte obeys_gravity to sprites, and cause weapons to use this.
	Old hardcoded falling now instead sets this to 1.
	Added ZScript SETTER and GETTER vars as bool T->Gravity to lweapon, eweapon,
	npc, and item. The latter two have no effect at this time.

	Added int SideWarpID[int direction] to Screen-> and mapdata-> pointers.
	The interpreter only has an empty block for EmilyV to complete, but the supporting
	code for the parser and the interpreter is in place.

	(You can issue the instruction, but it always returns 0, and writing to it has
	no effect.)

	Rob, you wanted to figure out that madness with bits using multiple screen vars,
	so, have at you!

Added the following new ffc flags:
	Ignore Changers: If enabled, this ffc ignores changers.
	Imprecision: If enabled, this ffc will react to a changer as long as it aligns
		within ONE FULL PIXEL of the changer, rather than needing to precisely align
		to a SUBPIXEL.
	Made the 'Soilid' flag visible in the GUI. The user can now set this in the UI,
		however, at this time, the internal handling for ffc solidity is unfinished.
Fix: Missing break stmt for combodata->ID.
	( Timelord, 21st June, 2019 )
	
Fix: y-offset being added to x-values for Polygon 
	( EmilyV, 20th June, 2019 )

Fixed the Y offset drawing position for Screen->Polygon() and for
	bitmap->Polygon().
Fixed a place where Link Data for cheats in ZC Player is not properly
	initialised.
	( Timelord, 20th June 2019 )

Added combodata->ID
Added Link.setXdbl(double), setYdbl(double), setZdbl(double).
	This function is used if the QR LINKXYISFLOAT is enabled when using GETTER
	functions for Link->X, Y and Z.
Overlap on some ZScript rules in the GUI.
Don't force qr_LINKXY_IS_FLOAT off.
Script types npc, lweapon, eweapon and itemsprite should refuse to
	run Link->WarpEx for now. (It crashes if they run it, but it works from all other script types AFAIK.)

	The function needs a rewrite so that it runs fromt he main engine like the normal warp
	function, so I will need to add byte dowarpex and int warpexargs[9] to class
	FFScript.

	The script command will need to set those values, and if ( FFCore.dowarpex ), the
	ZC engine will need to run it as it does Link.do_warp(), then reset the values.

	This should prevent the crashes and allow the function to work in all script types,
	but it will change the timing.

	I also added const char scripttypenames[11][40] to ffscript.cpp, so that errors can
	log script name types more easily.
I missed a spot where npc scripts were reported as lweapon scripts in the
	console/allegro.log. This fixes the error logging of the script type for npc
	scripts in both places that it exists.
Halt sprite scripts on warping Link by script from Link->WarpEx().

Console: Make window open on top, but do not force as always topmost.

If the QR qr_LINKXY_IS_FLOAT is enabled, the sprite getter
	return value for lweapon, eweapon, npc, or item members:
		x, y, z
	is first typecast to double.
	Example:

	if ( get_bit(quest_rules,qr_LINKXY_IS_FLOAT) )
			{
				ret=((double)((weapon*)(s))->z)*10000;
			}
			else
				ret=((int)((weapon*)(s))->z)*10000;

	This is intended to prevent truncation when trying to work with fix values that have decimal places.

Corrected ZASM for LINKWARPEXR (Link->WarpEx(int[])) and
	for LINKEXPLODER (Link->Explode(int)).
	This should fix the issues with ZASM stack overflows. It does not however,
	make Link->WarpEx actually WORK, as there seems to be a fault in the FFCore.warp_link() function.
Corrected the script type reported by script errors for
	npc scripts in the console and allegro.log.
	( Timelord, 19th June, 2019 )

FFC Clipboard no longer carries over across opening another quest, and is set to
	-1 on ZQ init.
You can now copy an ffc, and repeatedly paste it. It is not cleared
	from the 'clipboard' after a single paste.
Display Enemy Tile data (tile, stile, etile), HP, Dmg,
	Family, Dropset, Script, and Weapon Script metadata in the 'Select Enemy'
	dialogue/lister.
Show tile, power, level, family, cset, and script details
	in the 'Select Item' dialogue.
Fix issues with the Tile Grabber refusing to place tiles on
	tile pages > page 252.
	( Timelord, 18th June, 2019 )
	
	
Console: Make TOPMOST again on startup.
Console: Make new console windows smaller, and less annoying on startup.
	Added a window handle, and used it to make the dimensions of
	the console window smaller, WITHOUT reducing its BUFFER SIZE.
	Positioned window at 0,0, and set it to a NONTOPMOST flag.
Added the code for rule Sprite Coordinates are Float, to
	setters for LWeapon, Item, NPC, and EWeapon X, Y, and X.
	This is for Rob, to test.
Fixed ZASM issues (PC and stack corruption) when writing Link->Item[n] = false
	while that item is running a script. 
	( Timelord, 17th June, 2019 )

Fixed itemdata->RunScript(), and changed param 1 from bool perpetual
	to int mode, where:

	 * Mode Settings:
	 * 0 : SCRIPT_MODE_END 
	 * 	THIS TERMINATES THE RUNNING SCRIPT.
	 * 1: SCRIPT_MODE_NORMAL
	 * 	Runs the script either once, or perpetually, based on the ZScript Rule.
	 * 2: SCRIPT_MODE_PERPETUAL
	 * 	Runs the script perpetually, even if the QR if off. 

Fixed corruption of the system palette caused by forgetting to
	set the allegro drawing mode back to Opaque after drawing a polygon.
Fix: Error message for Polygon() functions.

REFACTOR ITEM SCRIPTS (Pt. 2)
	Fix: Clear correct refInfo and stacks for item collect scripts.
	Fixed 'Passive Item Scripts' ignoring if the QR 'Item Scripts Keep Running'
		was on or off.
		Added some docs on just what the heck is happening with itemScriptEngine.
	Added separate stacks and refinfo for collect scripts, as they were
		interferimg with normal item scripts that now can run perpetually.

		Lots of work on refInfo and stack handling for item scripts.

		Solved a number of conflicts. The function itemdata->RunScript() may now be
		broken and need revision.
	( Timelord, 16th June, 2019 )

Clear item refInfo and stacks on game restart.
REFACTOR ITEM SCRIPTS (Pt. 1)
Various fixes to item script mechanics.
Fixed PC/SP issues when setting Link->Item[] true
	or false, with a passive item script on that item ID.
	( Timelord, 15th June, 2019 )
	
ZScript and ZASM Debugger Windows are now large, and support massive amounts
	of data that you can scroll-through for post-mortem, rather than quickly truncating it.
	( Timelord, 14th June, 2019 )

Fix: `scriptile` unused if `extend == 0`
	( EmilyV, 13th June, 2019 )
	
Chrore: Shifted about some code.
Fix: Missed some FFCore.setAction() in Warp Functions
Update build date, build ID is now Alpha 26
Also added notes re: DEVLEVEL
Fix Crashes in Sprite::Draw()
	Add early returns to sprite::draw redirect to old draw function.
	Move BITMAP* creation after failsafe return.
	Added minimal sanity checks to prevent possible segfaults.
	
Fix: Set basic weapon properties on Create*Weapon.
Fix: Even more instances of RunScript needed a VC
Fix: More scripts that should only run in >= 2.55
Fix: Run Link's Init and OnWin Scripts only on v2.55 and Above
Fix: Add more weapon setup to Create*Weapon()
Dev: Autologging if DEVLEVEL > 1
Set DEVEVEL 2 and add notes on what each value does.
Fix: Flipped one wrong != to == in FFINITD array BC
Flip != to == on ffc BoundsCheck
Fix: 2.50.x quests won't try to run the Link onDeath script.
Added a Bounds Check to all FFC member variables.
	Don't allow trying to write to ffc(0)->X, or ffc(33)->X.
	This is to prevent RAm corruption possible by trying to do this.
Fix: Add version check to all new script types RunScript() 
	We still need to flush all instructions held in these script types
	if a quest is < 0x255, as this will break if the quest is re-saved.
	( Timelord, 14th June, 2019 )
	
Feat: Log quest header metadata on ZScript Debugger Init
Feat: Add Event Logging to new console (in amber text).
Possible Fixes to ZScript Debug Console, Running Illegal Script Types 
The ZScript Debug Console process now properly opens on startup.
	Also, if DEVLEVEL > 1, then we will always print the script type and name for script traces.

	I also added a possible way to revent 2.55 from trying to run corrupted slot data
	in script types not used by 2.50.x, that were still present in 2.50.x.
Add note on event console, try to launch script console on init.
	( Timelord, 13th June, 2019 )
	
Add the ability to print script metadata in traces.
Change ZScript Debugger intro text colour to intense blue (CYAN).
Feat: Finish Adding New ZScript Debug Console

Added a new ZScript Debug Console. This is attached to another
	process, so closing it will not terminate ZC, nor will it terminate the parent process.

	It is based on CConsoleLogger / CConsoleLoggerEx.

	Traces will be in white. Script IDs green, errors in red.

	You can open or close the debugger from the menus, and a config int allows opening
	it with the ZC process. You can also manually close the ZScript Debugger without fear.
Feat: Begin Adding Improved ZScript Debugging Console
Feat: Add ZASM Debugger Menu Option 
	Moved the ZASM Debugger init from a hotkey to a menu option.
	It is also now a config int, 'print_ZASM'.
Include: Added include file ConsoleLogger.h
Formatting fixes to ZASM Debugger
ZASM Debugger: A few changes. 
	Migrated some stuff from the old ffdebug and open on quest init.
Fix: CreateEWeapon() uses LOADGFX(0).
File: Required helper file for the improved console.
	Added new required file to the ZC Package: Consolehelper.exe
	Place it in the same path as the zc.exe file that you are running.
Feat: Add better console base and ZASM Stack printing.
Fix: Never try to read the parent->weaponscript for script-generated eweapons.
Do not run check_slash_block on eweapons or on
	non-script-generated wScript types. If the weapon is script-generated,
	only check if it has its isLWeapon flag enabled.
	( Timelord, 12th June, 2019 )

Prevent hangs caused by misplased ZASM (brace or no brace blocks)
	( EmilyV, changed by Timelord, 10th June, 2019 )
	
Add additional type of OUTOFBOUNDS
Re-configure #define OUTOFBOUNDS
Change order of npc OoB check.
Set Sprite Coords are ZFloat off by default
Compat QRs Set By Default: In versions < 0x255 and 2.55 versiosn with a build ID < 46,
	I now set these off by default:

	if ( tempheader.zelda_version < 0x255 || (tempheader.zelda_version == 0x255 && tempheader.build < 44) )
	    {
		set_bit(quest_rules, qr_ITEMSCRIPTSKEEPRUNNING, 0);
		set_bit(quest_rules, qr_SCRIPTSRUNINLINKSTEPFORWARD, 0);
		set_bit(quest_rules, qr_SCRIPTDRAWSWHENSCROLLING, 0);
		set_bit(quest_rules, qr_SCRIPTDRAWSINWARPS, 0);
		set_bit(quest_rules, qr_DYINGENEMYESDONTHURTLINK, 0);
		set_bit(quest_rules, qr_OUTOFBOUNDSENEMIES, 0);
	    }
Bounds check update on npc->Attributes 
	npc->Attributes BC is 0 to 15 is vZelds < 0x255.
std_functions.zh: Cleanup tabs and note new vers date.
Added int longrand(int max) to std.zh
	This allows creating a random integer between 0, and 199,999.
	( Timelord, 10th June, 2019 )

Fix: Engine counter underflow for Item Editor UseCounter/Amount.
	Setting something to `-n` is not the same as subtracting `n`.
	( EmilyV, 8th June, 2019 )

Add `void SRand(int seed)` and `int SRand()` as internal functions.
	void SRand(int seed);
		//Sets the current random seed to a given value, input from script. (DOES NOT /10000)
	int SRand(); 
		//Generates a random seed, sets it, and returns it.
	( EmilyV, 7th June, 2019 )
	
	
//Alpha 25
Ensure that the internal call to _itoa() in ffscript.cpp has a pointer to 
	which it can return a value.
Calls to the internal itoa() were causing memory corruption.
	For the present, I moved itoa back into the base of string.zh, out of std::string,
	and I renamed the internal itoa() to itoa_c().
Prevent possible mapscreen corruption when initialising mapscreens in qst.cpp. (Paranoia patch.)
	( Timelord, 5th June, 2019 )


//Alpha 24
Screen scripts now have a flag 'Run on Screen Init', that
	behaves in an identical manner to ffcs.
	If enabled, the script runs as soon as scrolling 
	begins; otherwise, the script runs after the screen 
	scrolling ends and the screen is fully-loaded.
Allow using the NOT (!) token on any type.
	e.g. !bitmap or !FFC will be true if the bitmap pointer
	is UNINITIALISED.
Fix timing of Screen (screndata) scripts.
	Screen scripts now run immediately prior to ffcs, as if they were ffc 0.
	They execute from ffcscriptengine, as part of the same function invocation,
		but they run before FFC ID 1. 
Updated to build Alpha 24.
	( Timelord, 2nd June, 2019 )
	

//Alpha 23
Waitdraw now works on passive item scripts.
	Further, if the script calls Quit(), then itemdata[id].script is set to 0,
	so the script STOPS running.
Added 'Constant Script' as item Flag16.;
	If this is enabled on the item, and the item is in inventory (Link->Item == true),
	then the script will run constantly.
		***This is for passive item scripts.
Added Gleeok's old experimental files, including ZPP as refs to repo.
	( Timelord, 29th May, 2019 )

Added epilepsyFlashReductionto bomb palette flashes.
Added an Epilepsy Flash Protection option to the Settings menu,
	and to zc.cfg.
	( Timelord, 26th May, 2019 )
	
Fix call to #include "std_keyboard.zh" in std.zh.
Move New GetByString functions to Game->, to match GetFFCScript() and GetItemScript().
Added Label field to the Combo Editor:
	The user can now supply a label (10 char string) to every combo.
	They can use the function GetCombo("string") to get the first ID of a combo with that label.
Add Waitdraw to itemsprite, item, and eweapon scripts.
Added Waitdraw (with a QR to disable it; disabled by default for
	quests < 2.55), and began adding it for all sprite scripts.
Added a QR (ZScript Rule 'No FFC Waitdraw'), and enabled it  by
	default for quests made < 2.55:
	This is a QUEST RULE to disable Waitdraw() on ffcs. 
	It is enabled by default for 2.50 quests,
		preserving the old behaviour for the old quest format. 
Fixed Waitdraw not working in ffc/screen scripts:
	I forgot to call the waitdraw routine in zelda.cpp.
	Waitdraw now works from screen and ffc scripts
Change long ffcswaitdraw to unsigned long.
Correct behaviour for get_bitl(), and set_bitl() in zsys.cpp.
	( Timelord, 23rd May, 2019 )

Fix crash when compiling ZScript (pass 3):
	Missing sanity check in syncDisable, missed comment-out
	( EmilyV, 23rd May, 2019 )

Update error message for Waitdraw() unsupported script types.
Add set_bitl() and get_bitl() (to zsys.cpp) for longs.
Added Waitdraw() support to ffcs. 
Add ffcswaitdraw long to TheMaps.
Screen scripts now run more like global/DMap scripts, than like ffcs.
	They also support Waitdraw.
	( Timelord, 22nd May, 2019 )

Added a series of getters to get script IDs and other object IDs:
	int GetNPCScript("name");
	int GetLWeaponScript("name");
	int GetEWeaponScript("name");
	int GetDMapScript("name");
	int GetScreenScript("name");
	int GetHeroScript("name");
	int GetLinkScript("name");
	int GetPlayerScript("name");
	int GetSubscreenScript("name");
	int GetUntypedScript("name");
	int GetNPC("name");
	int GetItem("name");
	int GetDMap("name");
	int GetCombo("label");
	( Timelord, 21st May, 2019 )

Fix many crashes when using NO_ERROR_HALT:
	Added `syncDisable()` calls for all caseExpr* functions in RecursiveVisitor
	Added `syncDisable()` calls to analyzer functions in SemanticAnalyzer
	( EmilyV, 20th May, 2019 )

Add utol(string[]), ltou(string[]), and convcase(string[]):
	int utol(string[]) converts all uppercase characters in a string to lowercase characters.
	int ltou(string[]) converts all lowercase characters in a string to uppercase characters.
	int convcase(string[]) converts all uppercase characters in a string to lowercase characters, 
		and all lowercase characters in that string to uppercase characters, inverting the case of 
		all characters in a given string.
		All three of these return the pointer to the string.
Move old ZASM ilen and itoa into std::string namespace. 
Fix ilen(), itoa(). These are now internal.
	( Timelord, 20th May, 2019 )

`import` will now check include paths if it cannot find the file in the ZC dir/absolute path.
	( EmilyV, 19th May, 2019 )
	
Optimise strchr and strnchr
New ZScript internal functions on the global pointer are:
	int atoi("string");
	int strcat(string[], string[]);
	int strchr(string[], int chr);
	int strrchr(string[], int chr);
	int strspn(string[], keys[]);
	int strcspn(string[], keys[]);
	int strstr(string[], "substring");
	Note: While not technically illegal, using literals for these functions is probably pointless in most
	cases, as the changed string is deleted before it can then be used.
	Literals can only be safely used when the above functions show them.
	You can ALWAYS USE A NORMNAL STRING POINTER, WHERE THESE SHOW LITERALS. 
Moved old ZASM-based string.zh functions, that are now internal, to 
	a new namespace in string.zh.
	The namespace is std::string.
Added some string functions internally, including:
	strchr(), strrchr(), strstr().
Update std_constants for new max/min float/int/const.
	( Timelord, 19th May, 2019 )

Begin porting string.zh functions to internal functions.
	( Timelord, 18th May, 2019 )

Corrected some errors in std_keyboard.zh
Convert key modifier functions to use Input->ModifierKeys&flag in std_keyboard.zh.
	The old functions used Input->Key[modifier], which did not give authentic status indication
		on if the modifier was applied to another keypress.

	Added bool AccentShift(int n); where n == 1, 2, 3, or 4.
	Added bool ScrollLock();
Optimised std_keyboard.zh
Made -5 for the Y coordinate act as a pit warp, instead of using a WR destination.
	( Timelord, 16th May, 2019 )

Give `namespace` access to parent-scope vars
	(Removes parent-scope access to namespace-scope vars as a consequence. This is identical to scripts.)
Fix: OPTION_VALUE is compile-time constant
Add sanity check on handleError(): Prevent accessing `recursionStack.back()` if `recursionStack` is empty.
	Fixes crash when array size is > MAX_INT
Add Opcodes for internal optimization 
	CASTBOOLI: Sets the value of a register to 1, unless it is currently 0.
	CASTBOOLF: Sets the value of a register to 0.0001, unless it is currently 0.
	SETTRUEI: Same as SETTRUE, but uses 1 instead of 0.0001.
	SETFALSEI: Same as SETFALSE, but uses 1 instead of 0.0001.
	SETMOREI: Same as SETMORE, but uses 1 instead of 0.0001.
	SETLESSI: Same as SETLESS, but uses 1 instead of 0.0001.

	Using these opcodes, relational operators have been internally optimized.
	( EmilyV, 16th May, 2019 )

If Link->WarpEx() or Warp SCC X coordinate is < 0 and (unsigned)Y coordinate is 5, 
	we pit-warp Link. Otherwise, if X is < 0 and (unsigned)Y is < 4, we use that warp return 
	square.
	Example: 
		X == -1, Y == 3 uses Warp Return 3
		X == -1 and Y == -3, also uses Warp Return 3.
		X == -1 and Y == 5, pit warps Link.

Added a string control code to set Screen->D[reg] = value for any DMap.
	\19 \dmap \screen \reg \value

	This requires testing as I may have transposed where the bitshift belongs.

Added a string control code to warp Link, as:
	\18 \dmap \screen \x \y \effect \sound

	If x/y is negative, it should use a warp return point equal to the absolute
	value passed (e.g. -1 is warp return 1).

DMap Script InitD labels now save properly.
Increased V_DMaps and updated quest loader/saver.
	( Timelord, 16th May, 2019 )

Parser: Match internal functions w/ numParams, allow overloading
	( EmilyV, 15th May, 2019 )
	
Moved old ZScript-based strcpy(), strcmp(), strncmp(), and strlen()
	into namespace std::string in string_functions.zh.
Converted strcpy(), strncmp(), and strlen() into internal functions.
Remove logging from strncmp()
Fix number of params for strcmp, strncmp.
Make strcmp and strncmp internal.
Remove strcmp and strncmp from string.zh
Add QR qr_CLEARINITDONSCRIPTCHANGE
std.zh: Add enum ffruletype to std_constants.zh.
Fix fonts for window title in Screen->Script and Game->Misc[] dialogues.
Fix Window Title for Screen Script dialogue.
	( Timelord, 15th May, 2019 )

//Alpha 22
Added Screen->Script, Screen->InitD[8], mapdata->Script, and mapdata->InitD[8]
	to ZScript. Arrays may not be properly deallocated on changing Screen->Script.
Fully implemented Screen Scripts (screendata script).
	The scripts are set via the menu Screen->Script.
	Each screen has 8 InitD values, and one Script value.
	Scripts run similar to ffcs, but always on screen init. 
	V_MAPS is now 20.
	Updated the quest loader, and the quest reader, for the new screen/maps variables.
	( Timelord, 15th May, 2019 )

Set saved=false when editing Quest->Misc[32]. 
	Without this, the SAVE menu option is disabled after editing Game->Misc[].
	( Timelord, 14th May, 2019 )
	
Disabled `inline` for user-functions, it isn't going to be this easy.
	Did several optimizations, and an amount of work on the system, regardless.
Parser: Inline `TraceS()`
	For internal function inline testing purposes. Works correctly.
Revert previous commit; incorrect diagnosis 
	The commit previously reverted was not the cause of the issue, and
	should not have been reverted. This restores the original commit.
Revert "Parser: Fix duplicate function ZASM"
	This caused an unexpected issue, and needs to be reverted until said
	issue is fixed.
Parser: Inline internal functions, a start at least.
	Inlined `Trace()`, saving 5 opcodes.
	Functions can now be made inline by giving them the flag `FUNCFLAG_INLINE` in their GlobalSymbols.cpp table.
		Note: The function must actually be edited to work with `inline`. Mostly, `OReturn` must be commented out.
Parser: Fix duplicate function ZASM 
	Functions declared at the file scope were having two copies of their ZASM inserted into the quest, due to a duplication issue with RootScope/FileScope. 
	This has been rectified.
	( EmilyV, 14th May, 2019 )

Flipped the behaviour of qr_OLDQUESTMISC in ffscript.cpp
Added a ZScript RUle that Game->Misc is not / or * 10000.
	This is for older 2.55 quest scripts.
Add Game->Misc Config Panel
	This is under the Game menu as 'Misc[]', and it allows the user
	to set up to 32 global constants/vars, each with a label, accessed by
	scripts as Game->Misc[32].
	( Timelord, 13th May, 2019 )

Restructured GlobalSymbols.cpp, assing the number of params for each
	function, function flags, and general table clean-up.
	( EmilyV, 13th May, 2019 )
	
Parser: Some progress debugging `inline`
	( EmilyV, 12th May, 2019 )

Parser: Complete `inline`, option FORCE_INLINE 
	Option FORCE_INLINE: if on, all functions that can be inline will be made so. Default off.
	By placing `inline` before a function, the function's assembly will be copied to the locations it is called at. This can help with script speed.
	( EmilyV, 11th May, 2019 )
	
Fixed the bounding of npc->Attributes between indicies [0] and [15].
	It is now [0]and [31], as intended.
Fixed the display of the QR in Quest->Rules->Enemies->2
	Added a bit check to a second out of bounds model.
Add QR to allow npcs to go out of bounds.
Added logging to bitmap->GetPixel
	( Timelord, 11th May, 2019 )

Begin adding rgbdata and palette; revise bitmap->GetPixel
Rename bitmap->Mode7 to bitmap->DrawPlane
Revised bitmap->Mode7
	( Timelord, 10th May, 2019 )
	
Parser: Partially-functional `inline` 
	`return` is completely nonfunctional. There is still a lot of work left to get this working.
Preliminary setup of 'inline', add func flags 
	Function declarations now hold flags. Function objects now hold flags, which are recieved from the function decl object.
	Added function flag 'invalid' for error checking
	Added function flag 'inline', for inline functions. Currently does nothing.
	( EmilyV, 10th May, 2019 )
	
Fix: Repeat incorrect recursion
	( EmilyV, 9th May, 2019 )
	
Fix: Blit to destBMP, not subBMP
Remove duplicate token entry.
Changelog: Added bitmap->Mode7(16 args)
//sdci[1]=layer
	//sdci[2]=bitmap target
		//
		//	-2 is the current Render Target
		//	-1, this is the screen (framebuf).
		//	0: Render target 0
		//	1: Render target 1
		//	2: Render target 2
		//	3: Render target 3
		//	4: Render target 4
		//	5: Render target 5
		//	6: Render target 6
		//	Otherwise: The pointer to a bitmap.

	//sdci[3]=sourcex
	//sdci[4]=sourcey
	//sdci[5]=sourcew
	//sdci[6]=sourceh

	//sdci[7]=destw
	//sdci[8]=desth
	//sdci[9]=angle
	//scdi[10] = pivot cx
	//sdci[11] = pivot cy
	//sdci[12] = space Z
	//sdci[13] = horizon
	//scdi[14] = scale X
	//scdi[15] = scale Y
	//sdci[16] = masked?
	//sdci[17] Bitmap Pointer
	( Timelord, 9th May, 2019 )

Fix: Forgotten field initializers
Added `repeat(const int){}`
Parser: Make `syncDisable()` static
Added `unless`, as opposite of `if` 
	( EmilyV, 8th May, 2019 )

Added bitmap->DrawLayerSolid(), DrawLayerSolidity(), 
	DrawLayerComboTypes, DrawScreenComboFlags(), and DrawScreenComboIFlags() to ZScript.
	( Timelord, 7th May, 2019 )

Fixed crash when trying to load a bitmap file that does not exist.
Added Scrolling.zh to test_scripts/dmap_scripts
Corrected bitmap pointer for Graphics->GetPixel.
Add Graphics->GetPixel(bitmap, x, y) to ZScript
Add bitmap->DrawScreenSolid()
	This draws a block in colour 1, if the 8x8 pixel space is solid.
Added the following bitmap drawing commands:
	DrawScreenSolidity() : Draws a palette index based on the raw literal value
	for the solidity of each combo space, by drawing a 16px block to that space
	in the palette value equal to the solidity mask of that combo.

	DrawScreenComboTypes(), as above, but the palette index is equal to the
	combo Type ID value.

	DrawScreenComboFlags(), as above, for placed flags.

	DrawScreenComboIFlags(), as above, for inh. flags.
	( Timelord, 6th May, 2019 )
	
Began adding commands to the bitmap-> pointer, similar to DrawScreen,
	that when done, should draw blocks to the space on a bitmap that a combo occupies,
	that the user can utilise in conjunction with GetPixel() to rapidly read values
	for solidity mask, type, flag, and inh flag.

	This would make it easier to produce large-scale scrolling environments, including
	with Mode-7 style effects, as the end-user can blit out these masks for an entire map
	to bitmaps, then read the same absolute position on a set of bitmaps to get
	the properties of any specific point/node/coordinates.
std.zh: Begin Optimising std_keyboard.zh
	( Timelord, 4th May, 2019 )

Fix Input->ModifierKeys return type, and values.
	( Timelord, 3rd May, 2019 )

Refactor: Move checkExtension to class FFScript
Don't copy strings with checkExtension
Updated todo.txt
Fix: Correct Return Type of Input->Keybindings[]
Make file_exists inline.
Minor performance adjustments.
Updated build date.
Ensured that unused bitmap pointers are initialised to NULL.
Removed inline specifier from drawing functions.
Ensure that bitmap->Quad() checks if the bitmap is valid, if the
	user suppkies a render source, and if not, use the old Screen-> texture cache.
Ensure that bitmap->DrawScreen() and bitmap->DrawLayer() use the correct y offsets.
Optimise bitmap->Quad()
	( Timelord, 1st May, 2019 )

Docs: Clean up formatting of ZScript_Additions.txt
Added bitmap->BlitTo().
	This blits a source bitmap, to the pointer, using the same args
	as DrawBitmapEx(), when drawing to the screen.
Add warning if the size of the render_source bitmap, or the h/w
	args are not a power of 2.
Try to ensure that ZC Player PNG snapshots follow the identical
	logic of ZQ Editor snapshots when writing their palette.
Fixed the type and internal value for the target of Blit.
	Before, it would not allow passing a bitmap pointer to the blit target, and
	the value for the pointer would have been wrong, in any case.

	This fixes both of these issues.

Fixed ZC Player palette corruption when calling bitmap->Read()

Fixed a crash and incorrect values when using bitmap->Height and
	bitmap->Width.

	These now use the .height and .width members of the struct, which are set when
	a bitmap is created, or loaded from a file.
Fix implicit casts.

Added Screen->Polygon(int layer, int points, int vertices[], int colour, int opacity)
	and bitmap->Polygon(int layer, int points, int vertices[], int colour, int opacity) to ZScript.
Updated build date.
Ensure that when calling a polytype function on a bitmap pointer,
	such as bitmap->Quad(), that if the pointer used as 'render_source' is not
	initialised, that we default to drawing it using a tile.

	This should prevent some possible stack corruption.
std.zh: NULL is now untyped.
Docs: Updated ZScript_Additions.txt for bitmap-> draw instructions.
Fixed crashes when using bitmap draws from/to uninitialised bitmaps
	with bitmap->Quad(), &c.
	Now if bitmap->Read() fails to load an image, it will create a blank bitmap at
	256x176 on the pointer.
	( Timelord, 30th April, 2019 )
	
Added 'bitmap render_source' to bitmap->Quad3D, Triangle3D	
Fix rendering bitmap->Quad() with a bitmap render_src.
	Applied the same fix to bitmap->Triangle

	Removed mandatory power of 2 check for these two functions, when using a
	bitmap render_src.
	
Flipped thew order of int height, int width for Game->CreateBitmap()
	and for bitmap->Create().

Added a QR to use the old args order, set for quests with a build ID < 44.
Enabled that QR for older quests on quest load.
Fixed some sign mismatches.
	( Timelord, 29th April, 2019 )
	
Some fixes/changes to edTRANSFORM for boss enemies.
Docs: Updated ZScript_Additions.txt, documenting `bitmap render_source`
Fix unintentional forced offset in Screen->Triangle3D

I made the FFCore array access functions non-static, and I used calls
	to them in place of ArrayH:: static member functions, because somehow ptr.Size() was
	getting corrupted, or there was some kind of internal i386 stack issue when
	using those functions with script draws.

	Thus, I replaced every call to ArrayH::getValues() with FFCore.getValues(), which
	seems to have fixed it.

	This commit also fixes an offset issue with Quad3D.
std.zh: Fix missing line for including keyboard.zh
	( Timelord, 28th April, 2019 )
	
Fix various typos and logical issues in examples
	Update some docs, which referenced mechanics which have changed.
	Add newline to EOF
	( EmilyV, 27th April, 2019 )
	
Fix: Add segments to segmented enemies in edREPLACE
Fix an if/else chain and coordinates of edREPLACE.

The compiler was choosing the wrong function to use for normal weapon
	generation, where the dummyweapon function was not intended to be called.

	I added extra params (unused) to the dummy weapon function, to ensure proper
	function matching.

Changed Values for Transform Effect Type 
 	 0: None
	-1: Particle Dissolve (A)
	-2: Particle Explode
	-3: Particle Dissolve (B)
	-4: Harmless Superbomb Blast
	-5: Harmless Bomb Blast
	-6: Superbomb Blast (Harms Link, uses enemy weapon damage for its power.)
	-7: Bomb Blash (Harms Link, uses enemy weapon damage for its power.)
	 1: Sprite 1
	 +: Higher Sprites
 
 Added the ability to control the visual effect for edREPLACE
	(Enemy Editor Defence: Transform), and added the ability to specify an enemy ID.

	Attribute 15 (Attributes[14] in ZScript): The Effect Type
		-3: Bomb Blast (harmless)
		-2: Superbomb Blast (harmless)
		-1: None
		 0: Dissolve (a)
		 1: Dissolve (b)
		 2: Particle Explode
		 3: Sparkle Weapon using Sprite ID 3
		 +: Sparkle weapon with sprite 4 or above.

		Attribute 16 (Attributes[15] in ZScript) : The Enemy ID
		0: Next in Editor
		1+: A specific enemy ID.
	( Timelord, 27th April, 2019 )
	
Fix the return value in case edREPLACE so that bouncing weapons
	do not phase through enemies. Weapons react as if they hit the original enemy
	normally.
Try to ensure that enemies aren't knocked back during transformation.

Added a new defence outcome 'Transform(next)'.
	If this enemy is hit by the weapon with this defence resolution, it will be replaced
	by the next enemy in the list, with a visual effect of the original enemy dissolving
	into particles.

Added the following parser tokens:
	compl: Equivalent to ~
	bitnot: Equivalent to ~
	not_equal: alt for not_eq
	and_equal: alt for and_eq
	xor_equal: alt for xor_eq
	or_equal: alt for or_equal
	( Timelord, 26th April, 2019 )
	
//Alpha 21
Fix extension handling of bitmap->Write(), and properly support all
	legal file formats (.png, .gif, .pcx, .tgx, and .bmp).
	( Timelord, 26th April, 2019 )
Re-wrote sprite script refInfo, closing a memory leak, and removing a hack.
	( Timelord, 25th April, 2019 )
Updated std_keyboard.zh, and ZScript_Additions.txt with
	KB_* constants for modifier key flags.
Updated internal build to Alpha 21.
Updated ZScipt_Additions.txt
Updated todo.txt
Added Input->KeyBindings[14] (r/w), Input->ModifierKeys,
	and Input->SimulateKeypress[127]
Don't use bitmap->Blit() offset fix on Screen->DrawBitmapEx()

The params for bitmap->Write are now:
	bitmap->Write(int layer, "filename", bool allow_overwrite);

	Behaviour: Overwriting is off by default. If bool allow_overwrite == true,
		AND the filename extension is .png, then the file can be overwritten.

Add notes to bitmap->Clear

Added bitmap->Clear(int layer).
Added bitmap->Create(int layer, int h, int w)

	->Create only works on a bitmap pointer that has been initialised, and it
	destroys any existing bitmap on that pointer, before creating a new one.

Applied the same set of fixes that I used for Screen->PutPixels()
	to Screen->Lines(), Screen->DrawCombos(), and Screen->DrawTiles()
	to all other Screen-> pointer, array-drawing functions.
Screen->PutPixels() should now work in any scope and in any drawing order.
	(Enqueued drawing needs vector pointers to keep the ZScript array data in scope.)

Added 'bitmap render_source' arg to bitmap->Quad() and to bitmap->Triangle();
	The new args are:
	void Quad ( int layer, 
		int x1, int y1, int x2, int y2, 
		int x3, int y3, int x4, int y4,
		int w, int h, int cset, int flip, 
		int texture, int render_mode, bitmap render_source);
	void Triangle	( int layer, 
			int x1, int y1, int x2, 
			int y2, int x3, int y3,
			int w, int h, int cset, 
			int flip, int texture, int render_mode, bitmap render_source);
		
	If render_source is not NULL, then the function *should* use that, rather than a tile/combo
	as its texture. This is wholly UNPROVEN.
	( Timelord, 25th April, 2019 )


bitmap->Write() will not overwrite an existing file.
Added bitmap render_src arg to bitmap->Quad() as its 16th param.
	All bitmap drawing commands now check if the dest is not the
	screen, and set their yoffset to 0 if it is not the screen.

	They also check if the dest is ! -2, which is the present RENDER TARGET,
	but they do not also validate that the RT is not RT_SCREEN.

	We may need to do that, too.
Fixed the yoffset coordinates for bitmap->Blit and bitmap->Rectangle.
Fix: Read/Write Bitmaps
	Changed bitmap Game->ReadBitmap("filename") to bitmap Game->AllocateBitmap();
	Made bitmap->Read("filename") into a drawing command as bitmap->Read(layer,"filename")
	Made bitmap->Write("filename") into a drawing command as bitmap->Write(layer,"filename")
	( Timelord, 24th April, 2019 )
	
Cleanup: Remove "Bitmap" BuiltinConstant
	( EmilyV, 23rd April, 2019 )
	
Possible fix for WriteBitmap refVar
Some fixes to writebitmap()
Begin adding bitmap->Write("filename")
Added bitmap->Height, bitmap->Width
Don't use bitmap pointers < 17 for ReadBitmap()
Fix compile and improve ReadBitmap
Begin adding bitmap Game->ReadBitmap("filename")

Added the ability to call onPasteAll, onPasteToAll, and onPasteAlltoAll
	from hotkeys. 
	All screen paste hotkeys use 'V', as follows:
		V: 			onPaste
		Shift+V: 		onPasteAll
		Control+V: 		onPasteToAll
		Control+Shift+V: 	onPasteAllToAll

I also added all of the normal copy/paste options to the contextual menu, and I added
	the ZScript submenu to the contextual menu.
	( Timelord, 23rd April, 2019 )
	
	
Parser: change `RELATIONAL_OP_RETURN_DECIMAL` to `BOOL_TRUE_RETURN_DECIMAL
	Now, instead of just relational operators, it also includes `true` itself.
	Also, the option previously failed to affect constant expressions; this has been fixed.
	( EmilyV, 22nd April, 2019 )


//Alpha 20
Updated default_qst.dat.
Updated classic_qst.dat.
Fixed bitmap pointers and drawing functions to respect the correct
	bitmap pointer ID.
Fixed Debug->SP to read/write to the correct data location.
	( Timelord, 22nd April, 2019 )
	
Fixed missing case for NO_ERROR_HALT:
	Function calls need to syncDisable with their parameters.
Fix type issues.
Function calls need to syncDisable with their parameters.
Fix: `using` fails to find current-scope namespaces
Fix: `using` nonfunctional within namespace
Fix: `==` and `!=` cast two-way 
	Added two-way checkCast, to see if two types are compatible in EITHER direction.
Fix: `==` and `!=` casting error failed to report location 
	This left an error that was extremely difficult to locate!
	( EmilyV, 20th April, 2019 )

//Alpha 19
Increased Build ID to 43.
Added a QR that causes eweapon->Parent to be multiplied / divided by 10000, for
	legacy support in quests made in older versions of 2.55 (or 2.54). 
Changed int eweapon->Parent to npc eweapon->Parent to ease typecasting,
	and removed the 10000 shifting. The npc pointer would use
	the raw value, not value * or / 10000.
	The setter now accepts npc as its arg. 
Added BITMAP to Scope.cpp. This had no effect that I can detect.
	I'm unsure why it was not there.
Fixed Graphics->NumDraws() to report the correct number of draws
	on the current frame.
Corrected (internal) args order for Game->CreateBitmap(h,w).
Renamed the function identifiers for Dimentio's Enhanced Music Ex
	chain in ffscript.cpp, and migrated them tot he FFScript class.

	The new functions are:
		void FFScript::do_playogg_ex(const bool v);
		void FFScript::do_set_oggex_position(const bool v);
		void FFScript::go_get_oggex_position();
		void FFScript::do_set_oggex_speed(const bool v);
Added bitmap->isValid() to ZScript.
Changed Graphics->MaxDraws to Graphics->MaxDraws() and changed
	Graphics->NumDraws to Graphics->NumDraws().

	The change is purely for the purpose of semantics. If these appear to be a variable,
	then the user may try to write to them. In the form of a function, it is immediately
	clear that they are read-only.

	The actual GlobalSymbols code still sees both as a GETTER, as a function with a return value
	and no parameters can be a basic GETTER. The only difference, is whether the table entry
	precedes the string with "get" or "set".

	i.e.
		"getMaxDraws" as a type of GETTER creates a variable 'MaxDraws'.
		By using the string "MaxDraws", the parser knows that this is the FORM of a function,
		'MaxDraws()', but it needs no params to push/pop, so it can still work as a
		GETTER type, instead of as a FUNCTION type.

		See 'NumNPCs' for more information.
Added Graphics->MaxDraws to ZScript:
	This, like Graphics->NumDraws is read-only, and it returns the maximum number
	of script drawing commands per frame.
	The purpose of this is as a utility for the end-user, as this value is a constant
		that may change on a per-build basis.
Added Graphics->NumDraws to ZScript:
	This returns the current count of script draws (CScriptDrawingCommands.Count())
	so that the user can know how many they have remaining.
Converted all script draws to inline functions, with the hope that this may
	make them faster.
Additional fixes to bitmaps and script-draws.
	( Timelord, 18th April, 2019 )

Restored the file 'zstrings.txt', used for the HELP button in the ZQ String Editor.
Various fixes to the bitmap datatype, bitmap->Blit, 
	Game->CreateBitmap(). 
	Bitmap pointers are now offset by +10.
	When calling bitmap->Blit(), you can specif the destination
		as the current RenderTarget by passing -2 as the dest.
		-1 is the screen normally, but draws to the screen with Blit(RT_SCREEN) only
		work on 'Layer 7'.
		Draws to the screen, if the current RenderTarget is RT_SCREEN, using
		Blit(-2) work on all layers. 
	Don't consider the SCREEN uninitialised. 
	Fixed some issues with bitmap pointer values being incorrect.
	Ensured that the sub-bitmap used for (allegro) sprite rotation commands
		is large-enough, based on the source bitmap size.
Removed invisible widgets carried over to the 2.50 (big) interface from
	small mode that allow toggling the cset and layer.
	( Timelord, 17th April, 2019 )

//Alpha 18
Rename EnhancedMusicEx functions to Ogg*
	Renamed PlayEnhancedMusicEx() to PlayOgg()
	Renamed SetEnhancedMuiscSpeed() to SetOggSpeed()
	Renamed SetEnhancedMusicPos to SetOggPos()
	Renamed GetEnhancedMusicPos to getOggPos()
Move the EXIT entry from the File menu, to the ZQuest menu, in ZQ.
	( Timelord, 15th April, 2019 )

Fix size of IDATAFLAGS
	( EmilyV, 15th April, 2019 )
	
Another revision of the fixes to lwpn, ewpn, item, npc->Jump
	return values. 
Updated zcsound.lib.
	( Timelord, 15th April, 2019 )

Merged OGGEX code (hand-merged by Z). 
VBounded the values of SetEnhancedMusicSpeed(); 
	max of 10x speed, min of 0x speed. 
	This should prevent crashing.
Added GetEnhancedMusicPos() and SetEnhancedMusicPos() to both
	Game-> and Audio->.
Added SetEnhancedMusicSpeed(); 1 is normal speed, 0.5 is half
	speed, 2 is 2x speed. 
	Be careful; passing values too high will crash the game!
Added OGGEX to zcmusic/zc_sys. 
	( Dimentio, 15th April, 2019 ) 
	Commits:
		https://github.com/ZQuestClassic/ZQuestClassic/pull/332/commits/20e7b40cca7999a6257dec623f62670731f82285
		https://github.com/ZQuestClassic/ZQuestClassic/pull/332/commits/36f0e3b0ee914e3de9b97cd806db6706217b3528
		https://github.com/ZQuestClassic/ZQuestClassic/pull/332/commits/b96116722610805c4cd3ca4ce250d0f7078931da

Changed the ZQ main menu so that if the user is in small mode,
they cqan still access every entry.
Re-added Import ItemSprite ASM Script to the ZScript menu.
Added a QR to draw dhadows on items/weapons with a Z > 0. 
Add bool Game->FFRules[] to ZScript
	( Timelord, 15th April, 2019 )

Fixed an error that I introduced into the return value of Link->Z.
Should fix longstanding rubbish return values for npc, lweapon, eweapon, and item->Jump
	( Timelord, 14th April, 2019 )
	
Fix NO_ERROR_HALT crash
Fix crash: Sync errorDisabled state up a level in several statements
	This prevents crashes caused by invalid data.
	( EmilyV, 12th April, 2019 )
		


//Alpha 17
Added enum value for edSHOWMESSAGE and marked implemented enemy defences.
Use #include in built-in headers, rather than import.
Fixed Lut's Easter Egg in both 1st.qst and 2nd.qst in the Classic Module.
Fixed a bug in the new sprite::draw() where it was not respecting draw offsets.
	( Timelord, 9th April, 2019 )
	
Modified Classic Module blank quest (.dat) to call `#include std.zh` and `#include Classic.zh`
Modified Default Module blank quest (.dat) to call `#include std.zh`
Moved demo-scripts/* to scripts/* 
Moved base package includes into ./includes and ./headers
Resized Assign Scripts dialogue to make all tabs fit at one time.
Fixed the `this` pointer in itemsprite scripts.
	( Timelord, 8th April, 2019 )
	
Added `until` statement to ZScript.
	This functions as the opposite to `while` (e.g., as `while(!)`)
	and the ASM generated by it is more optimal than while(!).
	( EmilyV, 8th April, 2019 )

Completely implement itemsprite script type.
	Items (on the screen) now have their own sprite script, 
	`itemsprite script`. 
	This runs on any item that is placed, created, or spawned on the screen.
	The script ID is assigned eithe rin the Item Editor, on the Scripts	
		tab, as the 'Sprite Script', or set by another script via
		`item->Script`
	At present, this script type shares its InitD with `item script`, but this
		is likely to change in the future to a unique InitD type. 
Added the following Enemy Defence Outcomes:
	Split: The enemy splits into n copies of enemy m, where n is
		Death Attribute 2 (misc 4)
		and m is Death Attribute 1 (misc 3).
		Does not drop an item.
	Summon: Summons a random (max n) enemies of type m, at random positions,
		where n is Death Attribute 2 (misc 4)
		and m is Death Attribute 1 (misc 3).
	Bomb Explosion: Enemy instantly dies, creating a bomb blast with damage
		equal to the weapon damage of the enemy.
		Does not drop an item.
	Superbomb Explosion: Enemy instantly dies, creating a superbomb blast with
		damage equal to the weapon damage of the enemy.
		Does not drop an item.
	Harmless Explosion: Enemy dies instantly, creating a harmless superbomb
		explosion.
		Drops an item.
Fixed subscreen item sprites drawn at an offset of +56y.
	( Timelord, 8th April, 2019 )

Untyped scripts no longer need a valid run() function to compile.
	If you give them one, you can call it from another script, as 'normal' in 
	the ZScript language for alien run() functions.
	Their local functions, and variables work normally.
Errors generated by the ZScript parser for run() (e.g. missing run())
	now use the run string, so they will report (e.g.) 'missing main()'. 
	( EmilyV / Timelord, 6th April, 2019 )

Added error logging to sprite->Scale and sprite->Rotation.
	If the QR below is enabled, these will log an error instructing
	the user that the QR must be enabled to use them.
Added a quest rule in Quest->Rules->Compatibility as
	'Old (Faster) Sprite Drawing' to use the old sprite::draw.
	Quests made in versions < 2.55 b42 enable this by default.
	The user must manually enable the new version of sprite::draw(),
	that allows scaling and rotation.
		This is because sprite draws took a 10% to 15% performnce
		hit due to the extra blits involved.
		( Timelord, 5th April, 2019 )

Added this-> pointer to hero (link) scripts, and to screendata scripts.
	this-> in hero scripts equates to Hero->
	this-> in screendata scripts equates to Screen->
Make all global pointer types constant.
Add `this` to `screendata script`, properly
Fix improper offset of script types.
`this` is now constant, and cannot be assigned to. 
	(it COULD previously! Why?)
	`this` will no longer be added if the typeid is `ZVARTYPEID_VOID`
	Special `this` handling added for `ZVARTYPEID_LINK`, i.e. `link script`
Chore: Change `Function::thisVar` from `BuiltinVariable*` to `Datum*` 
Fix crash caused by no-halt on error in ZScript compiler.
	( EmilyV, 5th April, 2019 )
	
Added error logging to sprite->Scale and sprite->Rotation.
	If the QR below is enabled, these will log an error instructing
	the user that the QR must be enabled to use them.
Added a quest rule in Quest->Rules->Compatibility as 
	'Old (Faster) Sprite Drawing' to use the old sprite::draw.
	Quests made in versions < 2.55 b42 enable this by default.
	The user must manually enable the new version of sprite::draw(), 
	that allows scaling and rotation.
		This is because sprite draws took a 10% to 15% performnce
		hit due to the extra blits involved.
	
Added sprite::drawzcboss() to use for drawing Z1 bosses.
	Most do not play well as-is with the revised sprite::draw(), and thus they
	do not at present support scaling or rotation. 

Added a quest rule to Compatibility Rules for pre-2.50.2
	DrawBitmap() offsets behaviour, and patched quest loader to most-approprately
	auto-set this bit.

Added a QR bit to allow r/w of Link->X, Y, and Z to be floating
	point ZScript values. This does not yet work properly.
	I added the setting to the ZScript Settings dialogue.
Cleaned up the structure of sprite::draw() and added logic comments to it.
Partially re-wrote sprite:draw() to ensure that all extend values
	and all flip types support Rotate and Scale.
Added Sprite Scaling to all sprite types, in ZScript:
	float lweapon->Scale;
	float eweapon->Scale;
	float npc->Scale;
	float item->Scale;
	float hero->Scale;
	
	Scale is a multiplier, so, a scale of 1.000 is normal scale.
	Scale of 0 is also 'normal' scale, as this indicates that scaling is off. 
	Negative scale values are undefined (and cause sprites not to draw).
	A scale of 1.5000 draws a sprite 50% larger.
	
	Scaling only works at this time if extend == 0. 
	
	Scaling a sprite does not offset its coordinates. 
	( Timelord, 5th April, 2019 )
	

Fixed the values for some Combo Types in the module format.
	The module loader was offsetting the string used for combo types
	CT_SLASHNEXT and above. This offset CT_SCRIPT1 to show as 'Script 2' in the editor.
	( Timelord, 5th April, 2019 )
	
Added FFScript::updateIncludePaths(), calling in ZQ.
	This is used to update the values stored in FFScript::includePathsStrings
	when the user changes the string in the GUI. 
	( Timelord, 4th April, 2019 )

Add `#include`, add `Max Includes` display to compiler settings dialogue

	`#include "path"` - will import the file at that path, relative to the first path in `include_path`, 
	in `zquest.cfg` (or the compiler settings dialogue)
	(This is searched at `ScriptParser::preprocess()`)

	Added `ZQincludePaths[][]` as an array to copy `FFCore.includePaths` to, to extern into `ScriptParser.cpp`.
		This is filled after `FFCore.init()` is called, and when `OK` was pressed in the 
		compiler settings dialogue.

	Added `Max Includes: %d` display to compiler settings dialogue, displaying the value of
		`MAX_INCLUDE_PATHS`
		It sucks not knowing why your 4th include in your test isn't working...

	Increased MAX_INCLUDE_PATHS from 3 to 5, and moved it's definition from `zdefs.h` to `parser/parserDefs.h`.
		`parser/parserDefs.h` has been added as an include to `zquest.h` and `ffscript.h`
	( EmilyV, 3rd April, 2019 )

Added "Include Paths:" label to the dialogue. 
Added a config string for include paths to zc.cfg and to zquest.cfg as:
	[Compiler]
	include_path

	Added void FFScript::void initIncludePaths(); --called by FFCore.init();
	Added char FFScript::includePaths[MAX_INCLUDE_PATHS][512];
	Added char FFScript::includePathString[(MAX_INCLUDE_PATHS+1)*512];

	Include string format is:
	<path1>;<path2>;<path3>;

	Example:
		Full path string is: test/;test2/stuff/;test3/morestuff/headers/;
		Include path 0: test/
		Include path 1: test2/stuff/
		Include path 2: test3/morestuff/headers/

	The default for Include Path 0 is 'include/'.
	If no user-set path exists, the main include path is 'include/'.

	Note: Nothing yet uses these, and there is not yet a way to set them in the ZQ UI.
Fix compile on aglogo.
Fixed the Nth bit where Parser Quest Rules start.
Updated build date and Alpha status to 17.
GUI: Cleaned Up Cheat Modkey Dialogue
Added 20th Anniversary banner to AGN Logo
	( Timelord, 3rd April, 2019 )

Added an option so that errors do not cause the ZScript compiler to 
	immediately halt. 
	Instead, it will report all errors that it encounters, and refuse
	to compile the scripts, so that the user can review all errors
	in a single sweep.
	Option NO_ERROR_HALT added, updated default zquest.cfg
HEADER_GUARD and NO_ERROR_HALT can now both be set from `zquest.cfg`, using the same token, under `[Compiler]`
	NO_ERROR_HALT defaults off
	If on, errors will not halt compilation; compilation will halt just before completion instead, in this case.
Parser: Various improvments and fixes to `using` and `namespace`
	Several optimizations and logic fixes.
Fix: Missing vector.push_back() when declaring `namespace foo::bar{const int C = 5}`
Parser: Slight recursion optimization in analyzeFunctionInternals
Don't duplicate namespace registration 
	Fixes `always using` issue.
Parser: Add `breakRecursion()` overload without AST& param
	This allows quickly checking fail/breakNode state without needing an AST node handy.
	( EmilyV, 2nd April, 2019 )

Parser: Relational operator ZASM fix	
Parser: Add MULTV instruction to rel operators
	This means `<int>(bool > 0)` will now be 0 or 1 instead of 0 or 0.0001, for all relational operators.
	This affects only casting and untyped things, functionally.
	Performance-wise, this is an extra instruction per rel operator.
	Option RELATIONAL_OP_RETURN_DECIMAL added; set to `on` to remove this MULTV. Default off.
	( EmilyV, 1st April, 2019 )
	
Added the ability to rotate sprites by script, implementing
	npc->Rotation, Link->Rotation, lweapon->Rotation, eweapon->Rotation,
	and item->Rotation.
Added rotated draws to sprite::draw(), but only for sprited objects where extend == 0;
Disable rotated sprite blits in sprite.cpp.
Feat: Begin adding Sprite->Rotation
	( Timelord, 1st April, 2019 )

//Alpha 16
Revised the Bombchu emulation behaviour, and toggled the QR based on
	quest header data.
	2.50.0 and 2.50.1 quests have superbomb enabled by default.
	2.50.2 and 2.50.3RC1 quests have normal bomb by default.
	The emulation option is unavailable for quests made 
	in 2.50.3RC1 or later. 
	
Updated std.zh for 2.55 Alpha 16
	Version is 1.6000
	Optimise all functions for new ZScript parser.
	Revised some functions.
	Moved itemdata functions into idata.zh, inside namespace idata.
	Added some configs to std.cfg.
	Updated docs for std.zh and added std_extension.txt
Added npcdata->GetName(int str[]) to ZScript.
Corrected Controller Button Constants in std.zh
Revamped all keyboard key dialogues:
	Added the ability to clear any keyboard key setting from
		the GUI using a new 'Clear' button.
		This button is on all keyboard key dialogues.
	Ensured that modifier key bindings must be unique against all other keybindings.
	Ensured that a keybinding of 0 (None) does not need to be unique.
Added a dialogue to configure cheat modifier keys.
	( Timelord, 1st April, 2019 )

Avoid using `GOTOLESS`, because it could cause `0.0001` to == false, depending on QR setting
Parser: Optimize short-circuit behavior
	Optimised ASM generated when short-circuiting is enabled.
Feat: Option dialogue linked to options
Parser: Improve option value handling
	( EmilyV, 31st March, 2019 )

Added short-circuit logic to the parser.
	When on, `||` and `&&` will short-circuit. i.e. `(true || foo())` 
	and `(false && foo())` will not call `foo()`
	Defaults to off. 
Changed cast style
	Now `<type>expr` instead of `cast<type>(expr)`
	Tokens `cast` and `static_cast` are un-reserved
Fixed custom const types  / need `const` in name!
	( EmilyV, 30th March, 2019 )

Solid FFC: Added Note on Placement
Initial Work on Solid FFCs
	( Timelord, 30th March, 2019 )

Fix: Re-add sanity check on `const typename`
Parser: Add custom enum types, fix constant issue from previous commit
	Usage:
	`enum day { SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY };`
	Then, `day d = SUNDAY;` or `const day TGIF = FRIDAY;`
	`day d = 1;` is NOT valid. (You can use untyped or casting to bypass this, though)
	These are not just renamed types, they are ACTUAL separate types!
	They will cast to float/bool, though; `int d = SUNDAY;` would be fine, resulting in `d = 0;`
	You can use floats in the initializer without issue 
		(`enum foo { min = -1, zero, one, two, three, max };` won't give you a `cannot cast from float to foo` error)
Internal: Fixed memory leak in constants. Remember to `clone()`!
	( EmilyV, 30th march, 2019 )

std.zh: Added error codes _ERR_REDEFDATATYPE and _ERR_CONSTALREADYCONSTANT
`const` is now separate from type keywords :
	This means that you can now use `const` with typedef'd types.
		Previously, `typedef int foo;` then `const foo f = 5;` would give an error, `unexpected token const`.
		This has been rectified, now allowing this as a way to create a constant of type foo.
		A new error code has been added, because `typedef const int define;` then `const define;` means `const const int`, which is an error.

	Internal: `DataType->getTypeConst()` will now fetch the constant version of a naive type.
	( EmilyV, 29th march, 2019 )
	
Weapons with a UseType of Sword can now cut grass/bushes/pots,
	and trigger sword triggers.
Added the following to ZScript:
	lweapon->Defense, lweapon->Defence : Sets the UseDefence property for an lweapon.
	lweapon->Weapon : Sets the UseWeapon property for an lweapon

Fixed some issues where the default weapon defence type would be
	wrong, particularly if the weapon UseWeapon type value was not None.
	Probably fixed some other, related bugs at the same time.
Fixed some errors in the new weapon system. The weapon type override
	seems to work fine now; however setting the 'default defence' is still broken.
	It's giving the wrong value somewhere down the chain.
Ported the New Weapon Defence System that I wrote for the DD 2.60
	old master branch, to 2.55.

	This does the following:

	Items/lweapons now have a 'UseDefence' property.

	Effects: If an enemy in the Enemy Editor has its defence category for that
	weapon type set to 'None', and the weapon has a base defence type, then
	that defence type (effect) will be applied as if the enemy had it set.

	Items/lweapons now have a 'UseType' property.
	Effects: When hit with this weapon type, the enemy will use the defence
	category of the simulated 'UseType' weapon type, rather than the true weapon
	type of the weapon.
Ported the 'Weapon Properties' Item Editor tab that I wrote,
	from the old DD 2.60 master branch, to 2.55.
	( Timelord, 29th march, 2019 )

Style: Matched braces in std_vars.zh
std.zh: Optimise std_vars.zh
Updated std.txt to cover all cleanup in std.zh, except for
	std_extension (t/b/a).
	( Timelord, 28th March, 2019 )
	
Added details on #option HEADER_GUARD to ZScript_Additions.txt,
	added 'always using', and corrected the docs for 'using' (scope).
Default for Header Guard is now WARN
	( Timelord, 27th March, 2019 )

Allow disabling of any AST node
	`node->disable();` to disable, `node->isDisabled()` to read. Cannot be re-enabled.
	Disabled nodes are skipped by RecursiveVisitor::visit() and BuildOpCodes::visit(), 
		effectively deleting the node, and everything inside it, from the output.
	HEADER_GUARD now disables duplicate imports in this manner.
	LOGGING also does, as I built this off of what that option did.
Added parser #option HEADER_GUARD
	Values:
	`off` - nothing new
	`on` - Ignore duplicate import statements
	`error` - Throw duplication error on duplicate import statements
	`warn` - Throw duplication warning on duplicate import statements, and ignore the duplicates.

	Keywords: Reserved `error` and `warn` within HASH environment (#option)
	`error` has a literal value of 2,
	`warn` has a literal value of 3.
Files: Add `parserDefs.h`, as a `zdefs.h` for the parser.
Fixed src compile error. 
Fixed accidentally using usingNamespaces from parent file.
Added 'always using'
	Usage: `always using namespace NAME;`
	This can only be declared at the File Scope.
	This declaration will make ALL code act under `using namespace NAME;`, regardless of being in a different file.
Fix: Missed some changes in BuildVisitors.cpp/h and Scope.cpp/h
	( EmilyV, 27th March, 2019 )

Added a config line 'logo_volume' to the 'zeldadx' section of zc.cfg to
	set the sound volume of the AGN fire logo.
Music.zh: Renamed BossMusic to MusicZH_BossMusic to avoid a conflict with Classic.zh
Added missing $END token to the enum that EmilyV added to
	std_constants.zh.
Music.zh: Disable call to LogPrint
Music.zh: Fix NPC_MIDI and NPC_MUSIC scripts. Bump to 1.3.5.
Fixed the screen info for 'Layer Used By' not updating properly
	when changing maps.
	( Timelord, 26th March, 2019 )

Parser: Add `itemsprite` and `untyped` script types, parser-side only.
Changed _ERR constants to an enum.
Fixed roken flag6 on wands, cbyrna 
Add `using`, for both FileScope and ScriptScope 
	Use: `using namespace NAME;` or `using namespace NAME1::NAME2;`
	( EmilyV, 24th March, 2019 )
	
Fix Compile: Missing comma in QRs
Added a QR that causes bombchu explosions on contact with Link
	to be superbomb sized. This used the absolute last, unused rule bit for 2.53.
	This should be ported to a behavioural flag, set by qst.cpp on the enemy,
		in the future.
Don't terminate the ZQuest process if the user presses the CANCEL
	button in the Load Module dialogue.
Allow Setting Doors on Mapscreens > 0x82
Fixed the state of 'save' not being set when deleting a favourite
	combo using the contextual menu.
Added the ability to import LWeapon, EWeapon, DMap, Hero, and
	Screen ASM scripts to the ZScript menu.
Prevent changing module while playing a quest.
Loading a module in ZC player now refreshes the title screen.
Added a Modules menu, and Load Module to ZC Player.
	The file select screen does not yet refresh on loading a new module, but
	it does refresh on selecting a quest.
Fixed a crash when loading 2.50 quests, caused by trying to initialise
	zinit.SBombmax with division by 0 in qst.cpp.
Added a Modules menu to ZQuest, and added Load Module to it.
It is now possible to load a module at any time.
	( Timelord, 24th march, 2019 )

Namespace now registers directly to RootScope, skipping FileScope.
Added SCOPERES operator ("::"), used exclusively in ASTExprIdentifier for namespace resolution.
	`namespace::var` is valid. `script.var` is valid.
	`namespace.var` is invalid. `script::var` is invalid.
Namespace is now run directly after imports, rather than last. No clue why it was last before.
Added several bison nonterminals, allowing now `Identifier_List` (containing any list of identifiers) as before, as well as `Scoperes_Identifier_List` which cannot contain `.`, and (commented out as it is currently unused) `Dot_Identifier_List`, which cannot contain `::`.
Added a way to declare multiple namespaces at once: `namespace name::name2{}`. This declares a namespace `name`, then declares `name2` within it.
	( EmilyV, 22nd March, 2019 )

Added dialogues to the ZScript Menu for 'Quest ZScript Settings',
	and for ZScript Compiler Options. 
	These are stored with the quest as rules.
Removed Scripts rules from QR dialogue. 
	We now have them in the ZScript dialogue.
The Assign ASM NPC Script menu option now opens the appropriate dialogue.
	( Timelord, 21st march, 2019 )

Added Import NPC ASM Script to ZQuest
Added a new menu to ZQuest, 'ZScript'.
Renamed the Link tab in the Compile ZScript dialogue to 'Hero'.
Updated ZScript_Additions.txt
	( Timelord, 20th march, 2019 )

Added `namespace` to ZScript.
	Use:
	namespace namespace_name
	{
	 ///vars, functions
	}
Added the following tokens to ZScript:
	Pointer Hero->
	Pointer Player->
	hero script
	player script
	These are synonymous with Link-> and link script, both of which
		are now deprecated, but still legal for compatibility reasons
		with older scripts.
	( EmilyV, 20th March, 2019 )

Fixed illegal esc char in menus.
Fixed copyright year on ending.
Updated Music.zh to v1.3.4
Added file mobileBait.zh, with lweapon script MovingBait.
	Call that script by import in Classic.zh.
	Classic.zh version is now 2.02.
The bomb bag (L1) starts Link with 30 bombs. We only want him to
	have 8, so we set his max_bombs in Init Data. We don't give him this item.
Added files: lweapon scripts FireRod, replaceOnDeath, lwBombArrow, and lwZigZag
Added files: eweapon script ewZigZag
Classic.zh
	Updated to v2.01
	Adds calls to import lweapon scripts FireRod, replaceOnDeath, lwBombArrow, and lwZigZag
	Adds call to import eweapon script ewZigZag
	( Timelord, 19th march, 2019 )

Convert the values for Halt Duration, and Accel Factor for
	Keese, Peahats, and Phantom Ghini enemies in 2.10 and earlier quests on
	file load.
Re-added LogPrint() and ScreenPrint() to string_functions.zh.
	The build package lost these in a file overwrite at some prior point.
	( Timelord, 18th March, 2019 )


//Alpha 15
Ported Link.lookaheadraftflag() from 2.53. 
Maybe Fix New Tile-Based Crashes
Ported the fix for 1.84 quests starting with 30 MAX Bombs from 2.53.
Added hotkeys for the following Lv4 Cheats
	Kill All Enemies (K)
	Show Overhead (O)
	Show Push Blocks (P)
	Show Hitboxes (C; for Collision)
	Show FFScript Names (F)
	Ported from 2.53 Gamma 6, including the fix to the K key in the menus.
Ported the fix for the crash when removing a Cane of Byrna item by script from 2.53.
Added Developer Status Flag
	( Timelord, 17th march, 2019 )
	
Added 'Triforce in Cellar Warps Link Out' to Quest Rules->Other->2.

Fixed a crash when writing tiles, and added a rule patch for the 2.10
	Triforce in Item Cellar Warp Out rule.
	( Timelord, 15th March, 2019 )

Attempt to correct new Init Data values being improperly
	initialised.
Cap max bombs in <= 1.84 quests at 8.
	( Timelord, 14th March, 2019 )

The value for `new_blueframe_tile` is now properly populated
	for quests made in 2.10 and earlier, by the saving routine in ZQuest.

	This prevents corruption of that tile.

	Any more of these old tile conversions that I've missed? -Z

My prior fix did not cover enough ground.:
	After reverting the previous change, I fixed the issue now, in:
		`void frame2x2(BITMAP *dest,miscQdata *misc,int x,int y,int tile,int cset,int w,int h,int /*flip*/,bool overlay,bool trans)`
		inside `subscr.cpp`.

	I do not know yet, if loading a <= 2.10 quest in 2.55, then saving, will break this
	again. 
	
	It seems that when you loaded an old quest in 2.50, it populated the QMisc tiles somehow.

	I'm not yet sure where, but, because we check section_version in 2.55 to populate QMisc newtiles,
	if that part of the quest load does not convert to the newtile instead of the (old) tile,
	then it'll be the same issue all over again with the newly saved 2.55 quest.
	( Timelord, 13th March, 2019 )

1.92 and earlier used a completely different tile for the 2x2 frame
	subscreen object. As this could not be changed, we now read that tile directly
	if the quest was made in the old version.

We were only checking build ID, which used to be used for the beta ID
	of builds before 2.50. This now checks vZelda and vBuild, more appropriately,
	and adds in some weapon patches for weapon `newtile` values for old versions.

It seems that 1.84 quests do not start with a bomb bag, but
	they should, as the item did not exist in those old versions; and thus,
	the player cannot pick up bombs in quests made using them.

Set bobomb enemy script in classic_qst.dat.
	( Timelord, 12th March, 2019 )
	
Restored some module settings, that were being overwritten by the last change
	and fixed sels_linktile so that setting it affects the default
	quest icons, but not icons set in the actual (custom) quests.
Updated to Alpha 15, and added an unused QR to ZDefs.h
Restored the ability to set a default tile for Link, and a CSet to
	use on the title screen, for Modules.
	Note: Changing the CSet, WILL potentially make custom quest icons messy, as
		it is a global override.
Rewrote much of static void list_save(int save_num, int ypos)
	to fix Game Icons not being loaded, and yet preserve module customisation.
	Let's hope that none of the customisation allowed by the ZMOD format broke here.
Added QRs to enable draws during screen scrolling, warping, and
	Link stepping forward on dungeon screens.
The global init script now runs earlier, populating arrays prior to
	playing = true.
		This permits the Link init script to access those arrays, as the array declarations
	and any variables declared at a global scope, are not created until the
	global init script runs. (File scope declarations occur from the global init slot!)
Fixed dmap script InitD truncating decimals in the DMap Editor.
Fixed npc, npc weapon, and item weapon InitD truncating decimals
	in their respective editors.
Fixed population of npc InitD from run() params.
Fixed DMap scripts not getting their InitD set from the DMap Editor.
	( Timelord, 11th March, 2019 )

std.zh: Add `_ERR_` constants, for `EXPECT_ERROR`
Parser: Change `EXPECT_ERROR` to `#ignore error`/`#ignore warning`
	( EmilyV, 7th march, 2019 )

//Alpha 14
Fix Fireball eweapon being called FIREVOLT in CLassic Module. 
Removed Daira ffc script. 
Added __CLASSIC_ZH_VERSION macro to Classic.zh
Modified default quest file (classic_qst.dat) to use the npc and eweapon scripts,
	instead of the Autoghost script.
Reconfigured Daira L1, and L2 enemies in Classic.qst.
Added Daira Axe Controller script to Classic.zh
	The script file is in demo_scripts/eweapon_scripts/daira_axe.zs
Added Daira npc script to Classic.zh. 
	The script file is in demo_scripts/npc_scripts/daira.zs
	( Timelord, 7th March, 2019 )
	
Added enum to ZScript, as follows:
	enum { A, B, C = 5, D, E = 10, F };
	...where A == 0, B == 1, C == 5, D == 6, E == 10, and F == 11
	( EmilyV, 7th March, 2019 )

Updated classic_qst.dat, with the improvements/includes from 2.53.

Added bobomb npc as NPC ID 179 to Classic.qst.

Added bobomb npc script , as: demo_scripts/npc_scripts/bobomb.zs

Modified glost_zh/2.8/other.zh, to fix conflict (default as identifier).s

Added test_scripts path, and copied over all old test scripts from Alpha 13.
Added demo_scripts path.
Added demo_scripts/npc_scripts path
Added demo_scripts/lweapon_scripts path
Added demo_scripts/eweapon_scripts path
Added demo_scripts/dmap_scripts path
Added demo_scripts/link_scripts path
Added demo_scripts/item_scripts path
Added demo_scripts/ffc_scripts path
Added demo_scripts/global_scripts path

Merged std.zh from 2.53 and 2.55, hopefully with no loss of content.

Moves modules into their own paths, as:
	./
		modules/
			classic/
			default/
			demo/
			demojer/
			expo/
			
	All of the module (.zmod) files are in ./modules, and all
	datafiles and quests are called using relative paths.
	( Timelord, 7th March, 2019 )

Ported over all Classic.zh, classic.qst (qst.dat), and related includes
from 2.53. This includes all of the following from the 2.53 changelog (between
the rows of hashes):
	( Timelord, 7th March, 2019 )
##############################################################################################################
Updated all default active subscreens in qst.dat, with the new items. 
Added the following item scripts to Classic.zh, and items
	to the default quest in qst.dat:
	
	MagicBossKey: Acts like the Magical Key, for Boss Locks.
		Set to item ID: 146
	MagicalMap: Gives the player the dungeon map to every dungeon.
		Set to item ID: 147
	Magical Compass: Gives the player the compass item to every dungeon.
		Set to item ID: 148
	
Classic.zh: Fix BossExplode ffc to work with all segmented bosses. 

Updated qst.dat 

Fixed the SignPost ffc script.

Moved the new functions from Classic.zh to std_functions.zh.
Added some relativity functions to Classic.zh--should move to std_functions.zh:
	DistXY(ffc, int), LeftOf(), RightOf(), Above(), Below(), Facing(ffc).


Classic.zh Fixes and Improvements:
	Renamed constants to prevent future conflicts.
	BossMusic ffc: 
		Fixed a bug that caused the victory music to re-play when the
		player revisited the screen.
		Added InitD variables to allow customisation by the user.
	BossExplode ffc:
		Added InitD variables to allow customisation by the user.
	DropTRIFORCE ffc:
	DropHEARTCONTAINER ffc:
		Fixed a bug that caused the TF drop to repeat if the player revisited
		the screen.
		Added a dropshadow to the object when falling.
		Slowed falling descent. 
		Clamped screen coordinates of drop to ensure that the object does
		not fall partway off the edges of the screen.
	( Timelord, 24th February, 2019 )


Added scripts 'DropTRIFORCE' and 'DropHEARTCONTAINER' to Classic.zh.
	Fixed issue where invalid weapons were loaded by 'BossMusic' ffc script
	because of a Waitframe in the loop.
	Removed traces.


Updated qst.dat with all of the new goodies. 

Added constants to Classic.zh:
	const int _classic_zc__TRK_BOSS = 25;
	const int _classic_zh__MIDI_VICTORY = 1;
	const int _classic_zh__TILE_FIREWORK = 10140;

Added file Classic.nsf, from klop422 (Legend of Zelda NSF  from the PZC Database). 
	We use track 25 for boss music here.
Added a victory jingle MIDI as MIDI ID 1. 
Add combo to use for Boss Audio FFC to combo page 3 as combo ID 905.
Added BossMusic ffc to classic.zh. This is compatible with the BossExplosion ffc.
Added tile for Boss Audio to tile page 61 as tile 16026.

Added overload functions to Collision() that function as LinkCollision(). 

Updated ffc scripts in classic.zh to clear their combo on init. 
Fixed signpost script. 
Added default fireworks ffc to copy and paste, on map 1, screen 0x82. 
Added combo using the Fire Work tile to combo page 3, as combo 904.
Added tile to use as  marker for fireworks ffc to tile page 61, as tile 16025.
Modified fireworks script constants. 
Added fireworks SFX as sound 61. 
Added fireworks weapon sprite as Sprite 88. 
Added tiles for fireworks to tile page 39 as tiles 10140, 10141, 10142.
Fixed daira tiles on page 38. 
	( Timelord, 21st February, 2019 )
	
Classic.zh:
	Added item script 'ItemSound'
	Added FFC script 'BossExplode'
	Added constants:
		const int _BOSS_EXPLODE_SPRITE
		const int _BOSS_EXPLODE_DUR
		const int _BOSS_EXPLODE_SFX
		const int _BOSS_EXPLODE_DELAY
		const int _BOSS_EXPLODE_RANDOM_MIN
		const int _BOSS_EXPLODE_RANDOM_MAX
	
		const int I_HALFMAGIC = 	144;
		const int I_LEARNSLASH =	143;
		const int NPC_DAIRA1 = 		177;
		const int NPC_DAIRA2 = 		178;
	
Add item: Message (Example) as item 145.
Adjusted stats of both Daira enemies, and set their defences. 
	Note: 1/4 Arrow damage is intentional for L2, to reflect
	better armour/scales. 
Add Daira (L2) [blue] as enemy 178, renamed Daira to Daira (L1) [red].

Default quest changes:
Added ffc scripts:
	PermBlockSecrets : This triggers normal screen secrets.
	PermBlockShutter : Block->Shutter secrets in NES Dungeons
	Daira (autoghost)
Removed ffc script PermSecret
Fixed name of 'CanSlash' item script. 
Added item script 'ItemMessage'
Added Daira enemy as npc ID: 177
Added Daira script to classic.zh
Added Daira tiles to tile page 38 (tiles 9880, through 9959)
	( Timelord, 19th February, 2019 )
Added call to Classic.zh in the buffer.
	Updated all active subscreens to include the new items. 
	Added items: 'Scroll: Learn Slash', 'Scroll: Half Magic'
	Placed default FFCs with scripts attached on map 1, screen 0x82. 
		These have their icon set, and their Ethereal flag set. 
	Added the following scripts:
	Default active script with Tango and Ghost.
	Half Magic Item (item, pickup)
	Learn Slash Item (item, pickup)
	Change Room Guy (ffc)
	Perm. Secrets (ffc) 
	Signpost (ffc)
	
	Added freezeall and freeze only ffc default combos to combo page 3:
		
	Added tiles on page 61 for icons to represent the FFC scripts. 
	(Tile IDs: 16002, 16003, 16004, 16005, 16023, 16024, 16061, 16062)
	Added combos for ffc icons to combo page 3:
		IDs: 892, 893
		Icons for the above, are combos: 888, 889. 
	Added tiles for the icon combos for freeze combos to tile page 61 as 
		tiles: 16000, and 16001. 

Began adding some default scripts to Classic (as Classic.zh), and 
	corrected some constants in the included scripts, to match.

Updated qst.dat, to strip out some remaining rubbish pal cycle data. 

Re-fix 1st.qst Level 9 Rupee issue. I had set the wrong type. 
	( NightmareJames, 16th February, 2019 )

Fixed a secret rupee in Lv9 (1st.qst) not being secret.
	( NightmareJames, 31st January, 2019; file added to Gamma 3, 14th February, 2019 )

Changed the default length of the short hookshot to 8. 
	At one point, the distance was in pixels, then someone
	changed it to tiles. We'll make pixels an option again in 2.55. 


Fixed the following in std.zh:
	Added revised behaviour to RotatePointX() and RotatePointY().
	Added toggle for old/new RotatePointX() and RotatePointY() behaviour.
	Probably fixed issues with catsizes() in ScreenFlag() and ScreenEFlag().
	Swap lit bomb and bomb returns in int WeaponTypeToID(int wpnt).
	Remove extraneous 's' in bool EnemiesAlive().
	Add float LargeDistance(int x1, int y1, int x2, int y2, int divisor).

	Somehow the file size on disc decreased in the process. Not sure on this one.

Fixed Ganon's HP in 1st/2nd. On the NES, he has 30, not 32.
	
	The NES Ganon hurts Link. 
##############################################################################################################

Added const bitmap, const cheat, const combodata, const doorset, const dropset, const dmapdata, const eweapon, 
	const ffc, const gamedata, const item, const itemdata, const lweapon, const mapdata,
	const messagedata, const misccolor, const npc, const npcdata, const palcycle, 
	const palette, const ponddata, const rgb, const shopdata, const spritedata, 
	const musicdata, and const warpring to the system.
Fixed a crash caused by permitting using function returns to initialise constants.
	( EmilyV, 6th March, 2019 )

Port over all fixes applied to 2.53 from 2nd December, 2018; through 6th March, 2019.
	
The following log events from the 2.53 changelog have now been committed to 2.55 (between rows of hashes):
##############################################################################################################
Renamed all system-wide screenshot files as follows:
	ZC: 
		zc_screen#####.png
	ZQuest:
		Maps:
			zq_map#####.png
		Screen:
			zq_screen#####.png
	( Timelord, 6th March, 2019 )

The Export ZScript now uses the .zs extension by default (no ZLIB conflicts).
ZCL version is now 2.6.12:
	Fixed default pane of the ZQuest tab in ZCL.
	Removed duplicate 'Misaligns' option box in ZCL.
Cleaned all intermediates, all project files, and all CMake files.
	Built clean.
Changed l_down sprites on 8-way enemy shots to face down.
	( Timelord, 5th March, 2019 )
Resize fields for text entry to fit five chars. 
Fixed Init Data (and cheat data) field sizes for:
	Heart Containers (was a field size of 2, now 3)
	Starting HP (in hearts, was 3 now size 5)
	Starting Magic (was size 3, now 5)
	Max Magic (was size 3, now 5)
	Super Bomb Ratio (was size 2, now 3)
2.50.x quests with a build < 31, or quests with a header 
	version < 0x250 will now write hitsfx = WAV_EHIT, for all guys where 
	the hitsfx sound == 0, on saving a quest in 2.53.
Quests made in 2.53 Gamma 0/1 or earlier (build 31) now load
	WAV_EHIT into the enemy editor hitsfx field when the editor opens.
	This prevents corruption of the quest by modifying the value on quest load,
	and ensures that the value only changes if the user saves the quest in 2.53.
2.50.2 AND EARLIER play SFX_HIT even if Enemy Editor Hit Sound is 0. 
	Thus, I added a special case that causes this to happen in guys.cpp, based
	on header version and build. 

	Arbitrary enemy policy 15610. :P
	( Timelord, 25th February, 2019 )
Fixed Byrna Cleanup Routine killing SFX 30. This was caused by
	`last_cane_of_byrna_item_id` never being able to be -1 because it was declared
	as byte, instead of int.
Added a case for r_down dir on 8-way EW_MAGIC shots. 
	( Timelord, 22nd February, 2019 )
Fixed ZCL 'Skip Logo' selection not saving. 
	ZCL is now v2.6.11. 
Commented out some conflicting constants in stdExtra.zh
Moved stdWeapons and Laser.zh into an 'extras' path.
Corrected power rating of remote bombs. 
	This will only affect quests saved in 2.53, and 
	only if the power of the bomb is > 1. 
Expanded the Emulation menu toggle to cover builds through 2.50.1. 
	I'm tired of this one, too. 
Fixed the selection mark for Bombchu Emulation, and ensured that
	it is enabled by default for 2.50.0 and 2.50.1 quests. 
Added an emulation option to restore the large blast radius 
	(superbomb) if Link is hit by a charging bombchu.
	This is enabled by default for 2.50.1 and earlier quests, and disabled in 2.53 quests
Fixed 8-way shots always using WAV_FIRE.
	Added an emulation memu option to force using WAV_FIRE for all 8-way shots.
	This is enabled by default in quests < 2.50.
	This menu option is disabled in 2.53+ quests.
	( Timelord, 18th February, 2019 )
Fixes for Palette Cycle Issues:
	Palettes above 256 were not set up to have palette cycles in 2.50.
	The array in QMisc is [256][3], where it should have been [512][3].

	Because of this, palettes above 0xFF had rubbish data associated to their cycle data.

	To remedy this, I have done the following:

		All palettes > 255 have a null palette loaded into them, in the editor and as
		palette data, to zero out their cycle information.

		This should occur both in ZC, and in ZQuest.

		I disabled clicking the Cycle button in the Level palette editor, and display
		a jwin-alert that the palette doesn't support cycling.

	Let's hope this doesn't cause crashes in any quests, in ZC.
Added leading zeros to the 'Select Item' 'Pow: ' field, so that
items with powers greater than 10 don't carry over digits to items with
powers < 10.
	( Timelord, 17th February, 2019 )
Updated include 'tango.zh', and its associated demo to current versions of both.
Pressing the Enter key, or the numpad Enter key, while viewing
the Quest Header dialogue now EITHER activates the selected element, 
	or saves the dialogue changes, instead of opening the
	'Change Quest password' sub-dialogue. 
	It will auto-save if the selected element is OK, or any TEXT field.
	Otherwise, it triggers the selected element.
	This should also work from the numpad Enter key. 
	I also made the changes as an EXAMPLE chain, for making all
	JWin DIALOGUES more user-friendly, in the future. 
		See Commits in branch 2.53: 
			b479871e9d38d8245874bc6cffc2f72e93f6cd5a
			c638d67cd856cc09e2e937c5a7da3dc9e0743952
			93956d00d4bb933236c6625cb778eb6ddd5caba4
Added a new function, Link.cleanupByrna() and called it in game_loop() (zelda.cpp).
Added a sfx cleanup for the byrna beam to weapons.cpp.
Added a new LinkClass variable, byte last_cane_of_byrna, that functions similar to
	last_lens_id.
	It inits at -1, then when Link uses a cane, it is set to that cane's ID.
	It is reset to -1 in Link.cleanupByrna().
Added kill_sfx() call to three other possible places where the Cane of Byyrna
	sound should probably be terminated:
	Whenever we call stopCaneOfByrna()
	If we can't pay the cost during item / weapon init
	If the beams aren't created during init, for some reason. 	
Cleared Link's attackclk before calling win_game(). 
	This prevents a charged sword, or other weapon, from carrying
	over to the ending sequence as a visual artefact. 
Stop playing byrna beam sfx as soon as the beams die in Link.cpp
Fix stunned peahats hurting Link in 2.50+ quests.
	( Timelord, 14th February, 2019 )
Hardcoded WAV_FIRE in weapons.cpp with version check.
Corrected copyright year in zdefs.h. 
Possibly fix some issues with the hammer.
Fixed screenshots saving without using modifier keys.
	This had nothing to do with the cheat system, but rather, was an invalid sprintf
	format in onNonGUISnapshot.
Emulation: Restrict Repeating DMap Intros to 2.11.x
Enabling or disabling the Debug Console (win32 only) now updates and saves
	the zc.cfg file setting for debug_console under zeldadx.
Fixed Wealth Medals in Bomb/Arrow upgrade rooms which use percentage zero 
	out cost (integer division != double division) (guys.cpp)
	No code was ever in place to give the discount? (link.cpp)
	( EmilyV, 11th February, 2019 )
Fixed Combo Aliad dialogue not doing copy/swap for aliases
	greater than 999. Required refactor.
	( Timelord, 30th January, 2019 )
Updated ZCL to 2.6.10:
	The main in-focus page is once again ZC.
	Added the new UI Coloursets (Dark, and October).
Link was not fully cropped during the credits scroll.
	Pixels of his hat were left behind as artefacts. This fixes the issue,
	by resizing the call to rectfill().
	( Timelord, 29th January, 2019 )
Fix 'OK' button in joystick button config not saving.
Fix screenshot numbering format to have a width of 5, not 3.
	( Timelord, 28th January, 2019 )
Added an Emulation toggle to try to permit continuous sword triggers
	in 2.10 and 2.50 quests.
	I'm not sure what the latest 2.50 build is, that should permit this, but if LI
	was saved in a later build, and needs it, then here it is.
Try to fix tall grash animation during scrolling.
Try to fix Ganon's Ashes not spawning.
	( Timelord, 25th January, 2019 )
Reposition timing of creation of the hammer smack sprites to try to
	prevent them from appearing int he wrong spot if the player changes direction abruptly.
	( Timelord, 24th January, 2019 )
Added Emulation menu option 'Don't Flip Firetrails'.
	If enabled (2.10 or earlier), then firetrails on brang weapomns
	will not flip on bounce, and may be allowed to hit and harm enemies.
Add jwin alert messages to all Emulation menu options, to explain what they do.
Apply 1.90 Swim Sprites to all calls to linktile() in link.cpp
Increased screenshot numbering cap from 999, to 99999.
	( Timelord, 22nd January, 2019 )
Apply 2.10 windrobe emulation, also to 1.92.
Final fix of 1.92 vand 2.10 Windrobe mmechanics, removing extra shot.
Clean up tribble emulation.
Implemented Emulation Option 'DMap Intros Always Repeat' for 2.55 quests.
Fix: Try again to fix 2.10 Windrobes.
Fix: Wizzrobes appearing in dungeon walls in 1.84 quests.
Fix GEL and KEESE tribbles, in 1.90 (or earlier) quests.
	This now occurs in readguys.
Remove Emulation flag for OLD TRIBBLES.
	( Timelord, 16th January, 2019 )
Potentially fixed Triforce Warp-Out in item cellars (2.10 and earlier, no rule, no emulation flag).
	Added a ternary statement in getTriforcePiece()
Begin Adding Emulation Menu Options:
	Restore 2.10 Windrobes
	DMap Intros Always Repeat
	--removed this one, because I have a possible in-source fix: Fix Triforce Cellars
Try to fix wizzrobes in 1.90/1.84 quests.
	They were spawning in walls, and never should.
Try to make it possible for Windrobes in 2.10 quests to nbot line up.
	( Timelord, 16th January, 2019 )
Fix some emulation options. 
	( Timelord, 14th January, 2019 )
Fixed emulation (item/segment) appearing in quests older than 1.92. 
Clear emulation array, except on F6/GameOver->Continue.
Added the ability to copy Link#s walking sprites over his swimming
	and diving sprites in 1.90 quests with BS Link Animation.
Begin adding 1.90 BS Animation Toggle
Begin adding 1.9x Tribble Emulation.
Begin adding emulation of half-tile (off-grid) collision.
Fix emulationm of segmented enemy drops.
Fix crash when saving screenshots caused by filename buffer overflow. 
	( Timelord, 14th January, 2019 )
Added an Emulation Menu option to enable drop-per-segment
	for Lanmola, Manhandla, and Moldorm. 
	This needs testing in older quests, and further verification.
	neither the menu option, nor the config section option
	should work in 2.50+ quests.
	( Timelord, 8th January, 2019 )
Re-added the 'Menu' button configuration option to
	Joystick Button configs.
	( Timelord, 8th January, 2019 )
Renamed entry [0] in Emulation Menu to 'Flip-Flip Cancel and Wave Warps'
	Disabled this option if the current quest was made in 2.10 or
	( Timelord, 22nd December, 2018 )
Added a new menu to ZC Player: 'Emulation'. 
	This is used for enabling/disabling certain internal behaviour, when playing some
	legacy quests where it is desirable to have this option. 
	( Timelord, 21st December, 2018 )
Fixed vires splitting before their slide() ends.
Fixed MP3s with metadata not playing. 
	Let's hope that this fix doesn't fuck up 2.50.0 or 2.50.1 quests.
	( Timelord, 16th December, 2018 )
Probably fixed issues that Avataro reported with Vire enemies.
	( Timelord, 3rd December, 2018 )
##############################################################################################################
	Full commit of ports, to Alpha 14:
	( Timelord, 6th March, 2019 )

//Alpha 13
Don't allow declaration of empty array literalsm (size of 0), or any array with a size < 1; or > 214748. 
Complete implementation/integration of const bool and const untyped.
	( EmilyV, 6th March, 2019 )

Fixed crashes and other issues when saving screenshots. 
	( Timelord, 5th March, 2019 )

The Export ZScript dialogue now saved with a .zs extension by default. 

	Parser Fixes and Improvements ( EmilyV, and Timelord, cumulative through to 5th March, 2019 )

	You can now declare any type globally.
	You can now declare untyped variables, and arrays.
	You can now have a function return type of 'untyped'.
	
	Typedef now works across multiple files.
	
	Added type 'const untyped'. Can only be initialised with a numeric literal, or const float/int, but typecasts to all datatypes.
	Added type 'const bool' (cannot yet be initialised with true/false). t/b/a
	
	Fixed a bug where division of a constant would result in truncation that did not occur in 2.50.x
	Fixed issues with division by an integer, where values would be truncated.
	Added #option TRUNCATE_DIVISION_BY_LITERAL_BUG as a compiler flag:
		This is OFF by default.
		#option TRUNCATE_DIVISION_BY_LITERAL_BUG on
			Forces old 2.50 behaviour (truncate division by a literal).
		#option TRUNCATE_DIVISION_BY_LITERAL_BUG off
			Use new behaviour (never truncate)

	Added escape character sequences to SINGLECHAR:
		\a     		Alert (Beep, Bell) (added in C89)[1]
		\b    		Backspace
		\f     		Formfeed Page Break
		\n     		Newline (Line Feed); see notes below
		\r     		Carriage Return
		\t     		Horizontal Tab
		\v     		Vertical Tab
		\\     		Backslash
		\'     		Single quotation mark
		\"     		Double quotation mark
		\?     		Question mark (used to avoid trigraphs) 
		\x0 to \xFF   	Normal ANSI characters, as hex value. 
		
	Fixed scope resolution for identifiers and variables when used across
		imported files.
		Example:

			//buffer

			import "bar.zs"
			void foo()
			{
				scrid.bar();
			}
			////////////////////end of buffer
			
			//bar.zs
			
			ffc script scrid
			{
				void run(){}
				voud bar(){ Trace(1); }
			}
		
		This worked in 2.50.x, but broke at some point in 2.55, and the
		correct behaviour has been restored. 
			
		Scoped identifiers must be read-in, in linear order. Thus, this
		would not be valid:
			
			//buffer

			
			void foo()
			{
				scrid.bar();
			}
			
			import "bar.zs"
			////////////////////end of buffer
			
			//bar.zs
			
			ffc script scrid
			{
				void run(){}
				voud bar(){ Trace(1); }
			}
			
		The import directive containing the token that you are resolving must be declared first,
		or be processed first, before it can be used. 
			
	Script errors will now give line and column references prior to the
		error type.
			
		Old:
			Error S007: Variable X can't have type VOID.
				@ LINE 4 COLUMNS 1-11
			
		New: 
			LINE 4 @ COLUMNS 1-11 - ERROR S007: Variable X can't have type VOID.
			
	Fixed some issues where compiler errors improperly carried over. 

	Fixed import directive pathing with backslashes:
		Importing in zscript with a path such as scripts\scriptfile.z used to work, in prior versions. 
		As of 2.55, it reads \ as an escape character, and parses the file path improperly. 
		This has now been corrected, so that you may use / or \ as a valid path token, however, / is the better option.
			
	Added ternary expressions.
		int x = Rand(6,8);
		int y = x > 7 ? 1 : 0;
		
		Assigns, and operations inside ternary blocks must be in parens:
			bool V = true;
			int b;
			int a = V ? ( b =  5 ) ? ( b = 4 );
			
			int c = V ? ( b -= 2 ) ? 0; 
			
			int y; int z; 
			int x = (y += 10) ? (z = 5) : (a -= 2);
			
		In all of these cases, parens are mandatory. 
		
		Further, compound ternary expressions should be placed in parens:
			int a = (V ? 1 : 0) ? 5 : 6
			
		The default, is to evaluate in a linear sequence.
				
		Thus, 
			bool ? int : int ? bool : int
		...would evaluate as: 
			bool ? int : (int ? bool : int)
		
		Using parens to define your order of operations and scope, is prudent. 

Fixed issues with division in the parser, and added some compiler flags:
	Added `isLiteral()` to `ASTExpr`, for the literal int division bug flag
	Renamed `Trace` to `LOGGING`
	Renamed `LiteralIntegerDivision` to `TRUNCATE_DIVISION_BY_LITERAL_BUG`
	Added `scope` to the `BuildOpCodes` class, and everything that comes along with making that work.
	Passed `scope` to all `getCompileTimeValue()` calls from `BuildVisitors.cpp`
	( EmilyV, 5th March, 2019 )
	
Update included version of ZCLaunch to 2.6.12.
Allow all ZScript data types to be declared globally.
Add allowing declaration of const untyped and const bool.
	Const untyped will work if the value is a literal number.
	Const bool will not yet accept an assign of true/false, but will accept a numeric literal.
	( Timelord, 5th March, 2019 )
	
Update: Compile error format.
	Now reads "Line # @ Column # - ERROR # MSG"
	( EmilyV, 1st March, 2019 )
	
Docs: Add comments to `putweapon`
Fixed the lens hints for some items crashign ZC. This was caused by the hint graphic trying to run a script: 
	This fixes `putweapon` dummy weapons crashing by attempting to run weapon scripts. -Z
	( EmilyV, Timelord, 28th February, 2019 )
	
Fix: More Bombs / More Arrows rooms and Wealth Medals
	- Wealth Medals which use percentage zero out cost (integer division != double division) (guys.cpp)
	- No code was ever in place to give the discount? (link.cpp)
	( EmilyV, 12th February, 2019 )
	
Must always `BEGIN( INITIAL )` before returning! Added `TERMINATE` macro to handle this.
	This fixes an issue where you would get an error, because the parser did not exit a mode.
	( EmilyV, 9th February, 2019 )
	
Declare `untyped` data, fix `npc->Script` return *10000
Fix: `npc->Script` return didn't `*10000`
	( EmilyV, 7th February, 2019 )
	
Feat: Allow declaration of `untyped` data
	( EmilyV, 2nd February, 2019 )
	
Feat: Add `\xFF` hex-insertion escape character for QUOTEDSTRING and SINGLECHAR
Fix: Invalid escape characters should throw error
	( EmilyV, 31st January, 2019 )

Updated SINGLECHAR escape characters
	( EmilyV, 30th January, 2019 )

Fix scope resolution for local functions and vars in scripts:	
	Typedefs of both kinds must be processed before imports are processed, or they do not properly work across files.
	Only check RootScope->descChildren_ if no valid scope has already been found.
	Scripts were not registered to `RootScope->descChildren_`!
	( EmilyV, 28th January, 2019 )

Feat: SINGLECHAR can now accept escape characters
	( EmilyV, 27th January, 2019 )
	
Import tokens now use TOK_IMPORTSTRING instead of TOK_QUOTEDSTRING
	- TOK_IMPORTSTRING does not parse `\` as an escape, instead parsing it literally. This allows `C:\User\Test\` as a valid path,
	rather than skipping the backslashes.
	( EmilyV, 25th January, 2019 )

Fix: Slight Order of Operations issue
Fix: Missed SemanticAnalyzer.cpp/.h sections
Fix: Add overrides for getReadType() and getWriteType() for ASTTernaryExpr
	Ternary is now functional. The return type is the type of the middle expression.
	Slight issues may occur if the middle expression is untyped.
	( EmilyV, 19th January, 2019 )
	
Parser: Preliminary layout for Ternary Expressions
Parser: Add QMark (?) token
	( KoolAidWannaBe & EmilyV, 18th January, 2019 )
	
Feat: Ring/PerilRing Flag 2 - "Divisor is Percentage Multiplier"
	As the name says, the number in the divisor field will be treated as a percentage to multiply if the flag is turned on. This allows things
	such as '50%' for halving, or '150%' for increases less than double.
	( EmilyV, 14th January, 2019 )

Increased the buffer size for the screenshot name
	to prevent a crash on overflow.
	( Timelord, 14th January, 2019 )
	
Fire BRang Flag 8: `Triggers 'Fire(Any)'`
	( EmilyV, 12th January, 2019 )
	
Modified `LinkClass::ringpower(int dmg)` to handle percentage multipliers 
	instead of divisors, if the flag is set. It can also handle both at once 
	(ring of one mode, peril ring of the other) without issue.
	( EmilyV, 11th January, 2019 )
	
Re-added the Menu button to Joypad Config
	( Timelord, 8th January, 2019 )
	
Added Halt Duration and Acceleration Factor to the
	Enemy Editor, for Peahata, and for Phantom Ghinis.
	Fixed the dialogue to use the correct enemy label fields.	
	( Timelord, 7th January, 2019 )
	

You can now set the halt duration, and acceleration
	factor for flying enemies in the enemy editor, for keese and
	bats. Perhaps Peahats also need this?
	( Timelord, 6th January, 2019 )
	
Move item script timing for 2nd frame (and onwards)
	to take place immediate;y after Link.animate().
	This preserved the old system timing for item scripts.
	
Don't try to load an enemy for weapons with eweapon
	IDs, but not eweapon signatures. 2.50 allowed stupid stuff, such as
	Screen->CreateLWeapon(EW_FIREBALL) !!!
Fix: Eweapon scripts check !isLWeapon and run w/o checking Dead()
Fix: Z_eventlog will now use the correct script types when logging events, from new script types.

Fixed one issue with array draws, for Lines()
	where the array iterator was wrong.

	Copied a code block from historical/old-master where Gleeok first
	tried to set this up.

	The issue is that the array becomes invalid (scope) prior to
	the enqueued draws taking place, so there is no data for them to use.

	The values need to be pushed into a vector and used, later.
	( Timelord, 1st January, 2019 )

Fixed an early return condition in Screen->Lines that
	would always cause it to abort, and fixed use of the wrong args order.
POP the correct number of args for array-based draws,
	such as lines()
Writing to LW_SCRIPT* o_tile works again.

Fixed a spot where an enemy pointer was being used to try
	to load graphics to an lweapon (wRefFireball) because it was based
	on a fallthrough of ewFireball.
	( Timelord, 27th December, 2018 )
	
WDS_BOUNCE is a write-only condition that calls
	`onhit(false)` for LW_BRANG weapons. It has a literal value of (1)
	and the engine never uses it otherwise.

	LWeapon scripts now interact properly with it.
	( Timelord, 26th December, 2018 )
	

//Alpha 12
Reset combo animations on Game->Continue()
Call AllOff() prior to running Link's onDeth script.

Fixed new npc functions in ffasm.cpp:
	The 'args' value in ffasm.cpp was set to 0, for
	getter functions. these needed to be set to '1' to return the
	proper value.

Fix new npc functions.
	Correct their bounds checks, change them to use GuyH::getNPC()
	and fix some array size checks.
	
Probably fix wBrang weapon scripts aborting on WDS_BOUNCE.

Fix Script Type LWeapons not running their scripts. 

Refuse to permit CreateLWeapon() or CreateLWeaponDx() to create 
	an lweapon if there are 255 or more on the screen.

Fixed DMap Scripts. They now run properly, at the correct time,
and run when Link warps without massive fiddling. They do not run
forever if they run out of scope (they certaintly DID!!), and they
have the correct refinfo pointer (REFDMAPDATA, not LOADMAPDATA!!).

Fixed issues with LoadBitmapID() and GetScriptBitmap() not liking
the old internal bitmap IDs.

Added the following to ZScript:
	bool Game->SkipF6 : This skips over display of the save/continue/retry MENU
		when the player pressed F6, but it still gives them the 'Exit, Confirm (Y/N)' DIALOGUE.

	Game->ShowContinueScreen() : As Game->ShowSaveScreen(), but gives all three
		choices (SAVE, CONTINUE, RETRY).
	( Timelord, 25th December, 2018 )
	
Probably fixed a bug in Game->Continue(), where pressing F6 would not show
the continue screen during play, if you call this.
Added mapdata->isSolid(x,y)
Added Game->Continue() to ZScript. This should function
	in the same way as Game->End(), but it should cause the game to
	resume as with the Continue option in the normal game over menu.

Added bool Game->SkipCredits to ZScript. This should cause the game
	to skip over the WIn Game credits, but still advance the quest, normally.

Fixed Link OnDeath and OnWin Clear Script Draws 
	Script Draws do not remain static during Link's onWin
	and onDeath scripts, and now clear normally, every frame.
	This prevents stuff such as DrawTile() from persisting across multiple
	frames.

Re-enable eweapon scripts after some lweapon script modifications.

Fix uninitialised var in ZASM AUDIOVOLUME
Disabled an extraneous call to the lweapon script engine.

LWeapon Scripts: Swords Can Run Scripts & Fix Arrows 
EXPERIMENTAL!!
	The melee part of a sword item will run a script if the value
	of Attributes[9] for its parent item == 50. (Misc10 == 50)
	This also fixes arrows not running scripts.

Fix potentially uninitialised vars in Link.cpp. (Not my fault!!)
	( Timelord, 24th December 2018 )

Rename Screenshot Base Filename from zelda%03d.png, to zc_quest_screenshot%03d.png
Now showfps does textprint_ex when (frame&1), whic increased the
	running speed of ZC by about 12.5%.
Moved the calls to run LWeapon Scripts back into Lwpns.animate(),
	and removed the deadstate restriction.
	( Timelord, 23rd December, 2018 )

//Alpha 11
Setters for Screen->LayerScreen[] and mapdata->LayerScreen[] were not
	properly vbounded. 
	^ They needed to be bounded between 0 and MAPSCRS. (Should this be MAPSCRS-1?)
	I also fixed the order of %s and %d parameters in some macros.

Fixed more mapdata macros issuing an error for map 1, screen 0 when
	ri->mapsref == 0.

Changed the behaviour of Screen->LayerMap[], LayerScreen[], and LayerOpacity[]
	so that the array index matches the layer ID used in the editor.
	^ Thus, Screen->LayerMap[1] is Layer 1, not Layer 2.

	I copied this to mapdata->LayerMap[], LayerScreen[], and LayerOpacity[]

	I also added a version check to the MACRO, so that quests made in 2.54, or older
		builds of 2.55 (V_FFSCRIPT < 11 ) will work normally, although if the questmaker
		re-saves them, then they will need to update their scripts!

Fixed a bounds check wrror for mapdata:
	map 1, Screen 0, is ri->mapsref 0, so we can't check != 0!!!
Fixed getters for all of the mapdata->Combo[] arrays.
Fixed issues with npc scripts, causing stack corruption:
	They use the same *ri mechanic as lweapon acripts, but they run in
	enemy::animate(), which is itself a sort of proof that weapon scripts
	could probably also run from animate(), now.
Added checks for do_animation to guys.cpp.
	Segmented boss enemies do not obey do_animation. Script your own
	segmented bosses using the new enemy types.
Note: Added a note about enemy::drawblock()
Enable do_animation for weapons.

Add scriptflip and scripttile to sprite::draw():
	sprite::draw(), sprite::old_draw(), sprite::draw8(), and sprite::drawcloaked()
	will all check scripttile and scriptflip, and use those values in the place of
	tile and flip, if those values are > -1.

	I'm trying this for now. I don't think that it will suffice, though, because
	ZC is still making internal adjustments to those tiles.

	I may add a bool->OverrideEngineTileManagement or something, so that ZScript
	users can have the benefit of either option.

Reverted weapons.cpp to immediately before the last commit.
	We'll do this in sprite::draw(), instead.

Added scripttile and scriptflip to all sprites. Both init at -1.
	Added running code for scripttile to weapons.cpp.

	Added the following instructions to ZScript:
	dmapdata->Script, dmapdata->InitD[8]
	lweapon->ScriptFlip, lweapon->ScriptTile
	eweapon->ScriptFlip, eweapon->ScriptTile
	npc->ScriptFlip, npc->ScriptTile

	VBounded all ScriptTile (including Link!) setters between -1 and NEWMAXTILES-1.
	VBounded all ScriptFlip (including Link!) setters between -1 anbd 256.

	VBounded npc->Script, lweapon->Script, and eweapon->Script between 0 and NUMSCRIPT-1.
	( Timelord, 23rd December, 2018 )
	
//Alpha 10
Renamed entry [0] in Emulation Menu to 'Flip-Flip Cancel and Wave Warps'
	Disabled this option if the current quest was made in 2.10 or
	( Timelord, 22nd December, 2018 )
	
Added a new menu to ZC Player: 'Emulation'. 
	This is used for enabling/disabling certain internal behaviour, when playing some
	legacy quests where it is desirable to have this option. 
	( Timelord, 21st December, 2018 )
	
I forgot to save the weappon InitD[] in guys version 40.
	V_GUYS is now 41.
	InitD[] valuesvare saved, and read by the quest loaders.
	Weapon InitD[] is properly loaded into the weapon, and forwarded
	to ffscript.
Some eweapon types were checking if ScriptGenerated, and that check only applies to one lweapon type.
	I removed the extraneous check.
	( Timelord, 21st December, 2018 )

//Alpha 9
Fixed crashes when creating lweapons, caused by trying to read
	enemy* for parentID of lweapons (weapon scriot read for eweapon scripts).
Fixed Link Death and Win scripts to run at the proper times.
Link's onDeath script, and Link's onWin script, can both run
	for multiple frames.

//Alpha 8
Fix when Link's Init script runs.
	It now runs after Link.init(), but before setting his entry points
	and before the opening wipe.
	This ensures that any changes that the init script executes,
	such as setting Link->Invisible, aren't seen by the player;
	and that Screen->EntryX, and Screen->EntryY have the correct
	coordinates at the start of the game, if Link's init script sets these.

If the user clears an initD label to a blank link, it will reset to 
	the default value of 'InitD[%d]'.
Added DMap scripts, in entirety.

Added the following variables and arrays to ZScript:
	npc->Script
	npc->initD[8]
	lweapon->Script
	lweapon->InitD[8]
	eweapon->Script
	eweapon->InitD[8]
	npcdata->Script
	npcdata->InitD[8]
	npcdata->WeaponScript
	npcdata->WeaponInitD[8]
	itemdata->WeaponScript
	itemdata->WeaponInitD[8]

	Itemdata was alredy in the system, as were a few of these, but
	I completed the set. I renamed WeaponD to WeaponInitD to prevent confusion.
Added EWeapon Scripts to ZQuest and to the ZC Player
	Added vars to npcs for the weaponscript,m the initD, and for the InitA.
	Added the Enemy Editor dialogue data to set the script and the script InitD.
	Added the code to transfer data from the guys struct to the weapon, when the weapon is generated.
	Added the script control code in ffscript.cpp.
	
	EWeapon Scripts: Make them functional. 
		Added code to transfer the script ID from
		the guys struct to the weapon.
	Added the code that causes the script to run.
	EWeapon Scripts: Add vars to guys.h/cpp and initialise them.
	EWeapon Scripts: Add eweapon script and related fields to the Enemy Editor.
	EWeapon Scripts: Add weaponscript, weap_initiald and weap_initiala to guys.
	( Timelord, 20th December, 2018 )

Fixed some missing calls to vbound in ffscript.cpp.
Fixed a memory leak caused by not freeing memory used for tile allocation.
	( Peter Hull, 19th December, 2018 )

//Alpha 7
Added the following script types to the 'Compile ZScript' dialogue in ZQuest:
	eweapon, link, dmapdata (DMap), screendata (Screen)
	You can compile all of these, and assign them to slots.

Installed Link scripts into ZC, and expanded their number.
	They work in a similar manner to global scripts, and may call Waitdraw().
	At present, these are the viable slots:
		Init (1)
		Active (2)
		onDeath (3)
		onWin (4)
	Slots 1, 3 and 4 can run for only one frame at this time.
	Increased V_FFSCRIPT to '11'.
	( Timelord, 19th December, 2018 )
	
//Alpha 6
Fixed Ganon's HP in 1st.qst and in 2nd.qst.
Fix creation and blitting of user bitmaps.
Fix a number of fallthrough cases in ffscript.cpp.
Fix fallthrough cases in Screen->DrawBitmapEx() and bitmap->Blit()
Fix an overflow condition in ffasm.cpp where the command string tempvar
	char array was too small. (Changed from tempvar[20] to tempvar[80]).
	( Timelord, 18th December, 2018 )

//Alpha 5

Vers: Update to Alpha 5
Remove traces for LWeapon Scripts
	( Timelord, 17th December, 2018 )
	
LWeapon Scripts: Associate refInfo with each sprite
	This fixes stability issues with them.
	( Peter Hull, 17th December, 2018 )
	
Skip over ID3 metadata to ensure that most MP3 files play.
	*Copied from 2.53b27
Lib: Update csound.lib for MSVC (MP3 fixes)
Fix where vires create new enemies when they split, and the
	distances that they can slide.
	*Copied from 2.53b27.
	( Timelord, 16th December, 2018 )
	
Try memsetting the sprite stack to 0xFFFF
Fix: Uninitialised weapon values.
	( Timelord, 13th December, 2018 )

Added some traces

Fixed crash, it seems. needs further testing.
	Sometimes some lweapon types still refuse to run their script, despite
	everything seeming to be correct. I suspect some cleanup code is running
	that should not run.

Fixed issues with incorrect or corrupt stacks, but now scripts
	can crash. it seems as if ri->lwpn and w->getUID() can be mismatched???
LWeapon Scripts: Try getting data by UID instead of by Index
	( Timelord, 11th December, 2018 )

File: Add screenWipe.cpp from 2.50.2
	( Timelord, 10th December, 2018 )
	
LWeapon Scripts: Split Up Animate and Run Script
Refactored lweapon scripts.

	Stacks are no longer memset other than on creation.
	They now use doscript = 1 to help determine if they should run.

	Issues: bait once again doesn't want to run scripts once it times out on
	a screen.

	Sword beams still cause stack underflows, but magic seems to be fine.
	( Timelord, 9th December, 2018 )
	
	
//Alpha 4

Added item->Family and item->Level to ZScript.

Ensured that all classes have ->Family and ->Type. Both do the same thing.
	Weapons use ->Family, ->Type, and ->ID in the same manner.

Set Labels on New Enemy Types: Skipping this would have caused crashes.

Module: Added Default Strings for New Enemy Types to ZQuest
Modules: Added new npc family fields to the modules.

Add New NPC Types for Scripts
	Changelog: Added 20 generic npc types to the system.
	Added 10 'friendly' npc types for RPG-style guys.
Updated build details to Alpha 4.

Implement LWeapon Scripts + Editor Improvements
LWeapon Scripts Fix: Stop Swords from Running Scripts 
	Prevent swords from running scripts (for the present), and
	try to forward the script to the beam.

Disabled calls to al_trace() in module loading, lweapon scripts,
	npc scripts, and date & time code.

LWeapon Scripts: Seem to Have Fixed issues with lweapon script stacks.
Clear script data in order.
Try a different saving order.
FFScript: Add some disassembly information to lweapon scripts. 
	LW Scripts believe that they have all sorts of invalid commands. Something
	awful is happening with their memory map!

LWeapon Scripts: Add code to run them.
LWeapon Scripts: Fix lw->InitD[] in ZScript
LWeapon Scripts: Add lw->Script and lw->InitD[] to ZScript
LWeapon Scripts: Add a way to determine if a weapon is an LWeapon, and
	forward script data to weapons.

You can set the Script, the InitD, and the InitD Labels for
	LWeapon Scripts in the Item Editor. 
	ZQuest will save and retain the data.

Began adding lweapon scripts to ZC and to ZQuest.

Added Item Script InitD Labels to the ZQuest Item Editor UI.
Moved the NPC InitD fields all under the 'Action Script' tab.

	The selection for the script, and all of its InitD values, are now on one tab.

Renamed 'InitD' tab to 'Weapon Script' It is blank at this time.

Started adding the same form of editable fields for Item Script
	InitD to ZQuest.

	Added vars in preparation for item sprite scripts.

	Bumped V_ITEMS by +1.
	( Timelord, 7th December, 2018 )
	
Added the following to NPCData:
	npcdata->GetInitDLabel(int array[], int d_index)
	npcdata->MatchInitDLabel("label", d_index)
	npcdata->InitD[8]
	npcdata->Script

I also inserted a change into the FFScript.cpp engine, for npc scripts, so
	that when a script exits, it does not set ri->npcref to anything.

	I think that may have been the cause of some earlier, erratic behaviour in npc scripts.

NPC Editor InitD Labels Can Be Changed 
	You can now set custom labels for the eight InitD args used by
	npc scripts. These are saved on a per-npc basis, and set in the enemy editor.

	V_GUYS is now 39, and I prepared guydata for npc weapon InitD labels, too.
	( Timelord, 6th December, 2018 )
	
Added New npc-> Functions for Use by NPC Scripts:
	bool isDead() //Returns if the NPC is dead, or dying
	bool CanSlide() //Checks if the npc can be knocked back
	bool Slide() //Engine knockback
	void Remove() //Instantly kills an npc
	void StopBGSFX() //Stops the background sounds that the npc is generating.
	void Attack() //Causes the npc to attack with its weapon.
	void NewDir(int arr[]) //The npc chooses a new direction.
	//Uses an array literal for its args.
	void NewDir8(int arr[]) //As NewDir(), but 8-directions
	void ConstantWalk(int arr[]) //Causes the npc to walk.
	//Uses an array literal for its args.
	void ConstantWalk8(int arr[]) //As ConstantWalk(), but 8-dir
	void VariableWalk(int arr[])
	void VariableWalk8(int arr[])
	void HaltingWalk(int arr[])
	void HaltingWalk8(int arr[])
	void FloatingWalk(int arr[])
	bool LinkInRange(int dist_in_pixels) //returns true if Link is within
	//'range' pixels of the enemy
	bool CanMove(int array[]) //Returns true if the npc can move in a
	//given direction.
	//Uses an array literal for varying args.
	//Overloaded for a number of options.
	bool SimulateHit(int array[]) //Simulates hitting the npc with a weapon,
	//another sprite, or an arbitrary set of values passed as an
	//overloaded array literal.
	int LinedUp(int range, bool dir8) Checks if enemy is lined up with Link.
	//If so, returns direction Link is at as compared to enemy.
	npc Create(int array[]) //Similar to Screen->CreateNPC(), except:
	// (1) It uses an arry literal for its args, with varying size.
	// You can either create an npc onnly by its ID, or you can do
	// that and set its spawn coordinates at the same time.
	// (2) It works based on an existing pointer, such as:
	// npc n; n->Create{args});
	//Returns -1 if not lined up. Range is inclusive.
	void BreathAttack(bool seeklink) //Fires the breath weapon set to the enemy.
	bool Collision(int obj_type, untyped obj_pointer)
	//Returns if either an object is collding with the npc,
	//or if an arbitrary set of coordinates would collide.

Fixed crash when creating LW_REFMAGIC by script.
	( Timelord, 5th December, 2018 )
	
Fixed the accidental removal of itemdata->Getname()
Began to add new npc functions for use by npc scripts.#
	( Timelord, 4th December, 2018 )

//Alpha 3

Fix crash on calling any decorations sprite, due to tryint to initialise
	EIGHT indices of sprite->InitA[2] to 0 !!
Fix npc scripts mucking up stack pointer:
	Changed memset(stack,0) to memset(stack,0xFFFF).
	( Timelord, 3rd December, 2018 )

** Known Issue: For some reason, the ri->guysref is either improperly
cleared, or something is reading it improperly:

When you F6->Retry, and there are running npc scripts, they corrupt the ZScript stacks.

Closing ZC and reopening it fixes this, so I must have missed something
that clears this data. 

**

Added npc->InitD[8] to ZScript
Set InitD values on script load.
Removed extraneous vars in sprite class

Update build date.

Added initD[8] to sprites.
Added npc->InitD[8] to ZScript.
Populated ri->d with npc->initD[] when the npc script is called.

NPC Scripts: Add Initial D[8] to Enemy Editor
NPC Scripts: Fix Editor Dialogue
	Somehow, my commit of this editor fix was lost or corrupted.

	This again fixes the editor dialogue object placement.

NPC script stacks will now clear when their scope ends.
I also fixed some issues with the 'this' pointer in npc scripts.

NPCs now run scripts assigned to them.

Modules: Update Default and Classic Module files.

Added the following vars to the file select screen (NAMEENTRY)
	in the mopdule format:

	sels_cursor_tile // The cursor tile. Default is 0
	sels_heart_tile  //The tile used to draw hearts.
	sels_linktile // The base tile used to draw Link. Might be wrong.

	sels_heart_tilettile_cset // The default CSet used to draw hearts.

	draw_link_first // If set to non-zero, then Link's tile will be drawn before other
	decorations (e.g. sword for 2nd quest). Otherwise, if == 0, we use the
	normal Z1 behaviour.

	//If these values are < 15, then the tile will be drawn in the specificed cset
	sels_cusror_cset = 16
	sels_link_cset = 16

Modules: Update Default and Classic ZMOD files.
Modules: Add Name Entry Graphics to Module Format 
	The quest icons (all TEN supported quests) are now set by the
	module, along with their csets and X positions.

	The file select frame tile, and cset is now set by the module.

	The colour shift on quest 3+ is now in the module format, but disabled,
	pending other tests.

Updated the classic module file with the new vars.
	( Timelord, 3rd December, 2018 )

Modules: Marked locations of hardcoded file select elements to move to modules.
May be a fix for issues with vires.
	My sanity can only take so much more of this.
	Why didn't they just keep vire/polsvoice in their own class, as in 2.10?!

Possible fix for Vires
Added file Vire.cc - 2.10 Vire Code as Reference
	( Timelord, 2nd December, 2018 )

Cleaned up code for the NPC Script selection in the Enemy Editor,
	and removed traces and unused vars.

It is now possible to set the npc script slot in the Enemy Editor,
	and to properly save your selection in the quest.

Clear script bindings left over from a prior quest. 
	If you set an npc script, then load any other quest; the second
	quest thinks that the script is set there, too.

	The inverse was also possible: Open a quest with scripts saved, after having
	opened (or created) a blank quest, and the blank quest fields would carry over.

	This *should* fix that issue.

Added script bindings for new script types to quest saving/loading.

Increased V_FFSCRIPT to `9`

NPC Scripts: Clean Up Enemy Editor Scripts Pane
Fix: Errors in ScreenPrint()
NPC Scripts: Begin Adding to Enemy Editor
Slight cleanup of FFCore.getTime()
Add LogPrint() and ScreenPrint to string_functions.zh
	( Timelord, 30th November, 2018 )

Add test quest and script for GetSystemClock()
Removed erroneous +2 from 'month' return.
Changed RTC to a Unary opcode and corrected its inpur param
	value, when read from the stack.

Fix Crash on Saving Scripts: I was trying to save to a NULL pointer.
	The NULL pointer assign (see below) is wrong. I redacted it. 

Add missing constant for RTC_DST
Update std_constants.zh for Link->WarpEx() and GetSystemTime()

I had a unary opcode constructor for GetSystemTime(), where it
	needed a binary opcode constructor. This commit fixes that, and it corrects
	the return value to stack arg 2, by multiplying it by 10,000.

Added GetSystemTIme(int category) to return the current system
	Real Time Clock (RTC) value for a specific field of the time struct (time.h).

	The parameter options are:

	define RTC_YEAR		= 0;
	define RTC_MONTH	= 1;
	define RTC_DAYOFMONTH	= 2;
	define RTC_DAYOFWEEK	= 3;
	define RTC_HOUR		= 4;
	define RTC_MINUTE	= 5;
	define RTC_SECOND	= 6;
	define RTC_DAYOFYEAR	= 7;
	define RTC_LAST		= 8;
	( Timelord, 29th November, 2018 )

Changed the stack index from const byte to const long.

	Sprite scripts will need this to use as their pointer value, then somehow
	associate that with their stack.

	Perhaps as `stack = &(guys.spr(getbyUID(i))->stack);`

	...although `stack = &(guys.spr(GuyH::getNPCIndex(ri->guyref))->stack);`
	may suffice. Not sure.

Pre-emptively set new script type pointers to null for older quests.
Increased V_FFSCRIPT to `8`.
	Added routines to save, and to load new script types, or to skip
	loading them based on section version.

	Do the pointers for them need to be memset/NULLified for old quests?!

	Scripts that used to load into %wpnscripts now load into &lwpnscripts.
	EWeapon scripts load into a new pointer.
	( Timelord, 28th November, 2018 )

Added file log.zh to /std_zh
Changed button text on 'Import' button in 'Compile ZScript' dialogue.
	The new button text is 'Load', and the new hotkey is 'L'.
	( Timelord, 27th November, 2018 )

Added NPC Scripts to the Compile->Assign Script Dialogue.
	They work, and are compiled properly.
	What remains:
		Save the script with the quest.
		(Increment the save format.)
		Read NPC scripts in, when loading a quest that is >- save ID.
		Add the script selection to the enemy editor.
		Call the code in the game_loop()
		Hope that it all works as-is. 
Begin Adding Script Slot Dialogue:
	I need to look at the case values 6, 9, 12 for script types at the point
where I left off for the day.

Fix: Conflict with script types and common identifiers, and begin adding Player.
	Changed screen and dmap script types to screendata and dmapdata
	scripts, to avoid conflicts with the common script variable identifiers
	`int screen` and `int dmap`.

Started adding second instances of `Link->` and `link script` as
	`Player->` and `player script`, respectively.

Started adding new script types to the parser and implementing their slots in ZQuest.

	New types are:
	npc scriptm (this-> is npc)
	lweapon script (this-> is lweapon)
	eweapon script (this-> is eweapon)
	dmapdata script (this-> is dmapdata)
	screendata script (no this-> at present)
	link script (no this-> at present)

Feat: Begin Adding New Script Types to Parser & ZQuest
Fix: Add missing script types to parser/Types.h

Try to Ensure that Item Scripts Have Better Timing
	Calling FFCore.itemScriptEngine() after LWpns.animate() AND calling
	FFCore.newScriptEngine() might do the trick.
	If I only call the former, then ZASM goes bonkers.


//Alpha 2

Updated changelog to current. 
Update version and date strings.
Tests: Update test quest files for item scripts.
Fix: Probably Fix Item Script Stack Corruption 
	When Link.cpp calls a new item script, it also clears the script
	stack. This should prevent multiple instances of a script tryint to use the
	same stack at different stack frames.

	It seems to work now, but obviously, it needs more testing, particularly for
	collect scripts, and with the QR off.
	( Timelord, 27th November, 2018 )

Update version strings and change Necromancer to AEternal

Fix: Don't continue running item scripts after game exit:
	Stopped perpetual item scripts running from carrying over after
	F6, or otherwise quitting/winning the game.

Made some modifications to itemdata->RunScript()

I disabled bool perpetual for itemdata->RunScript(bool) for the
	present. it corrupts the stacks. I cleared the stack for now, and setting	
	the bool does nothing.

Perhaps clearing the item stack would suffice?
Added itemdata->RunScript(bool perpetual) to ZScript.
	If (perpetual == true), then the script will continue running for more than
	one frame, even if the QR is off. If the QR 'Item Scripts Continue Running'
	is enabled, then this boolean does nothing.
Feat: Item Scripts Can Have Infinite Loops:
	Added a QR (and a new Script Rules category):
	Item Scripts Continue to Run (until they call Quit)
	Added stacks for 256 item scripts.

	Added control code under FFCore.newScriptEngine() to control item scripts
	and all other new script types in the future.
	-->This may have timing issues at present.

	Set up other stacks and code for future implementation.

	If an item script has a Waitframe loop, then it will set runningItemScripts[id].

	If runningItemScripts[id] == 1, then that script will continue to run until aborted.

	I had to put advance_frame(true) in the FFCore.newScriptEngine() function to prevent
	the game loop from running infinitely.

	There must be a better way to do this, for proper timing, but it suffices for now.
	Now the scripts run, as intended, and you can abort them; however if you
	try to run them a second time, ZC crashes.
I decided to try to implement item scripts that run perpetually.
	While I figured out how to make them run, I have yet to fingure out how
	to properly control the loop so that it releases control back to the player
	and so that it only occurs when there are item scripts that are properly
	initialised by the player.
Split weaponscripts into lweaponscripts and eweaponscripts.
Added pointers for script types.
Added set-up code.
Added cases tol ffscript.cpp for running new types.
Generally set up for the new types.
Start setting up for screen, dmap, and Link scripts.
Increased max ZASm registers from 256 to 1024.
Increased stack sizes from 256 to 1024.
Added stacks to sprites.
Completed the addition of Explode(0 to all sprite classes in ZScript.
	Untested at this time. I followed the same methods as npc->Explode, however
	I had to add some functions to the SH classes.
	( Timelord, 26th November, 2018 )

//Alpha 1

I had an open if statement in enemy::draw, in the statement:
	`if (dontdraw()`

	The statement was: `if (family == eeGANON)`, and this needed its own return instruction
	to prevent drawing enemies that should always be invisible.
	I also added old_draw(), in the event that we need to reference it in the future.

	Further, we need to update enemy::drawblock() for enemies larger than 1x1.	
	( Timelord, 25th November, 2018 )

I increased the sprite cap from 255 to 255*256.
	This fixed particle issues with npcs, but I don't want particles to end up
	with stack[256] when we add sprite scripts, or to have such an increase
	cause other ill side-effects, so we need a better long-term solution.
Added cset, and colour and other values to sprite::explode.
	The reason that not all enemies explode if called in a loop, is because
	each pixel counts as one sprite, and exploding all of them exceeds the
	per-screen sprite cap!
Calling npc->Explode() no longer crashes ZC, and it works for
	some npcs.
	It seems that explosions only occur for some CSets.
Began adding explode() functions to create particle explosions
	on enemies, and in future, all sprites. (Unstable in this commit!)
	I also renamed the flags for Link->WarpEx(),to clarify their intent, and I
	added flags to WarpEx() to allow setting continue points and entrance points
	on all warp types.
Added Link->Explode(int type) to call the particle explosions
	used by Farore's Wind, at any time, by script.
Corrected placement of call to sfx() in Link->WarpEx() to
	ensure that warp sounds play.
Fixed setting Entrance/Continue Screen and DMap for calls made with a type
	of Entrance/Exit.	
Fixed values in array for Link->WarpEx(int ptr[]) not being
	divided by 10000, and fixed warp return point selection (mapscreen ID).
	( Timelord, 22nd November, 2018 )
	
Docs: Added docs for Link->WarpEx() as LinkWarpEx.txt
Refactor: Link->WarpEx() Coordinates Versus Warp Return Square 
	I changed the behaviour of selecting either raw coordinates, or
	selecting a warp return square with Link->WarpEx()

		If 'x' and 'y' are both > -1, then they are raw coordinates as always.
		If 'x' < 0, THEN 'y' is the warp return square type, using positive integers.

	This allows using the warp return constants in std.zh, and it prevents a
	possible ID clash from both values trying to establish the square ID.
Added Link->WarpEx(int ptr[])
	This takes an array as its args, sized as either 8 or 9!

	Valid array params are:
	Link->WarpEx({type,dmap,screen,x,y,effect,sound,flags})
	and
	Link->WarpEx({type,dmap,screen,x,y,effect,sound,flags,forcedir}

		If x, or y is < 0, then the function will use the negative value as a warp
		return square.

		e.g., -1 is Warp Return A, -2 is Warp Return B

		You can either accept the engine's setting for what Link's Dir should be
		after warping him, or force a dir.

		Warp Flags are:
		warpFlagKILLSCRIPTDRAWS: Don't kill script drawing during the warp.
		warpFlagKILLSOUNDS: Don't kill playing sounds during the warp.
		warpFlagKILLMUSIC: Don't kill playing music during the warp.

		Their values are:
		warpFlagKILLSCRIPTDRAWS 0x01
		warpFlagKILLSOUNDS 0x02
		warpFlagKILLMUSIC 0x04

		Add them together to calculate a flag.

		Warp types are:

		Warp Effects are:
		warpEffectNONE: No visual effect.
		warpEffectZap: Zap Effects
		warpEffectWave: Wave Effects
		warpEffectInstant: Black screen.
		warpEffectOpen: Calls the opening wipe.

	You may play a special sound (e.g. Magic Mirror) during the warp.
Move private vars and functions into public (Link.h)
	To speed up the process of testing Link->WarpEx(), I moved a
	large number of private vars and functions into public.

	I'll move them back, and make public accessors, once I'm sure that everything
	works as I intend.
	( Timelord, 21st November, 2018 )

Modules: Allow Suppressing NES Title Screen Animation
Modules: Add Separate Values for All Three Title Screen Types
	Added separate fields for all copyright string values, for each
	of the three title screen types. Further, starting a string with a hyphen
	will prevent it from being displayed.
Updated module files, and set up default strings in Default Module.
	( Timelord, 20th November, 2018 )

Modules: Add Title Screen Copyright Strings 
	I added vars for copyright strings on the title screen, but I
	only tested them on the 2.5 title screen.
Module Files: Update for new 6th->10th quest fields.
Modules: Added 6th->10th Quests and Use `num_quest_files`.
	Quest filename validation, and quest title screen skip names
	now use `num_quest_files` to determine how many entries exist.

	Added fields for 6th, 7th 8th, 9th, and 10th.

	Clamped valid quest IDs (moduledata.num_quest_files) between 1 and 10.
Modules: Add Default NSF Tracks to Module
Corrected behaviour to display 'Misc. Attr. 10' on Data 2 tab
	of the enemy editor for the enemy types that we added to the EE field name
	functions in 2.55.
	We were cloning eeNONE before, which had a yes/no menu that is not valid on
	these other types.
Modules: Add base_NSF to Modules.
	Removed hardcoded 'zelda.nsf' from source. The base NSF used
	by the title screen, ending sequence, and other game facets is now set
	by the module file.
Modules: Added itemclass help strings.
	All itemclass help strings may now be set by the user.
Modules Fix: Gohma Family String 
	Fixed enemy family type token for module file, for Gohma family.
	( Timelord, 19th November, 2018 )

Modules Chore: Adjust item class strings.
	Adjusted default values for item classes 89 through 255.
	Fixed 'ic_last' not to display as 'last'.
Module Fixes: Correct Offsets for iclass_script1 and fix crashes.
	Corrected offsets for script type item classes, and for ice rod
	item class. I had forgotten to put "iclass_last" in the string arrays. :/
Fix crash when trying to read item names > 88.
Modules (Fix): Correct order of Custom Items and Special Combined Items 
	Corrected the order of the strings (item class help) for the following:
		Bow & Arrow Class
		Potion Or Letter Class
		Custom 01 through Custom 20
	I previously had Bow/Arrow and Potion/Letter BEFORE custom classes, but they
	belong AFTER them, and before the strings for undefined weapons.
Modules: Added Item Class Help Strings to Modules
	Added help strings for all item classes to the module format.
	If the module fields are blank, then ZQuest will use the internal defaults.

	Module data for these help strings is an OVERRIDE!
	( Timelord, 17th Noivember, 2018 )
	
Fix: Inverted porting of qr_NONBUBBLEMEDICINE
	If the QR is active, the flag should NOT be active; this behavior was inverted previously.
	( EmilyV, 17th November, 2018)
	
Add Modules to ZC and to ZQuest in main 2.55 branch. 
	( Timelord, 17th November, 2018 )

Modules: Added Counters (in Item Editor) and LWeapon Types (Item Editor, or future)
Modules: Add EWeapon Names in Enemy Editor to Modules
Modules: Add Built-In Guy Names to Modules
Modules: Add Enemy Walk Styles to Modules
Modules: Added Room Types to Modules
Modules: Add Map Flags to Modules
Fix: mcDROPBOSSKEY to mfDROPBOSSKEY
Fixed type of mcLIFTPOT to mfLIFTPOT
	Begin adding map flags to modules.
Modules: Update classic.zmod with Combo Types
Modules: Add Combo Types
	( Timelord, 16th November, 2018 )

Module: Update Classic Module:
	Added the remainder of the 511 item families to the Classic Module
Module: Support all 511 Item Families:
	The user can now set all 511 Item Families in the module file.
	Families left blank will retain their 'zz' number.
Modules: Add Item Families to Module:
	The user can now establish custom item names (excluding the
	new 'Script' weapon items for the present), in their module files.
	The string values are for the Item Editor, and Link's Init Item Data.
Modules: Next set of strings to add.
Module: Add Enemy Anims to Classic Module
Modules: Add Enemy Animations 
	Added enemy animation types to the module format.
Module: Use Default for Enemy family if Not Set:
	If the module lacks an entry for an enemy family name, we use
	the old default.
Modules: Set Enemy Family from Module File:
	Added the ability to set enemy family type names from a
	module file. This seems to work as expected.
Modules: Begin adding Enemy Family Names
	( Timelord, 15th November, 2018 )

Fixed when the module filename is loaded, so that we can change
	the filename from default.zmod.
Module: Fix crash on longer `qst.dat` filenames:
	Increased temp_filename[32] to [64] to allow for longer
	filenames for `qst.dat` when using modules.
Modules: Fix crashes with qst.dat
Module: Fix ZQuest not using module datafiles.
Removed extra 's' in EnemiesAlive() [std_functions.zh]
Update build information.
ZC and ZQuest now properly save the current installed module to
	their config files, and ZC now properly releases config(module) back to
	config(zc.cfg) after loading a module.
The number of serialised quests is now set in the module.x
Update `default` module file.
Quest skip names (e.g. ZELDA, JEAN') are now set by the module
	file, and the behaviour for incrementing the quest after winning the game
	is also determined by the module file.
Zelda Classic Player now uses the module data for default quests,
	and for default datafiles. It does not yet use the skip names, or the quest
	ordering var.
Fixed ZC (AGAIN!!) so that fullscreen is NOT the default. 
Ensure we're using zc.cfg where it belongs.
Fix a modules crash.
	( Timelord, 14th November, 2018 )

Added a byte to determine if we use the old hardcoded behaviour
	for determining in what border the player plays the quests, or if we run
	them in a strict linear sequence.
Added a default module file (default.zmod), and split module file into the following sections:
	[ZCMODULE] : Basic Settings
	[QUESTS] : Quest filenames
	[NAMEENTRY] : Names to enter on the name entry menu to skip quests.
	[DATAFILES] : The main datafiles used by ZC and ZQuest.
	[ENEMIES] : Enemy names, and family names; property names.
	[ITEMS] : Item Family names.
	[COMBOS] : Combo type, and flag names.
Added datafiles to the modules structs and class functions.
Try loading and tracing module data.
Added a debug routine to trace what is loaded into the zcmodule
struct fields as ZCModule::debug() 
Began incorporating modules for ZC and ZQuest in the live code.
	Set up the struct, the class, and the pointers.
Begin adding a module system to ZC and ZQuest:
	This consists of `class ZModule` and `struct module`.

Optimised data loaders to use (unsigned), and fixed BC::checkGuy
	so that it uses 1 to MAX, not 0 to MAX. You can't create npc ID 0!
Optimised npcdata macros to use ( unsigned ).
I also fixed a typo in a screendata macro (that isn't called).
	It was trying to validate ri->npcdataref, but it uses tempscr!
Added a sanity check to mapdata->Get/SetFFCInitD() to validate
	the ri->mapsref value, prior to accessing a map.
	( Timelord, 13th November, 2018 )

Merge and update cheat modifier keys. 
	( Timelord, 10th November, 2018 )

Fix: Don't offset blits from bitmaps!
Added Screen->Lines(int layer, int arr[]),
	Screen->DrawTiles(int layer, int arr[]),
	Screen->DrawCombos(int layer, int arr[])
Fixed how user bitmaps work, and fixed bitmap->Blit()
	The user bitmaps now work, although some offsets may be incorrect.
When invoking PutPixels(), the drawing mode wasn't being reset to
	drawing_mode(DRAW_MODE_SOLID, NULL, 0, 0);
	This created visual bugs that modified the UI colours and generated other,
	random colour events.
	This fixes that issue.
Added Screen->DrawPixels() to ZScript
	This is wholly new, and not based on Gleeok's original function PixelArray()
	in the old master repos.
	The args are: int layer, int points[]={x,y,colour,opacity}, int rx, int ry, float deg.

	Example:

	int points[16] = { 20,20,3,128, 20,21,4,128, 20,22,0x11,64, 20,23,0x12,128 };
		Screen->PutPixels(5,points,0,0,0);

Corrected the indices of sdci[] that FastCombo() uses.
Added a fix for ensuring that DrawScreen(),
	DrawLayer(), and FastCombo() respect the CSet2 value of combos.
	It does not yet affect DrawCombo().
Fixed crashes and visual bugs when editing MIDIs that have
	filenames longer than 26 characters.
Clear User Created Bitmap on Creation.
Changed param 2 in Blit(0 from float to untyped.
	This allows passing a bitmap pointer, or specifying a value.
Added all drawing functions to the bitmap type.
Added bitmap->Blit(). This uses the same format as DrawBitmapEx(), except
	that instead of a source bitmap, it uses a destination bitmap.
	( Timelord, 6th November, 2018 )

Changelog: Added error returns to mapdata->
   GetFFCInitD(), SetFFCInitD(), GetFFCInitA(), SetFFCInitA()
   ...if ffc id or index is out of bounds.
	( Timelord, 5th November, 2018 )

Allow custom cheat modifier keys: Save/Load config added for cheat mod keys.
Fixed FFC InitD pulling wrong FFC data,. Properly offset FFC indexes
	( EmilyV, 31st October, 2018 )

Added FFCBF_ constants to std_constants.zh for use with mapdata->FFCFlags[]
	( EmilyV (27th October, 2018 )


Changed array sizes for mapdata ffc arrays from size 32 to size 33.
	Index[0] will now return an error.
	This is to ensure uniformity between the old ffc namespace and the mapdata namespace:
	FFC uses a range of 1 to 32, and mapdata  (previously using a range of 0 to 31), is now identical.-Z

Also fixed compiler error in previous commit -V

Corrected behaviour of all mapdata FFC variables and arrays. -Z
Corrected transposed values for mapdata->FFCEffect*[] and mapdata->FFCTile*[] height 
and width.
Further removed erroneous vbounding madness. What was I thinking?! -Z
	( EmilyV, for Timelord, 27th October, 2018 )
	
Added missing case for BITMAPEXR to script_drawing.cpp switch(command) per Timelord.
Re-added case for BITMAPEXR that was lost in migration from DD Master. -Z
	( EmilyV, for Timelord, 26th October, 2018 )

Fix VBound range limit on some tints.
	( EmilyV, 25th October, 2018 )

Fix Link's invisibility state not being properly cleared. 
	( EmilyV, 24th October, 2018 )

Fix: Crash when loading invalid map, dmapdata->Map wrong return:
	Sanity checks added for map data. dmapdata->Map now adds +1 in the getter, 
	and -1 in the setter, to offset the values so 
	that they match Game->LoadMapData's parameter for map.
Fixed crash when compiling any scripts due to gametable 'Create' and not 'CreateBitmap' 
	entry in table. The parser could not match the tokens and was getting confused. 
	* There is no handling for an entry in the arrays with no matching body! -Z
	( EmilyV, 23rd October, 2018 )

Began adding drawing commands to *bitmap.
Added Bitmap->Create(h,w), and Game->CreateBitmap(h,w)
Integrated GetPixel with user bitmaps.
	( Timelord, 23rd October, 2018 )

Fix Tint Palette leaking into title screen and in dark rooms. Added tempgreypal checks 
in loadfadepal and moved palette restore from in game_over to just after all quit 
conditions in main().
	( EmilyV, 23rd October, 2018 )

Fix Tint/Monochrome DMap transition issues. There is still an issue with dark rooms! 
	Don't know how to fix it, but pretty much everything else seems okay? 
	I didn't test Ganon/Winning the game/Picking up ganon's triforce from the 
	dust pile, though.
	( EmilyV, 22nd October, 2018 )

Fixed tokens for dmapdata, and for combodata, mididata, musicdata.
Added some constants to std.zh.
	(Timelord, 21st Oct, 2018 )

//2.55 Alpha 1 (Candidates)

//PureZC 2018 Fall Expo Build

Added code for Graphics->Tint(), Graphics->MonochromeHue() and 
	Graphics->ClearTint(), and renamed dummy function identifiers.
	( EmilyV, 21st October, 2018 )

Begin adding user/script-created bitmaps to ZScript.
	( Timelord, 21st October, 2018 )

Fixed Lens QR/Flag inclusive ORs
Fix script input setting being overriden by drunk:
	When an input which has a drunk state is written to, tell the drunk code not to change that input.
	( EmilyV, 20th October, 2018 )

Added dummy functions to ZScript so that EmilyV can make the Zelda side of them:
	Graphics->Tint(int,int,int),
	Graphics->MonochromeHue(int,int,int,bool) and
	Graphics->ClearTint
		These can be adapted to user palettes, later.
Added Graphics->Monochrome(int mode) to ZScript.
	This allows setting a monochrome state in a number of hues, with two chroma
	luma distribution patterns.

	Modes:
		const int TINT_NONE = 0;
		const int TINT_GREY = 1;
		const int TINT_RED = 2;
		const int TINT_GREEN = 3;
		const int TINT_BLUE = 4;
		const int TINT_VIOLET = 5;
		const int TINT_TEAL = 6;
		const int TINT_AMBER = 7;
		const int TINT_CYAN = 8;
		const int TINT_MODE_UNIFORM = 0;
		const int TINT_MODE_DISTRIBUTED = 1000;

		Usage:
			Graphics->Monochrome(TINT_MODE_DISTRIBUTED+TINT_AMBER); //Set amber, distribuyted
			Graphics->Monochrome(TINT_NONE); //Restore colour palette.
	( Timelord, 20th October, 2018 )

Properly make Ganon invisible again.
	( Timelord, 20th October, 2018 )

Fix Item QRs Not Selecting:
	Moved all d_dummy_procs in the item rules dialogue to +500, to move their hitbox out 
	of the way
( EmilyV, 20th October, 2018 )

All major game_loop() events will be now logged to allegro.log if LOGGAMELOOP = 1
( Timelord, 20th October, 2018 )

Added qr_NEVERDISABLEAMMOONSUBSCREEN
	If enabled, inventory items with ammo costs will not vanish on subscreens,
	even if Link is out of ammo, or otherwise cannot pay the cost.
Possible fixes for ZScript:
	Link->SetItemSlot()
	Link->Equipment
	Link->ItemA
	Link->ItemB
Fixed crash when calling getWpnPressed for items with subscreen overrides.
Updated build data.
Fixed Init Data not using new zinit members.
( Timelord, 20th October. 2018 )

Remove 214747 limit on asm script length. Done with two changes:
	Make OSetImmediate divide any label arguments by 10000 before printing them.
	Adds the RETURN opcode which pops directly from the stack and jumps to
	it, without multiplying by 10000.
	( grayswandir, 20th October, 2018 )

Changed colors coded for jwin_radio_proc, jwin_check_proc, and draw_checkbox
	These were hard-coded to use jcDARK for the foreground and jcLIGHT for the background and
	I changed this to jcTEXTFG and jcTEXTBG respectively.
	I changed the "shadow" on jwin_radio_proc from jcMEDDARK/jcDARK to a hard-coded vc(0) (Black). 
	This is so that it looks proper in both "Light" and "Dark" themes.
	( EmilyV, 20th October, 2018 )

Fixed crashes of enemies of type Other, Other(float), Ghini, Peahat, Zora, and Spintile
	Gave these gui handlers for BFlags/Attributes pages (identical to eeNONE)
	The crash was being caused by unhandled cases.
Fixed Dark and Expo theme text unreadable against background.
	( EmilyV, 19th October, 2018 )

Fixed Tile editor EXTREME lag issues:
Stopped tracing a message 214500 times per pressing anything in the tile editor.
	( EmilyV, 18th October, 2018 )
Added DARK theme to ZC and ZQuest (gui_colorset = 2019)
Temporarily disable Peahat L2
Added a UI colourset for the PureZC Fall Expo of 2018.
The UI case label is 201018 (20th October, 2018) and the GUI colours are
Samhain themed.
	( Timelord, 18th October, 2018 )

//Preliminary 16 (17th October, 2018)

Fixed Dodongo death sfx in 3rd, 5th, and 4th quests.
Rebuilt clean, fixing some stability issues when ZC and ZQ were running as
background processes.
( Timelord, 17th October, 2018 )

Fixed Dodongo death sound in 1st.qst and 2nd.qst.
	( NightmareJames, 17th October, 2018 )

Re-fixed the sound that 2.10 Dodongos (and BS Dodongos) make when they die.
The prior patch didn't work, but this one seems fine.
( Timelord, 14th October, 2018 )

Fixed UI responsoveness to mouse input caused by not listing some d_dummy_proc elements on tabs.
( Timelord, 14th October, 2018 )

Re-order Item QR dialog, update V_ITEMS to 43
Port qr_WHIRLWINDMIRROR to Whistles ITEM_FLAG3
	Updated V_ITEMS to 43
	Ported QR to flags
	QR renamed to reflect that it still is needed for scripted whirlwinds
	Named flag in zq_custom.cpp
Ported qr_SLOWCHARGINGWALK to ITEM_FLAG10 of swords
	Named ITEM_FLAG10 in zq_custom.cpp
	Set qr_SLOWCHARGINGWALK's checkbox type to dummy
	Ported the flag for V_ITEMS<41
	Marked qr /*DEPRECATED*/ in zq_rules.cpp
Ported qr_SWORDMIRROR to ITEM_FLAG9 of swords  ?
	Renamed QR to reflect its' effect on enemies/scripted sword beams
	Named flag in zq_custom.cpp
Renamed "Sword Beams reflect off mirrors" to "Sword Beams Reflect off Prism/Mirror Combos"
	This required expanding spacing for the items table under the flag 9 column, 
	thus why the entire section is "changed"
qr_SLOWCHARGEWALK and qr_SWORDMIRROR ports
Moved candle porting for FIREPROOF and TEMPCANDLE to be identical to book/dins
	( EmilyV, 12th October, 2018 )

Fixed inf magic preventing rupee drain from items, and added compat QR for this. 
Port qr_MELEEMAGICCOST to Swords, Wands, and CByrnas ITEM_FLAG6
	Named flags in zq_custom
	Marked the qr /*DEPRECATED*/ in zdefs.h
	Forwarded to flags in qst.cpp, including forcing default states
	Made new qr_OLDINFMAGIC, which re-enables inf magic preventing items from draining rupees
	Set QR to on when loading any pre-2.55 quest
	QR was added to Compatibility, taking the last slot on the first tab.
Byrna given "No Melee" flag, now can do melee damage and fixed qr_MELEEMAGICCOST.
	Byrna now does damage equivalent to Attributes[3] (item.misc4)
	It will do no damage if "No Melee" is checked, which is the default.
	MELEEMAGICCOST would not charge magic if you could not shoot a sword beam! 
		Now it does, using a new flagset `misc_internal_link_flags`.
Ported qr_NOWANDMELEE to wands, and added the same flag to hammers - ITEM_FLAG3
	Wands + Hammers functional
	Flag named for Wands + Hammers in zq_custom.cpp
	These things set up for CByrna, but commented out; cbyrna is not ready yet
	( EmilyV, 11th October, 2018 )

Corrected position of `if(tempitem.fam_type==0)tempitem.fam_type=1;` in readitems()
	( EmilyV, 10th October, 2018 )

Added UI text for additional Ganon Behaviour covering:
Using normal Enemy Editor Defences
Using a custom kill shot item.
Put new Ganon code in a comment block, and reinstituted old code for now.
	( Timelord, 9th October, 2018 )

 Renamed "Sword Beams reflect off mirrors" to "Sword Beams Reflect off Prism/Mirror Combos"
	This required expanding spacing for the items table under the flag 9 column, 
	thus why the entire section is "changed"
	( EmilyV, 9th October, 2018 )

Added flags to all enemies (except Ganon):
	Enemy is Completely Invisible
	Enemy Is Revealed by Item Specified in dmisc13
	---> This eventually needs to be a class when positive, and a specific item when negative.
	Draw Invisible as Cloaked
	Render Cloaked Instead of VISIBLE

	All of the above seem to work.

	For GANON:
	Visible if the player has Level 2 Amulet or higher.
	Specific item dispels invisibility (dmisc13)
	When not invisible, show shots.
	Draw cloaked when not invisible.

	This is only PARTLY working. Ganon's shots render, but Ganon does not.

	On the Attributes tab for all enemies, Attributes[12] (misc13) is now
	for the item that removes invisibility from that enemy, and is listed accordingly.
	( Timelord, 9th October, 2018 )
	
Reworded Enemy Editor BFlag[8]:
	Denoted that a nagative value for invisibility item is its class.
Changed the datatype on itemdata.flags to long.
Bumpted V_Items to 41, and updated quest save/load.
	( Timelord, 9th October, 2018 )

Ported qr_SLOWCHARGINGWALK to ITEM_FLAG10 of swords:
	Named ITEM_FLAG10 in zq_custom.cpp
	Set qr_SLOWCHARGINGWALK's checkbox type to dummy
	Ported the flag for V_ITEMS<41
	Marked qr /*DEPRECATED*/ in zq_rules.cpp
	( EmilyV, 9th October, 2018 )
	
	
-V_ITEMS has yet to be updated; this branch is not ready for merge at this time.

//Preliminary 15 (rolled into 16)

//Preliminary 14 (8th Oct, 2018)
Reworded text on Enemy Editor Flags (Is Invisible):
	With full invisibility now an option, I changed the old text to
	read: Is Invisible (Cloaked).
Changelog: Added fields for Attributes tabs inthe Enemy Editor, for Attributes 11 throug 32..
Moved 'Misc Attrib 11' and 'Misc Attrib 12' from Data 2, to Attributes.
Added automatic string handling insetEnemyLabels()
Set default labels for invisibility-dispelling item.
Set default BFlags for invisibility, plus special flags on Ganon.
Fix: Read guys.misc13, misc14, misc15. I somehow missed these when I edxpanded enemy attributes.
( Timelord, 8th October, 2018 )

Fixed death sound for Dodongos. 
( Timelord, 4th October, 2018 )

//2.55 ALphsa 1, Preliminary 13
Rewrote the onSaveMapPic() function to fix issues with it causing
random glitches, including screen drawing glitches while scrolling and other
issues.
	( Timelord, 4th October, 2018 )

//2.55 Alpha 1, Preliminary 12

Adjusted the UI for the Item Editor and the Enemy Editor, justifying the sixteen miscellaneous
	flag tick boxes to the left of each pane. 
Fixed two errors in the setter for itemdata->Flags[16]:
	The logic was incorrect for setting flag or ~flag.
	The label block lacked breaks at each case!
Added npc->BFlags[16] and npcdata->BFlags[16] to ZScript.
Added auto-label code to the new flags in zq_custom.cpp (seek token `BFlags`).
Added a new 'Behaviour' panel to the Enemy Editor Flags tabset. 
	This contains sixteen multipurpose flags, to match those in the item editor, for use in 
	porting quest rules to individual enemies.
Added a new npc variable, `editorflags` to guydata, and to the guy class. 
	( Timelord, 4th October, 2018 )

//2.55 Alpha 1, Preliminary 11
Added constants for MIN_COMBO_POS, MAX_COMBO_POS, and NUM_COMBO_POS to std.zh.

Rewrote all SetLayerCombo*() and GetlayerCombo*() functions in std.zh:

	All of these functions now have the option to use `mapdata` instead of old
	Game-> functions, and options to use either the screen Combo*[] arrays, or
	to use mapdata->Combo*[] arrays, for layer 0. 
	
	They also return errors if layer < 0 or layer > 6.

	Added std.cfg flag: SETLAYERCOMBO_ALWAYS_USE_SETCOMBO
		Setting this to '1' will force using Set/GetCombo on maps instead
		of setting or getting Screen->Combo*[] for layer 0, but only
		if SETLAYERCOMBO_USE_MAPDATAis false.
	
	Added flag SETLAYERCOMBO_USE_MAPDATA to std.cfg.
		Setting this to '1' will always use mapdata, rather than the old Game->GetCombo and
		Game->SetCombo funcvtions. This is the default for 2.55.
		
	Added flag SETLAYERCOMBO_ONLY_USE_MAPDATA to std.cfg.
		Setting this will force using mapdata on layer 0. 
	
	Added error logging to these functions. 
	Added TraceError() to string_functions.zh. 
	( Timelord, 4th October, 2018 )
	
Fix dodongos using the wwrong sound in 2.10 and earlier quests. 
	( Timelord, 3rd October 2018 )
	
Ported qrSLASHFLIPFIX to item editor flags for candles, canes, and swords. 
	( EmilyV, 10th October, 2018 )

Fixed improper warp points in 2nd.qst.
	( NightmareJames, 29th September, 2018 )
	
Ported qrNOITEMMELEE to item editor flags for swords, wands, and canes as ITEM_FLAG7.
	( EmilyV, 28th September, 2018 )
	
Marked deprectaed QRs in qst.cpp.
Remove extraneous inclusive ORs on QRs qr_QUICKSWORD, and qr_NODIVING in link.cpp. 
Ported qrRINGAFFECTDAMAGE to an item flag on rings. 
	( EmilyV, 28th September, 2018 )
	
Added two additional levels of key files:
	.cheat: This is a ketyfile that only enables cheats for the player in ZC, but does not allow
		opening the quest in ZQuest. The questb password is hashed so that it is not visible as
		plain ASCII text in the .cheat keyfile.
	.zpwd: 	This is a keyfile that only allows editing the quest in ZQuest, but it DOES NOT enable cheats.
	( Timelord, 28th September, 2018 )
	
Fixed sideview spike combos and ffcs in quests made iin 2.50.1RC2 and earlier. 
Added a QR to enable the old behaviour for any quest under Compatibility rules.
	( Timelord, 26th September, 2018 )
	
Require using Alt+Shift modifier keys in conjunction with cheat hotkeys.
Fixed hard crash when loading an ASM script if the filename is invalid. 
	( Timelord, 25th September 2018 )
	
Fixed input getting stuuck as if buttons were being hel down, when released.
	( Timelord, 25th September, 2018 )
	( credit also: EmilyV for think-tank.)
	( credit also: Russ for testing.)
	
Fixed the Cheat Menu 'Max Bombs' so that it is possible to set 
any value from 0 to 0xFFFF.
Fixed and improved the Init Data max starting values. Now all counter items have a starting max amount
and a starting amount cap of 0xFFFF.
( Timelord, 25th September 2018 )

Allow setting the Catchall on a room with a type of 'None'. The catchall type is 'Generic Catchall'.
Minor touch-up on qrNOGANONINTRO
Should fix: Nayru's Love decorations do not die, and will eventually wrap the screen.
Should fix: Vires freeze when struck, without split-on-hit.
	( Timelord, 24th September, 2018 )
Should fix: Lens costs rupees with infinite wallet.
Should fix: Diagonal left-down sprites on 8-way shots are mis-oriented.
Should fix: Charged hammer doesn't strike pound blocks.
Should fix: Ganon Triforce holdup when Link is jumping.
Should fix: Ganon's ashes don't fall in sideview.
Expanded QRs from char[20] (160 max rules) to char[100] (800 max rules).
Added a mechanic to determine if a weapon is script generated.
	You can now check: *weapon->isScriptGenerated().
Changed Set/GetLayerCombo*() in std_functions to allow setting or checking on layer 0. 
	( Timelord, 23rd September, 2018 )
	
Ported 'Temporary Light' and all rules regarding bubbles to item flags:
	Ported qr_NONBUBBLEMEDICINE, qr_NONBUBBLETRIFORCE, and qr_ITEMBUBBLE to Triforce/Potion ITEM_FLAG3 and ITEM_FLAG4.
	Ported qr_TEMPCANDLELIGHT to ITEM_FLAG5 of Din's Fire, Candles, and Books.
	New variable stayLit in pal.cpp for keeping track of permanent light; this fixes a major bug with temp and non-temp light on the same screen.
	Reworked how `lighting()` works (part of the bug fix)

	Scripted and Enemy fire still relies on the QR; do not remove the QR!
	The QR has been renamed to reflect this; "Scripted and Enemy Fire Lights Temporarily"

	Updated V_ITEMS to 39; changes in the next commit will also fall under V_ITEMS 39.
	( EmilyV, 23rd September, 2018 )
	
Fix: Scripted Fire/Bombs obey QRs, updated zq_rules names
	( EmilyV, 23rd September, 2018 )
	
Store ffcore.quest_format[vHeader] properly.
Added +15 Scipt Combo Types, fixed storing vCSets
	( Timelord, 23rd September, 2018 )
	
Apply new QRs for broken mirror combos, magic book costs, and
melee weapon magic requirements to their respective components.
QRs are auto-set for quests < 0x250 or 0x250.build < 31 in qst.cpp.

Add QRs to the system for new Wand/Book and other things. 

Attempted fix for two Ganon Room issues:
    Dust Pile does not fall in Sideview
    Triforce hold-up animation is incorrect if Link is Jumping.
2.10 quests will now again use the old 2.10 lens code. --Should we do this, though?

Store all quest header version details in FFCore on quest load, under:
	ffcore.quest_format, with a getter getQuestHeaderInfo() as a universal
	way to read this data at any time. 
    ( Timelord, 22nd September, 2018 )
    
Added 'Picks up keys' to the boomerang, arrows, and the hookshot in the item editor. 

Port qr_BRANGPICKUP and qr_Z3BRANG_HSHOT to the item editor.
	Updated V_ITEMS to 38 (zdefs.h)
	Forwarded QRs to item flags, on arrows, brang, and hshot (qst.cpp)
	Gave flags names in the item editor (zq_custom.cpp)
Port  qr_Z3BRANG_HSHOT to the item editor.
	Changed check from qr_Z3BRANG_HSHOT to ITEM_FLAG6 (brang/hookshot)
	( EmilyV, 22nd September, 2018 )
	
Expand Item Flags from 5 to 16 and added those flags to the Item Editor.
	All item flags are now on their own tab with plenty of room for flavour text.
	Added additional fields to the item in zq_custom.cpp, and the code to aut-name item flags 6 to 16.
Fix crash on subscreen and loading invalid weapon data.
	( Timelord, 21st September, 2018 )
	
Fixed Sword beam grid-snapping error with Mirror Combos
	( EmilyV, 21st September 2018 )
	
Added entry for itype_flippers to zq_custom labels for item editor.
Ported new item flags from QRs on reading quests.
Added and modified labels for the new flags in the item editor.
Added entry for itype_flippers to zq_custom labels for item editor.
Ported new item flags from QRs on reading quests.
Added and modified labels for the new flags in the item editor.
Fixed new fonts looping infinitely on subscreens.
	( Timelord, 20th September 2018 )
	
Fixed bug with Wand/Book Fire
Ported qr_NODIVING to the item editor as item flags. 
Ported qr_FIREPROOFLINK to the item editor as item flags. 
Ported qr_OUCHBOMBS to the item editor as item flags. 
Fixed Link Drunk code to only rand() once.
	( EmilyV, 20th September 2018 )
	
Ported qr_FIREPROOFLIN to the item editor as item flags as ITEM_FLAG3.
	( EmilyV, 17th September 2018 )
Ported qr_BRANGPICKUP to item editor as ITEM_FLAG4.
Ported qr_QUICKSWORD to wand and sword as ITEM_FLAG5.
Ported qr_NODIVING to flippers in item editor. 
	( EmilyV, 15th September, 2018 )

Fix Tile Page cap in editors when reloading entries that have been set to a tile on page 252 or higher.
Expanded max tiles to 214500.
	( Timelord, 14th September, 2018 )
	
Drunk RNG now only runs once per frame.
	( EmilyV, 13th September 2018 )

Finish porting old lens Quest Rules to Item Editor:
	V_ITEMS is now 35
	Deprecated the QRs: qr_LENSHINTS, qr_RAFTLENS, qr_LENSSEESENEMIES.
	Quests with V_ITEMS < 35 will port their QRs to the item editor flags.
	Removed display of old rules (they won't do anything when a quest is saved as V_ITEMS >= 35.
	Added flag descriptions for flags 4 and 5 to the Item Editor.
	( Timelord, 13th September, 2018 )
	


Fixed boomerangs with levels greater than 3, triggering inappropriate
map flags. ( Timelord, 18th September, 2018 )

Added typedef for script type tokens. 
(e.g. [ script typedef ffc scrweapon ] )
	( grayswandir, 11th September, 2018 )
	
Fixed Persisting old, and new Lens of Truth bugs:
	Changed do_lens() to no longer use directWpn for finding the current used item
	Added `getWpnPressed(int itype)` in the same style as isWpnPressed, instead 
	of returning bool it returns the item ID that is pressed.
	These prevent the lens from 'stealing' properties of other items that are used
	at the same time. 
	( EmilyV, 9th September, 2018 )
	
Re-fixed Link->Invisible. It's now a trinary state, with 0 == off, 1 == engine, 
and 2 == script_set. 
	( Timelord, 8th September, 2018 )
	
Use array init code even if not declared an array.
	Fixes issues with some array types not being validated for size.
	( grayswandir, 8th September, 2018 )

Added Flags 4 and 5 to the Lens of Truth item class. 
Lens Flag 4 now enables "Show Raft Paths"
Lens Flag 5 now enables "Show Invisible Enemies"
	( EmilyV, 8th September, 2018 )
	

//2.55 Preliminary 10

Moved strFormat() into a new class, XTableHelper--rename it later if you don't like it--, 
and fixed ordering of module files to fix compiling on MSVC:
	The new cpp file, src/parser/CompilerUtils.cpp, was being added to
	the ZScript objects *after* src/parser/CompileError.cpp, which needed
	to access an external reference from CompilerUtils.
	In order for MSVC to be able to Link the objects properly, the file
	order must be arranged so that CompilerUtils is before CompileError. 
	( Timelord, 7th September, 2018 )
	
Added strings for the three new lens flags to the Item Editor.
	( Timelord, 7th September, 2018 )

Fixed crash on writing to void types. 
	( grayswandir, 7th September, 2018 )
	
Removed duplicate tokens from flex. 
Split Graphics-> and bitmap-> into two tables. 
Removed warning for script-level variables.
	You can now declare script-scope variables, constants, and arrays.
	These are global, but their identifiers are in the script's namespace,
	so accessing them would use the dot scope resolution token:
		scriptname.variable
		scriptname.CONSTANT
		scriptname.array[index]
	( grayswandir, 6th September, 2018 )

Add type checking to compiler error messages
	This should prevent any more blank error messages popping up. These
	were mainly do to passing a std::string into the format function,
	instead of a c string. Now the error code arguments are type properly
	checked.
		All compile error codes are now generated from the CompileError.xtable
	file. Adding a new line is all that's needed for a new error
	code. Currently it is only set up for up to 2 arguments per
	code. Adding more will require some rewriting.
		CompileError is now an actual value type object that holds onto the
	source AST node and other information when constructed, instead of
	just being the enum-type object it was before.

	Added box_out_err for directly printing out error messages.

	Added a general string format function to CompilerUtils.
	( grayswandir, 5th September, 2018 )

Added three flags to lens items:
	Setting Lens Flag 1 is equivalent to qr_LENSHINTS being set for that item
	Setting Lens Flag 2 will prevent secret combos as well as qr_LENSHINTS hints from being shown by that item
	Setting Lens Flag 3 will prevent Armos/Chest -> Item and Dive -> Item items from being shown.
	
	The lens item ID is tracked by Link.setLastLensID(id) and Link.getLastLensID(). 
	( EmilyV, 4th September, 2018 )
	
//2.55 Preliminary 9

Fixed Link->Action[dying] being set at the incorrect frame during Link.gameover(). 
	( grayswandir, 4th September, 2018 )
	
Fixed issues with ZScript namespace compiling on MSVC. 
 ( grayswandir, 3rd September, 2018 )
 
Fixed Link being drawn before running the OnContinue script. 
Fixed various issues with Link->Action being set improperly. 
Fix Lens of Truth showing all new combo flags as secrets.
Fix Greyscale modes causing inproper writes of CSet6 colours to other CSets. 
	( Timelord, 3rd September, 2018 )
	
Moved ZScript into its own namespace.
	( grayswandir, 2nd September, 2018 )
	
Fixed Game->Misc[] not working on array indices higher than 0. 
	( Timelord, 2nd September, 2018 )
	
Added a nop to switch statements, to fix while and other loops in switch statements. 
Directly assigning string and array literals now works regardless of
the declaration type.
	( grayswandir, 1st September, 2018 )
	
Added constants for GetScreenEFlags()
	( EmilyV, 31st August, 2018 )
	

//2.55 Preliminary 8

Fixed issues with global array pointers.
	( grayswandir, 31st August, 2018 )

Further refactor string.zh for performance.
Corrected value for DIR16_RADS_RIGHTRIGHTUP. 
Added additional defence types and outcomes to NPCD_* and NPCDT_*. ( Timelord, 31st August, 2018 )
	( Timelord, 31st August, 2018 )

Added NPCD_Scriptweapon types to std_constants. 
	( EmilyV, 30th August, 2018 )


Fix crash when using Game->Misc[] and shopdata. ( Timelord, 31st August, 2018 )
Fix Link->Misc multiplying/diving by 10000. ( Timelord, 30th August, 2018 )

//2.55 Preliminary 7

Added npc->HitBy[LW_TYPE] : This stores the lweapon type (ID) that struck an npc.
Added npc->HitBy[LW_PARENTITEM] : This stores the parent Item ID that generated a weapon that struck the npc.
( Timelord, 29th August, 2018 )

Fixed values for new combo flag constants, starting with 106. 
 ( EmilyV, 29th August, 2018 )

//2.55 Preliminary 6

Fixed the `this->` pointer being pushed last instead of first. ( grayswandir, 28th August, 2018 )

//2.55 Preliminary 5

Fix parser function overload typecasting logic. ( grayswandir, 25th August, 2018 )

//2.55 Preliminary 4

Fix switch-case.
	( grayswandir, 24th August, 2018 )

//2.55 Preliminary 3 
Parser Fixes:
	Let you use indexed arrays as left side of pointers.
	Re-Add in missing lexer tokens (mapdata, messagedata, ponddata, rgbdata, shopdata, spritedata), (lost in refactor)
	Re-Add in proper casting to/from untyped (lost in refactor)
	Fix pointer for GetPixel().
	Allow type names as identifiers
	Add back in missing tokens to scanner (lost in refactor)
	( grayswandir, 22nd August, 2018 )

//2.54 Changes
//Alpha 35

Changed the enemy editor default for hitsound from 0 (None)
to 11 (Enemy is Hit) in the quest loader for older quests.
Now if hitsfx is set to 0 (none), the hit will be silent.

The hardcoded enemy hit sound was playing OVER user-set sounds,
causing both sounds to play at the same time on a hit, and if an enemy 
died on the same frame that it was hit, all three sounds would play that frame.

[Applied also to 2.53.0, Beta 16]
( Timelord, 22nd August, 2018 )

Fixed Link's hurt sfrx not being initialised to the old default.
Fixed npc weapon sprites being read from guysbuf[] instead of the individual enemy.
Fixed an issue where setting npc->Weapon in older quests did not update its sprite. 
( Timelord, 22nd August, 2018 )

Fixed const float not casting to float.
Fixed function overloads being confused by constants.
Fixed array initialisation with constants. 
( grayswandir, 21st August, 2018 )

//Alpha 34
Redacted some changes, and re=implemented new features from Alpha 32, and 33 
into the new parser branch. (This fixed some instability in Alpha 32 and 33.) 
Fixed a bug where Link->Action would not return swimming, charging, or diving. 
( Timelord, 21st August, 2018 )

Add escape sequences to string literals

	Added:
	- \a\b\f\n\r\t\v for the standard values,
	- \" for quotes
	- You can escape a newline to make it not appear in the string

	Additionally, adjacent strings are merged by the compiler.

	This also fixed a bug where multiline string literals would count as
	one line.
	( grayswandir, 20th August, 2018 )

Add column numbers to compile error messages

	Most compilation error messages should now properly report the file,
	line, and column numbers.

	Rewrote the scanner to track the line and column numbers. It's
	theoretically faster as well.

Add #option trace for disabling tracing calls

	A call to "#option trace off" will disable all "tracing" function
	calls.

	Currently, "tracing" functions are defined as those which return void
	and start with "Trace" or "print". Later we should change this out to
	a specific designation we can attach to a function.


fix: Make truncation error show properly
fix: Let compile options count in function scope
Add on/off as aliases for true/false in #option
Add inheritance directives for compile options 
Add file-scope compile options

Add option support to scopes and OPTION_VALUE expr

	Scopes now maintain their own map of set option values, and the value
	of an option under a scope can be looked up.

	The OPTION_VALUE(option_name) expression returns the current value of
	a given option in the current scope.

Make each imported file have its own scope

	Renamed ASTProgram to ASTFile.

	Renamed GlobalScope to RootScope. Introduced FileScope. RootScope now
	pretends to locally have all objects that its FileScope children
	register in it, except for options.

Add setting options to scripts and statement blocks

	The syntax is:
	\#option name value_expr.

	The parser will give a warning if anything comes before the options in
	the blocks.

	Global or file level options are currently not allowed.

( grayswandir, 19th August, 2018 )

//Alpha 33

Fixed *bitmap->GetPixel(int x, int y). It now work swith the screen (and offset flags),
	and with off-screen bitmaps. ( Timelord, 18th August, 2018 )

Fixed Untype(), moved Null() to Debug-> pointer as:
	Debug->NULL(), Debug->Null(), Debug->NULL, and Debug->Null ( Timelord, 18th August, 2018 )

Allow global level compile errors 
Allow script level compiler errors
	Can now insert a compile_error statement inside of script definitions.

Add Array Literals

	Of the following forms:
	- {0, 1, 2}
	- (int[]){0, 1, 2}
	- (int[3]){}
	- (int[3]){4}

	Currently broken in the global scope, but the existing string literals
	are also broken in the same way, so both will be fixed later in the same
	commit.
	( grayswandir, 23rd July, 2018 )

//Alpha 32

npc->Attributes[32], itemdata->Attributes[32], and npcdata->Attributes[32] are now untyped, for the same reason as Misc[].

npc->HitBy[10] now has indices for object UIDs. The valid indices are:
#define HIT_BY_NPC 0
#define HIT_BY_EWEAPON 1
#define HIT_BY_LWEAPON 2
#define HIT_BY_FFC 3

#define HIT_BY_NPC_UID 4
#define HIT_BY_EWEAPON_UID 5
#define HIT_BY_LWEAPON_UID 6
#define HIT_BY_FFC_UID 7

#define HIT_BY_COMBO 8
#define HIT_BY_MAPFLAG 9

Obviously, only indices 2, and 6 are in use at this time. 
	Some melee weapons do not register a hit at this time. 
	
When a weapon hits an npc, both the screen index, and the script UID are stored in npc->HitBy[], in indices
2 and 6 respectively. I tried to apply a similar change to Link, but this wasn't stable, so I reverted it for now. 
( Timelord, 16th August, 2018 )
	
Resized npc->HitBy[] and Link->HitBy[] to a size of [10] each. ( Timelord, 16th August, 2018 )


Temporarily rename some internal allegro functions so they don't
	conflict with some new functions that glibc defines. ( grayswandir, 15th August, 2018 )
Fixed return values and setter values (div/mult by 10000) for npc->HitBy[] and Link->HitBy[] based on index of the array. ( 15th August, 2018 )
Fixed npc->Attributes. it was a size of 14, not 32. ( 15th August, 2018 )
Fixed datatype->Misc[]. The values above index 15 weren't set up properly, or initialised. ( 15th August, 2018 )
Fixed typecast for npc->HitBy[]. It's now 'untyped'. ( 15th August, 2018 )
Revised Untype() function, and NULL() function.  ( Timelord, 11th August, 2018 )
Added NULL, Null, and Null() as alternatives to NULL() ( Timelord, 11th August, 2018 )
Added expanded ZScript docs. ( Timelord, 10th August, 2018 )
Added bitmap->Getpixel(x,y) ( Timelord, 10th August, 2018 )
Removed deprecated functions carried over from '2.future' and old 2.54 alphas that 
	have been replaced by datatype members. ( Timelord, 10th August, 2018 )


//Alpha 31
Added mock-up layout for revised Enemy Editor ( Timelord, 65th April, 2018 )
Segregated Enemy Editor Defences ( Timelord, 16th April, 2018 )
Moved Enemy Size tab into basic properties tab as a sub-tab. ( Timelord, 15th April, 2018 )
Fixed enemy editor defence sub-tabs. ( Timelord, 15th April, 2018 )
Fixed default enemy sounds. ( Timelord, 15th April, 2018 )


//Alpha 30
Added cascading tabs to the Enemy Editor:
	The Defs 1, Defs 2, and Defs 3 tabs have been moved 
	into a *nested* tab interface.
	The new tab, `Defenses`, has three tabs that cascade
	below it.
	This will save some room and remove some UI clutter. ( Timelord, 14th April, 2018 )


//Alpha 29
Fix: Fix enemies not seeking link at some angles. ( Tamamo, 13th April, 2018 )
Added a heap of variables to npcs:
	misc16 -> misc32
	npcscript, initD[8], intiA[2]
	movement[32] (for patterns, args)
	new_weapon[32] (for weapon movement patterns and args)
	firesfx


//Alpha 28
Added whistle defence to enemies.
Added whistle Can Damage flag, and a damage attribute field to
	the whistle item (in the Item Editor). ( Timelord, 10th April 2018 )

//Alpha 27
Added bool dmapdata->Sideview to ZScript.

The user may now enable the following effects on DMap-Basis, in 
	addition to a per-screen basis (as DMap flags, instead of as Screen Flags):

1.	Sideview Gravity on All Screens (uses Dmaps[].sideview, new var.
2.	Layer 3 is Background on All Screens (uses DMaps[].flgs&dmfLAYER3BG)
3.	Layer 2 is Background on All Screens (uses DMaps[].flgs&dmfLAYER2BG

This works in ZC, but does not yet display properly in ZQuest.

I am not sure how to best do this, as the ZQ screen has no way to tell 
to what DMap it is bound.

It may need to be a view option, as `View Layer 3 as Bckground` and 
	`View Layer 2 as Background` via the menus. 

Fixed size of tabs in DMap editor to fit additional flags.
Added DMap flags `Treat Layer 2 as Background on all Screens` and
	`Treat Layer 3 as Background on All Screens` to the DMap Editor (Flags).
	These use Dmaps[].flags
	This works in ZC, but does not yet display properly in ZQuest.
		Im not sure how to best do this, as the ZQ screen has no way to tell to what DMap it is bound.
Changed wording for DMap sideview (DMaps Editor, Flags) to `Enable Sideview on All Screens`. 
	All screens of that DMap will be treated as sideview.
	This is NOT Xor`d with the screen flag!
	This uses a new vriable, DMaps[].sideview
		( Timelord, 8th April, 2018 )
Added byte sideview to struct dmaps and updated V_DMAPS to 10.
	Updated quest loading and saving. ( Timelord, 7th April 2018 )

//Alpha 26
Class FFScript is now shared between zc and ZQuest
NPCs, Items, and Weapons now have special UIDs (in class FFScript) that can be used
	to track them either in-engine, or by script. 
Added lweapon->UID, eweapon->UID, npc->UID, and item->UID to ZScript
	( Timelord, 7th April, 2018 )

//Alpha 25
Added a compatibility fix for DrawInteger() and DrawCharacter() for quests made
	using the old (broken) scaling factors. ( Timelord, 4th April, 2018 )
	* Also implemented in 2.53.0 Beta 15
	
//Alpha 24
Added byte ScriptGeneratd param to weapon.add() 
Fixed default weapon sprites for Gleeok, Fire Gleeok, Gohma, and Aquamentus
Added bool EnemiesAlive() and int NumberEnemies() to std_functions.zh.
	( Timelord, 1st April, 2018 )

//Alpha 23

Added Extra Rule for older quests so that swords with a magic cost only apply it to beams,
	and backported it to 2.53.0. 
	!! This needs to be an item editor flagset: Beams use Magic, Blade Uses Magic
Added a QR No Intro String in Ganon Rooms and backported it to 2.53.0 (beta 14)

Made all enemies, including unimplemented types, visible in the Enemy Editor for Tamamo. 
Moved the code that sets default weapon sprites for NPCs (for old quests) from the Enemy Editor
	and into quest loading code ( qst.cpp, readguys() ). 
	This should have fixed a bug with fire gleeoks in old quests. ( Timelord, 28th March, 2018 )

//Alpha 22
Fixed arrows not working; and making sword sprites. ( Timelord, 3rd March, 2018 )

Fixed swords not obeying magic costs. ( Timelord, 15th January, 2018 )

Added tooltips to the 'Quest Rev' and 'Min Rev' fields in the
Quest Header dialogue. 

Cleaned up Header dialogue and made the quest number visible (but disabled)
by default. Holding Right Shift while opening the dialogue makes it an editable field. 
* Also applied to 2.53.0 Beta 12 at this date. 	( Timelord, 14th January, 2018 )

MISSING: npcdata->FireSound; npc->FireSound
NEEDED: npc-Defence for LW_SPARKLE.
NEEDED npc->FrozenTile offsets for facing dir, or something so that ZC chooses the
	tile based on the same tile offset as the npc has before being frozen.
	e.g. If they are facing left, on the third tile of a 4-tile animation,
	the frozen tile should be the same offset. 
	NOT simply setting a static tile. 

Reserved some mapscreen variables for future use. 

Corrected the tooltip for Slash->Item combos (zq_misc.cpp). 

Improved efficiency of string.zh functions, and updated the docs.
	( Timelord, 10th January, 2018 )
	
Fixed swords and melee weapons conflicting with npc->HitBy[LWEAPON].
Added preliminary bool npc->Core. Cores of segmented enemies should set this true, segments false.
	parentCore will be a bit trickier, and I'll add it only once I verify that this component works.
Added npc->HitBy[4]. Only lweapons attempt to set this at present, and link class weapons (e.g. swords) are, for some
	reason, not doing it, but other lweapons work fine.
	( Timelord, 5th January, 2018 )

Link->HitBy[] is set non-zero, and only persists for one frame.
Because it is set by Link.checkhit(), the timing is a bit bonkers...
	Link->HitBy[] is valid AFTER WAITDRAW through to the next WAITDRAW.
Why is ZC timing so bonkers?!

Fixed Link->Misc[] not being divided or multiplied (internally) by 10000.
--also applied to 2.53.0b12 at this date. 
Fixed Link->HitBy[] and Link->Defense[], which were copy/pasted from Misc[]
	and thus, were not doing div/mult by 1000.
	( Timelord, 4th January., 2018 )

! This should be set when damage is applied to Link ! --Now I forgot what this was intended to mean. -Z

Added a pair of Link class arrays. The first, stores the last weapon or npc that hit Link.
This is not yet cleared every frame. The values only change when Link is hit. 
The ZScript interface for this is Link->HitBy[4], where index 0 is the last npc screen index that
hit him, and index [1] is the last eweapon.
The second, is Link->Defense[256], and while the ZScript array is r/w. 
there is no code to swet up defences in the quest, nor anything that makes use of them.
They are not yet saved at all, and this will need an Init Data panel, plus code to save it
with the quest, and to load it. Heck, it'll need new section info. :(
It will also need code to modify the damage value of weapons that hit Link. 
	( Timelord, 3rd January, 2018 )

Fixed a bug where the return for Link->Action when rafting was only returning
LA_RAFTING on the first frame of the action, and LA_SWIMMING during the rafting animation.
	( 31st December, 2017 )
	
Applied Item Editor fix for InitD values. (They were clamped from -31768 to 327678, and
	now they are clamped between -214748.3647 and 214748.3647.
	Applied to 2.54 Alpha 22, and 2.53 Beta 12. 

Added the following datatypes:
	dropdata, ponddata, warpring, doorset, misccolors, 
	rgbdata, palette, zcmidi, palcycle, gamedata, cheats
	
	NOTE: 	None of these have any variables at this time. 
		Some of these may later be discarded, or repurposed; or they
		may not be used in 2,54, but instead will be implemented fully
		in 2.55, or later. 

Trace() now supports any datatype. (If you trace a bool, false will trace 0
and true will trace 0.0001.) 

//Alpha 21
Fixed a bug in Game->LoadComboData that could crash ZC, and copied
the fix to all of the other, new Game->Load functions, in the event that
they also have this issue.

The problem was caused by setting their ref to LONG_MAX, which could
cause memory corruption; trying to access invalid memory areas.

Added combodata variables and arrays:
	Type, Tile, Flip, Walk, CSet, Foo, Frames, NextData,
	NextCSet, Flag, SkipAnim, NextTimer, SkipAnimY, AnimFlags,
	Expansion[6], Attributes[4], TriggerFlags[3], UserFlags,
	TriggerLevel, BlockNPC, BlockHole, BlockTrigger, BlockWeapon[32],
	ConveyorSpeedX, ConveyorSpeedY, SpawnNPC, SpawnNPCWhen, SpawnNPCChange,
	DirChange, DistanceChangeTiles, DiveItem, Dock, Fairy, 
	FFCAttributeChange, DecorationTile, DecorationType, Hookshot,
	Ladder, LockBlock, LockBlockChange, Mirror, DamageAmount, DamageDelay,
	DamageType, MagicAmount, MagicDelay, MagicType, NoPushBlocks,
	Overhead, PlaceNPC, PushDir, PushDelay, PushHeavy, Pushed, Raft,
	ResetRoom, SavePoint, FreezeScreen, SecretCombo, Singular (self-only),
	SlowWalk, Statue, Step, StepChange, Strike[32], StrikeRemnants,
	StrikeRemnantsType, StrikeChange, StrikeItem, TouchItem,
	TouchStairs, TriggerType, TriggerSensitivity, Warp, WarpSensitivity,
	WarpDirect, WarpLocation, Water, Whistle, WinGame, BlockWeaponLevel.

Fixed TypingMode not cleared on 'Reset System' from FKeys/menus.
	( Timelord, 26th December, 2017 )

Added Game->TypingMode : This sets a flag in FFCore that disables KB input from
	moving Link, or using his button items, and so forth, to ensure that all keypresses
	are read as char keys, instead of controller keys. 
	It is reset to false on every quest load, and on F6 (or death, save, etc.)

Fixed a packfile error with loading combos (V_COMBOS was not set to 10).
Renamed 'Script n' counters to 'Custom n'.
Changed how item 'magic cost' works, allowing the user to set it to any counter. 
Added this to ZScript as itemdata->CostCounter. 
itemdata->MagicCost still exists, but I have added a second interface to it as itemdata->Cost 
to reflect that Cost is no longer tied to magic.
	( Timelord, 25th December, 2017 )

Expanded triggerflags[2] to triggerflags[3] so that there is enough room for more weapons
that we will be adding. V_COMBOS is now 10, and V9 only uses the lowest two.
Added UI links to set the triggerflags[] and triggerlevel values from the Combo Editor. 
Added combo vars long triggerflags[2] and long triggerlevel. 
Finished the 'Attributes' tab of the Combo Editor. 
Added mock-up 'Triggered by' (1) and (2) tabs for all weapon types, with a level requirement field. 
Added mock-up 'Attributes' tab to the Combo Editor. (The fields are in place, but they do nothing.)
Moved the ZASM label for Version (ZELDAVERSION) to a code that was accessible by 2.50.3 and earlier. 
Changed combo editor dialogue to add tabs 'Data' and 'Attributes'
Added long Attributes[4] and long usrflags to *newcombo 
	combodata->Attributes[] and Screen->GetComboAttribute(pos, indx) / SetComboAttribute(pos, indx)
	combodata->Flags and Screen->ComboFlags[pos] -- Maybe ComboMisc[pos] to avoid confusion?
	Combo QR rules will become ComboMisc[] ! 
		( Timelord, 18th December, 2017 )
Added Link->Stun (When Link is stunned he cannot move, or attack, but he can change direction)
Added a 32-index array of questmisc[] to the misc struct.
	This is to be used in quest Init Data, to set up global quest
	values for use by scripts. The Init Data dialogue is not yet done,
	but the ZScript interface is, under Game->Misc[32].
Added  char questmisc_strings[32][128] to store the user-defined names of each of the Game->Misc[] fields.
Added subscreen counters Life, Max Life, Magic, Max Magic. ( Timelord, 12th December, 2017 )
Added Graphics->Wavy(bool), Zap(bool), Greyscale(bool).
These replace Screen->WavyIn(), WavyOut(), ZapIn(), ZapOut()
GreyscaleOn(), and GreyscaleOff(). 

Added Link->Pushing. This returns the number of frames for which Link has been 
walking in place, pushing on a solid object.
	Note: I decided that this was better than hacking
	a real pushing action in, or adding a fake action, as the latter would conflict
	with existing scripts that use LA_WALKING for /n/ frames, to determine if
	Link is walking in place, and thus, pushing on an object.
	Link.cpp now sets script-engine only actions. Reading Link->Action reads these
	rather than the actual, internal 'action' variable. 
		( Timelord, 9th December, 2017 )
	This allows setting actions arbitrarily in Link.cpp to give scripts more useful access,
	or adding arbitrary script actions, without affecting the hardcoded action stuff and 
	general frame timing. 
	I would prefer these set action bits, but then clearing them would be a mess. 
	Link->Action == DYING is still never set, despite setting (the fake ffcore) var earlier 
	than the engine variable. :(
	( Timelord, 7th December, 2017 )
Revised the priority of Init and Continue scripts, to run immediately prior to the opening wipe.
Changed the priority of global Init and OnContinue scripts so that
they can affect environmental values before the opening wipe. 
Let's hope that this didn't break anything. (Tosses coin).  ( Timelord, 5th December, 2017 )
Added an automatic shop script (untested) to /testscripts.
Added a new path, /testscripts/* to the repo.
Added a flag to items/itemdata->PickupFlags that prevents the engine from
marking the string as having been played, as value 0x04, 'itemdataPSTRING_NOMARK'.
	( Timelord, 3rd December, 2017 )
//Alpha 20
Fixed a conflict with item messages in shops, and shop messages.
The new behaviour is this:
	1. Buying an item in a shop plays the shop string, not the item pickup string.
	2. It does not set the FFCore flag for that item.
	3. A placed or dropset item that is in a shop room will play the item string.
	4. Placed / dropset items in shop rooms set the flag.
	5. Shop items ignore if the flag for them is set.
Fixed an error in messagedata->Font
Fixed two missing commands in script_command command_list[]
	( Timelord, 3rd December, 2017 )
Renamed Audio->AdjustVolume() to AdjustMusicVolume()
Items now have info strings that the user may set in the item editor.
These have a default behaviour, as follows:
	1. If the user has never acquired the item in the current game session,
	the string plays, and a flag is set in FFCore that that item has
	displayed its string.
	2. These flags are cleared on a complete exit on the game (not just a continue).
	3. The user may set an ALWAYS flag to cause the string to always appear.
	4. The user may set a flag ON_IP_HOLDUP, so that the string is always shown, if
	the item is held over Link's head.
The string value, and the flags for it, are accessible in ZScript both from item, and 
from itemdata.
The string is clamped in the item editor to valid strings.
If an invalid string ID is set, ZC does not play it. 
		( Timelord, 1st December, 2017 )
ZQuest Shops now have an info string. When you buy an item, if this is set to a valid string, ZC will display that string.
I'm working on making that work from items, too.
Increased combo aliases to 8192 (for Lut).
Added an info string to the item shop editor, and to the struct.
I think that the default behaviour for this, should be to show the
string when a player buys an item.
Added Audio->AdjustVolume(int percent) and AdjustSFXVolume(int percent)
	 ( Timelord, 30th November, 2017 )
Began implementing the FFCore class. ( Timelord, 29th November, 2017 )

//Alpha 19

Added dmapdata with the following syntax.
	dmapdata dmd = Game->LoadDMapData(id);
	Functions:
	SetName(), GetName(), SetTitle(), GetTitle(), SetIntro(), GetIntro()
	SetMusic(), GetMusic();
	Variables:
	int Map, Level, Offset, Compass, Palette, MIDI, Continue, Type;
	int MusicTrack, ActiveSubscreen, PassiveSubscreen, Grid[8];
	int MiniMapTile[2], MiniMapCSet[2], MapTile[2], MapCSet[2];
	int DisabledItems[256], Flags

Fixed missing Screen->WavtIn, WavyOut, ZapIn, and ZapOut.
Added messagedata vars and functions:
messagedata msgd = Game->LoadMessageData(msg_id);
	msgd->Set("String");
	int buffer_str[80];
	msgd->Get(buffer_str);
	Vars:
	msgd-> 
		int Next, Tile, CSet, Font, X, Y, Width, Height;
		int SoundListPosition, VSpace, HSpace, Flags;
		bool Transparent; (unused at this time).
	
( Timelord, 27th November, 2017 )	

Added Audio->Volume[4] and Audio->PanStyle ( Timelord 26th November, 2017 )

Added bool Shield[5] to npc-> and npcdata->
	The indices are { up, left, right, back, can_break } ( Timelord, 25th November, 2017 )

Added shopdata for item shops, and info shops.
Both types use the same ref, and thus, the same pointer type, called using:
shopdata shop = Game->LoadShopData(shop_id);
shopdata info = Game->LoadInfoShopData(shop_id).
The latter offsets the ID by +256. If the shop id is > 255, it is an info shop.
The members are:
shop->Price[3]
infoshop->Price[3]
infoshop->String[3]
shop->Item[3]
shop->HasItem[3]

If the user attempts to r/w to a variable that is inappropriate for the shop type, 
ZScript will log an error informing them of the nature of the error. 

Changed lweapon->ParentItem to lweapon->Parent.
Added eweapon->Parent (parent npc).
Added lweapon->Level and lweapon->ParentItem. ( Timelord, 24th November 2017 )

Un-typed initD and SizeOfArray().
Added preliminary, untyped Null() and an Untype() function to the global pointer. ( Timelord, 23rd November, 2017 )

Rebased 2.54 while backporting fixes to switch-case from master.
Renamed the 'nil' type to 'untyped'. ( Grayswandir, 22nd November, 2017 )

//Alpha 18
Added new datatypes: dmapdata, messagedata, shopdata, nil.
THe 'nil' type is untyped data. ( Timelord, 21st November, 2017 )

//Alpha 17
Fixed Game->LoadMapData(int map, int scr)
Added Link->ScriptFlip.
Added extra padding for Link->ScriptTile to prevent the engine
choosing the tile based on LTMs and other factors.
Added a routine to Link::setEntryPoints(x,y) to store the entry points
for a given screen in that screen's data (mapscr->entry_x, entry_y)
This data should be available to ZScript, and (I hope) will be appropriate
for all warps as well as screen scrolling entry points.  ( Timelord, 17th November, 2017 )


//Alpha 16

Added mapdata->variables, and matched them all to Screen->
New variables are:
int Valid
int Guy
int String
int RoomType
int Item
int HasItem
int TileWarpType[4]
int TileWarpOverlayFlags
int DoorComboSet
int WarpReturnX[4] //2.50 warp return squares (blue). 
int WarpReturnY[4]
int WarpReturnC
int StairsX
int StairsY
int ItemX
int ItemY
int CSet
int EnemyFlags
int Door[4]
int TileWarpDMap[4]
int TileWarpScreen[4]
int ExitDir
int Enemy[10]
int Pattern
int SideWarpType[4]
int SideWarpOverlayFlags
int WarpArrivalX //old 2.10 warp arrival point (green). 
int WarpArrivalY
int MazePath[4]
int SideWarpScreen[4]
int SideWarpDMap[4]
int SideWarpIndex
int UnderCombo
int UnderCSet
int Catchall
int CSensitive
int NoReset
int NoCarry
int LayerMap[6]
int LayerScreen[6]
int LayerOpacity[6]
int TimedWarpTimer
int NextMap
int NextScreen
int SecretCombo[128]
int SecretCSet[128]
int SecretFlags[128]
int ViewX
int ViewY
int Width
int Height
int EntryX
int EntryY
int ScriptEntry
int ScriptOccupancy
int ExitScript
int OceanSFX
int BossSFX
int SecretSFX
int ItemSFX
int MIDI
int LensLayer
int Flags[10]
int D[8]
int ComboD[176]
int ComboC[176]
int ComboF[176]
int ComboI[176]
int ComboT[176]
int ComboS[176]
int State[32]
int Flags[10]
int EFlags[3]
int NumFFCs
int FFCEffectWidth[32]
int FFCEffectHeight[32]
int FFCTileWidth[32]
int FFCTileHeight[32]
int FFCData[32]
int FFCCSet[32]
int FFCDelay[32]
int FFCX[32]
int FFCY[32]
int FFCVx[32]
int FFCVy[32]
int FFCAx[32]
int FFCAy[32]
int FFCFlags[32]
int FFCLink[32]
int FFCScript[32]
bool FFCRunning[32]
 //Functions
int GetFFCInitD(int ffc_index, int init_d)
void SetFFCInitD(int ffc_index, int init_d, float value)
int GetFFCInitA(int ffc_index, int init_a)
void SetFFCIniA(int ffc_index, int init_a, float value)
(Timelord, 15th November, 2017)

//Alpha 15

Added Weapon Classes for all ten script weapon types, and for the ice rod; plus cpntrol code for all of the script types.
An item set to a Script *n class will generate a weapon with the script *d LW type, and will pull its power, step, and
its graphics from the item editor. The user may set an item editor flag to disable automatic sprite flipping. ( Timelord, 4th November, 2017 )


//Alpha 14
Converted the 'power' attribute of itemdata from a byte to a long. Item power now has a valid range of -LONG_MAX to +LONG_MAX, 
however the cap is realistically -214747 to 214747, for ZScript. This allows inverting the effects of many items/weapons, and 
scaling to obscene levels. (Negative values now work in the power field, and in Attributes[], for rings, and similar.)
Converted the 'family' attribute of itemdata from a byte to a long. This is in perparation for adding new classes (hardcoded),
and allowing the user to create custom item classes.
Begin adding mapdata variables. 
Changed Game->LoadMapData(int map) to Game->LoadMapData(int map, int screen). 
Fixed a bug that was causing spritedata variable to return 'Cannot find function label NNN': This is caused by not adding
the instructions into the vector, in globalsymbols.cpp (LibrarySymbols::addSymbolsCode(LinkTable &lt)), on a given table.
Added variables to the datatypes 'spritedata' and 'npcdata'. These have the same syntax as 'ffc', or 'npc' types. ( Timelord, 2nd November, 2017 )


//Alpha 13
The 'Weapon Size' tab now works, but the values do not always make sense. (They need hardcoding wizardry.) ( Timelord, 31st October, 2017 )


//Alpha 12

Added ZScript variables to itemdata-> for all of the new item editor fields under the 'Size' and 'Weapon Size' tabs.

Began adding a 'Weapon Size' tab to the item editor. The editor fields work, but they do not yet affect anything in-game.

Added a 'Size' tab to the item editor. The user may now set the following mfields for items in ZQuest, without scripts:
TileWidth, TileHeight, HotWidth, HitHeight, HitXOffset, HitYOffset, DrawXOffset, DrawYOffset, HitZHeight
The editor has an 'Override' flag for each. The values will only work if the override flag is enabled, and this will
override any other internal sizes and offsets normally applied by the engine. ( Timelord, 31st October, 2017 )


//Alpha 11

Added Game->LoadNPCData(), LoadMapData(), LoadComboData(), LoadSpriteData(), LoadScreenData() (unused) and LoadBitmapID(). 

Added 'npcdata' datatype. The user may now declare a type of
npcdata in ZScript, and the declared pointer references NPCData-> functions,
and more important, variables /t/b/a/ for the class.
	
Added 'spritedata' datatype. The user may now declare a type of
spritedata in ZScript, and the declared pointer references SpriteData-> 
functions, and more important, variables /t/b/a/ for the class.

Added 'mapdata' datatype. The user may now declare a type of
mapdata in ZScript, and the declared pointer references MapData-> 
functions, and more important, variables /t/b/a/ for the class.
	
Added 'combodata' datatype. The user may now declare a type of
combodata in ZScript, and the declared pointer references ComboData-> 
functions, and more important, variables /t/b/a/ for the class.

Fixed SetScreenGuy, GetScreenGuy, SetScreenDoor, GetScreenDoor positions in ffscript.cpp switches. ( Timelord, 30th October, 2017 )


//Alpha 10

Renamed 'Timer' to 'M.Cost TImer' in the item editor dialogue, and adjusted the positions of elements accordingly. ( Timelord, 29th October, 2017 )
Changed 'Frames:' for magic cost timer, to 'Timer:' in Item Editor.
Fixed Enemy Editor Weapon Sprite not forwarding to enemy weapons.
Added itemdata->MagicCostTimer to ZScript
Added 'Magic Cost Timer' to the Item Editor. ( Timelord, 28th October, 2017 )

//Alpha 9

Add4d std_keyboawrd.zh to std.zh, and made some minor adjustments. ( Timelord, 28th October, 2017 )

Fixed all one-input, one-return NPCData functions. ( Timelord, 28th October, 2017 )

Added switch-case to the ZScript syntax.
Added constant experssions to the ZScript parser. 
Added array declaration sizing with constant expressions. ( Grayswandir, 27th October, 2017 )

//Alpha 8

Disabled all new pointer types, except for bitmap. They seem to have a clash when sharing a table with a global pointer. ( Timelord, 27th October, 2017 )

Added ZScript pointer objects and RefVars: bitmap, npcdata, spritedata, mapdata, combodata and screendata (unused). These
correspond to Graphics->, NPCData->, SpriteData->, MapData->, and ComboData-> (respectively). 
The screendata type would probably mate with Screen->. Declaring these types now works, and calling functions seems
to work both from the typed pointer, and the global pointer for each, so BOTH of these work: 
npcdata n; int x = n->GetVar();
int x = NPCData->GetVar.
Next, I'll need to add LoadData() functions for each class, and variables/indexed variables for them. ( Timelord, 27th October, 2017 )

Fixed issue with ZQuest crashing when compiled with MSVC. ( Grayswandir, 27th October, 2017 )
Added string literals. These work only at script/function scope. Global scope of string literals is forbidden. ( Grayswandir, 27th October, 2017 )

//Alpha 7 
Backported Enemy Editor 'Size' tab from 2.60 to 2.54. 
Installed new enemy editor defence types and results. 
Fixed Item editor fields for new itemdata script capabilities.

//Alpha 6

Fixed missing typecasting calls in ffscript.cpp. 
Fixed ffc->ID and item->AClock

//Alpha 5
Made global global declaration of special types and special-typed arrays legal. They give a compiler warning. 
Added comment blocks to ZScript. ( Timelord, 25th October, 2017 )

//Alpha 4
Fixed ZQuest combo editor flag lister (crashing). 
Fixed ZScript pointers

Added Input->Mouse[6]



//Alpha 2


Added the ability to customise the Save screens.  ( Timelord, 21st October, 2017 )

Added combo flags 104 through 255 to ZQuest, with temporary IDs

Added Input-> Pointer with control over joysticks, button presses, keyboard, and mouse. 

Added to ZScript:

(Global->) SizeOfArrayBool(), SizeOfArrayFFC(), SizeOfArrayNPC(), SizeOfArrayItem(), SizeOfArrayItemdata(), SizeOfArrayLWeapon(),
	SizeOfArrayEWeapon(), OverlayTile(), TraceFFC(), TraceNPC(), TraceLWeapon(), TraceEWeapon(), TraceItem(),
	TraceItemdata()
	
Game->GetItemScript(), GetBoolPointer(), SetBoolPointer(), GreyscaleOn(), GreyscaleOff(), DMapPalette[], SetMessage(),
	SetDMapName(), SetDMapTitle((), SetDMapIntro(), Version, Build, Beta, DisableActiveSubscreen, SetScreenFlag(),
	NumMessages, MapCount(), GameOverScreen[], GameOverStrings[]
	
Audio->PauseSound(), ResumeSound(), EndSound(), PauseMusic(), ResumeMusic(), PlaySound()

ffc-> ID ( Seems to be missing ?? )


itemdata->Attributes[10], Sprites[10], Flags[5], 
ID, Modifier, Tile, CSet, Flash, AFrames, ASpeed, Delay, Script, PScript, MagicCost, MinHearts, 
Combine, Downgrade, KeepOld, RupeeCost, Edible, GainLower, InitD, GetName(), Family, Level, Power, Amount,
Max, MaxIncrement, Keep, Counter, UseSound,
//Unimplemented for Weapon Editor: Weapon, Defense, Range, Duration, WeaponD, Duplicates, DrawLayer, 
CollectFlags, WeaponScript, WeapomnHitXOffset, WeaponHitYOffset, WeaponHitHeight, WeaponHitWidth, WeaponHitZHeight,
WeaponDrawXOffset, WeaponDrawYOffset, WeaponDrawZOffset, 

item->ACLock ( Seems to be missing? ), Misc[32]

npc->InvFrames, Invincible, HasItem, Ringleader, Defense[42], Misc[32]

lweapon->Range (unimplemented), Misc[32]
eweapon->Misc[32]

Screen->TriggerSecret(int secret), CreateLWeaponDx(), DrawBitmapEx()

Link->Link->DisableItem[256], InvFrames, InvFlicker, HurtSound, SetItemSlot(), Eaten, Diagonal, BigHitbox, Misc[32]

NPCData->GetFlags(), GetFlags2(), GetWidth(), GetHeight(), GetSTile(), GetSWidth(), GetSHeight()
	GetETile(), GetEWidth(), GetHP(), GetFamily(), GetCSet(), GetAnim(), GetEAnim(), GetFramerate()
	GetEFramerate(), GetTouchDamage(), GetWeaponDamage(), GetWeapon(), GetRandom(), GetHaltRate()
	GetStep(), GetHoming(), GetHunger(), GetDropset(), GetBGSFX(), GetHitSFX(), GetDeathSFX()
	GetDrawXOffset(), GetDrawYOffset(), GetDrawZOffset(), GetHitXOffset(), GetHitYOffset()
	GetHitWidth(), GetHitHeight(), GetHitZHeight(), GetTileWidth(), GetTileHeight(), GetWeaponSprite()
	GetDefense(), GetSizeFlag(), GetAttribute()
	SetFlags(), SetFlags2(), SetWidth(), SetHeight(), SetSTile(), SetSWidth(), SetSHeight(), SetETile()
	SetEWidth(), SetHP(), SetFamily(), SetCSet(), SetAnim(), SetEAnim(), SetFramerate(), SetEFramerate()
	SetTouchDamage(), SetWeaponDamage(), SetWeapon(), SetRandom(), SetHaltRate(), SetStep(), SetHoming()
	SetHunger(), SetDropset(), SetBGSFX(), SetHitSFX(), SetDeathSFX(), SetDrawXOffset(), SetDrawYOffset()
	SetDrawZOffset(), SetHitXOffset(), SetHitYOffset(), SetHitWidth(), SetHitHeight(), SetHitZHeight()
	SetTileWidth(), SetTileHeight(), SetWeaponSprite(), SetDefense(), SetSizeFlag(), SetAttribute()
	
Text-> (No attributes at this time.)
Graphics-> (No attributes at this time.)

ComboData-> GetBlockEnemies(), GetBlockHole(), GetBlockTrigger(), GetConveyorSpeedX(), GetConveyorSpeedY(),  
	GetCreateEnemy(), GetCreateEnemyWhen(), GetCreateEnemyChange(), GetDirChangeType(), GetDistanceChangeTiles(),
	GetDiveItem(), GetDock(), GetFairy(), GetFFComboChangeAttrib(), GetFootDecorationsTile(),  
	GetFootDecorationsType(), GetHookshotGrab(), GetLadderPass(), GetLockBlockType(), GetLockBlockChange(),  
	GetMagicMirror(), GetModifyHPAmount(), GetModifyHPDelay(), GetModifyHPType(), GetModifyMPAmount(),  
	GetModifyMPDelay(), GetModifyMPType(), GetNoPushBlocks(), GetOverhead(), GetPlaceEnemy(), GetPushDirection(),  
	GetPushWeight(), GetPushWait(), GetPushed(), GetRaft(), GetResetRoom(), GetSavePoint(), GetScreenFreeze(),  
	GetSecretCombo(), GetSingular(), GetSlowMove(), GetStatue(), GetStepType(), GetStepChangeTo(),  
	GetStrikeRemnants(), GetStrikeRemnantsType(), GetStrikeChange(), GetStrikeItem(), GetTouchItem(),  
	GetTouchStairs(), GetTriggerType(), GetTriggerSens(), GetWarpType(), GetWarpSens(), GetWarpDirect(),  
	GetWarpLocation(), GetWater(), GetWhistle(), GetWinGame(), GetBlockWeaponLevel(), GetTile(), GetFlip(),  
	GetWalkability(), GetType(), GetCSets(), GetFoo(), GetFrames(), GetSpeed(), GetNextCombo(), GetNextCSet(),  
	GetFlag(), GetSkipAnim(), GetNextTimer(), GetSkipAnimY(), GetAnimFlags(), GetBlockWeapon(),   //[32]          
	GetExpansion(),   //[6] 
	GetStrikeWeapons(),   //[32] 
	
	SetBlockEnemies(), SetBlockHole(), SetBlockTrigger(), SetConveyorSpeedX(), SetConveyorSpeedY(),  
	SetCreateEnemy(), SetCreateEnemyWhen(), SetCreateEnemyChange(), SetDirChanSetype(), SetDistanceChanSetiles(),
	SetDiveItem(), SetDock(), SetFairy(), SetFFComboChangeAttrib(), SetFootDecorationsTile(),  
	SetFootDecorationsType(), SetHookshotGrab(), SetLadderPass(), SetLockBlockType(), SetLockBlockChange(),  
	SetMagicMirror(), SetModifyHPAmount(), SetModifyHPDelay(), SetModifyHPType(), SetModifyMPAmount(),  
	SetModifyMPDelay(), SetModifyMPType(), SetNoPushBlocks(), SetOverhead(), SetPlaceEnemy(), SetPushDirection(),  
	SetPushWeight(), SetPushWait(), SetPushed(), SetRaft(), SetResetRoom(), SetSavePoint(), SetScreenFreeze(),  
	SetSecretCombo(), SetSingular(), SetSlowMove(), SetStatue(), SetStepType(), SetStepChanSeto(),  
	SetStrikeRemnants(), SetStrikeRemnantsType(), SetStrikeChange(), SetStrikeItem(), SetTouchItem(),  
	SetTouchStairs(), SetTriggerType(), SetTriggerSens(), SetWarpType(), SetWarpSens(), SetWarpDirect(),  
	SetWarpLocation(), SetWater(), SetWhistle(), SetWinGame(), SetBlockWeaponLevel(), SetTile(), SetFlip(),  
	SetWalkability(), SetType(), SetCSets(), SetFoo(), SetFrames(), SetSpeed(), SetNextCombo(), SetNextCSet(),  
	SetFlag(), SetSkipAnim(), SetNextTimer(), SetSkipAnimY(), SetAnimFlags(), SetBlockWeapon(),   //[32]          
	SetExpansion(),   //[6] 
	SetStrikeWeapons()   //[32] 
	
SpriteData->GetTile(), GetMisc(), GetCSets(), GetFrames(), GetSpeed(), GetType(),
	SetTile(), SetMisc(), SetCSets(), SetFrames(), SetSpeed(), SetType()

Input->Press[18], Button[18],  Hold[18], Key[127], ReadKey[127] ( should become a function ReadKey() )
	Joypad[18], Mouse[6]

MapData-> GetEnemy(), GetDoor(), GetWidth(), GetHeight(), GetViewX(), GetViewY(), GetGuy(), GetString(), 	
	GetRoomType(), GetEntryX(), GetEntryY(), GetItem(), GetUndercombo(), GetUnderCSet(), GetCatchall(),
	GetLayerOpacity(), GetSecretCombo(), GetSecretCSet(), GetSecretFlag(), GetLayerMap(), GetLayerScreen(), 
	GetPath(), GetWarpReturnX(), GetWarpReturnY(), GetEnemy(), GetDoor(),				
	SetEnemy(), SetDoor(), SetWidth(), SetHeight(), SetViewX(), SetViewY(), SetGuy(), SetString(), 	SetRoomType(),
	SetEntryX(), SetEntryY(), SetItem(), SetUndercombo(), SetUnderCSet(), SetCatchall(), SetLayerOpacity(),
	SetSecretCombo(), SetSecretCSet(), SetSecretFlag(), SetLayerMap(), SetLayerScreen(), SetPath(),
	SetWarpReturnX(), SetWarpReturnY(), SetEnemy(),	SetDoor(),
	
Debug->GetFFCPointer(), SetFFCPointer(), GetItemPointer(), SetItemPointer(), GetItemdataPointer(), SetItemdataPointer()
	GetNPCPointer(), SetNPCPointer(), GetLWeaponPointer(), SetLWeaponPointer(), GetEWeaponPointer(),
	SetEWeaponPointer(), RefFFC, RefItem, RefItemdata, RefLWeapon, RefEWeapon, RefNPC, SP
,

ChangeLog for 2.53.0 Beta 16

The hardcoded enemy hit sound was playing OVER user-set sounds,
causing both sounds to play at the same time on a hit, and if an enemy 
died on the same frame that it was hit, all three sounds would play that frame.
( Timelord, 22nd August, 2018 )

//Beta 15
Added a compatibility fix for DrawInteger() and DrawCharacter() for quests made
	using the old (broken) scaling factors. ( Timelord, 4th April, 2018 )

//Beta 14
Added Extra Rule for older quests so that swords with a magic cost only apply it to beams,
	and backported it to 2.53.0. 
	!! This needs to be an item editor flagset: Beams use Magic, Blade Uses Magic
Added a QR No Intro String in Ganon Rooms and backported it to 2.53.0 (beta 14)
	( Timelord, 28th March, 2018 0
	
	
//Beta 13
Fixed swords not obeying magic costs. ( Timelord, 15th January, 2018 )

Added tooltips to the 'Quest Rev' and 'Min Rev' fields in the
Quest Header dialogue. 

Cleaned up Header dialogue and made the quest number visible (but disabled)
by default. Holding Right Shift while opening the dialogue makes it an editable field. 
	( Timelord, 14th January, 2018 )


10th January, 2018

Corrected the tooltip for Slash->Item combos.

Improved efficiency of string.zh functions, and updated the docs.
	( Timelord, 10th January, 2018 )
	
Fixed Link->Misc[] not being divided or multiplied (internally) by 10000.
	( Timelord, 4th January., 2018 )
	
Applied Item Editor fix for InitD values. (They were clamped from -31768 to 327678, and
	now they are clamped between -214748.3647 and 214748.3647.
	Applied to 2.54 Alpha 22, and 2.53 Beta 12. 
	
VBound ZQuest combo editor fields: Cset to -15/+15, Aframes (0,255), ASpeed (0,255) to prevent rollover from lack
of sanity bounding. ( Timelord 16th October, 2017 )

Optimised some functions in std.zh that returned boolean values and were comparing against != 0. 
VBund ZQuest combo editor fields: Cset to -15/+15, Aframes (0,255), ASpeed (0,255) to prevent rollover from lack
of sanity bounding. ( Timelord 16th October, 2017 )

Fixed game ending sequence clipping from carrying over to another quest if ZC is reset during the ending.
Possible fix for the crash reported by Lut where scrolling through a specific pixel of the lower-left corner
of screens would crash ZC. ( Timelord, 16th October, 2017 )

Fixed a bug in std.zh where GetHighestLevelItem() would fail to return the correct values if the item IDs and levels
were not in a matched ascending order (e.g. item 16 is level 2, item 18 is level 1), and similar.
Added GetHighestLevelItemOwned() to std.zh. ( Timelord, 15th October, 2017 )

Fixed button interface commandline filenames in ZCL. Updated version to 2.6.4. ( Timelord, 15th October, 2017 )

Fixed issues with 1.84 quests.
Added possible fix for Win10 slowdown. ( Gleeok, 15th October, 2017 )

Reworded language for controller button dialogue:
The controller button input dialogue used the wording 'Use Analogue Stick Instead of Buttons', which is misleading. 
On standard USB game pads, with a DPad, ZC recognises the DPad as an analogue stick (when using Windows), and thus, 
the controller DPad buttons cannot be mapped on an individual basis. This adjusts the wording to 'Use Analogue Stick/DPad'. ( Timelord, 10th October, 2017 )

Split up ag.cfg into ag.cfg (RomView, ZCL), zc.cfg (Zelda Classic), and zquest.cfg (ZQuest) to fix some issues with 
ZC/ZQuest creating an access clash with one config file. 
Updated ZCl to use the new files. ZCL is now 2.6.3. ( Timelord, 6th Oct, 2017 )

Reverted all of the Game->SetCombo* and Game->GetCombo* functions to their 2.50.2 states. 
The revised (2.50.3) functions broke quests using these functions in a way that cannot be resolved
within the scope of the 2.50.x branch of Zelda Classic. ( Timelord, 2nd October, 2017 )

Fixed DrawInteger() displaying a value that was off by one when sprinting with no decimal places. ( Timelord, 2nd October, 2017 )

Fixed the array sizes of Game->LKeys[] and Game->LItems[] (256 to 512), and constrained the values on setting them
so that they do not overflow (roll over). ( Timelord, 2nd October, 2017 )

Added a warning when opening the debug console. ( Timelord, 1st October, 2017 )

Removed an extra constant declaration in std_functions.zh.
Changed the 'Import Script]' file selection dialogue. It now shows files with types of .zh, .zs, .zlib,
.zscript, and a few other minor typed used by the userbase, rather than solely showing '.z' files. ( Timelord, 24th September, 2017 )

Refactored the sanity checks for Game->Get/SetCombo* (except for SetComboSolid). These functions will now report
any invalid refs passed to them (invalid map, screen, position) to allegro.log and abort, or return -1 to the user. 
The prior code either allowed passing an invalid ref, or never informed the user that it was invalid. ( Timelord, 23rd September, 2017 )

Modified GetHighestLevelitem() in std.zh, to use a setting in std.cgf: This setting determines the highest item ID
that GetHighestlevelitem() will check, rather than one version stopping at 143, and another at 255. ( Timelord, 22nd September, 2017 )

Added a somewhat hackish fix for dungeon maps displaying when Link does not have them, during scrolling warps. ( Timelord, 22nd September, 2017 )

Fixed issue with NPCs behaving as if they were drunk. ( Gleeok, 21st September, 2017 )

Fixed issues with flying/floating/teleporting NPCS. ( Gleeok, 20th September, 2017 )

Slightly adjusted left and right doors in 8-way movement. ( Timelord, 20th September, 2017 )

Removed std_constants_shortcuts.zh from std.zh.
Removed extra (unintended) array 'GlobalBuggr[214747] from std.zh. 
Fixed some issues with NPCA_* constants. 
Added NPC Attribute constants for all npc types, and every field with a lister.
Fixed values for Direction to Degree and Radian conversions in std_functions and std_constants. ( Timelord )

Fixed a bug where Link's weapons hurting him, in water, would cause buggy (uncontrolled) movement or land-swimming. ( DarkDragon ) 

Fixed NES Dungeon Doors with diagonal movement. ( Timelord )

Fixed a crash when using arrow and bow subscreen objects. ( Saffith )

Updated qst.dat. Now, new quests will autosave, if you have timed save, or quest backup enabled. The error 'This quest
was created in an older version of ZQuest' will no longer appear on new quests. Timelord, 1st September, 2017 )

Applied a fix for numerous packfil_password() related problems. 
Fixed PNG saving in ZQuest. ( Timelord, 1st September, 2017 )

Re-added New favourite commands, for Quest Reports (Combo Locations, Combo Type Locations, Enemy Locations, Integrity Check
Item Locations, Script Locations, and What Links Here) to the Favourite Commands list. (This was in 2.future, but never
ported to orthodox ZQuest.) ( Timelord, 1st September, 2017 )

Fixed file selection dialogues in Zelda Classic. After selecting a quest in the Load Quest dialogue, the default button
is now 'OK', rather than browse, so hitting the enter key after selecting a file does not put you into a file select loop.
This was likewise something that I did before, but it was somehow lost in various commits. ( Timelord, 1st September, 2017 )

Unfixed buggy wizzrobe compat issue. Proper fix is still pending... ( Gleeok, 28th August, 2017 )

//Beta 7

Initial update of ZLaunch, to add a ROMView launch button.
Fixed a bug where the Tile Editor refused to load image files on the first attempt. ( Timelord, 27th August 2017 )

Fixed a crash when loading corrupt 2.50.2 (and earlier) quest data; and recompiling scripts. ( DarkDragon, 25th August, 2017 )

Fixed crash when viewing Compatibility Quest Rules. ( Timelord, 20th August, 2017 )

Fixed a bug where the lens of truth stole the script of the last item used, and ran it every frame. ( Timelord, 20th August, 2017 )

New Allegro libraries using Allegro 4.4.3, with some patches.
Fixed issues with the infinite wallet.
Fixed Link's attack not being cancelled when he is frozen.
Fixed the race condition issue with keyboard input in Allegro 4.4.3. ( DarkDragon, 13th August, 2017 )

Fixed an issue with scrolling between land and water. ( DarkDragon, 11th August, 2017 )

Fixed an issue where the subscreen did not always update, by checking item validity when changing dmaps. ( DarkDragon, 10th August, 2017 )

Reverted the quest rule for COMBOSDM. We'll come back to this, later. ( DarkDragon )
Added compatibility rule for old quests that rely on screen item pick-up disabling hunger, for old quests. ( DarkDragon, 21st July, 2017 )

//Beta 6
Added a few functions to std.zh. ( Timelord, July 2017 )

Fixed a bug in ZQuest that was corrupting ag.cfg. ( DarkDragon; and Timelord, July, 2017 )

Fixed a bug where MIDI files could not be loaded in ZQuest. ( DarkDragon, July 2017 )

Updated std.zh to 2.50.3 version, plus some rearranging in a std_zh path.
Updated all included headers to their current versions. 
Pruned some files.
Unlocked 1st.qst and 2nd.qst. ( Timelord, 11th July, 2017 )

Fixed incorrect types for CollDetection and some other boolean return variables in ZScript. 
    This includes Link->CollDetection, Link->Invisible, npc->CollDetection, lweapon->CollDetection and 
    eweapon->CollisionDetection ( Timelord, 2nd July, 2017 )

Seem to have fixed reported bug of ZC crashing if the user shifts focus when assigning joypad buttons. 
In any case, I can not replicate it in this build, and I did change a read_button function that was a bit bonkers. ( Timelord, 2nd July, 2017 )
	
ZC and ZQuest now use Allegro 4.4. (DarkDragon, 2nd July, 2017)

Fixed 3rd quest with zero deaths not going to 5th quest. ( Timelord, 20th June, 2017 )

Reverted COMBOSDM change made by Saffith, as it caused different bugs with older players. 
This is properly fixed in 2.51+. ( Timelord, 20th June 2017 )

Fixed long-standing bug where setting Link->Item every frame causes lag. ( Timelord, May 2017 )

Fixed lweapon->Behind not working. ( Timelord, May 2017 )

Fixed ffc->Link being unable to be cleared, or otherwise set to 0 ( Timelord, May 2017 )

Fixed scale args for DrawChar() and DrawInteger(): Both of these now scale per zscript.txt documentation. ( Timelord, Jan 2017 )

Zelda Classic Menus: Added Etc->Show Debug Console. This opens the Allegro debug console or closes it if it is open. ( Timelord, Jan 2017 )

ZScript Variables in scope are destroyed when their scope exits. ( DarkDragon, Jan 2017 )

Fixed long-standing keyboard issues with alt+tab, and hopefully) issues with the keyboard losing focus. (DD/Z, Dec 2016-Jan 2017)	

//2.50.3RC1 (Abandoned) 

Added a checkbox to disable analog stick movement.
Changed joystick config dialogues to match keyboard config dialogues. 
Added more joystick options to ag.cfg. 
Small fixes to joystick input. 
Fixed minor issues in key config dialogues. ( Saffith, 18-Dec-2016 )

Additional fixes with Link exiting water. ( Saffith, 15-Dec-2016 )

Fixed an invalid read in draw_wavy(). ( Saffith, 14-Dec-2016 )

Fixed Link's position being offset improperly on continue when quakeclk > 0. 
Ensure overscan rectangle is black while the screen is shaking. 
Fixed an issue with Link exiting water. 
Fixed Stone of Agony sensitivity. ( Saffith, 11-Dec-2016 )

Fixed an issue where bitmaps may be drawn improperly based on ZQuest version. 

Fixed incorrect screen calculation and possible crash in warp with combos that carry over. ( Saffith, 6-Dec-2016 )

Global script OnExit now works. In prior versions, this script did not run. 

Fixed a crash when loading a sfx file with more than 35 chars or without any extension. ( Gleeok, 2015-12-30 01:05:05 )

Fixed negative constants being read incorrectly.
Fixed incorrect screen calculation and possible crash in Game->SetComboSolid(). ( Saffith, 2015-12-19 19:41:38 )

Fixed a crash when importing combos. ( Saffith, 2015-11-27 09:30:31 )     

Replaced the built-in MIDIs with versions edited by zaphod77 to sound more like the NES game. ( Saffith, 2015-10-14 10:41:20 )

//!! Older Versions
//!! What follows are the old Shardstorm.com SVN log entries for 2.50.2 and earlier. 

//2.50.2
Build 1793 - linux , windows
* Not a new build, just a launcher update. ( Saffith, 2015-10-13 22:54:03 )

* Fixed a couple of issues with moldorms.
* Fixed some errors in zscript.txt. ( Saffith, 2015-10-13 09:51:14 )

* It's now possible to scale up ZQuest in large mode. This hasn't been extensively tested, but it seems to work fine. Keep in mind that it runs at multiples of 800x600, so the next size up is 1600x1200.
* Fixed an issue with using -fullscreen and -scale arguments together. ( Saffith, 2015-10-11 19:44:50 )

* Reworked mass combo creation (what happens when you select multiple tiles and press M). ( Saffith, 2015-10-11 18:51:32 )

* Added a mass recoloring tool to the tile editor. ( Saffith, 2015-10-11 11:37:23 )

* When a script hangs the game, it's now possible to rest or quit with F9 and F10 (F7/F8 on Mac). These are the only options; the menu still won't open, and F6 won't work.
* Fixed an issue with drawing after Waitdraw() while scrolling.
* Drawing transparent text should work correctly now. ( Saffith, 2015-09-28 13:25:16 )

* Alt+click will now select a combo. You can also hold shift to select the CSet and ctrl to scroll to the combo. ( Saffith, 2015-09-24 21:31:19 )

* Fixed half-solid lock blocks not always unlocking.
* Fixed some issues with walking enemies firing weapons on death.
* Projectile shooters will no longer shoot at Link if he's too close.
* Shooters that fire single fireballs will once again fire double shots occasionally. ( Saffith, 2015-09-10 19:56:31 )

* Fixed some long withstanding relative and absolute path bugs in ZC when loading from save files. You can move things like quests and save files around now without ZC freaking out about it. ( Gleeok, 2015-07-15 00:40:42 )

* Enter "JEAN" at the name select screen to play the 5th quest. ( Gleeok, 2015-07-09 20:44:13 )

* Added the 5th quest winning contest entry bu BigJoe. Congrats and thanks again to everyone who participated!
* Beating the 3rd quest without dying will let you skip straight to the 5th quest, and beating the 5th quest without a perfect no-death game will drop you to the 4th quest. ( Gleeok, 2015-07-09 18:51:23 )

* After changing screens while walking against a conveyor belt, Link will not immediately be pushed back to the previous screen.
* Added a right-click menu to copy and paste level palettes. ( Saffith, 2015-07-07 08:40:15 )

* Added a compatibility rule allowing weapons with collision detection disabled to move offscreen. ( Saffith, 2015-06-12 13:19:44 )

* Fixed itemdata->Keep and itemdata->MaxIncrement compiling incorrectly.
* Fixed subscreen items jumping when scrolling from sideview to top-down. ( Saffith, 2015-06-04 10:42:53 )

* Fixed weird values of Link->Jump above about 3.2. ( Saffith, 2015-05-29 13:51:13 )

* Added more information when script errors are logged. ( Saffith, 2015-05-19 20:57:11 )

* Added an even faster screen scrolling option. Name pending.
* Fixed the 'correct offset eweapon collision' rule, which was a bit tricky. Firstly, the toggling of this rule may have swapped behavior sometime after build 400, or just stopped working altogether, or both. Secondly, this is now enabled for compatibility reasons in all older quests. ( Gleeok, 2015-05-19 06:11:53 )

* Fixed an issue with the "Continue With Full Life" rule in old quests not working correctly.
* Grabbing tiles from a pre-2.50 quest will no longer clear combo aliases. ( Saffith, 2015-05-10 16:49:59 )

* Using an invalid index with Link->Item[] will no longer crash the game.
* Game->SetDMapEnhancedMusic() will no longer reset the DMap's subscreen. ( Saffith, 2015-05-10 15:13:11 )

* Fixed some issues with wealth medals. ( Saffith, 2015-05-10 11:59:24 )

* Scripts can now save only once per frame per script. This prevents while(true) Game->Save(); from nearly guaranteeing a corrupted save file. ( Saffith, 2015-04-12 15:38:19 )

* Fixed a bug where scripts drawing to bitmaps before drawing to a screen layer un-offset the sub-screen offset causing them to be rendered in wrong position on screen. ( Gleeok, 2015-03-25 09:43:09 )

* Users Choice Award winner of 2014 is in: "Dmaps Spam'd" - Now you have the ability to Copy/Paste Dmaps in the Dmap dialog with the usual keys 'C' and 'V' respectively. ( Gleeok, 2014-12-12 23:08:38 )

//2.50.1

Build 1703 - linux , macosx-Tiger-and-Leopard , windows
* Let's try this again... ( Saffith, 2014-10-05 08:49:40 )



Build 1700 - linux , macosx-Tiger-and-Leopard , windows
* Red potion or heart container rooms will no longer be usable repeatedly when not in caves. ( Saffith, 2014-10-01 20:26:28 )

* The "Items Disappear During Hold-Up" rule no longer stops guys in special item rooms from disappearing when the item is taken. ( Saffith, 2014-10-01 10:46:26 )

* The screen saver is now disabled by default. ( Saffith, 2014-09-27 23:04:17 )

* Weapons with collision detection disabled can no longer move offscreen without limit. ( Saffith, 2014-09-27 21:36:07 )

* Fixed vires being knocked back too fast and sometimes splitting in the wrong place.
* Fixed some issues in new quests.
* Updated the credits. ( Saffith, 2014-09-27 15:22:28 )

* Since the string editor's "Duplicate" button is no longer needed, it's been replaced with a button to add a new string after the one currently selected.
* Clicking a text field in large mode should now put the cursor in the right place. ( Saffith, 2014-09-27 10:00:07 )

* Added a right-click menu to the string editor with options to copy and paste a message's style.
* It's now possible to select a message to use as a template when adding a new one. ( Saffith, 2014-09-26 21:44:37 )

* Added a right-click menu with copy and paste options to the enemy and item editors. ( Saffith, 2014-09-26 11:08:52 )

* Corrected the way ZC selects directories to search for music files. ( Saffith, 2014-09-22 21:38:43 )

* Setting Link->Action will now remove Link from whirlwinds and cancel Farore's Wind if the casting hasn't finished. ( Saffith, 2014-09-22 16:27:00 )

* In the subscreen editor, editing an object's properties will now affect all selected objects of the same type. This attempts to behave intelligently and only copy properties you would want applied to multiple objects. For instance, the heart container number of a life gauge piece or the text of a text object will not be copied.
* Added copy and paste properties options to the right-click menu, which behave in the same way.
* Also, canceling out of the properties dialog when creating a new subscreen object will now cancel the creation of the object. ( Saffith, 2014-09-04 16:25:27 )

* Sped up the spawning of traps a bit. ( Saffith, 2014-09-01 09:47:19 )

* Tweaked the tile grabber's recolor algorithm. ( Saffith, 2014-08-31 17:03:00 )

* Fixed a crash when shifting blocks of tiles at the beginning or end of the tile buffer. ( Saffith, 2014-08-31 13:07:53 )

* In the tile grabber, you can now press 4 or 8 to switch between grabbing tiles as 4-bit or 8-bit.
* You can also press Shift+R or hold Shift while clicking the Recolor button to recolor in 8-bit mode. ( Saffith, 2014-08-30 19:10:05 )

* Items of type Bow and Arrow and Letter or Potion can no longer be made equipment items.
* Improved compatibility with ID3-tagged MP3s. ( Saffith, 2014-08-27 12:22:25 )




Build 1669 - windows
* Fixing the Windows build; the last few changes weren't included before. ( Saffith, 2014-08-27 08:30:48 )



Build 1667 - linux , macosx-Tiger-and-Leopard , windows
* 2.50.1 RC3 ( Saffith, 2014-08-26 19:36:05 )

* Link can no longer turn around while charging the hammer.
* Timed saves will no longer fail for new quests. ( Saffith, 2014-08-24 16:14:59 )

* Hopefully fixed the issue where the GUI occasionally stops responding to the keyboard. ( Saffith, 2014-08-23 23:08:32 )

* Made a change to input reading in hopes of fixing screen saver issues. ( Saffith, 2014-08-21 10:54:13 )

* Fixed a few issues with favorite combos and aliases. ( Saffith, 2014-08-18 08:47:50 )

* Improved Link's interaction with damage combos in sideview. ( Saffith, 2014-08-17 23:00:28 )

* The Cane of Byrna will no longer continue running when it's removed from Link's inventory.
* Canceling out of the Link sprites dialog works correctly now. ( Saffith, 2014-08-17 14:12:37 )

* Improved selection of item-carrying enemy when unbeatable enemies are around. ( Saffith, 2014-08-17 13:06:45 )

* Fixed Screen->DrawInteger(). ( Saffith, 2014-08-17 12:49:19 )

* The "Lens Shows Raft Paths" quest rule now includes raft bounce flags.
* Fixed an issue with letter/potion slots not being selectable in the subscreen editor. ( Saffith, 2014-08-03 16:10:12 )

* Saving a map with F5 now follows the same rules as viewing the in-game map in deciding which screens to include. ( Saffith, 2014-08-03 15:39:02 )

* Loading and saving an old quest using the "Continue With Full Life" rule no longer leaves that rule permanently enabled. ( Saffith, 2014-07-31 10:21:14 )

* Fixed an issue with the trigger enemy loading incorrectly in the editor. ( Saffith, 2014-07-23 10:03:43 )

* Reverted the change that fixed push blocks leaving pushable under combos, since that caused other problems. ( Saffith, 2014-07-23 08:41:03 )

* [ZCL] Cosmetic Fixes ( Sean, 2014-07-01 20:07:26 )

* [ZCL] Added some pretty icons to the sub tabs. - Deviance ( Sean, 2014-07-01 19:38:28 )

* [ZCL] Finished saffith's implementation of the multiple instances for ZC option for ZCL -Deviance (Sean) ( Sean, 2014-07-01 18:49:33 )

* ZCL's source updated to the latest Lazarus build.
* Tnotebook property was removed from the newer Lazarus builds thus breaking the source code. Has been replaced with the TPageControl property instead thus making the source code working again.
* More to come ;) -Sean ( Sean, 2014-07-01 18:14:05 )

* Fixed magic sometimes not triggering flags on magic-blocking combos. ( Saffith, 2014-04-29 20:45:21 )

* Link can buy free items and info again. ( Saffith, 2014-04-29 20:06:23 )

* Fixed a script drawing crash when attempting to draw a bitmap with out-of-range source rectangle arguments. (Bad Zecora, bad. No treat for you!) ( Gleeok, 2014-04-08 00:43:19 )

* Added new project directories for Visual Studio and C::B projects. ( Gleeok, 2014-03-13 15:26:05 )

* Fixed an issue with enemies spawning in incorrect location. ( Saffith, 2014-02-13 07:40:46 )

* Peahats are invincible while moving again. ( Saffith, 2014-02-07 13:16:12 )



Build 1634 - linux , macosx-Leopard , windows
* 2.50.1 RC 2 ( Saffith, 2014-02-04 20:40:07 )

* Blocks with two push flags should no longer make under combos pushable. ( Saffith, 2014-02-04 19:04:44 )



Build 1632 - linux
* Hopefully fixed some issues with tracker files playing incorrectly. ( Saffith, 2014-02-04 13:02:23 )

* Added a compatibility rule to make peahats vulnerable when frozen by clocks.
* Also fixed an issue with their behavior when that rule is disabled.
* Adjusted patra orbiters' hitboxes.
* (None)-type subscreen objects no longer have editable properties from every other object type. ( Saffith, 2014-02-04 09:52:05 )



Build 1629 - linux
* Again, ignore the download link. It's not a new build.
* It's possible to run multiple instances of ZC again with the -multiple command line argument.
* FFCs placed via the right-click menu should no longer appear in the wrong place.
* The compiler will now provide filenames when reporting lexical errors. ( Saffith, 2014-02-03 13:23:51 )



Build 1628 - windows
* Ignore the download link; this isn't a new build.
* Enabling the quickload option in the launcher should work correctly now. ( Saffith, 2014-02-03 09:58:41 )

* Fixed an issue with push blocks with both secret-triggering and silent flags.
* Opening locked chests will no longer open unlocked chests on the same screen.
* Link will no longer become invisible if picked up by a whirlwind while using the hookshot. ( Saffith, 2014-01-31 16:54:44 )

* Fixed some issues in the 4th quest.
* Importing DMaps should work again.
* Fixed a crash when changing music tracks in ZQuest.
* Moving Link while on a fairy ring flag should no longer cause him to be permanently stuck. ( Saffith, 2014-01-31 08:31:10 )

* The reset and quit functions have been moved from F7 and F8 to F9 and F10.
* F6 is now disabled when the "Skip Continue Screen" rule is enabled. Game > End Game still works.
* Enemy shields should no longer block ignored weapons. ( Saffith, 2014-01-31 06:31:29 )

* Fixed an issue where changing Link->Action might leave his sword stuck in place.
* Fixed float-to-text functions in string.zh.
* Added BPAL_DODONGO to std_constants.zh. ( Saffith, 2013-11-29 10:48:08 )

* Hopefully fixed the problem with clicking at the ends of sound effects. This was a quest saving and loading issue, so any sounds already affected will need to be reloaded. ( Saffith, 2013-11-23 17:01:47 )

* Possibly fixed the screen-saver idle freeze bug.
* Added "ss_enable=1" to the config file. ( Gleeok, 2013-09-08 15:09:51 )

* Fixed a 60 FPS/CPU usage issue on various windows platforms. ( Gleeok, 2013-09-08 14:14:05 )

* Fixed price alignment when an item has a price of 0. ( Saffith, 2013-09-06 12:18:41 )

* Improved speed while palette cycling is active. ( Saffith, 2013-09-05 21:16:00 )

* Fixed Link being unable to enter water in some places. ( Saffith, 2013-09-04 21:41:26 )

* Fixed an issue with Link->Equipment when arrows are selected.
* Here are the major changes in 2.50.1 RC1, since I failed to list them before.
* Crashes fixed:
* - Enemy has "Breath" firing type but no weapon
* - Warp with wavy effect while the screen is shaking
* - Too many drawing commands used in one frame
* - Tribble carrying an item
* - Parts of segmented enemies are killed in unexpected ways
* - Selecting an item
* Compatibility changes:
* - Adjusted the hammer's hitbox
* - The hookshot can pass downward through a solid combo in old quests
* - Adjusted the hookshot's grab point in old quests
* - Overworld DMaps can be offset in old quests
* Other problems fixed:
* - Other-type enemies can have bomb blast weapons
* - Clocks no longer make Peahats vulnerable
* - Tile select screens that should allow flip always do so now
* - Quest->Defaults->Map Styles now resets map styles instead of tiles
* - Fixed some errors in the first and second quests
* - After loading a quest, it no longer lists the scripts from the previously loaded quest
* - Link can no longer through pushed blocks
* - Fixed item scripts sometimes being unable to set ffc->Script
* - Wizzrobes should no longer get stuck in the corner
* - The hookshot and raft work better in sideview now
* - Fires created by scripts no longer permanently light the room when the temporary lighting rule is enabled
* - Five-digit string control code arguments should now be read correctly
* - Inherent flag 10 on pound combos works now
* - The info type editor should now handle reordered strings correctly
* - Fixed the Bow & Arrow item class not displaying the items' names
* - Fixed some bugs in std.zh
* - Fixed possible graphical corruption on the file select screen
* - Rocks' misc. attributes are displayed correctly now
* Other changes:
* - Only one instance of ZC may run at a time (Windows and Linux only so far)
* - Added a compatibility rules dialog
* - The game window doesn't close until it's finished saving
* - Added an optional save indicator
* - Added help text for the Bow & Arrow and Letter Or Potion classes and made it clearer that they shouldn't be assigned to items ( Saffith, 2013-09-04 08:51:59 )



Build 1608 - linux , macosx-Leopard , windows
* 2.50.1 RC 1 ( Saffith, 2013-07-29 13:08:26 )

//2.50.0

Build 1606 - linux , macosx-Leopard , windows
* Updated build number and date.
* Set IS_BETA to 0. ( Saffith, 2012-12-21 07:47:07 )

* Fixed Moldorms and Lanmolas never returning after only one segment was destroyed. ( Saffith, 2012-12-20 12:59:38 )



Build 1586 - linux
* Reverting patches.dat (really shouldn't have changed it in the first place). If this creates a download link, ignore it; it won't be a new build. ( Saffith, 2012-12-19 21:35:04 )

* Fixed a bug that allowed Link to jump through solid combos.
* Fixed mouse position handling in ZScript.
* Fixed a couple of issues with whistle whirlwinds.
* String control codes should no longer cause the message preview to show extra characters.
* String control codes can now take five-digit arguments, up to a maximum of (I think) 65278.
* Made the hidden counters usable; script counters now go up to 25. ( Saffith, 2012-12-19 21:13:20 )

* Fixed crashes when passing invalid maps to Game->SetScreenState and Game->GetScreenState.
* Fixed blue leevers appearing simultaneously when the BS-Zelda Animation rule is enabled.
* Life meters should no longer revert to two rows whenever a quest is reloaded. ( Saffith, 2012-12-18 12:58:09 )

* Fixed boomerangs and hookshots not reflecting weapons correctly.
* Weapons and miscellaneous sprites should now update when their tiles are moved. ( Saffith, 2012-12-18 07:43:06 )

* Fixed an issue with stepping on a fairy flag while charging a spin attack.
* Made Link a bit less picky about scrolling onto raft flags. ( Saffith, 2012-12-17 18:52:14 )

* Hopefully fixed a possible hang when terminating the screen saver.
* Fixed some issues with the active ring color not updating when it should.
* Fixed rafting between screens in dungeons. ( Saffith, 2012-12-13 09:37:04 )

* Fixed an issue with drawing FFCs that wrap around the edge of a tile page.
* Fixed a possible crash in ZQuest when displaying side warp info. ( Saffith, 2012-12-07 10:18:49 )

* Fixed certain enemies gettins stuck at the edge of the screen.
* Fixed Aquamentus sometimes walking in one direction forever.
* Fixed an issue with the ladder on half-solid tiles.
* Fixed a problem that could unload MIDI patches on some Windows systems.
* Changing the title screen type no longer resets the game. ( Saffith, 2012-12-04 10:05:58 )

* Added a couple of shops missing from the second quest.
* Whether rupees already being drained can be used is now controlled by a quest rule.
* Lanmolas and Moldorms now have an attribute that determines whether each body segment drops an item.
* Fixed some issues in the shop and info editors.
* Shop prices can now be set up to 65535 rupees.
* Added Game->GetFFCScript(). ( Saffith, 2012-11-20 12:58:30 )

* Peahats are now vulnerable when frozen by clocks. ( Saffith, 2012-11-18 23:06:47 )

* Fixed a bug that could make Ghinis immobile.
* It's no longer possible to use Game > End Game to get out of a door repair charge.
* Added Game->DMapMap[]. ( Saffith, 2012-11-17 14:41:27 )

* Unbroke the ladder.
* Fixed splitting enemies background sounds. ( Saffith, 2012-11-15 07:24:32 )
 


Build 1571 - linux , macosx-Leopard , windows
* 2.50 RC5 ( Saffith, 2012-11-04 17:30:55 )

* Fixed some issues with the ladder when diagonal movement is enabled.
* Added functions to get the current screen's side and tile warp data. ( Saffith, 2012-11-04 14:26:25 )

* Fixed music not playing in ZQuest.
* Expanded enhanced music filenames to 255 characters. This affects scripts using enhanced music functions.
* Script import statements can now use either / or as a path separator on all platforms. ( Saffith, 2012-11-03 10:32:20 )

* Fixed the "Is continuation of previous string" flag.
* Fixed Link getting stuck going through walk-through walls. ( Saffith, 2012-10-30 20:39:53 )

* Hopefully fixed issues with enemies walking offscreen.
* Added Game->DMapOffset.
* Added functions to std.zh to convert between map and DMap coordinates. ( Saffith, 2012-10-26 22:55:28 )

* Fixed a crash when leeching tiles.
* Fixed joystick index and scanlines.
* Multiple whistles with different warp rings now work correctly. ( Saffith, 2012-10-11 09:14:57 )

* Split std.zh into multiple, smaller files to make them more easily peruse-able. There is no need to have to alter scripts that import std.zh. ( Gleeok, 2012-10-03 00:08:12 )

* Fixed a bug with DrawLayer not drawing layer 6 correctly. ( Gleeok, 2012-10-02 23:53:32 )

* Removed the map and screen flipping functions, as they were extremely buggy and not that useful.
* Added the ability to paste a screen's palette.
* Fixed Paste to All not pasting CSet data. ( Saffith, 2012-09-26 22:14:40 )

* Fixed 1st-4th quest handling. ZC will now allow them to be in either the ZC directory or the quest directory.
* Fixed an issue with DMap intros when Link arrives via whirlwind.
* Wizzrobes' misc. attribute 4 now controls whether teleporting wizzrobes can appear on solid combos. This is enabled for old quests.
* Palette cycling no longer functions in ZQuest when interpolated fading is disabled.
* Fixed an issue that could stop projectile shooters from spawning. ( Saffith, 2012-09-25 11:00:37 )

* It's no longer possible to buy items with rupees that are already being drained away.
* Fixed a problem with large sprites using incorrect tiles.
* Drawing transparent ellipses on offscreen bitmaps works now.
* Added Link->SelectAWeapon() and Link->SelectBWeapon(). ( Saffith, 2012-09-23 13:03:38 )

* Fixed the sword sometimes failing to hit Like-Likes from the inside.
* Fixed a warp arrival issue that could break some quests. ( Saffith, 2012-09-13 22:19:45 )



Build 1558 - macosx-Leopard , windows
* RC4 with the support files fixed. These zips do not incorporate Saffith's latest changes (below) ( DarkDragon, 2012-08-26 14:08:08 )

* Fixed ZQuest sometimes showing solidity incorrectly.
* Solid damage combos no longer function in quests made before those were implemented.
* Adjusted bombs' flag-triggering area.
* The bomb, super bomb, and key counters are no longer capped at 255. ( Saffith, 2012-08-25 07:30:57 )



Build 1555 - linux
* Rebuilt RC4 for Linux to fix a mistake in linking. If the previous build worked, you don't need this one. ( Saffith, 2012-08-24 08:00:59 )

* Shardstorm scripts fixed ( DarkDragon, 2012-08-23 14:52:31 )

* More testing ( DarkDragon, 2012-08-23 14:50:21 )

* Test of the Shardstorm scripts ( DarkDragon, 2012-08-23 14:45:37 )



Build 1550 - linux , macosx-Leopard , windows
* This is RC4. Again, the links won't work, so check the forums. ( Saffith, 2012-08-18 20:11:50 )

* Fixed a crash when opening certain old quests in ZQuest.
* Fixed some hitbox issues.
* New quests will no longer have weird combo cycling set up. ( Saffith, 2012-08-18 10:29:50 )

* Fixed Link walking a pixel too far into a new screen in dungeons. ( Saffith, 2012-08-16 20:34:46 )

* Improved Link's behavior with walkable water. ( Saffith, 2012-08-15 13:39:30 )

* Guy fires and fairy guys will now continue to animate during messages if the Messages Freeze All Action quest rule is enabled.
* Added ZScript variables to handle moving blocks and under combos.
* ZC will now treat a 0 byte save file as a new file rather than an invalid one. ( Saffith, 2012-08-14 09:16:32 )

* Fixed a couple of errors in std.zh.
* ZC now checks for the 1st-4th quests in the quest directory rather than the game directory. ( Saffith, 2012-08-12 20:13:41 )

* In the palette editor, you can now drag colors between CSets. Ctrl+click to swap, Ctrl+Shift+click to copy. ( Saffith, 2012-08-08 16:08:47 )

* The timed warp timer will now pause when the screen is frozen.
* In the tile editor, you can now use Alt+plus/minus to shift colors in 8-bit tiles by a full CSet. ( Saffith, 2012-08-06 12:34:03 )

* Fixed tile flipping sometimes ignoring tiles in rectangle select mode.
* Rotating tiles now affects all selected tiles.
* In the CSet editor, you can now rearrange colors by pressing Ctrl+left/right or clicking and dragging. ( Saffith, 2012-08-04 13:07:20 )

* Corrected the size of subscreens in ZQuest's large mode.
* Adjusted when subscreens are updated during certain warps. ( Saffith, 2012-08-03 23:14:58 )

* Fixed BS Patra's hitbox.
* In the tile editor, you can now press ctrl+plus or ctrl+minus to shift the selected pixels' colors up or down by one. Hold shift and transparency will be ignored. ( Saffith, 2012-08-03 18:21:47 )

* Fixed Mapmaker crash on OS X. ( Saffith, 2012-08-01 15:09:25 )

* Fixed text wrapping when a message is skipped by pressing B.
* Added Game->ClickToFreezeEnabled. ( Saffith, 2012-07-29 08:35:31 )

* Updated zscript.txt: -- New zscript.txt format for 2.5. This will allow zscript documentation to be put into a nicer doc/html/pdf etc.. format in the future. ( Gleeok, 2012-07-26 19:31:30 )

* Hopefully fixed a bug where Link's sprite and hitbox could become misaligned.
* Fixed blank slots appearing in the FFC script list.
* Added Game->LastEntranceDMap and Game->LastEntranceScreen. ( Saffith, 2012-07-26 09:19:11 )

* Fixed tiles not redrawing correctly after overlaying a tile over a blank one.
* Fixed boomerang movement when made to bounce by a script.
* Added opacity constants for drawing commands to std.zh. ( Saffith, 2012-07-24 09:23:51 )

* FFCs will now be drawn on the correct layer again.
* Link will now stop charging his sword when picked up by a whirlwind.
* Enemies that leave fire trails should no longer leave lots of fires when knocked back.
* Added copy and paste functionality to the string editor.
* Added Game->ShowSaveScreen() and Game->ShowSaveQuitScreen(). ( Saffith, 2012-07-22 17:29:26 )

* Stairs will no longer trigger if no combo is set.
* Added a new command line argument, -standalone <quest>. This will run ZC using the given quest and a single save slot.
* Added Game->Standalone.
* Added another command line argument, -notitle. This will always skip the title screen, even when resetting. ( Saffith, 2012-07-21 13:54:41 )

* Fixed some age-old combo cycling bugs. ( Saffith, 2012-07-19 12:03:37 )

* Door repair rooms will no longer function more than once.
* Fixed an error in std.zh. ( Saffith, 2012-07-18 19:41:58 )

* Fixed Armoses walking upward through solid objects when first activated.
* Fixed spinning tiles spawning incorrectly on entering a screen.
* Fixed slowdown when using a Lens of Truth with a large radius.
* Fixed a bug that could cause unvisited screens to be shown on dungeon maps.
* Added misc. attribute labels for enemies that didn't have them yet. ( Saffith, 2012-07-08 10:22:57 )

* Increased the maximum usable combo aliases to 2048. Pro Tip: Don't use them all for trees! :P
* Added Import and Export Combo Aliases functionality in the File->Import/Export Menu. ( Gleeok, 2012-06-11 01:06:28 )



Build 1527 - linux , windows
* Launcher update. Disregard the links. ( Saffith, 2012-06-04 09:25:41 )

* Fixed a compatibility bug where ladder-only combos were broken in 2.10 and allowed the hookshot also ( Gleeok, 2012-06-03 21:26:19 )

* std.zh: Added Clamp(x,min,max) as a sane alternative to VBound() which takes the arguments backwards. Aaaah! ( Gleeok, 2012-05-25 22:12:16 )

* Added npc->Hunger and npc->BreakShield(). ( Saffith, 2012-05-25 17:24:54 )

* std.zh: Fixed a bug with Round(). Added boolean utility functions IsOdd(int), and IsEven(int); ( Gleeok, 2012-05-23 19:12:19 )

* ZQuest: Implemented a new feature in the Graphics->Edit Door Combo Set Dialog: Now holding down shift and clicking "Auto" will, in addition to the normal auto behavior, auto-generate all the door types based on what you have set for the "Passage" door combos. Right now this duplicates the passageway set, which can still save a lot of time editing these.
* ZQuest: Added two new menu functions: Import/Export Guys. This will allow you to save and load the Enemy List as set up in the Enemy Editor. ( Gleeok, 2012-05-22 16:39:18 )

* Fixed the bug where setting Link->Dir while attacking would make the sword sprite vanish. ( Gleeok, 2012-05-21 21:06:13 )

* Fixed a possible crash when Link's weapons go offscreen.
* Fixed screen state carry over to the same screen on the previous map not working.
* Raised the limit on the number of heart and magic containers that can be set via cheats. ( Saffith, 2012-05-19 20:39:35 )

* FFCs will now respond to the same changer repeatedly after wrapping around the screen.
* Fixed incorrect screen calculation in Game->Guys[].
* Reorganized the item editor's pickup tab a bit. ( Saffith, 2012-05-18 14:09:12 )

* Fixed bookmarking strings with --
* Rewrote the tile recoloring code, hopefully fixing some of its bad color choices. ( Saffith, 2012-05-14 13:26:35 )

* Fixed the longstanding "skip y" combo animation bug. Fun fact: This has actually been "fixed" three times before, so due to it's ever changing undefined behavior no backwards compatibility for this broken feature is given If you have used this previously.
* Fixed a possible truncation when setting animation frames to large numbers. ( Gleeok, 2012-05-13 19:11:07 )

* Increased the maximum editable and usable enemies in the Enemy Editor from 256 to 512. Now there is no fear of running out of free enemy slots to customize! This changes the way quests are saved so once again you cannot open them in older versions.
* Now when updating quests to 2.5, the unused enemy default names are updated to use newer naming convention so there are no problems with list ordering in the Enemy Editor.
* ZC: Added "vsync" option to the config file. This generally shouldn't be needed, however it may fix some rare screen tearing issues on some hardware. ( Gleeok, 2012-05-12 19:02:17 )

* Fixed possible crashes when trying to load music files with long filenames.
* Link->PressMap works now.
* Game->GetScreenFlags and Game->GetScreenEFlags now correctly expect map numbers to start at 1. ( Saffith, 2012-05-12 07:52:19 )

* ZQuest: Fixed the bug where only one combo could be inserted or removed. Now pressing 'I' or shift-I properly inserts or removes a number of combos as what you have currently selected. ( Gleeok, 2012-05-09 23:25:37 )

* Fixed a bug where a crash can occur while using the 'grab' option in the tile pages, or possibly any other place where memset is used on potentially unallocated memory. ( Gleeok, 2012-04-28 05:04:36 )

* Now FFCs created or pasted with the right-click menu are initially placed 'snapped-to-grid'. This is more intuitive and requires less dragging of FFCs. ( Gleeok, 2012-04-28 02:16:09 )

* Added copy/paste functionality to the Enemy Editor. !
* Added "force_exit" to the config file to fix a rare bug where allegro may hang after being closed. ( Gleeok, 2012-04-28 01:09:37 )

* ZC EARTH DAY UPDATE. Making the Earth a greener place one CPU cycle at a time.
* Added a "frame_rest_suggest" option to the config file. What this does is suggest to ZC what argument to use when putting the main thread to sleep. This should alleviate the 100% CPU bug in most cases (I hope). For most users the default value should be sufficient. ( Gleeok, 2012-04-18 19:55:34 )

* In the combo editor, it's now possible to change a combo's tile by 20 (one row) by pressing Ctrl + Shift + [+]/[-].
* Pasting combo solidity works correctly now.
* Added Link->Flip to complement Link->Tile.
* Fixed an incorrect error message in Game->GetMessage().
* Fixed an error in GetMessage() in std.zh. ( Saffith, 2012-04-13 07:19:58 )

* Fixed a problem that could cause moldorms to move offscreen. ( Saffith, 2012-03-10 15:52:12 )



Build 1497 - linux , windows
* Disregard the links again.
* Timed saves and automatic backups can now be disabled in the launcher.
* Added Link->Tile, which is effectively read-only (it can be set, but it'll be reverted before it would make a difference).
* Successful timed saves no longer prompt you to click OK. ( Saffith, 2012-03-08 16:37:52 )

* Reverted a change that hurt the game's framerate on many systems. ( Saffith, 2012-03-08 07:19:46 )

* Damaging boomerangs and hookshots should no longer hit enemies repeatedly.
* Fixed another issue with the subscreen cursor disappearing.
* The cursor should now initially appear over the A button item if nothing is assigned to B. ( Saffith, 2012-03-05 22:37:27 )

* It is now possible to change CSets in combo alias mode. This works differently than in other drawing modes; only the current alias is affected, and it resets when a new one is selected.
* Fixed Farore's Wind making Nayru's Love's sound effects loop forever. ( Saffith, 2012-03-04 08:55:10 )

* Added a joystick index option to the config file in ZC so you can specify which gamepad id to use if you happen to have a bunch of those things plugged in. ( Gleeok, 2012-02-29 22:04:30 )

* Disabled by default the win_proc arguments in the config. This fixes some crash problems.
* Fixed the scanlines resolution scaling bug.
* Fixed the numerous DrawLayer() and DrawScreen() bugs. It should now draw, rotate, and not crash on invalid map sceens as expected. ( Gleeok, 2012-02-28 17:23:57 )



Build 1489 - linux , windows
* This is 2.50 RC3. These links won't work; check the forums instead. ( Saffith, 2012-02-26 15:13:03 )

* The "Cool Opening/Closing Wipes" rule has been renamed "Circle Opening/Closing Wipes" and uses a circle wipe like it did in 2.10.
* The Super Mario All-Stars type wipe now has a separate rule, as do the previously inaccessible triangle and oval wipes. If more than one rule is enabled, wipes will be chosen randomly. ( Saffith, 2012-02-24 11:43:18 )



Build 1485 - linux , windows
* Same thing again. ( Saffith, 2012-02-23 09:38:26 )



Build 1484 - linux , windows
* Updating the launcher with new resolution options. Again, not a new build, ignore the links. ( Saffith, 2012-02-21 12:39:47 )

* The compiler should now give a line number for lexical errors. ( Saffith, 2012-02-21 08:39:06 )

* ZC: Enlarged the AG Logo to better fit the selected screen resolution.
* ZC: Fixed a bug where the input resolution settings might of been altered from the config file.
* ZC: Deprecated the "sbig" and sbig2" arguments. These now do nothing as commands and are removed from the config file.
* ZC can now be opened in any arbitrary sized screen, and will now properly scale the graphics by integral values to match the window resolution based on a "best fit" policy. For example: 1600x1200 will fit exactly inside the window the equivalent of a pixel-scale x5, whereas a screen resolution of 1600x797 will scale by 3 and center the playable area of 960x720 within the window with a surrounding black border. To put it another way, this is basically the same as a "preserve aspect ratio" flag on a resizable window. I hope this makes sense. &_& ( Gleeok, 2012-02-21 04:14:20 )



Build 1478 - linux , windows
* Disregard the links. This isn't a new build, and they probably don't work, anyway. ( Saffith, 2012-02-20 11:23:39 )

* Large Mode: enlarged the Combo Aliases Editor. Also, fixed the font for Item Editor buttons. ( _L_, 2012-02-17 05:09:20 )

* A trapped enemy's fire breath will no longer come from the top-left corner of the screen. ( Saffith, 2012-02-12 18:31:28 )

* Sideview: Fixed the bug where enemies sometimes start moving into the ground after falling more than 2 combos' distance.
* Item Editor: Added a 'Falls in Sideview' checkbox to Din's Fire, which is on for all prior quests. To be honest I can't recall if the 'flattened sideview Din's Fire' was originally a bug or a thing I thought was appropriate for the side-on perspective, but now you can toggle it.
* Item Editor: Fixed the bug where the 'Defaults' button wouldn't default the right-most flag checkboxes.
* Enemies with a Summon (Layer) attack will now stop summoning when there are 40+ enemies onscreen, rather than 200+. This is the same as the current limit for the standard Summon shot type. ( _L_, 2012-02-12 02:10:27 )

* Updated std.zh. Also since pivot rotation and x,y scaling arguments are not consistent across all script drawing and other vector or 2D functions, I've added the following functions to std.zh: RotateScalePointX(), RotateScalePointY(), ScalePointX(), ScalePointY(), RotatePointX(), RotatePointY(). ( Gleeok, 2012-02-11 21:31:21 )

* Fixed a bug where file save dialogs used the wrong font in Small Mode.
* New Default: Fixed the Walk-through Walls markers in all of the Door Combo Sets, and fixed the 'Auto' button's visual dimensions and responsiveness.
* Large Mode: Added tooltips for the eight buttons in the main panel and the Enemies pane.
* Large Mode: Enlarged ZC's Screen Saver Settings dialog.
* Quest Reports: Now, the palette names for listed locations have padding spaces, to ensure that the data appears in straight columns. Also, you can now save quest reports to a text file.
* About the Windows debugging console.. Mac OS X comes with a Console program designed for displaying .log files such as Allegro.log, so the OS X version of ZC will come with an alias to Allegro.log inside the ZC application bundle. ( _L_, 2012-02-11 06:17:30 )

* Fixed the bug with the flip arguments in all the other script drawing.
* Added two new functions: 1)Screen->DrawLayer(), which will draw all the combos from any layer on any screen on any map to a location on the current screen or bitmap with opacity or rotation. 2)Screen->DrawScreen(), which is similar to the above with the exception that it draws all the available layers from a screen to the current screen or bitmap. --Example usage, Minimaps: Draw a block of 4 screens once to a bitmap, then scale that down to a small rectangle when you draw it to the screen. ( Gleeok, 2012-02-10 02:38:43 )

* It should no longer be possible for the item selector to disappear when the subscreen changes. ( Saffith, 2012-02-05 07:50:04 )

* Hungry Goriya rooms are no longer useless if messages disappear. ( Saffith, 2012-02-04 07:34:03 )

* ZScript: Rewrote Quad3D() and Triangle3D() Screen Functions (Which have been completely broken for a long time) so they don't crash anymore. ( Gleeok, 2012-02-04 01:48:31 )

* New quest rule: enemies flicker when hit. ( Saffith, 2012-02-02 19:11:59 )

* Certain warps would reset enhanced music, but not MIDIs. They now should not reset any music.
* Added ZScript functions to control enhanced music.
* Modified the way quest filenames are read when loading saved games. Hopefully, this will make zc.sav files somewhat compatible across platforms. ( Saffith, 2012-02-02 13:40:53 )

* Favorite combos and combo aliases are now saved in quest files.
* Fixed bomb bags' "Super Bombs Also" flag. It's been broken for a long time, and a lot of quests depend on incorrect behavior, so the flag is enabled in existing quests. It is also now enabled by default. ( Saffith, 2012-01-31 20:27:32 )

* Tektites can spawn on solid combos again.
* FFCs in quests from RC1 and before will run while Link is holding up an item.
* Finally found a fix for stuck MIDI notes on Linux.
* Fixed CSet 5 not being reset after warping out of a dark room. ( Saffith, 2012-01-31 10:51:31 )

* Fixed scrolling warps not setting continue screens correctly. ( Saffith, 2012-01-30 15:18:47 )

* Increased the range of values that can be set for enemies' misc. attributes. ( Saffith, 2012-01-30 09:00:42 )

* Fixed some errors in the string editor. It may still do odd things with invalid control codes, but it should work otherwise. ( Saffith, 2012-01-29 15:15:18 )

* Homing Moldorms should now animate correctly. ( Saffith, 2012-01-27 23:09:13 )

* Fixed the bug where Quad() and Triangle() would sometimes display garbage pixels. ( Gleeok, 2012-01-27 20:41:27 )

* Invisible Link's weapons will be invisible again. ( Saffith, 2012-01-26 09:54:29 )

* ZScript: Upped the Off-screen Bitmap dimensions to 512x512 - the maximum size allowed by most script drawing routines. ( Gleeok, 2012-01-25 16:27:42 )

* Fixed the drop in framerate when magic is refilling or Link has a magic ring.
* Fixed some weapons not working when Link is invisible. Incidentally, this also makes those weapons visible. ( Saffith, 2012-01-25 14:51:20 )

* Shields' unused ice magic block/reflect flag is now used for script weapons instead. By default, the Magic Shield blocks them and the Mirror Shield reflects them. For compatibility, all shields in existing quests will block script weapons.
* Replaced the unused ice flag (97) and combo (previously hidden) with No Ground Enemies.
* Fixed enemies ignoring the No Enemies combo when entering from sides.
* The selected item name subscreen object now shows the name of whatever item the selector is on. ( Saffith, 2012-01-25 08:10:14 )

* The game should no longer fail to save control changes.
* Goriyas' boomerangs will no longer go all the way across the screen.
* Link should now always collect items retrieved with a boomerang.
* Shields and spawn animations can now be set for other- and other (floating)-type enemies. ( Saffith, 2012-01-24 14:52:03 )



Build 1437 - windows
* Added a rotation argument to Screen->DrawBitmap(), which if used rotates the destination rect about its center in degrees. ( Gleeok, 2012-01-23 17:34:11 )

* Adding counter items (rupees, bombs, etc.) via string control codes will no longer ignore the counter's maximum.
* Fixed current items on the passive subscreen disappearing after buying something or picking up a special item.
* Tile warps and side warps can now have different warp returns set.
* Scripts will no longer see a trapped enemy's direction as -1.
* Modified the script interpreter to increase the limit on script size. ( Saffith, 2012-01-23 15:12:52 )

* Fixed the Cane of Byrna's sound not stopping.
* Added FFCF_IGNOREHOLDUP and LW_CANEOFBYRNA to std.z.
* Reworked the undercombo dialog. It now shows current and new combos side by side again, with the new combo defaulting to the currently selected one. ( Saffith, 2012-01-22 13:32:28 )

* Fixed the ladder incorrectly activating over dried water and direct warps.
* Fixed possible graphical errors when Link has bombs, but not the bomb item.
* Fixed the screen not going dark if a fire is removed by a script. ( Saffith, 2012-01-21 14:21:24 )

* ZScript: Fixed a bug where flip arguments were not respected with DrawCombo() and FastCombo().
* Optimized all internal per-combo drawing.
* Windows: Fixed any rare windows-specific crashing that a few people may have seen - which I accidentally introduced to ZC - between RC2 and current revision. If anybody still has issues with obscure crashing from this you can disable the newer 2.5 windows-specific fixes all at once via the "*_win32_proc_fix" option in the config file. ( Gleeok, 2012-01-21 03:53:51 )

* Fixed a bug that made Link unable to get out of water by unwalkable combos.
* Screen freeze combos now work as FFCs. ( Saffith, 2012-01-15 17:14:11 )

* ZC: Fixed the bug where reading the color depth setting in the config file would reset it to 8 before it could be used. Sorry!
* ZC: (Windows) Now zconsole (dbebug console) respects the Quest Rules in the 'Other' category: "Log game events", and "Show Script Errors". ( Gleeok, 2011-12-05 12:05:37 )

* Fixed a recent problem with deleting and reordering strings.
* Corrected the name of item->DrawStyle. ( Saffith, 2011-12-02 06:20:04 )



Build 1427 - windows
* Let's try this once more... ( Gleeok, 2011-12-02 04:38:25 )



Build 1425 - windows
* WINDOWS version update to 2.5RC2. ( Gleeok, 2011-12-02 04:00:00 )

* Fixed the bug where items in the active subscreen animated at double their proper speed.
* ZQuest: Fixed the bug where the last rows of the file list in the Open dialog were sometimes unresponsive.
* NES Consistency: now, Moldorms use the Default item drop set in New Default and all four 'official' quests (excluding the boss Moldorms in 4th.qst).
* Also, for NES consistency purposes, Moldorm segments no longer drop items individually when killed.
* Fixed the bug where Line of Sight Traps placed via ZScript wouldn't return to their 'rest location' correctly. Just a note: if you move an existing Line of Sight Trap via ZScript while it is lunging or returning, it will keep trying to return to its original rest location until it has done so, but if it is moved while at rest, it will correctly regard its new location as its rest location the next time it lunges. ( _L_, 2011-10-23 05:41:17 )

* ZQuest: Newly added to the right-click menu is 'Follow Tile Warp', which lets you right-click any tile warp combo and find out where it goes, instantly! This should make navigating your quests' environments in ZQuest slightly easier.
* Also, there's 'Edit Tile Warp' which lets you quickly edit the appropriate Tile Warp (A, B, C or D) for that combo instead of having to reach up to the Screen menu then shuffle through the Tile Warp dialog tabs.
* Also, removed the 'Properties' right-click menu item, as the tooltips provide the same functionality in a more convenient format.
* String Editor: Added a dropdown menu to the string list. It lists all of the strings in your quest that begin with two hyphens ('--'). Selecting one will jump to that string in the list. The idea is that you should place 'unused' strings, beginning with two hyphens and containing some identifying words, at the beginning of large blocks of strings in your quest, so that the dropdown menu serves as a quick index to these string blocks.
* String Editor: Deleting a string now just clears the string instead of physically removing it and decrementing the IDs of all strings after it (which, in this age of ZScript, might be more trouble than it's worth). Since you can re-order the string list at will, you can shuffle this empty string to the end of the list as you will.
* ZQuest: The 'Flip Screen Horizontally/Vertically' and 'Flip Map Horizontally/Vertically' features are no longer tied to hotkeys, due to their being too esoteric. They are now in the Maps submenu of the Edit menu.
* ZQuest: 'Show Squares' is now on by default. ( _L_, 2011-10-07 09:17:07 )

* Fixed the bug where teleporting Wizzrobes ignored No Enemy flags and other restrictions, and also fixed the NES inconsistency where teleporting Wizzrobes wouldn't appear over water.
* Game Event Logging: There is now a log message when Link warps, indicating the DMap and screen destination, and a log message for entering screens, which lists the screen's states. ( _L_, 2011-09-22 09:05:23 )

* Large Mode: Fixed the bug where alert dialogs' text lines would get cut off at the bottom (so that g's, p's and y's would lose their tails).
* Enemy Editor: Renamed 'Is Transparent' to 'Is Translucent'.
* ZQuest: Clicking the Flag button in the Main Panel now opens the Select Combo Flag dialog instead of the more obtuse option of using the last placed flag. Since the last placed flag is already selected in the dialog when you open it, this should only add an extra click to the process of its 'normal' usage.
* ZQuest: Clicking on an item on the screen itself will allow you to reposition it, as if you had clicked the main panel button. Also, clicking the Item button in the main panel will now open the Select Item dialog as well as letting you reposition it.
* ZQuest: Right-clicking on Commands will now bring up the dialog to change them. Previously you had to control-click them to erase them and then click them again.
* Tile Editor: The 'rectangle selection method' in the Select Tile dialog is now the default.
* Large Mode: Fixed the bug where pressing the Drawing Mode button wouldn't alter the checkbox in the Drawing Mode submenu in the Tools menu. Also, now selecting a non-Normal drawing mode (in either the submenu or the Commands menu) will switch the mode back to normal.
* ZQuest: If the quest rule 'Use Warp Return Points Only' is set (which is true for all new quests), clicking the green square arrival point button will notify you that it has no function under the current quest rule settings, before letting you move it.
* Large Mode: Screen information now includes a line telling you how many screens use this screen as a layer, and the first screen which does so. (Since most layer screens are only used by one screen, this should be sufficient.)
* Addendum: The word 'set' in the first line of the previous set of changes should read 'unset'. Thanks and take care. ( _L_, 2011-09-18 07:49:51 )

* Fixed the hookshot handle damage. A thorough examination of the 'hookshot chain damage' behaviour from 2.10 confirms that the source of damage is not actually the chain but the handle. Now, if the Item Editor checkbox is set, the handle does damage to a) Walking Enemies with the Pols Voice walk style or a shield, b) Wizzrobes that don't Ignore the Hookshot, c) Peahats, d) Aquamentuses and e) Manhandlas.
* Renamed the 'No Chain Damage' checkbox to 'No Handle Damage' and made it set by default. Since the handle damage is a 2.10 bug that doesn't even make sense within this game's internal videogame logic, it is recommended that future quests keep the box checked.
* Fixed the NES consistency bug where stunned Dodongos could be killed by sword beams.
* Renamed 'Summoner' to 'Wizzrobe (Summoner)'.
* Addendum: last line on previous set of changes should also say that 'Cane of Byrna Defense' is renamed 'Byrna Beam Defense'. ( _L_, 2011-09-15 05:44:38 )

* Fixed the bug where the inner eye offset for Patras was equal to the outer eye offset if none of the eyes fired projectiles. Now it is equal to 40 if the centre eye does not shoot projectiles, and 120 if it does.
* Fixed the bug where 'Other (Floating)' enemies could not have their Z set by a script. (However, since they don't obey gravity, it is not possible to set its Jump via script.)
* Due to popular demand, Lanmolas no longer obeys gravity. For the record, the following enemy families don't obey gravity: Manhandla, Moldorm, Lanmola, Gleeok, Zora, Leever, Aquamentus, Rock, Ganon, Trap, Projectile Shooter, Spin Tile.
* Fixed the bug where Peahats couldn't be hit with fire boomerangs while in flight.
* Now, damaging sparkles only damage foes if the foes do not have a damage-preventing Defense for the weapon that created the sparkles. This prevents Darknuts, Pols Voices, Wizzrobes and various bosses from incorrectly taking damage from sparkles from boomerangs, arrows, and canes. Note that script-created LW_FIRESPARKLEs will still damage these foes. Also, you may remember that in 2.10 the Pols Voices would appear to take damage from damaging sparkles, but not actually lose HP. This seems to be a 2.10 bug, and in 2.50 they will ignore damaging sparkles properly.
* New Default: Now, the Darknuts have the 'Hammer Can Break Shield' flag set.
* Enemy Editor: Renamed 'Wand Defense' to 'Wand Melee Defense' and ( _L_, 2011-09-12 09:40:06 )

* ZQuest: Fixed the bug where choosing View Map more than once wouldn't refresh the displayed map.
* Fixed the bug where defaulting enemy data would give the Gleeok some incorrect misc. values.
* Fixed the bug where, if a non-Projectile Shooter enemy was generated by the 'Shooting Statues' screen flag, that enemy would sometimes be incorrectly generated twice.
* ZQuest: Fixed the bug where typing the first letter of an enemy's name in the Select Enemy list would not instantly update the enemy tile preview.
* Enemy Editor: Now you can edit the 'Turn Freq' of flying enemies, which is a previously hard-coded value used in their shared movement routine. This determines how often they decide whether or not to change direction. By default this is 16 for Digdoggers and Manhandlas, 9 for severed Gleeok heads, 8 for Patras, Keese and Peahats, and 12 for phantom Ghinis. This takes up the 'Halt Rate' position.
* Peahats, Keese, Ghinis and Big Digdoggers now have editable Random Rates. Previously they were hard-coded at 4 for Peahats and Ghinis and 2 for Keese and Big Digdoggers. Note that Patras, Manhandlas and Digdogger Kids already had editable Random Rates.
* All flying enemies can now use their Homing Rate to affect their direction, in a manner identical to ground enemies. Note that Digdogger Kids already had editable Homing Rates.
* Gleeoks now use Random Rate, Halt Rate, Step Speed and Homing Rate for their severed heads.
* Manhandlas now have an editable Step Speed. It starts at 50 and increases by 50 when it loses a head. It is internally capped at 450.
* Unified the Keese and Keese Tribble enemy families. They had only a few lines of code differentiating them. ( _L_, 2011-09-08 05:18:22 )

* Fixed a couple of subscreen issues.
* Fixed a few enemies not responding to bait correctly. ( Saffith, 2011-08-18 12:53:17 )

* Fixed the bug where menus become unusable when ZC is run in non-8bit color. This also fixes the wrongly colored border issue in zc.
* Finally got around to optimizing certain drawing commands to re-use memory. Functions like Screen->Quad() for instance should be a lot faster. These are about as good now as they're ever going to get.
* (Windows) Added various config file options based on previous commits. ( Gleeok, 2011-08-16 01:31:11 )

* ZC: (Windows) Will now become inactive when minimized or focus lost. (Don't panic, you can still listen to the music!)
* ZC: Added the following command line arguments: -0bit, -8bit, -15bit, -16bit, -24bit, -32bit. -- Also added a "color_depth" option to the config file which can be set similarly. These default to 8. *Note that setting these to 0 will use the current color depth of your monitor, so if you need to change these for any reason it is recommended to use 0 or -0bit for that very reason, which should have the best performance. ( Gleeok, 2011-08-14 01:47:12 )

* Fixed some inconsistencies with DrawString and optimized cache read, insertion etc.. of Script Drawing with large amounts of drawing. Basically a whole bunch of not very interesting stuff. ( Gleeok, 2011-08-11 04:48:19 )

* Pushing a heavy block no longer triggers secrets regardless of which push flag is used.
* Jumping and landing on the ladder over water should no longer play the splash sound.
* Tweaked zscript.txt, std.zh, and std.txt. ( Saffith, 2011-08-06 09:49:31 )

* Now, the Show Walkability cheat in ZC and ZQ shows Hookshot-crossable and Ladder-crossable combo types with gray and brown, respectively. Ladder & Hookshot combo types have brown and gray checkers. Also, damage combos are now shown in yellow checkers (to denote if they are walkable or solid).
* Now, the Show Walkability cheat in ZC (but not ZQ) draws the solidity boxes between layers 2 and 3. This is to prevent flying enemies from being hidden by the boxes. Of course, the overhead layers can obstruct your view of the solidity boxes, but you can already switch those off at will.
* Fixed the bug where generating a Super Bomb via script would cause it to have a small bomb explosion.
* As you know, if you create an LWeapon via script, it is automatically given the qualities of an item of the appropriate family with a Level of 1. Now, instead, ZC finds an item of the appropriate family with the lowest possible level.
* Tweaked the wording of the help string for 'Ladder Only' combo types, to say that they only work on layer 0 (unlike the 'Hookshot Only' type).
* Added a missing potion shop to the Second Quest. ( _L_, 2011-07-28 04:43:52 )

* Fixed the bug where killing a single Patra (BS Zelda) eye would set the 'No Return' screen state (if the enemy was set to 'Never Return After Death').
* Fixed the bug where, when warping to a DMap that played a different track from the same enhanced music file as that used by the previous DMap, the music sometimes wouldn't change to that track.
* Now, Link's jumping animation speed is related to the Gravity constant's setting - if Gravity is lower, the animation is slower, and if Gravity is higher, it is faster.
* Added a ZC setting, 'Click to Freeze', which lets you pause to bring up the ZC menubar by clicking instead of just pressing Esc (as you could for all versions up until around build 749). You can disable it at will in case you're playing a quest that uses the InputMouseB ZScript function to use mouse-clicks for something. I called it 'Freeze' instead of 'Pause' because there's seriously four different ways to pause this damn game (Subscreen, Overworld Map, F3, Esc) and not enough differentiating terminology to go around. ( _L_, 2011-07-13 10:18:59 )

* ZQuest: Added "fps" option to the config file. Accepted arguments are between 12 and 60 frames-per-second. (Default is 60)
* ZQuest: (Windows) Added "frameskip" option in the config file.
* ZQuest: (Windows Fix) : Will now become inactive when minimized or focus has become lost. This will put ZQ in an Idle (Sleep) state and use 0% CPU while it is inactive. Also ZQ now undoes any thread priority set by allegro worker threads; ( Gleeok, 2011-07-09 17:25:59 )

* ZC: (Windows) Added a debugging console. ..(*waits for gasps of terror and astonishment to subside) Yes, that's right: A debug console.
* Now you can view system (allegro.log info), user logging (via zscript trace commands), and extra debugging info regardless of setting any extra flags, quest rules, or command-line args, in real time as they happen. ...I don't know why I didn't add this sooner.
* To enable zconsole use command line switch "-console", "-con", or set the appropriate ag.cfg option to 1.
* ZSCRIPT: Added Bitmap drawing and further transformed script rendering into a state machine with the following Screen functions: SetRenderTarget(int target); and DrawBitmap(...);
* Screen->SetRenderTarget(): sets 'target' as the destination Bitmap for all successive zscript drawing commands. This can be directly to screen or in one of 7 off-screen buffers.
* Screen->DrawBitmap(): draws a source region of one Bitmap to a destination region of another Bitmap, including the screen layer as a possible target. I will post an example of using these pending next release. ( Gleeok, 2011-07-04 02:51:58 )



Build 1402 - linux


Build 1401 - macosx-Leopard , windows
* This corresponds to ZC Release Candidate 2. I'm not sure if I'm supposed to put RC builds in this changelog, but maybe people will be less likely to miss it if I do.
* Item Editor: Now you can't set the Equipment Item status of a Level-Specific Key item. Also, renamed 'Full Max' to 'Refill Max', which is slightly less opaque and tautological than the former. ( _L_, 2011-06-30 08:46:13 )

* Fixed several cases where a DMap's Disabled Item settings were being ignored.
* Changed the 2010 copyright to 2011. ( _L_, 2011-06-30 07:37:19 )

* Fixed the bug where Link, with diagonal movement, couldn't step sideways out of water, and would instead continue swimming on land.
* Fixed the bug where ground enemies couldn't walk on dried water combos. ( _L_, 2011-06-27 10:15:42 )

* New Default: Fixed the boomerang tiles so that they function correctly with BS-Zelda Animation.
* New Default: Rearranged some dungeon combos and added a few more.
* ZQuest: Tile pages and map images are now exported using the set snapshot format (default being PNG).
* OS X: Screenshots and map images are now saved outside of the application bundle.
* Item Editor: Added a help button next to the item class dropdown menu that provides a brief description of the item class. ( _L_, 2011-06-20 00:10:34 )

* Added help buttons to the Combo Editor that provide help messages explaining the currently selected combo type and/or inherent combo flag.
* Changed the call to Allegro's rest function used by the FPS capping mechanism, such that it now rests instead of just yielding. The result of this should be reduced CPU usage for most systems. ( _L_, 2011-06-18 08:07:02 )

* Fixed the bug where the Show Walkability cheat wouldn't reflect changes to combos on layers.
* Added an extra game event log message involving the Hit All Triggers screen flags.
* Made some combo flag help descriptions less ambiguous.
* New Default: Fixed the Nayru's Love Shield (Back) sprite.
* Item Editor: Counter Reference is now a dropdown menu with 16 entries plus 'None'. Since all counters above 16 are reserved for future expansion, you can no longer set an item to use them. ( _L_, 2011-06-06 04:54:41 )

* Fixed possible crashes in ZQuest when viewing screens with invalid combos.
* Fixed a possible crash if Link dies while the screen is shaking.
* Screen->Quake and Screen->Wavy are now reset when Link dies.
* Expanded the number key usage in preview mode to cover all eight possible warps. ( Saffith, 2011-05-23 14:56:50 )

* Fixed problems with the rising fireball weapon in the enemy editor.
* Fixed some issues with enemy sounds stopping at the wrong times.
* Enemies now have a defense for script weapons. ( Saffith, 2011-05-18 12:55:58 )

* 2.10 Consistency Fix: Ladders are now allowed in all NES Dungeon screens regardless of any quest rule or screen flag.
* Fixed the Patra's eyes' CSet in pre-Enemy Editor quests.
* Fixed the upward movement of Fire passing through solid combos in Sideview screens.
* Overworld Map: Fixed the display of Doors of NES Dungeon screens while in non-NES Dungeon DMaps.
* Now, scrolling warps between NES Dungeon and non-NES Dungeon DMaps correctly observe the Secrets screen state and the Door states of the destination screen. ( _L_, 2011-05-14 02:18:11 )

* Fixed the bug where items wouldn't appear in the subscreen after picking up a Triforce piece.
* Fixed an issue with whistle-altered palettes not being reset after warping. ( Saffith, 2011-05-01 17:01:54 )

* Fixed a problem with loading a game when Link's max health includes a fraction of a heart.
* Importing a ZGP will no longer replace all the items; only their graphical data will be changed now.
* Fixed a bug where Link couldn't walk past a moving block on the left.
* Fixed ffc->InitD[] being written incorrectly.
* ffc->Script is now writable. ( Saffith, 2011-04-27 19:50:20 )

* Fixed a crash where sfx.dat was too old to have all the current sound effects, but not old enough that someone bothered to change the version. ( pkmnfrk, 2011-04-23 16:10:27 )

* Fixed a crash when displaying certain compiler error messages.
* Damaging sparkles created by boomerangs shouldn't easily bypass enemy shields anymore.
* Drawing commands are once again cleared when Link is holding an item.
* Relatedly, FFCs now have a flag that controls whether they're updated when Link is holding an item. By default, they're not. ( Saffith, 2011-04-22 14:07:46 )

* Quests opened automatically by the "Reload Last Quest" option no longer bring up the "Save As" dialog when saved.
* Fixed more problems with pushing blocks over damage combos.
* Tweaked drawing while scrolling a bit.
* std.zh: Fixed a mistake in one of the Choose() functions. ( Saffith, 2011-04-19 08:12:28 )

* Fixed the bug where equipment items with magic costs would sometimes vanish from the subscreen whenever you changed screens with 0 magic.
* Fixed the Candle and Cane of Byrna slash animations. ( _L_, 2011-04-11 08:07:47 )

* Fixed the bug where ladders couldn't be used on 'Ladder Only' or 'Ladder/Hookshot Only' combos.
* New Default: Fixed four duplicate water-edge combos. ( _L_, 2011-04-10 03:53:51 )

* Items that decrease counters should no longer cause them to wrap around to very high numbers.
* Link's HP should now be set correctly when continuing when his maximum HP includes a partial heart. ( Saffith, 2011-03-23 09:51:58 )

* The most desired feature in ZC history has been added: Now you can set the Flame sprite for Din's Fire and Magic Book items.
* Fixed the bug where saving sometimes wouldn't work for an unsaved quest in the Mac version.
* Filled in the new ZQuest.txt with the remaining features from the Quest menu, features in the Edit and View menus, and Screen Data. ( _L_, 2011-03-19 07:05:43 )

* Gleeoks, Moldorms, and Lanmolas with 0 segments will no longer crash the game. ( Saffith, 2011-03-16 21:09:06 )

* If a trigger combo and a misc. secret flag are on the same combo, the misc. secret combo will now be the one that appears if the secret is triggered. ( Saffith, 2011-03-16 08:40:01 )

* The start page option is no longer ignored when importing a combo table.
* Canceling out of the "Scroll to Combo Page" dialog will no longer cause it to scroll to page 0. ( Saffith, 2011-03-14 15:48:07 )

* Fixed a bug that could cause strings to be changed incorrectly after deleting one. ( Saffith, 2011-03-12 07:29:34 )

* Finishing one of the NES quests shouldn't screw up the next one anymore.
* Fixed a bug that could make FFC changers fail to activate. ( Saffith, 2011-03-10 18:06:11 )

* Keese should no longer get stuck on the left edge of the screen.
* Step triggers will trigger repeatedly as long as Link is standing on them in 2.10 quests.
* Z3-animated Link now animates when entering and exiting caves. ( Saffith, 2011-03-10 10:18:39 )

* Fixed a possible crash on sideview screens.
* Current Items on the passive subscreen animate now.
* Fixed (none) not appearing in the item override menu. ( Saffith, 2011-03-07 11:55:12 )

* Fixed possible errors and crashes after the active global script has quit.
* Enemies can once again move over walkable water if "Link Drowns in Walkable Water" is unchecked. ( Saffith, 2011-03-01 17:34:54 )

* Fixed a possible crash when saving in ZQuest.
* Fairy flags on solid combos should work the way they did in 2.10 again.
* std.zh: Corrected a few IC_ constants and added the missing ones. ( Saffith, 2011-02-28 20:58:43 )

* New Default: Adjusted the level of the Key (Level-Specific) item to 1.
* New Default: Fixed the tiles of the subscreens' magic gauges.
* New Default: Adjusted the (unused) tiles for the (nonexistent) Bat Wizzrobe 2's bat form.
* Presumably fixed the Kill All Enemies cheat killing non-beatable enemies. ( _L_, 2011-02-27 23:40:07 )

* Fixed pasting of screen warps (previously, it would not paste the side-warp side selection trigger thingies) ( pkmnfrk, 2011-02-21 02:14:32 )

* Fixed the bug where the ladder would sometimes appear when scrolling vertically with Walkable Water on.
* New Default: Fixed some non-animated water combos, and made the Outlands waterfall tiles fit in better with the other water tiles. ( _L_, 2011-02-09 02:58:45 )

* Added a default sound effect for the Cane of Byrna.
* Changed the Cane of Byrna's default Beam Speed Divisor to match the sound effect.
* Now, the Cane of Byrna's beam appears within the hook of the cane regardless of Link's direction.
* Changed the default Zelda's Fanfare sound to one with less noise.
* New Default: Changed some sprites for various Traps and Octoroks.
* Added the 'Show/Hide Walkability' level 4 cheat. This has the same functionality as the Show Walkability option in ZQuest.
* Non-Gameplay Items' Equipment Item checkbox can no longer be set. ( _L_, 2011-02-06 21:36:54 )

* Boomerangs are no longer treated as swords when determining whether they do damage.
* Boomerangs should no longer be able to bypass enemy shields.
* Fixed npc->Defense[] being read incorrectly.
* Fixed the problem of screens showing up on the map when they shouldn't, hopefully without causing any problems.
* Individual Lanmola segments will drop items again.
* std.zh: Corrected Randf(). ( Saffith, 2011-02-04 13:33:10 )

* Warping into a dark room no longer makes it all black.
* Fixed some issues with transparent sprites and drawing commands in dark rooms.
* Fixed transparency not being updated when ESP enemies appear.
* The Triforce pickup jingle should no longer get cut off. ( Saffith, 2011-02-02 09:08:41 )

* Fixed another little enemy animation issue.
* Changed the way conveyor belts are detected to fix issues with standing halfway on one.
* Fixed Link getting stuck on corners while swimming.
* Implemented Arrange->Reverse in the subscreen editor.
* Renamed the Enemies->Perm. Secret enemy flag to make it clearer what it actually does. ( Saffith, 2011-01-28 06:55:06 )

* Fixed Gohmas moving randomly when they first appear.
* Fixed some internal issues with local arrays and strings in ZScript. ( Saffith, 2011-01-27 08:36:02 )

* Fixed Gohma 4's fire in old quests.
* Link should no longer be hurt by a damage combo he's pushing a block onto.
* Fixed the button list for button items in the subscreen editor.
* FFCs now freeze when Link is holding up an item.
* Shadows should now be centered correctly under extended enemies.
* A boomerang's sound will now stop when it's removed by a script.
* Timed saves work normally again. ( Saffith, 2011-01-25 14:03:05 )

* Changed the way enemy halt time is determined. It should work more like before now.
* Rings can now use all 30 extra sprite palettes.
* Enemies should no longer be drawn too high after being carried over through a warp.
* Fixed an issue with the hookshot hitting solid combos on layers. ( Saffith, 2011-01-24 14:30:55 )

* Drawing commands should work while scrolling again, and now without little glitches. ( Saffith, 2011-01-23 22:13:20 )

* Fixed another walking enemy animation error.
* Dodongos should no longer avoid the right edge of the screen.
* Screens on new maps will again have the lens effect set to normal.
* Winning a quest should no longer reset its icon to the green tunic icon.
* A couple of small tweaks in std.zh. ( Saffith, 2011-01-08 21:39:29 )



Build 1352 - macosx-Leopard
* I'd like to again apologise for my absense. My hard drive broke down. Don't worry; I lost nothing except for my dignity.
* New Default: Fixed some enemy tiles (Goriya L3, Magic Pols Voice) and altered some other tiles (Digdogger, Zol & Gel Tribble, fast Octoroks).
* New Default: Spin Tile (Enemy Sprite) now uses the 4-Frame 4-Dir animation type.
* Hopefully this new build works on other people's systems... ( _L_, 2010-12-22 22:01:14 )

* Hopefully fixed issues with rings and peril rings with a damage divisor of 0.
* The hookshot should now pause while the subscreen is active. ( Saffith, 2010-12-22 09:07:18 )

* Fixed a graphical issue with walking enemies with odd frame rates.
* Sparkles now disappear after their animation completes. ( Saffith, 2010-12-17 10:43:12 )



Build 1348 - linux , windows
* Did what I could to fix hanging MIDI notes on Linux. It's an Allegro issue that we probably can't fully fix, but it should be less severe now.
* Added Game->DMapMIDI[] to zscript.txt. Turns out it's been available for quite a while.
* It's been using the wrong numbers, though. It's about fixed as possible now; not all built-in MIDI's numbers match Game->GetMIDI() and Game->PlayMIDI(). ( Saffith, 2010-12-15 10:55:32 )

* Zols and gels move correctly now.
* Pressing A or B with no weapon in that slot should no longer fire a 0-damage sword beam.
* Weapon types that aren't supposed to be affected by gravity aren't anymore.
* "Tall Grass->Next" combos now leave items when slashed. ( Saffith, 2010-12-13 21:18:57 )



Build 1346 - linux , windows
* Fixed some more alternate music crashes.
* The CSet editor should have a black background now. ( Saffith, 2010-12-13 06:04:05 )

* Fixed some alternate music-related crashes.
* ZC now checks the quest directory as well as the program directory when searching for alternate music.
* Killing enemies created by scripts should no longer decrement the screen's enemy count.
* Fixed incorrect warps out of level 5 in the 4th quest. ( Saffith, 2010-12-12 12:21:44 )



Build 1343 - linux , windows
* The previous fix turned up another array issue. Everything's good now, hopefully... ( Saffith, 2010-12-10 14:38:39 )



Build 1342 - windows
* New Windows build. I haven't done one of these before, but now seems a good time to try it. ( Saffith, 2010-12-10 12:35:19 )



Build 1341 - linux
* Fixed a major problem with saving games in quests with global arrays. You should probably start a new save file; this was seriously messing stuff up.
* Normal ghinis are once again opaque in old quests.
* Fixed a small error in zscript.txt. ( Saffith, 2010-12-10 07:33:17 )



Build 1340 - linux
* Items created by scripts should no longer be hard to pick up.
* Projectile shooters' breath firing type works now. ( Saffith, 2010-12-04 09:09:32 )

* ZC should no longer overflow the stack when initializing save data.
* Optimization/Fix: Drawing primitives should no longer be called multiple times on layers 3,4,5,6. This might of caused some lag for render-intensive scripts. ( Gleeok, 2010-12-02 15:14:48 )



Build 1337 - windows
* Fixed the bug where quest icons would sometimes change to those of other quests. Saves that already have the wrong icons won't be fixed. ( Saffith, 2010-12-01 22:41:14 )

* Fixed a saving and loading problem that came up a few builds ago. Saved games might be affected.
* Fixed Link reappearing in the wrong place when he drowns after warping with the whistle. ( Saffith, 2010-11-29 15:49:01 )

* Corrected length of default short hookshot.
* Fixed crashing bug with carried items and tribble enemies.
* Fixed bug where using the hookshot downwards directly above a hookshot combo would allow the hookshot to pass through it. ( DarkNation, 2010-11-27 08:35:40 )

* Adjusted some weapons' hitboxes. The sword should no longer hit enemies a full tile to its right.
* Fixed a bug that could make the active global script run twice a frame.
* Changed the way ZScript's drawing functions work when scrolling. ( Saffith, 2010-11-26 08:56:03 )



Build 1331 - macosx-Leopard
* Fixed the bug where the 'Holding Up Items Does Not Restart Music' and 'Leaving Item Cellar/Passageway Does Not Restart Music' rules would restart the DMap music instead of the screen-specific MIDI.
* New Default: added yet more tiles for enemies.
* New Default: phantom Ghinis now flash, and Pols Voice (Magic) have been slowed down to 50.
* Trigger enemies (which are '(None)'-type in ZQuest) added to new quests now continue working as they always did. However, they are left in purely for backwards-compatability, and aren't really recommended for use in modern quests.
* Fourth Quest: reduced Ganon's HP from 300% of normal to 200% of normal.
* Also removed the two top statues from Level-2's boss room because, to be honest, the bottom statues are already hard-boiled murder as it is (and I like the geometric symbolism of Link in a triangle of fire between 2 statues and Gohma). ( _L_, 2010-11-26 02:22:58 )



Build 1330 - windows
* The 'Win Game' combo type is now labelled 'Unused'.
* A new build. My apologies for its delay. ( _L_, 2010-11-25 23:15:45 )

* Items once again bounce a bit when they fall.
* Push blocks' combo types should no longer be ignored in on sideview screens.
* The application windows should now use the appropriate icons on Linux. ( Saffith, 2010-11-20 19:29:14 )

* Added Screen->RoomType and Screen->RoomData, which correspond to the Screen->Room Type and Screen->"Catch all" menus in ZQuest.
* Also added RT_* constants to std.zh to go with this. ( pkmnfrk, 2010-11-17 15:15:51 )

* Fixed a few internal issues.
* Fixed a mistake in some of the new std.zh functions. ( Saffith, 2010-11-17 11:36:16 )



Build 1326 - linux
* Fixed Game->SetScreenState() getting the wrong screen on higher-numbered maps.
* FFCs now have to move farther (more than 4 tiles) off the top or left of the screen before they're blanked.
* Added a couple of functions to std.zh and expanded NoAction().
* Yeah, another Linux build. 1324's Allegro changes didn't quite work for everyone; it should be better now. ( Saffith, 2010-11-16 20:41:10 )

* Fixed npc->DrawYOffset being incorrect.
* Fixed ladder only combos allowing the hookshot to pass through.
* Fixed block fireball combos not blocking fireballs.
* Fixed items sometimes ignoring conveyor belts. ( Saffith, 2010-11-15 09:38:40 )



Build 1324 - linux
* Patched Allegro to fix some sound problems on Linux, particularly with PulseAudio.
* Fixed eweapon->isValid() always returning false.
* Fixed a problem with enemy explosions drifting to the left. ( Saffith, 2010-11-14 20:39:22 )



Build 1323 - linux
* Fixed a bug where global scripts kept running after they should have quit.
* Fixed bitwise NOT in ZScript. ( Saffith, 2010-11-11 12:49:34 )

* Fix a few annoying warning messages while compiling ( pkmnfrk, 2010-11-10 17:10:12 )

* Fixed a couple of documentation errors (GetMessage() is part of Game, not Screen, and the Text Formatting constants are TF_*, not TEXT_FORMAT*) ( pkmnfrk, 2010-11-08 23:17:05 )

* Fixed the fix to the non-penetrable bosses - I'd gotten it backwards and made every enemy except the three bosses non-penetrable by penetrating weapons. That's reverted now.
* Fixed the bug where Link's raft would disappear while scrolling. Related note: from now on, while Link is scrolling the screen on a raft, Link->Action will equal LA_SCROLLING, not LA_RAFTING.
* Fixed the bug where Link would drop his sword when boarding a raft while charging his sword.
* Fixed the bug where Lanmolas' BG Sound wouldn't stop playing when they died.
* Fixed the bug where Lanmolas wouldn't use the Death Sound enemy editor value. ( _L_, 2010-11-06 02:03:19 )

* Fixed TraceB() always printing false.
* When setting a DMap's alternate music, ZQuest will now load the file correctly if it's in the same directory as the quest file. ( Saffith, 2010-10-27 09:13:47 )



Build 1318 - windows
* A new build. By the by, I'm going to be personally busy with work for the next two weeks, so my apologies if I seem even more absent than usual during that time.
* Fixed the bug where completing a Maze Path with an east Side Warp would scroll the screen upward instead of rightward.
* Fixed the bug where the screen would scroll twice if completing a Maze Path resulted in triggering a scrolling Side Warp. ( _L_, 2010-10-13 19:41:15 )

* Fixed a crash when Link gets hit while wearing a ring with a damage divisor of 0. ( Saffith, 2010-10-11 11:01:54 )

* ZScript: Fixed numbers should no longer spill off digits when performing divide operations.
* Tweaked the AG fire logo screen in case anyone was having any weird behaviors with it before. ( Gleeok, 2010-10-05 17:33:39 )

* Fixed a crash that could occur when doing a CSet-only fill (ctrl+shift+click).
* Fixed a typo in std.zh (WT_ENTRANCEEXIT). ( Saffith, 2010-10-03 15:57:25 )



Build 1314 - macosx-Leopard
* Fixed the Import Map crash by changing the .map export file format to use the quest file map loading/saving routines instead of the aged, ad-hoc, and (evidently) crash-prone method it was already using.
* This means that the .map format has changed! If you've somehow got a stockpile of .map files, you'll need to import them to a quest file using an older build, then export them using this latest build. (If you're interested, the format last changed, unintentionally, in build 1046.)
* Fixed the bug where making a splitting enemy split into copies of itself would lead to a ludicrous amount of enemies being spawned.
* The above also indirectly fixes the bug where split-off enemies sometimes can't split into further enemies. ( _L_, 2010-09-29 03:11:45 )



Build 1313 - windows
* New Default: Added several new tiles/combos, including some from the NES game Legacy of the Wizard. While we approve of a wide range of available tiles, we are careful to ensure that the default combos should not be too high in number, so as not to overwhelm new users.
* Sorry for the lateness of this build. (If something in your scripts suddenly seems off, it might be because of an obscure missed case in Joe123's ZASM rewrite. Check carefully.) ( _L_, 2010-09-21 00:49:35 )



Build 1312 - linux
* An animated boomerang sprite with a speed of 0 should no longer crash the game. ( Saffith, 2010-09-13 13:00:17 )

* ZScript: fixed the recent bug where eweapon->UseSprite() wouldn't work.
* ZScript: fixed the recent bug where dividing a number larger than 21 wouldn't work.
* Fixed the bug where Patras would sometimes have incorrectly placed or overlapping outer eyes.
* Fixed the bug where walking enemies that split into 3 or more walking enemies would have their 3rd and subsequent children be immobile.
* Now the Armageddon Games splash screen can be dismissed a bit faster. ( _L_, 2010-09-06 08:45:33 )

* Corrected the enemy data validation.
* Hopefully fixed some crashes in ZQuest. ( Saffith, 2010-08-31 21:42:08 )

* Implemented the pre-fix increment and decrement operators in ZScript ( Joe123, 2010-08-30 06:29:35 )

* Comparing Link->Action against LA_SCROLLING should now work properly in the active global script ( Joe123, 2010-08-29 12:14:53 )

* Fixed the bug where you would have to press Joystick button 1 or 2 multiple times to get it to register. ( pkmnfrk, 2010-08-24 09:07:44 )



Build 1304 - macosx-Leopard
* New Default: Fixed the Fire Gleeok's S. Tile.
* Fixed a bug where string control code 3 (Goto If Screen Variable) used the wrong amount of arguments.
* Made the 'Error: Not a custom quest' loading message more meaningful.
* Subscreen Editor: implemented the Arrange submenu items 'Bring to Front' and 'Send to Back'. ( _L_, 2010-08-24 01:20:42 )

* a[b[i]] (or even a[b[c[i]]] etc.) is now a valid operation ( Joe123, 2010-08-23 14:53:45 )

* Whoops! Added the other half of the implementation of Link->HitDir ( pkmnfrk, 2010-08-23 13:09:05 )

* Fix part of the script interpreter ( pkmnfrk, 2010-08-23 09:26:02 )

* Fix the bug where trying to open an old quest (with no Slot 4 script) would crash ZQuest (and, possibly ZC, never tried) ( pkmnfrk, 2010-08-23 09:05:46 )

* Re-wrote quite a lot of the insides of ZASM, which should result in some (albeit probably small) increases in speed, less RAM wasted and much more readable code.
* I've tested this quite thoroughly, and seeing as I've only really changed the way data is passed around inside ZASM it shouldn't introduce any bugs. If you find any, report them and I'll fix them as soon as I can (should only be things like typos though to be honest)
* Fixed LOAD1/2 and SETA1/2, which were wasting away when ZASM got updated internally some time ago. Global scripts now have A registers.
* Each item script's 'this' pointer now points an itemdata rather than an actual item sprite, seeing as the item sprites only lasted for one frame anyway
* Added 'AimEWeapon', 'AimLWeapon' and 'WeaponTypeToID' to std.zh, and overloaded 'GetScreenDBit' to work on different screens to the current one ( Joe123, 2010-08-23 04:16:33 )

* Added documentation for Link->HitDir
* Fixed the line endings in the text files (and, set svn:eol-style to native (as they should have been already!)) ( pkmnfrk, 2010-08-22 23:47:38 )

* Added Link->HitDir. Turns out that if you set Link->Action to LA_GOTHURTLAND, it actually works (it stuns him and knocks him back). Now, we can control that knockback! Link will be knocked back into the direction specified by this variable (if he is facing the right way, of course). ( pkmnfrk, 2010-08-22 23:46:41 )



Build 1296 - windows
* New build for everyone using CreateItem
* Added bounds checking to all of the Screen->Create* and Screen->Load* functions ( Joe123, 2010-08-17 10:14:43 )

* Fixed a crash involving Screen->CreateItem().
* Fixed a recent bug where trying to set npc->Jump with a script would result in too small a value being set.
* Fixed the alphabetical sorting of the script dropdown menus.
* Removed the word 'Slot' from the script dropdown menu items because it makes them a bit hard to visually differentiate names and numbers. ( _L_, 2010-08-14 08:05:16 )



Build 1294 - windows
* Had lots of complaints about std.zh compiling in 1283, it works in this build. Apologies.
* Added 'IsSideview' to std.zh courtesy of Wolfman2000.
* Fixed the 'AngleToDir' functions from std.zh which had their angles the wrong way round. ( Joe123, 2010-08-12 15:22:29 )

* Fixed the line endings on the source files (guys, when you add a new source code file, you should add the 'svn:eol-style' property to it with the value 'native', so that svn manages the end of lines for you!) ( pkmnfrk, 2010-08-09 20:22:32 )

* Fixed a recent bug where trying to set Link->Jump with a script would result in too small a value being set.
* std.zh: Fixed an off-by-one bug with HitboxBottom() and HitboxRight().
* std.zh: HitboxTop(), HitboxBottom(), HitboxLeft() and HitboxRight() can now take FFCs as arguments. The left and top functions aren't really that useful but are included for completeness.
* std.zh: Renamed LoadNPCOf() to LoadNPCOfType(), and added LoadNPCOf() which takes an NPC ID rather than a type. Please adjust your scripts accordingly. ( _L_, 2010-08-08 01:01:52 )

* Put the number of each script next to its name in the ffc dialog, and put a droplist for the scripts in the item dialog ( Joe123, 2010-08-06 03:29:14 )

* Fixed a typo in the script parser ( pkmnfrk, 2010-08-05 17:04:36 )

* Changed the way global arrays are loaded from the save file, which means we no longer need the '~Continue' script - the slot is now free for user scripts. Afraid this means any scripts using global arrays will need to be recompiled again, I'm pretty sure this'll be the last time though.
* Added some names in the 'Assign Compiled Script' dialog which give a little more information about what the global scripts actually do. ( Joe123, 2010-08-05 12:29:56 )

* Added the 'Log Script Errors To Allegro.log' quest rule, which traces things like trying to use invalid NPCs, out of bounds arrays etc. separately to the 'Log Game Events To Allegro.log' rule.
* Arrays can now be initialised to a set of expressions rather than just a set of numbers (ie. int b; int a[] = { I_SWORD1, 3 * 4, b, Pow(5, 6) }; ).
* Memory allocated to strings is now the right length (was slightly too large before), and strings (or initialisers) which are too large for the allocated space will be flagged up at compile time - this allowed for strings with no null terminator to be allocated, but no more!
* Added itemdata->InitD ( Joe123, 2010-08-04 07:52:29 )



Build 1287 - linux
* Hopefully fixed the random crashes that occur when scrolling through the combo list.
* New Linux build. Remember, this will invalidate your old save file, and scripts will need to be recompiled. ( Saffith, 2010-08-03 19:41:39 )



Build 1286 - macosx-Leopard
* Fixed a bug related to the Cycle Combos On Screen Init screen flag an layered cycling combos.
* Fixed the bug where loading 2.10 quests wouldn't properly read their 'Rope 2 Doesn't Flash' and 'Ghini Doesn't Flash/Flicker' quest rules.
* ZQuest: Added a message to the Assign Compiled Script dialog indicating that script slots are automatically updated with the recently compiled scripts.
* Fixed the bug where LW_FIRE lweapons created by a script disappeared about 14 frames earlier than what they ought.
* Fixed the bug where boomerangs would be blocked by screen items if the 'New Boomerang/Hookshot' rule was set but the 'Boomerang/Hookshot Grabs All Items' rule was not set.
* Now, penetrating sword beams and arrows cannot penetrate Aquamentus, Manhandla or Gohma enemies. ( _L_, 2010-08-01 22:49:33 )

* Fixed a bug to do with out of bounds user array elements in ZScript, and improved error tracing when trying to use invalid array pointers
* Added functions for accessing some strings from ZQuest, namely item and npc names, message strings and dmap names, titles and intro strings
* Added a bunch of variables for accessing DMap information to the 'Game' pointer
* Added itemdata->Power
* Added '%x' and '%X' to sprintf, plus a couple of new functions to std.zh
* Started some much better tracing for passing invalid object pointers ( Joe123, 2010-08-01 12:29:14 )



Build 1283 - windows
* New build to address the 'copy file' fix
* Added 'SizeOfArray' and 'Game->GetSaveName' to ZScript
* Added 'ComboFI', some direction handling functions, functions for placing weapons in front of Link and NPCs and 'CreateTimeoutItem' to std.zh ( Joe123, 2010-07-23 15:51:12 )

* Fixed the bug where instantly collecting items with a Boomerang, Hookshot or Arrow wouldn't trigger the Screen State or perform other necessary checks.
* Seemingly fixed the copy file-related startup crash.
* Combo Editor: replaced 'Move' with the somewhat more useful 'Swap' in the right-click menu.
* Added an incomplete version of a new ZQuest.txt revised and rewritten for v2.50. Yes! A new ZQuest.txt! ( _L_, 2010-07-20 09:05:36 )



Build 1281 - windows
* Fixed a slight oversight about changing number of arrays and re-saving your .qst files, updating to this build if you were using the previous one would be a good idea.
* Forgot to point out that the ASM code for array allocation has changed slightly, so any scripts written in previous builds will have to be put back through the parser to work correctly now, apologies.
* Added some script-specific combotypes.
* Seeing as std.zh is getting quite large now, I wrote up an 'std.txt' to go with it - should save some time wasted in trawling through such a big file. ( Joe123, 2010-07-08 14:53:33 )



Build 1280 - windows
* Myself and Gleeok have revamped ZScript's arrays to use random-access memory rather than the current procedural access, which was very slow for large arrays.
* Changed the order of de-allocation of array memory to more closely resemble the 'stack'.
* I'm afraid that this invalidates any save files from previous builds as globals are now saved differently.
* However! Arrays should now be much faster to access and they can be arbitrarily large.
* There are 4095 local arrays to play with, and you can now store as many global arrays as you like with your save file.
* Pointers now work differently (again), and can no longer be offset to access elements further up an array - you must use the array dereference operator from the start of the array.
* string.zh hasn't yet been updated fully to accommodate for this change, apologies.
* Removed 'PointerOffset' and 'Declare' from ZScript.
* Added 'NoAction' and 'WaitNoAction' to std.zh.
* Added 'Round' to std.zh, courtesy of Wolfman2000.
* New build! If you notice any problems with the new arrays, please report them ASAP. ( Joe123, 2010-07-07 12:22:21 )

* Custom Counters! Just what everyone's always wanted, right? 10 of them for use with scripts. ( Joe123, 2010-06-30 13:35:03 )



Build 1274 - macosx-Leopard
* Re-tweaked the walkable water combo hit detection.
* Fixed the Stomp Boots causing Link to get hit while stomping.
* Fourth Quest: fixed the death sounds for Dodongos and Digdoggers. Also slightly decreased Ganon's HP.
* Fixed the running-out sounds for Nayru's Love shields created by removed Nayru's Love items.
* Fixed the bug where an item's Pickup script couldn't call Screen->Message(). ( _L_, 2010-06-30 00:43:04 )

* Added Screen->SetTileWarp to ZScript, which functions similarly to Screen->SetSideWarp.
* Added Game->GetScreenFlags and Game->GetScreenEFlags, which allow access to flags on screens other than the one Link is currently on. ( Joe123, 2010-06-28 11:46:13 )

* Added 'Game->ComboTile', which returns the tile used by a combo
* Added some functions to std.zh for drawing sprites to layers, checking whether Link is using a certain item and checking how many Triforce pieces Link has ( Joe123, 2010-06-28 02:41:02 )



Build 1271 - linux
* The undercombo dialog will now default to the active combo if one hasn't already been set.
* Fixed a problem displaying info types. ( Saffith, 2010-06-26 22:28:55 )



Build 1270 - macosx-Leopard
* Enemy Editor: fixed the Dodongo misc. value dropdown menu. It referred to Misc. Attribute 1 instead of Misc. Attribute 10.
* New Default: fixed the Fire Gleeok weapon damage, the Sword 4 weapon sprite, and the BS Dodongo's death sound effect. ( _L_, 2010-06-23 03:47:21 )



Build 1269 - windows
* Fixed the recurring DMap intro message bug.
* Fixed the bug where using the Link Equipment cheat would incorrectly reset the Super Bomb Ratio.
* Fixed the bug where the Din's Fire and Nayru's Love items wouldn't work right if they had the 'Remove Item When Used' flag.
* Hopefully fixed the bug where flying enemies could intrude on No Flying Enemies/No Enemies combo flags or combos.
* Now, Stomp Boots can have a magic cost and item script attached, and the 'Remove Item When Used' flag works.
* ZQuest: fixed the bug whereby you could edit the '(None)' enemy from the Select Enemy dialog. ( _L_, 2010-06-23 02:59:15 )

* Fixed the bug where Permanent Jinx enemy touch effects weren't working.
* Made the string appearing/disappearing code less crumbly, fixing a bug or two involving empty strings and the Messages Freeze All Action quest rule. ( _L_, 2010-06-16 05:37:32 )



Build 1267 - macosx-Leopard
* Fixed the Combos Carry Over crash.
* Link should no longer be frozen when a timed warp activates while a DMap intro message is printing.
* NES Movement: Fixed the bug where Link wouldn't spin correctly if he pushed against a solid combo while hurricane spinning.
* NES Movement: Fixed the bug where Link could move while slashing if he'd just finished tapping his sword. ( _L_, 2010-06-06 03:37:00 )



Build 1266 - windows
* Very minor optimizations to ZScript. ( Gleeok, 2010-05-31 23:37:02 )

* Fixed the bug where the EX buttons in the Key Buttons dialog couldn't be clicked.
* Fixed a bug where strings longer than 72 characters wouldn't work with the 'Messages Freeze All Action' quest rule.
* ZQuest: Fixed the 'Automatic Save Screen' screen info message.
* String Editor: Fixed the bug where clicking 'Duplicate' then 'Cancel' would mess up the '<New String>' option. ( _L_, 2010-05-29 23:25:30 )

* Fixed a bug where layered damage combos (and who knows what else) from previous screens were recurring invisibly in subsequent screens.
* Seemingly fixed a bug where null enemies were being instantiated and not being put in the guy list... presumably causing a memory leak.
* Now, shallow water ripple and tall grass decorations aren't drawn when Link vanishes with Farore's Wind (or Link->Invisible is set). ( _L_, 2010-05-23 00:35:55 )



Build 1262 - linux
* Fixed a couple of issues with reflected weapons. ( Saffith, 2010-05-18 17:40:03 )



Build 1261 - macosx-Leopard
* Fourth Quest: fixed the Abei 2 guys, the Dodongo CSet and the exits to Level 5.
* Fixed the bug where old quests had incorrect Dodongo or Digdogger Hit Sounds and Death Sounds.
* Fixed a crash involving temporary filenames... I think. ( _L_, 2010-05-17 09:49:57 )

* Corrected super bombs' flag triggering region.
* Flying Peahats are no longer immune to things that kill all enemies.
* Link can once again use the ladder to walk over half a tile of water when he has the flippers. ( Saffith, 2010-05-17 09:39:34 )

* Fixed enemies in old quests. That doesn't necessarily mean they all behave corectly, but they should all act the same in both old and new quests now. ( Saffith, 2010-05-15 13:17:17 )



Build 1257 - linux
* And here it is for Linux. ( Saffith, 2010-05-13 06:19:35 )



Build 1256 - windows
* New Windows build. *IMPORTANT* PLEASE REMEMBER TO BACK UP YOUR DATA!
* Portions of the code for the way screens/maps in ZC and ZQuest have been modified/fixed/re-writ to fix many underlying stability and memory issues for the next release. As a result of this any previous bugs dealing in that regard are presumably fixed. For anyone beta testing this build the above changes are number one priority if something doesn't work right.
* Temporarily disabled the timed autosave function in ZQuest for the benefit of ...well, for the benefit of your own good. =P (Just a safety precaution is all.)
* ..Sorry for all the grim warnings; ZC is now presumed to be stable after all these builds, we don't want anyone to lose any work due to a slight oversight, is all. -Also be sure to test out the 4th quest. :-D ( Gleeok, 2010-05-13 01:31:54 )

* ZQuest: May have fixed a preview or misalign error in large mode. ( Gleeok, 2010-05-11 13:16:49 )

* Fixed trap movement in old quests. ( Saffith, 2010-05-10 19:45:42 )

* Added the Fourth Quest. The quest-making contest resulted in a tie of sorts between Questwizard and HeroOfFire, and both of their quests had some great parts and some not-great parts. So, I got approval to make a quest file containing only the great parts from both quests. Fourth Quest consists of HeroOfFire's overworld and Questwizard's dungeons. (Due to luck, very little of either quest had to be adjusted to make them fit together.)
* It was, of course, not a requirement that the Fourth Quest submissions be harder than Third Quest (a task which is itself a bit hard to imagine). But, given the oddness of sending the player to the easier Fourth after finishing Third, I decided to make things a bit more interesting than that. So, if you finish Second Quest with all 16 heart containers found, you get sent to the more exploration-based Fourth Quest. Otherwise, you get sent to the combat-based Third Quest. (Yes, I've tested this.)
* There is, of course, a password to skip to Fourth Quest directly. It is 'GANON'.
* Also, creating a Fourth Quest save file will turn the select menu's colours to redder hues, as an easter egg.
* Replaced 1st.qst, 2nd.qst and 3rd.qst with their proposed versions.
* Added a level 4 cheat, 'Kill All Enemies', which just does the same thing that the Kill All Enemies item does.
* Fixed the bug where 2.10 quests' Armos enemies had their type set to '(None)'.
* New Default: changed the walkability of those half-sized Pound combos.
* Large Mode: enlarged the 'Requires Authentication' dialog. ( _L_, 2010-05-08 10:12:38 )

* Fixed a memory leak shared from the maps code in zc and zquest. How bad it is depends on how many maps your quest has and how many times you reopen or reload it in zquest in a single instance. This should be pretty much the last of them in zc, so that's the good news. ( Gleeok, 2010-05-07 10:09:08 )

* Minor fixes to the way some memory is handled in zc. ( Gleeok, 2010-05-03 16:50:05 )

* Fixed some rather nasty memory leaks when loading quests in the player. ( Gleeok, 2010-05-03 03:37:55 )

* Fixed a bug that prevented several enemy animation types from correctly drawing extended enemy sprites larger than 1x1.
* Fixed the bug where ZC's Sound Settings dialog wouldn't save changes.
* New Default: now, 'import "std.zh"' is included in new quests' ZScript buffers. ( _L_, 2010-04-30 09:40:10 )

* Sayonara to the critical bug where dialogs could get corrupted in the player...Especially the Joystick configuration menu for some reason. ( Gleeok, 2010-04-28 03:13:38 )



Build 1233 - linux
* Sorry, screwed up 1231. This one's good. ( Saffith, 2010-04-25 13:55:17 )



Build 1232 - windows
* Third time lucky; I definitely actually added string.zh and string.txt ( Joe123, 2010-04-25 10:28:12 )



Build 1231 - linux
* Added an integrity check in hopes of tracking down a data corruption bug. ( Saffith, 2010-04-25 07:36:40 )



Build 1229 - macosx-Leopard
* Fixed the bug where the Hover Boots' Hover Duration didn't work quite right in top-down view.
* Fixed the Death SFX for Walking Enemies that Split On Death.
* String Editor: Added a Help button which, when clicked, describes all of the Control Codes and their arguments as documented in the wiki. A somewhat blunt solution, but nonetheless a usable one. ( _L_, 2010-04-20 08:35:53 )



Build 1228 - windows
* Sorry to put out a new build so soon, but string.zh should now be finished.
* Fixed a small problem with PointerOffset, restricted TraceS to 512 characters as very large traces were causing issues, removed the '
' from the end of TraceS (you can add one in the string with printf) and removed some garbage traces that were occurring when script memory was allocated.
* string.zh brings you most of the string manipulating functions from cstring.h, plus sprintf and printf and some new ones which should help bring a lot more functionality to our ZScript strings. ( Joe123, 2010-04-20 02:25:50 )



Build 1226 - linux , windows
* Seemingly fixed the issue with the palette getting corrupted in fullscreen under Windows.
* About time for a new Linux build, too. ( Saffith, 2010-04-17 12:11:32 )

* The default Win32 gfx mode settings when running zc for the first time is now 640x480 for the benefit of modern video hardware. ( Gleeok, 2010-04-16 01:23:42 )

* DrawString should now sort correctly on layers in somewhere around log(n) time. ( Gleeok, 2010-04-15 14:33:15 )

* Added PointerOffset to zscript.txt
* ...Which should allow string.zh to be added soon; check on the forums to see a beta version ( Joe123, 2010-04-15 04:39:53 )

* Due to the upgrade of arrays I've swapped the last two arguments of DrawString to match the API of the other string functions. Due to a loophole in the previous system, the pointer to array had to be input last, but no more! My apologies if this affects your scripts. ( Gleeok, 2010-04-15 03:09:32 )

* Fixed the bug where enemies with the 'Invincible' flag set could be killed by the ring leader enemy dying or the kill all enemies item
* Fixed the bug where draw primitives from the previous screen would appear for a frame after warping via a zap warp
* Added some more string-related functions to std.zh ( Joe123, 2010-04-12 03:37:43 )

* Added more math functions to std.zh. These are: CrossProduct(); DotProduct(); SmoothStep(); DistanceSquared(); and MidPoint(); . ( Gleeok, 2010-04-11 22:18:18 )



Build 1213 - windows
* Changed the way DrawString reads its string argument; it now accepts the array pointer rather than the first element of the string
* Added TraceS, which traces a string to std.zh
* Added some functions to std.zh for dealing with strings and ascii characters
* New windows build. Hopefully it won't cause any issues; we've had a lot of compiler-specific bugs recently... ( Joe123, 2010-04-11 14:01:04 )



Build 1211 - macosx-Leopard
* Large Mode: enlarged the Tile Grabber. With this, I do believe that the ZQuest large interface is complete. If you can find any remaining dialogs that haven't been updated, do tell.
* Added a 'Load Quest' menu option to Zelda Classic, which new users can use to load custom quests in addition to the unusual method we currently use. It is only available when a registered but unoccupied save file is selected.
* ZScript: Fixed a bug where creating a '(None)'-type enemy with a script would crash ZC. ( _L_, 2010-04-09 08:20:35 )

* Combos Carry Over now carries combos on layers to the next screen
* Fixed a bug with the layer 7 draw-primitives involving insta-warp with blackout ( Joe123, 2010-04-07 12:18:59 )

* Fixed an inconsistency with 2.10 where having solid combos on layers 1 and/or 2 above 'Hookshot Only' combotypes would stop the hookshot from being able to pass through
* Made it a bit clearer in the Init Data how initial amounts of magic should be set
* Now if the quest rule 'Subscreen Appears Above Sprites' is set, draw primitives can access layer 7 which is above the subscreen ( Joe123, 2010-04-07 10:23:22 )

* Fixed a problem where warps with combos carried over copying garbage instead, as well as a related crash.
* Fixed crashes in the MIDI info dialog. ( Saffith, 2010-04-06 12:14:30 )

* ZScript: Fixed a bug where moving a Like Like that was eating Link wouldn't also move Link.
* Enemy Editor: renamed 'Bomb' and 'S.Bomb' to 'Bomb Blast' and 'S.Bomb Blast'. As you know, previously these functioned identically to 'Lit Bomb' and 'Lit S.Bomb'. Now, non-Bombchu enemies with these weapons will have their data updated to use the 'Lit' weapon, and using 'Blast' weapons from now on will do nothing unless the enemy is a Bombchu (Rope Walk Style + Explode Death Type).
* Enemy Editor: added misc. value labels for Traps. Note: combining '4-Way' and 'Constant' will just make the Trap randomly choose vertical or horizontal when it's spawned.
* Mac OS X: Fixed the bug where the ZQuest default path wasn't outside the application bundle. ( _L_, 2010-04-04 04:13:48 )

* Fixed the bug where a Like Like eating Link while he was exiting water would freeze Link.
* ZScript: Fixed a bug where calling Screen->ClearSprites() while Link was using the hookshot would freeze Link.
* Enemy Editor: Added two more misc. attribute labels for the Projectile Shooter.
* Now, items with a tile of 0 will be invisible. ( _L_, 2010-03-29 08:57:24 )

* Fixed the bug where Wizzrobes could be knocked back.
* Increased the Super Bomb's combo flag-triggering hitbox back to 2.10 size.
* Large Mode: fixed most all of the Subscreen Editor's options dialogs. They should all look fine now. ( _L_, 2010-03-24 03:12:06 )



Build 1204 - windows
* Fixed the bug where Sensitive Warp combos didn't function as FFCs.
* Now, the 'Combos Carry Over' warp checkbox works for Entrance/Exit warps.
* Subscreen Editor: Fixed the bug where clicking to select elements wouldn't work. ( _L_, 2010-03-21 03:50:42 )

* Fixed the bug where Vire-type and Pols Voice-type Walking Enemies could spawn on solid combos.
* Fixed the bug where Gohmas could use the 'Breath' and 'One Shot' firing types at the same time.
* New Default: Restored the Gohma 4's default weapon to 'Flame'.
* Fixed the bug where the Tile Editor's right-click menu would sometimes be shorter than what it ought depending on the recent use of the Combo Editor.
* Now, Lock Block combos are suppressed if they are used as part of a Locked Door, to ensure that the door's trigger takes precedence over the Lock Block. The same applies to Boss Lock Blocks and Boss Doors.
* Now, most all door-unlocking events are correctly logged to Allegro.log. ( _L_, 2010-03-20 00:45:13 )



Build 1202 - linux
* Fixed a set of crashes that could occur when changing the map count, placing flags on layers, and possibly other times. ( Saffith, 2010-03-17 08:07:22 )



Build 1201 - macosx-Leopard
* Fixed the bug where the default Link boomerang sound would prematurely cease when Link killed a Walking Enemy.
* Fixed a momentary bug where flying enemies could fly downward onto 'No Enemies' combos.
* Sideview: Now, both diagonal and NES movement (formerly just the latter) permit Link to use the Stepladder to ascend upward, which is, as you know, useful insofar as it synergises with the Hover Boots or extends the vertical reach of the Roc's Feather. ( _L_, 2010-03-15 09:43:22 )



Build 1200 - windows
* Fixed a divide-by-zero crash concerning an enemy with a Summon shot type but set to summon 0 enemies.
* Fixed the death sound of Walking Enemies with Rope movement and a projectile weapon.
* Fixed the use of Death Attr. 1 and Death Attr. 2 by Walking Enemies with the 8 Shots death type. ( _L_, 2010-03-14 00:59:47 )

* Now, Link can attack while inside a Like Like regardless of the 'Can Use Items/Weapons on Edge of Screen' quest rule.
* Fixed the bug where Patra outer eyes used the wrong hit and death sound effects. ( _L_, 2010-03-13 06:43:08 )

* Improved the enemy Sideview behaviour a bit more with regards to half-walkable combo platforms.
* Fixed the bug where some Hookshot chain links were left behind if Link's direction was changed by a script while using the Hookshot.
* Enemy Editor: now, misc. values which are bounded by a dropdown list are bounded by the droplist's range as soon as you change the enemy to that particular family.
* Spin Tile enemies can no longer fall. ( _L_, 2010-03-12 06:37:52 )

* Large Mode: enlarged the Subscreen Editor, the Palette Grabber, the Tile Leech dialog, and the Open and Save dialogs.
* Fixed the position of the OK button in the CSet Editor.
* ZQuest: Removed the 'Save as 2.10' option. ( _L_, 2010-03-07 03:31:06 )

* Fixed some more memory issues.
* One last fix (hopefully) to that level 1 bug in proposed1st.qst.
* Also fixed a couple of incorrect tiles in the proposed quests' overworlds. ( Saffith, 2010-03-06 14:50:52 )

* Changed some implicit casts with Jump variables
* All weapons obey their Jump variables on top-down screens
* Documented item->Jump which was missing from ZScript.txt ( Joe123, 2010-03-06 13:44:44 )



Build 1194 - windows
* Fixed many issues with the gui and reverted some changes I made around build 1170. This fixes a whole slew of things. -END_OF_MAIN is now correct.
* Fixed the palette grab crash bug. (Finally) -Removed some debug logging info related to that. ( Gleeok, 2010-03-05 19:02:51 )

* Fixed the bug where the quarter hearts tiles on the File Select screen were often incorrect.
* ZScript: now, Game->GetScreenState() and Game->SetScreenState() now correctly count maps from 1 upward (as indicated in zscript.txt) rather than 0 upward.
* Improved the logging of screen state changes - distant screen state changes are differentiated from current screen changes, and correctly report the Door states' changes.
* Now, items without a 'Once Per Screen' flag set won't suppress similar-classed items with a 'Once Per Screen' flag set if both were used in succession in one screen. ( _L_, 2010-03-05 09:08:23 )



Build 1191 - linux


Build 1190 - windows
* Let me try this again. ( Gleeok, 2010-02-28 16:42:59 )

* Hopefully fixed some underlying problems from the last few Windows releases which manifested mainly in ZQuest/ZQuest GUI and might have led to possible corruption, crashes, petty shenanigans, or nothing at all. Please remember to backup your quest files!
* - THESE CHANGES APPLY TO BUILD 1188! - ..Sorry, I kind of messed up the previous message. ( Gleeok, 2010-02-27 17:28:52 )



Build 1188 - windows
* Fixed the bug where the cancel button in the tile goto page dialog didn't work right. ( Gleeok, 2010-02-27 16:24:20 )

* Fixed some implicit casts from double to long which were causing problems with some of the trig functions and logarithms in ZScript.
* Documented ArcSin and ArcCos, which I added some time ago but were affected by the casting issue.
* Link->Equipment can no longer be set - I overlooked some (quite large) issues when adding this functionality. My sincerest apologies to those who were using this in their scripts.
* Made a slight change to how array 'pointers' are stored internally which should now make it valid to pass them as arguments to functions. ( Joe123, 2010-02-27 09:37:49 )

* Finally fixed the bug where the control codes 13, 14 and 15 weren't working quite right.
* Enemy Editor: fixed the bug where changing an enemy's family in the editor would cause the wrong set of misc. labels to be used until the dialog was closed.
* Enemy Editor: Added misc. attribute labels for Wizzrobes, Dodongos, Keese Tribbles and Keese.
* ZQuest: changed the names of several fonts to more accurately describe them. For instance, 'lfont' is now 'GUI Font Bold'. ( _L_, 2010-02-26 22:47:07 )

* Fixed the bug where hitting grave combos in quests where there are no grave enemies defined period will crash the game.
* Fixed the bug where placing a secret flag on top of a sword trigger flag prevents the secret from ever triggering when hit. ( jman2050, 2010-02-23 08:59:39 )



Build 1182 - windows
* For great Justice, someone set up us the Windows build!
* Link should no longer be able to spawn touch enemies without touching them.
* Fixed the bug where viewing flags on layers were totally wrong. ( Gleeok, 2010-02-23 06:16:42 )

* New Default: Swapped around the pickup sounds for the 'Triforce (Fragment)' and 'Triforce (Whole)' items, which were somehow incorrect.
* New Default: Added back a tile used by the ending cutscene when the 'BS-Zelda Animation' rule is set.
* New Default: Updated the tiles for the Magic Pols Voice.
* Zelda Classic will now use zelda.nsf for the title screen and the ending music. Also, Triforce Pieces with the Cutscene MIDI value set to 0 will use zelda.nsf. But if that file is missing, ZC will fall back on the MIDIs.
* Proposed1st, proposed2nd and proposed3rd now use zelda.nsf for their DMap music.
* Now, ZC will attempt to load extended music files from the directory the quest file is in as well as the assigned Quest Directory. This should remedy some confusion!
* Mac OS X: The default path for loading custom quests is now outside the
* Tile Editor: Now, you'll no longer get Destination Warnings for unimplemented enemies. ( _L_, 2010-02-22 18:59:46 )

* Increased Heart Containers' maxmimum from 16 hearts to 24 in old quests and default data.
* Hopefully fixed crashes related to MP3s and Oggs. ( Saffith, 2010-02-21 22:59:11 )

* Fixed the bug where Link would be frozen in mid-spin if he started falling in sideview while hurricane-spinning.
* ZQuest: Fixed that bug where the cursor disappears in Combo Alias mode. Score!
* Added several Combo Aliases to the New Default tileset.
* The Combo Selector's tooltip now shows the inherent flag of a combo if it has one. ( _L_, 2010-02-21 04:41:02 )



Build 1177 - linux
* Fixed some memory issues that may have been causing problems. I know at least one crash on Linux is fixed. ( Saffith, 2010-02-19 14:39:26 )

* Scripts can read enemies' misc. attributes 11 and 12 now.
* Link should no longer drop his sword if hit when charging or spinning.
* Finally fixed the problem of the cursor going off the right side of text fields in large mode. ( Saffith, 2010-02-18 10:12:02 )



Build 1174 - linux
* High time we had a new Linux build.
* Fixed grave-spawned Ghinis in old quests.
* Link again holds up items correctly in the water.
* BS Patras no longer crash the game. ( Saffith, 2010-02-15 08:17:28 )

* Fixed the bug where Breath weapon-using Walking Enemies had a tendency to fire southwest more often than not.
* Fixed the bug where shop items could be stolen with the Hookshot.
* Made it so that shops won't crash if a script destroys the 'rupee sign' item or shop items.
* Fixed the fix to the bug where it was possible to pick up multiple items from 'Take One Item' and 'Red Potion or Heart Container' room types if the 'Items Disappear During Holdup' rule was unchecked.
* Fixed the bug where Dive Warp and Swim Warp combos weren't working.
* Fixed the bug where Link wouldn't hold up an item collected with an upward-facing hookshot. ( _L_, 2010-02-14 05:52:06 )

* Fixed the this->misc[] bug leftover from last build. ( Gleeok, 2010-02-13 20:22:53 )

* std.zh: ComboAt() has been broken for a while. It's fixed now.
* Enemies' Misc. Attributes 11 and 12 should stay set correctly and save now. ( Saffith, 2010-02-13 19:34:07 )



Build 1170 - windows
* Obligatory Warning Message: Change to allegro42.dll. For this reason executables from this build (or higher) will not work with older allegro DLLs. So don't try to copy them around to different folders without including the proper DLL. ..Assuming I've done this right and haven't forgotten anything that is..(*crosses fingers and sacrafices a virgin to Microsoft. "Oh great one, show us the way.")
* Added even more annoying allegro.log traces to help track down a palette grab crash bug.
* Hopefully fixed all the scripting misc[] arrays so they wouldn't truncate to int. ( Gleeok, 2010-02-13 01:40:10 )

* Set chuck_norris=true thus effectively fixing the following bugs with deadly roundhouse kicks. :^D
* ZC: Issue where some non-guys would use SFX 15 when hit
* ZQuest: Ordering of custom item classes is now ordered properly.
* ZC: Odd disappearing Link intro message bug probably fixed.
* Bug where warping DMaps using different subscreens would delay fixing your A - B selected items until you warped again or changed screens. It's fixed.
* Creating relational and dungeon template tiles in ZQuest now makes the visible. ( Which helps alot :P )
* -Also fixed the bug where you couldn't save after creating all those dungeon template tiles.
* ZScript: Finally got around to finishing Screen->DrawString which, using ancient voodoo magic -woooo, can take all or part of a zscript string array as an argument! :O -Then render it using any one of the internal zc fonts and format it in a few different ways. And so, the drawing commands are considered complete for 2.5. Sorry this took so long.
* zscript.txt and std.zh have been updated accordingly. ( Gleeok, 2010-02-12 04:36:04 )

* Enemy Editor: added 2 more misc. attributes for enemies. These are intended for exclusive use by ZScripts using npc->Attributes[].
* Also, unused misc. attributes are now labeled 'Misc Attr. 2' and such, rather than '<Unused>'.
* Fixed the bug where Pols Voices could have damage knockback. (I checked, and apparantly they shouldn't.) ( _L_, 2010-02-11 09:48:48 )

* Fixed cursor and checkmark position in the CSet editor.
* Fixed (correctly, I think...) the issue where the colors used for transparency would sometimes suddenly change to less accurate ones. ( Saffith, 2010-02-10 11:18:51 )



Build 1164 - windows
* New Windows build! -Tweaked slightly some minor compiler settings. If there is any difference in frame rate from the previous build let me know.
* Romview: Completely disabled the -scale commands as they were completely broken and would do bad things. Very bad things indeed. ( Gleeok, 2010-02-07 21:53:01 )

* Fixed the Patra and BSPatra crash when odds were zero.
* Fixed possibly the Moldorm custom death SXF inselectablllity.. uhh thingy.
* Fixed the Autosave Combos, which should actually work now.
* Fixed the bug where Aquamentus fireballs did not obey the new SFX rule.
* Fixed the bug where picking up items, or some other cases where ZC checks subscreen items, would screw up your selected A - B equipped items. ( Gleeok, 2010-02-07 20:56:11 )

* Small fix to the previous Fire Gleeok neck fix.
* Fixed Dodongo CSet in some old quests. ( Saffith, 2010-02-07 09:45:08 )



Build 1161 - macosx-Leopard
* Large Mode: enlarged the Edit CSet dialog, the Palette Editor dialog, the New Subscreen dialog, and hopefully all of the options dialogs in the Subscreen Editor.
* Fixed the bug where selecting multiple tiles in the Tile Editor and changing them to 8-bit would often alter the wrong tiles.
* Large Mode: Changed the names of the commands 'Main', 'Levels' and 'Sprite Colors' to 'Palettes - Main', 'Palettes - Levels' and 'Palettes - Sprites'. ( _L_, 2010-02-07 02:02:23 )

* Fixed the Dodongo and Digpuppies SFX bugs. ( Gleeok, 2010-02-05 22:19:35 )

* Fixed a bug with the menu in ZC and also tweaked it a little.
* Put some functions into std.zh: SetScreenDBit() and GetScreenDBit(), as well as some others courtesy of Joe123. ( Gleeok, 2010-02-05 21:38:23 )



Build 1158 - linux
* Fixed Fire Gleeoks' necks in default data and old quests.
* Also fixed their failure to breathe fire in old quests.
* Default SFX names are now set correctly for old quests. ( Saffith, 2010-02-04 14:09:44 )

* Fixed the bug where Lanmolas with more than 253 segments would cause a crash.
* Also, now Lanmola, Gleeok, Patra and Moldorm segment counts are internally capped at 254 (which, plus the central enemy, makes 255, the maximum amount of permitted enemies). If there are already too many enemies onscreen at the time, then the boss is simply not created.
* Fixed the bug where the 'Armos (NES)' animation type wasn't working right for hastened Armoses.
* Changed the 2009 copyright to 2010. http://bit.ly/b91UFI ( _L_, 2010-02-03 22:32:01 )

* Fixed a crash in the DMap editor.
* Fixed a possible minor issue with fairies.
* Changed the level 1 locked door glitch in proposed1st.qst a bit. Should be just right now. ( Saffith, 2010-02-02 15:18:32 )

* Fixed a few potentially fatal bugs that might occur trying to copy, paste, or undo across multiple loaded quest files. This is no longer possible. That's what the export map function is for!
* For future compatibility with 2.6, Quad3D and Triagle3D are now simply Quad and Triangle. ( Gleeok, 2010-02-01 15:28:44 )



Build 1154 - windows
* Part 2 :P
* [ZCL] The source code has been updated for Lazarus 0.9.28.2. I was still using 0.9.22 so it needed updated so that means I'm also using the new fpc compiler. ( Sean, 2010-02-01 04:58:47 )

* [ZCL] Corrected some issues pertaining to the window scale modes. The were not showing up like it was supposed to.
* [ZCL] Images on the right side of the color scheme chooser was not supposed to be there. Now gone. A whoops on my part.
* [ZCL] Stripped out old code that wasn't being used there. It was just there for backup purposes. ( Sean, 2010-02-01 04:54:14 )



Build 1152 - linux
* The linux builds need more loving :P A new build for linux ;) ( Sean, 2010-02-01 03:41:51 )



Build 1151 - windows
* Added extra debugging code to the exit routines of zquest and zc.
* "-triplebuffer" option is now also available via command line. ( Gleeok, 2010-01-31 23:48:17 )

* Screen->Message() now respects the default text speed.
* Fixed boomerang movement after picking up an item LttP-style. ( Saffith, 2010-01-31 13:26:16 )

* Fixed a bug where script arrays would not be allocated properly. ( pkmnfrk, 2010-01-28 16:58:48 )

* Changed the way Link->InputMouseX/Y work: Now, the origin of the mouse is the top-left corner of the playing field, rather than the top-left corner of the window. The subscreen exists at negative Y values.
* Twiddled with the start-up code a bit to try and reduce the chance that the programs will crash BEFORE printing out a useful message. Would be best to eliminate crashes altogether, but let's take it one step at a time ;) ( pkmnfrk, 2010-01-28 15:44:41 )



Build 1145 - macosx-Leopard
* Large Mode: enlarged the DMap Editor.
* Integrated the Armos into the 'Walking Enemy' family. They use the 'Armos' Walk Style and their Misc. Attribute 10 determines the alternative step speed they can use.
* Enemy Editor: Added an option to select the spawn animation for Walking Enemies. Its options are 'Poof' (used by most enemies), 'Flicker' (used by Armos and phantom Ghinis) and 'Instant' (the enemy instantly appears). These are used in all cases except when enemies Enter From Sides.
* Now, all non-phantom Ghinis are Walking Enemies, and all enemies in the Ghini family are phantoms. You might seem unsure of this, but rest assured that this is correct.
* Enemy Editor: Removed the unused enemy families from the list, as well as the Fairy and Guy types. Also, other options unusable with the current enemy family are disabled.
* Rule Sets: removed 'Invincible Link Flickers' from the 'Zelda 3-esque' ruleset. ( _L_, 2010-01-28 07:18:22 )

* ZQuest: Possibly fixed a few issues where there might have been a hang or crash on exiting zquest. (Hopefully) there are no side effects from this and zquest is getting more and more stable.
* Optimization: Fixed an issue where the drawing commands were doing extra allocations. The net result is that anyone using a lot of drawing functions should see a noticable performance increase from this. ( Gleeok, 2010-01-28 06:37:18 )

* Fix the bug where disabling the Hover Boots, wouldn't. Also potentially fixes other potential cases where disabling items doesn't work to it's full... potential. ( pkmnfrk, 2010-01-27 18:15:57 )

* Finally fixed the bug where you could not have a negative constant in ZScript. (Gleeok was right, this was more difficult than it sounds)
* Added support for "empty" declared arrays. That is, the following construct:<br><pre>int myarray[] = {1, 2, 3}</pre><br>The result is an array that is three elements long. Good news: Less maintenance to update arrays. Bad news: No sizeof() operator... yet.
* Also, you can do the same thing with strings:<br><pre>int mystring[] = "ZScript is fun!"</pre>
* Do note that strings declared in this manner will get an extra 0-filled element at the end (to terminate the string). Regular arrays will not, however. ( pkmnfrk, 2010-01-27 17:25:05 )

* Fixed the bug where you may not of been able to have multiple instances running.
* Now in the config file you can set another variable 'triplebuffer', which will always try to run zc using video memory when set, which may or may not be what you want to do. This is set to disabled in windowed mode by default. If you are wondering, the doublebuffer setting located right above it takes precedence so there's no point in changing both. ( Gleeok, 2010-01-26 05:06:07 )

* Fix the bug where eweapon->Step and lweapon->Step were returning totally bogus values.
* Fix the bug where allegro.log would sometimes get padded with tons of nulls. While we're at it, perhaps we should have separate logs for Zelda Classic and ZQuest?
* Finally, I (presumably) figured out how to have more than one item show up in the change log. ( pkmnfrk, 2010-01-25 18:05:30 )

* I've tied up some loose ends with regards to the enemy Defenses update. Now, Aquamentuses, Manhandlas, Gleeoks, Gohmas and Patras can use Defense values too. A note about Patras: the central core eye uses the same Defenses as the orbiting eyes, but any weapon that would do damage is ignored unless all orbiting eyes are slain. A note about Gohmas: after Defenses are checked, any weapon that would do damage is blocked if it isn't fired vertically at the Gohma's open eye.
* Enemy Editor: added labels for Aquamentus, Manhandla and Gohma misc. attributes.
* Enemy Editor: in addition to a background sound, you can now edit the enemy's Hit Sound and Death Sound, which are played when the enemy is hit and slain, respectively.
* Also, Defense dropdown menus are disabled for enemies that don't use Defenses, and the respective Anim. Type dropdown menu is now disabled depending on the setting of the 'New Enemy Tiles' quest rule.
* Fixed the bug where the Gohma 4's default weapon was Fireball instead of Flame.
* Fixed the bug where the hookshot could sometimes shoot through Hookshot Grab combos on layers 1 or 2.
* std.zh: Sanitised ComboAt() so that it restricts X and Y to the visible screen. ( _L_, 2010-01-25 08:54:37 )

* Added "Doesn't count as beatable enemy" to the Boulder enemy ( pkmnfrk, 2010-01-24 22:49:12 )

* Stripped all default wizzrobes of their "Not counted as beatable enemy" status, and gave it to all traps! ( pkmnfrk, 2010-01-24 21:44:05 )

* Fixed the bug where the Ring's magic cost was being charged twice, thus doubling its magic usage.
* Fixed the bug where FFCs in screens 0x80 and 0x81 with the 'Run Script On Screen Init' wouldn't have their scripts run before the screen was drawn.
* New Default: Fixed the Bait's default Duration value.
* Changed the Dodongo's CSets in the proposed quest files from 8 to Extra Sprite Palette 2.
* Fixed the bug where Link could be moved out of a Like Like or other enemy that had swallowed him.
* Hopefully fixed the bug where grabbing a screen item with a vertical hookshot while the Hold Up Item Screen Flag set wouldn't let Link hold up the item.
* Fixed the bug where a Walking Enemy with Vire-type movement that ate Link in mid-jump couldn't be attacked by Link. ( _L_, 2010-01-23 06:23:57 )

* std.zh: Added Lerp(), TurnTowards(). Working with angles should be a little easier now.
* Also added some functions by Joe123: SwapTileRow(), SwapTileBlock(). CopyTileRow(), CopyTileBlock(). ClearTileRow(), and ClearTileBlock(). ( Gleeok, 2010-01-22 19:43:03 )

* Fixed a bug where Walking Enemies with a Misc. 10 value greater than 0 wouldn't use their Defenses or Misc. Attributes correctly.
* Fixed the bug where using the sword, then pressing the button for an Item Override item while it is slashing, would glitch the sword's sprite and other attributes.
* Fixed the bug where the Boomerang wouldn't use its Range value properly if its weapon sprite was set to something other than the default.
* ZScript: Added npc->Stun, which is the number of frames that the NPC will be stunned. You can read or write this value. Some types of enemies can't be stunned, or behave differently when stunned - for instance, the Dodongo becomes vulnerable to swords.
* ZScript: Added npc->Defense[], which is an array of the NPC's Defense values. You can read or write these values, so go wild. ( _L_, 2010-01-21 20:20:03 )

* ZQuest: Fixed the palette editing menus so that it allows you to save after editing palettes, names of level palettes, or anything related to palettes. In fact, if you exit the menu without changing anything please do not consider it a bug that you now have the option to save your quest file.
* Insert/Clear in the combo editor is now Insert/Remove. Swapped "Clear" with "Delete" which was backwards in the right-click menu, and _L_ added some warning messages if you try and Insert/Remove mass combos. ( Gleeok, 2010-01-19 00:53:41 )



Build 1129 - windows
* Fixed the bug where changing Link's direction with a script wouldn't properly dispose of Hookshot sprites.
* Fixed the bug where a Fire Gleeok's weapon would always be Flame regardless of the setting. (But, a Gleeok with a Breath shot type but no weapon will use Flame by default.)
* Enemy Editor: fixed the Gleeok's Shot Type labels.
* Fixed screen (2,6D) in proposed2nd.qst.
* std.zh: Removed the NPCT_ entries for deprecated enemy types. ( _L_, 2010-01-16 00:35:46 )

* Fixed the bug where setting a Whistle item's Warp Ring to -1 wouldn't prevent the whistle whirlwind from appearing when said item was used.
* DMap Editor: Fixed the bug where the Map selectors were drawn incorrectly in Large Mode.
* Fixed the bug where Link couldn't be killed by picking up an item that lowers Link's health.
* ZScript: Sanitised the Game->GetComboData() and related functions so that a crash won't occur if zero or negative map or screen values are passed.
* New Default: fixed the default Boomerang weapon sprites. They now use Corrected Animation. ( _L_, 2010-01-14 02:39:16 )

* Fixed old quest compatibility issues with unwalkable doors, fairy guys in dungeons, and the Lens of Truth. ( Saffith, 2010-01-11 12:58:35 )

* std.zh: Reverted the recent fix to Angle() and RadianAngle(). It turns out that the real bug was with the VectorX() and VectorY() functions. These have been fixed!
* Fixed the bug where the ladder would sometimes appear even though Link did not possess it.
* Fixed the bug where tribble-type enemies would sometimes not change at the right time. ( _L_, 2010-01-11 06:55:09 )



Build 1125 - linux
* Fixed a quest loading bug that cropped up in build 1124. Use this one instead. ( Saffith, 2010-01-09 22:09:15 )



Build 1124 - linux
* Fixed a crash when the working layer was disabled.
* New Linux build. ( Saffith, 2010-01-07 14:23:27 )



Build 1122 - macosx-Leopard
* ZScript: changed the implementation of HitYOffset. Previously it included the screen's subscreen offset value (which is 56, or 0 if the No Subscreen screen flag is set). Now, getting and setting HitYOffset won't affect this.
* ZScript: changed the implementation of Game->GetComboData() and such, as well as Game->GetCurMap(), such that maps are now counted from 1 upward rather than 0 upward. That was getting too confusing. (Note also that Game->GetLayerMap() already did it this way.)
* std.zh: Fixed the code of Angle() such that 0 degrees again refers to a right vector rather than (as it was recently) an upward vector. Also fixed the documented direction from clockwise to counterclockwise, and added AngleCW() and RadianAngleCW() for those who still need clockwise angles.
* std.zh: Fixed the WPN_ constants, which were all incorrect.
* Subscreens: Fixed the bug where Current Item elements in a passive subscreen wouldn't be updated as soon as Link grabbed the related item.
* Enemy Editor: added a Walking Enemy Touch Effect, 'Eat (Damage)', where the enemy eats Link and Link constantly takes damage from the enemy, equal to the enemy's Damage value. Link also takes damage from other enemies while this occurs. ( _L_, 2010-01-05 07:18:26 )



Build 1121 - windows
* Fixed the bug I caused while fixing the random crash on exit bug, which would (yeah, you guessed it) crash the player on exit. Ugh... My apologies. Everything should be fixed now. It is recommended to upgrade to the current build if you are using 1119. ( Gleeok, 2009-12-30 22:33:31 )



Build 1120 - macosx-Leopard
* Fixed the bug where Link tapping his sword wouldn't reveal, through the tapping sound, Bomb combo flags on layers.
* Presumably fixed the bug where the 'Show FF Scripts' cheat still showed script names after quitting a quest.
* Boots now have a misc. flag: 'Not Solid Combos'. If set, the boots don't protect against solid damage combos.
* Quest Rule: Hookshot Grab Combos Work On Layers 1 and 2. ( _L_, 2009-12-29 09:59:53 )



Build 1119 - windows
* New Windows Build. ++Documentation. ( Gleeok, 2009-12-28 22:48:01 )

* Possibly fixed a slight oversight which may have caused zc to crash sometimes on exit on certain hardware. ( Gleeok, 2009-12-28 21:56:48 )

* ZScript: Added Screen->Spline(layer,x1,y1,x2,y2,x3,y3,x4,y4,color,opacity) which draws a cubic bezier curve on the given layer starting at (x1,y1), interpolating between the tangent vectors (...), and ending on (x4,y4). Fun stuff. This certainly won't be the last of the parametric curve functions to make it's way into zscript.
* Seeing how DrawTile is about the most used scripting function, and already it is not uncommon to see entire screens rendered entirely with drawtiles, I've added a couple of nice subsets to these - Screen->FastTile() and Screen->FastCombo(), (int layer, int x, int y, int tile, int color, int opacity), which, are much easier to remember the arguments for, for one, and are a reasonably faster speed than thier Draw*() counterparts. A pre-emptive strike for those who want to draw changeable layers with scripts perhaps (or something else that requires hundreds of calls to you know what). ..What, nobody thought of that yet? ( Gleeok, 2009-12-28 05:05:40 )

* ZScript: Added Link->LadderX and Link->LadderY, read-only variables which are the X and Y positions of Link's stepladder.
* Added the NES fix quest rule 'Allow Ladder Anywhere'.
* Changed the screen flag 'Allow Ladder in Overworld' to 'Toggle Allow Ladder Anywhere'. Its behaviour is the same unless the aforementioned quest rule is changed.
* Added the combo type 'Tall Grass->Next'.
* Subscreen Editor: fixed the 'Bring Forward' and 'Send Backward' Arrange menu items. 'Bring to Front' and 'Send to Back' remain forthcoming.
* Enemy Editor: fixed the bug where some Misc. Attribute boxes wouldn't accept any text. ( _L_, 2009-12-27 03:04:03 )

* Fixed the bug where Bait lweapons reacted oddly to enemy shields.
* Fixed the bug where pre-Enemy Editor quests' enemies weren't updated correctly.
* Fixed the bug where Link's sword was sometimes positioned incorrectly. ( _L_, 2009-12-23 06:31:17 )



Build 1114 - macosx-Leopard
* Fixed, properly, the bug involving Link drowning while charging his sword.
* Fixed the Boots. Now, as it should be, a power of 1 refers to 'Damage (1/2 heart)', a power of 2 refers to Damage '(1 heart)', and so forth.
* Default Template: Fixed some of the default weapon sprite settings for Din's Fire and Nayru's Love.
* Default Template: Magic Pols Voices now have the One-Hit-Kill defense for reflected magic. Feel free to apply this to your quests if you wish.
* Default Template: Changed the default Nayru's Love shield sprite slightly. ( _L_, 2009-12-17 08:28:53 )

* Welcome to the first official Scripters Choice Awards. (Drumroll please..) And the winner by a large margin goes to: ..."Why can't we check if Links HP is less than or equal to zero?" -Well now you can. Sorry that this was neglected for so long.
* Remedied a few typos in std.zh. ( Gleeok, 2009-12-17 00:08:50 )



Build 1112 - windows
* Fixed the parser bug where '&&' sometimes wrongly returned true.
* Fixed the bug in the last build where wands and hammers' animations broke.
* Fixed the item position square in Small Mode.
* Presumably fixed the bug where Boomerangs' and Hookshots' block and reflect flags didn't quite work if they were Item Override weapons.
* Item Editor: now, the Select Item window shows the ID and Power of the currently selected item.
* Enemy Editor: repealed the change that disables unused enemy misc. attributes, because of the possibility of scripts making use of unused values for their own purposes.
* std.zh: added several constants related to Walking Enemies' attributes.
* ZScript: renamed npc->D[] to npc->Attributes[]. This is just an act of prudence on my part - in the distant future, if NPC-specific scripts are ever implemented, then surely the NPCs would have to be given a D[] array of default script arguments, as is consistent with items. This renaming today is to prevent such a conflict later. ( _L_, 2009-12-14 00:23:54 )



Build 1111 - windows
* The Projectile enemy family now has the same Shot Type attribute as the Walker family. And, it shoots fireballs correctly now.
* Fixed the bug where, when changing direction while slashing, Link's sword weapon became desynchronised with Link's direction for one frame. This resulted in Darknuts being stabbed through their shields. No more!
* Fixed the bug where the Door Repair room type didn't work if the 'Special Rooms And Guys Are In Caves Only' DMap flag was unset.
* Enemy Editor: now, unused misc. attributes' input boxes are automatically disabled. ( _L_, 2009-12-10 09:21:59 )



Build 1110 - windows
* Fixed the bug where fire-breathing Octoroks' Shot Type was being set to '1 Shot' instead of 'Breath'. Sorry. If your quest file was affected, simply fix it manually.
* Fixed the bug where Breath firing Walking Enemies wouldn't use their Death Attribute 1 correctly.
* Now, the 'Place + Edit FFC' right-click menu item automatically sets the placed FFC's combo and cset to that of the currently selected combo and cset.
* Enemy Editor: Added a 'Set All' button to the Defenses pane that lets you set all of the Defenses to a certain value instantly. ( _L_, 2009-12-05 23:09:06 )



Build 1109 - macosx-Leopard
* Fixed the bug where Pols Voice shadows were misaligned when their Step was greater than 50.
* Fixed the bug where various assorted projectiles ignored Walking Enemies' shields.
* Enemy Editor: added misc. attribute labels for Digdogger, Patra and Gleeok. Also, for convenience, the Select Enemy list now shows the enemy's ID as well as HP and Damage.
* Now, the icon for the item position square shows the tile of the screen's item if there is one. It's convenient if the item is hidden beneath some layers...? ( _L_, 2009-12-05 03:33:32 )



Build 1108 - windows
* Fixed some problems with the previous build.
* Fixed a bug that prevented the 'Summon' Shot Type from working unless instance of the summoned enemies were already present. ( _L_, 2009-12-04 07:18:41 )



Build 1107 - windows
* Fixed the bug where Bubbles, Traps and Rocks wouldn't have the 'Doesn't Count As Beatable Enemy' flag set. Sorry.
* Fixed the bug where the Aquamentus's fireballs moved in the wrong directions.
* Subtly fixed the Darknut's shield's hit detection.
* ZC: Fixed the bug where the Fullscreen menu item wasn't always checked correctly. ( _L_, 2009-12-04 06:47:48 )



Build 1106 - windows
* Fixed a bug where some Link weapons, such as piercing sword beams or script-created arrows, were behaving slightly incorrectly.
* Fixed a bug where the Death Attributes of Zols (but not Zol Tribbles) were being set incorrectly. Sorry.
* std.zh: added HitboxLeft(), HitboxRight(), HitboxTop(), and HitboxBottom(), which return the coordinate of the appropriate edge of the hitbox of the lweapon, eweapon, item or npc passed to it. ( _L_, 2009-12-04 05:46:54 )



Build 1105 - windows
* Windows version of 1104. ( Gleeok, 2009-12-04 02:31:37 )



Build 1104 - macosx-Leopard
* Some have expressed interest in those Enemy Editor improvements I announced, and eventually postponed, two years ago. Now, here's one part of those changes, isolated and refined. I've tested it quite thoroughly these past several days, but it's just me - so do examine it yourself.
* I've combined the Walking Enemy, Walker and Shooter, Gel, Gel Tribble, Zol, Zol Tribble, Rope, Goriya, Bubble, Vire, Vire Tribble, Like Like and Pols Voice enemy families into a single type: 'Walking Enemy'. (The old families are now labeled 'Unused' and will be removed later.) You can now combine some of their abilities (such as 'split into enemies', 'dash toward Link' and 'jinx on hit'). Their Misc. Attributes are changed, but, just for this enemy type, the Enemy Editor now properly labels each attribute and has dropdown menus for some of them. For complete information, go to http://www.shardstorm.com/ZCwiki/Walking_Enemy
* In order to incorporate the Pols Voice and Darknut families, I added a new Enemy Editor pane called Defenses. Enemies now have Defense values for each type of lweapon which affect how they react to the weapon (for instance, 'block', 'stun instead of taking damage' or 'die instantly'). These apply to every enemy family EXCEPT: Traps, Rocks, Dodongos, Aquamentuses, Gohmas, big Digdoggers, Ganons, Manhandlas, Gleeoks and Patras. Also, Peahat defenses only apply when it is grounded.
* In the case of the Darknut's shield, I've reinstated the 'Shielded in Front', 'Shielded in Back', 'Shielded On Left' and 'Shielded On Right' enemy misc. flags.
* In the case of the Bubble, I've added the oft-suggested 'Doesn't Count As Beatable Enemy' enemy misc. flag. It affects shutters, the Enemies->Secret screen flags, and such.
* Vire and Pols Voice enemies now have functional random rates, halt rates, homing factors and such.
* Deprecated the '1.90 Tribbles' quest rule. Quests will be updated with enemy misc. attribute values to match their original preference.
* Deprecated the 'Darknut Shields Can Be Broken With The Hammer' quest rule, replacing it with the enemy misc. flag 'Hammer Can Break Shield'.
* The 'Pols Voice (Magic)' enemy is now available.
* Fixed the 2.10 (or whenever) bug where the Hookshot couldn't ever stun landed Peahats.
* npc->MiscFlags[] has been updated accordingly. ( _L_, 2009-12-03 05:22:51 )

* Editing the button configuration via the controls menu should no longer crash zc. ( Gleeok, 2009-11-26 02:15:51 )

* Fixed some incorrect Item Editor labels.
* New Default: fixed the default weapon sprites for the Hookshot.
* Large Mode: two of the Whistle-related Screen Flags are now shown in Screen Info.
* String Editor: added a button entitled 'Next in List' - when pressed, it sets the current string's 'Next string' to that of the string immediately after it in the list.
* Quest Reports: now, the Enemy Locations report lists enemies in alphabetical order.
* Replaced some built-in MIDIs with better versions done by someone called Hypercrash and slightly modifed by me. (Wasn't this intended to be done earlier?) ( _L_, 2009-11-24 22:47:06 )



Build 1101 - macosx-Leopard
* Fixed the bug where the 'Hitboxes' entry in the Show/Hide cheat menu wasn't ever check-marked.
* Fixed the Lens magic / Item Override fix.
* Fixed the bug where grabbing tiles from a .qst file would reset the Sound FX names.
* ZQuest: Renamed 'Ocean Sound' to 'Ambient Sound'. And, now the screen's Ambient Sound is listed in Large Mode's Screen Info. ( _L_, 2009-11-21 06:51:10 )

* Fixed bug Fixed the bug involving the font for drop boxes in large mode changing, causing potential crash errors when using the mouse wheel afterwards. ( jman2050, 2009-11-16 10:09:38 )



Build 1099 - windows
* Large Mode: at last, a great wrong has been righted. Added a panel to the main display that shows, at a glance, the sprites of the enemies in this screen's enemy list.
* Possibly fixed the bug where the lens's magic cost was forgotten when an Item Override weapon was used.
* Tile Editor: Fixed the bug where deleting tiles and pushing 'U' (Undo) wouldn't update the blank tile hiding.
* Item Drop Set Editor: Now, the editor shows the percentage chance for each item's appearance, given the entered values.
* Enemy Editor: Fixed the Gleeok's tile preview again. ( _L_, 2009-11-14 23:41:32 )

* Fixed the all too long withstanding bug where putting a door (or not) on a screen would always override whatever combos happened to be in any of the four door locations regardless if you changed them or not.
* Hopefully Pow() works now.
* Tinkered with a few other things, either fixing them or updating them to reflect 2.5 functionality...(To be honest, I simply forget what they are...they were all minor issues anyway, I'm sure) ( Gleeok, 2009-11-14 05:59:04 )

* Fixed a corruption in the item editor which may of caused it to crash inexplicably.
* Fixed a possible minor memory leak in the player. A nice little bi-product of this fix is now when triple buffer is disabled due to gfx mode changes to an unsupported environment, triple buffering can be reinstated to its former glory after any amount of subsequent calls to change the screen mode, instead of permanently disabling it. In short: triple buffering whenever applicable...Unless that is:
* Added a new command-line option "-doublebuffer" to ZC. This will permanently disable the use of video bitmaps, or triplebuffering. Could be useful for legacy cards (or) when one couldn't run zc in fullscreen mode, perhaps due to false positives or other mysterious circumstances. By the same token this option is now also located in the ag config file for convenience. ( Gleeok, 2009-11-12 04:22:03 )

* Wasted a lot of time by making the ZScript parser possibly 10% more efficient. Good prioritising, me.
* Some ZASM codes: SETTRUE (1 register operand - sets to 1 if the TRUEFLAG is set, else 0), SETFALSE, SETMORE and SETLESS (sets to 1 if the TRUEFLAG is set or the MOREFLAG is not). These are useless to ZScript coders, so y'all just ignore 'em.
* ZQuest: Removed the 'Default' rule set, since no one really knows what it ought to contain. The remaining 4 sets are sufficient. ('Zelda 3-esque' is now the initally selected radio button.)
* Added the 'Link Drowns in Walkable Water' to the 'Zelda 3-esque' rule set. Choosing it will make all of the water tiles in the template walkable. Also, 'Rings Affect Damage Combos' is now on for all rulesets.
* Default Template: fixed some bugs, made a few more tiles, added combo cycling, BS Grave, Step->Next (All), Step->Next (Copycat), Step->Secrets and Block Hole examples, and added limited Sideview and NPC combo sections. ( _L_, 2009-11-10 09:31:25 )



Build 1095 - windows
* ZQuest: Added a 'Combo Locations' menu item to the 'Select Combo' dialog's right-click menu.
* Now, ZQuest's P hotkey no longer belongs to the 'View Pic' menu item, but to a 'Scroll to Page' feature which scrolls the current combo selector to the appropriate combo page. Convenient for those tilesets with 100 or so pages of combos. ( _L_, 2009-11-09 09:13:22 )



Build 1094 - macosx-Leopard
* Fixed some arithmetic that made the counter-modifying string control codes not work.
* New Default: added the multi-directional enemy tiles that I think someone called Master of Power created. (Hey, didn't DN say he was gonna add these back in 2007?)
* Now, when you push a secret-state-setting push block, the 'Secrets' Screen State is set as soon as you start pushing the block, rather then when the block stops moving. ( _L_, 2009-11-07 08:38:29 )

* Fixed the bug where loading the last timed save after a ZQuest crash... would crash ZQuest.
* Fixed the bug where it was possible to pick up multiple items from 'Take One Item' and 'Red Potion or Heart Container' room types if the 'Items Disappear During Holdup' rule was unchecked.
* ZQuest: Renamed 'Template' to 'NES Dungeon Template' and 'Re-apply template' to 'Apply Template to All'. An explanatory note has been added to the NES Dungeon Template dialog.
* Also, the Screen Enemy Flag 'Enemies Carryover In Warps' has been renamed to 'Sprites Carry Over In Warps' to properly reflect its actual functionality, and moved to the Warp category. This changes the behaviour of the ZScript variables Screen->EFlags[] and Screen->Flags[] somewhat. Be sure to update your scripts.
* Quest Reports: added the Combo Locations Report. Instantly find out how many 'Pound' combos or 'Push (Very Heavy)' combos you've used!
* New Default: changed the default water combos to use animated tiles, changed the CSets of Rope (L2) and 'Octorok (L4)', and fixed the default tile of 'Spinning Tile (Enemy Sprite)'.
* New Default: added a few 8-bit tile examples to the default tiles and combos, so that new users are aware of that feature.
* std.zh: Added ScreenCopy(), which copies the combos and csets from one screen into another screen. ( _L_, 2009-11-05 21:14:35 )

* Hopefully fixed a bug where Link's sword wouldn't vanish if he drowned while using the Spin Attack.
* std.zh: Added GetLayerComboT(), SetLayerComboT(), LastComboTypeOf(), and FirstComboTypeOf(). ( _L_, 2009-10-30 07:52:07 )

* Fixed a bug with the 'Dark Rooms Stay Lit Only While Fire Is On Screen' quest rule, where it would assume that only one fire weapon was onscreen when changing lighting.
* Fixed a bug where script-generated bombs wouldn't damage Link correctly.
* ZScript: sanitised Game->GetComboData() amd Game->SetComboData() so that it no longer crashes when given bad screen or map values.
* Corrected zscript.txt with respect to the Flip values of items and weapons. (Apparantly 1 is horizontal?)
* Increased the MIDI name limit from 20 to 36 characters. ( _L_, 2009-10-27 06:02:59 )



Build 1090 - macosx-Leopard
* ZScript: Fixed Game->GetComboData() et. al. so that they work properly when dealing with screens currently being used as layers.
* std.zh: Added LastComboOf() and LastComboFlagOf(), as well as AngleDir8() and AngleDir4(), which take a clockwise angle and convert it to one of the 8 or 4 standard ZC directions (DIR_UP etc.)
* Default Template: fixed the names of the unused items, enemies and weapons. Now, they follow the name format 'zz###' consistently.
* Default Template: now, the Fire Trail and Ice Magic weapon names have '<unused>' appended to them. This will remain the case until the day they actually are used.
* Default Template: added an initial delay to the Rupee animations, and changed the Clock's animation, added a Roc's Feather animation, and changed the colours of the 10, 20, and 200 Rupees to be yellow, deep red, and orange, respectively.
* Added a preview pane to the Select Weapons/Misc Sprites dialog.
* Now, pressing Return/Enter on ZC's name entry screen without entering a name will cancel the name entry process. ( _L_, 2009-10-25 01:12:43 )



Build 1089 - windows
* Fixed a bug where quests made with builds earlier than build 411 (including quests made with the 'Lost Isle Build') had malfunctioning ZASM scripts, due to 411 changing the function of the ZASM command GOTOLESS from '<' to '<='. Previously I had dismissed such a fix as impossible! But now I've done it using Highly Unorthodox Techniques to identify which build a quest was made in (which, due to insufficient ZQuest bookkeeping in those builds, isn't directly possible).
* What this means, though, is that quests made in those builds will continue to use the legacy version of GOTOLESS (that is, one which functions as '<' rather than '<=') even if you open and save them in the current ZQuest build. However, thanks to some quite minor compiler-jiggering, ZScripts added to such quests from now on will be compiled such that they use a correct implementation of inequality operators (<, >, <=, >=) regardless of all this.
* Fixed a bug where quests made with builds earlier than build 277 (including quests made with the 'Lost Isle Build') had Pols Voice enemies with incorrect Step values. This is brought to you by another Highly Unorthodox Technique, one that you don't have to worry about. ( _L_, 2009-10-23 22:15:01 )

* Fixed the bug where having an infinite Bomb Bag without any actual Bomb ammunition would prevent you from using Bombs or Super Bombs.
* Fixed the bug where Slash->Next combos sometimes created items.
* Sideview: Fixed the Y position of falling Bomb/Bait/Fire weapons. ( _L_, 2009-10-22 22:40:16 )

* ZScript: Fixed the PressAxis functions, which were setting the current input state instead of the press state.
* All the input press functions under the Link pointer are now simply ->Press* instead of only some.
* Also fixed the compiler warnings associated with these. Now they should all compile and work as documented.
* Updated zscript.txt. ( Gleeok, 2009-10-18 13:41:06 )



Build 1086 - windows
* A new build. Don't forget what I said about hitboxes before you report bugs about them!
* Fixed the bug where the Triforce items' default values were incorrect.
* std.zh: added some shortcut routines for getting/setting combos on the current layers, and a LinkCollision() routine for FFCs.
* ZQuest: added the Enemy Locations quest report, which lists every screen that a certain type of enemy appears in. ( _L_, 2009-10-18 10:51:50 )



Build 1085 - linux
* Small change to the enemy editor. Everything works as it should now, probably.
* Fixed a possible buffer overflow in the drop set editor.
* Seems like it's about time for a new Linux build. ( Saffith, 2009-10-16 21:36:12 )

* std.zh: Added LoadLWeaponOf(), LoadEWeaponOf() and LoadNPCOf(), which provide a pointer to the first sprite of a certain ID or type - the first LW_SWORDBEAM, for instance. Also added FirstComboOf() and FirstComboFlagOf(), which returns the location of the first onscreen combo or flag, and Duplicate(), which duplicates the lweapon or eweapon passed to it. ( _L_, 2009-10-15 07:36:14 )

* Fixed the bugs in std.zh in the previous build.
* std.zh: Changed Collision() so that you can pass FFC pointers to it, and check collisions between FFCs and NPCs, or FFCs and other FFCs. It uses TileWidth and TileHeight for the FFC's box. Also: Split CollisionAABB() into RectCollision() and SquareCollision2(), and made SquareCollision() and CircleCollision(), which registers collisions between two squares and two circles, respectively.
* Enabled the hitbox display debug code. Apparantly we always had hitbox display debug code, but everyone forgot? But anyway, it's a level 4 cheat under the Show/Hide submenu. Check it to make Link, NPC, weapon and item hitboxes visible. I just want to note RIGHT NOW that most all of the default hitboxes for items and weapons are bizarrely shaped or counterintuitively offset DELIBERATELY as mandated by either The Legend of Zelda or ZC 2.10. Okay! ( _L_, 2009-10-14 23:31:06 )



Build 1082 - windows
* Spot cleaned up a few loose ends and compiled a new Windows Build. Yay.
* Added some general purpose overloaded CollisionAABB() functions to std.zh.
* Fixed up DrawInteger() (It works now) and realized I didn't document it so here you go: Screen->DrawInteger(layer, x, y, font, color, bg_color, scalex, scaley, float_to_print, num_decimal_places, opacity); ( Gleeok, 2009-10-14 02:48:14 )

* ZScript: Added Screen->DrawInteger(), which pretty much does the same thing as DrawCharacter except with an integer. Can display the number up to four decimal places.
* Added Randf() and Rand2f() as Rand() and Rand2() counterparts. These return a floating point number instead of an int. ( Gleeok, 2009-10-14 00:42:48 )



Build 1079 - macosx-Leopard
* Added some more functions to std.zh. Cond() returns one of two specified results depending on a boolean - it's a bit like an 'if...else' in a single command. Choose() returns one of its arguments, selected randomly and fairly. Angle() is both syntactic sugar and a helper for those who don't know how to use ArcTan to find the angle of a line between two points. VectorX() and VectorY() split a distance and angle into X and Y lengths. Collision() returns true if the hitboxes of the two arguments intersect. It accepts any item, lweapon, eweapon or npc pointer as either of its two arguments. LinkCollision() works similarly, but note that it ignores all of Link's attributes except his hitbox.
* ZScript: Now, if you set an airborne NPC's Tile Height to something larger than 1, its shadow will be drawn beneath all of the tiles instead of just the top row.
* Fixed the bug where it was impossible for enemies with a frame rate of 0 to obey gravity.
* Fixed the jumping physics in a respect - now, a sprite's Jump variable is no longer cast to an integer within the game engine, leading to bizarre linear jump velocities, especially when the quest's Gravity is low. File this under 'things I most definitely shoulda done two years ago'.
* Fixed the bug where having a Maze Path exit to a room outside the DMap would let Link enter invalid screens. ( _L_, 2009-10-13 08:52:01 )

* Fixed the cursed copy/paste function in the enemy dialog. Hopefully that's the last we'll see of that. End of story.
* Fixed the ellipse rotation which actually didn't rotate the ellipse while the ellipse was rotating. Go figure. Conspiracy theory: People like David Hasselhoff more than ellipses. ( Gleeok, 2009-10-13 04:31:42 )

* Fixed the bug where pixel-shifting tiles into blank tiles in some directions wouldn't cause those tiles to become non-blank (with respect to the view controls).
* Fixed something in the default template that made DMap 1 the default starting DMap.
* Fixed the bug where damage combos would do 0 damage in some situations involving the 'Rings Affect Damage Combos' rule.
* Diagonal Movement: Fixed the Stepladder's behaviour for solid combos (Ladder Only, solid water etc.) ( _L_, 2009-10-09 08:44:21 )



Build 1076 - macosx-Leopard
* Fixed the aforementioned Sideview fix: it overstepped its bounds a bit and allowed a bunch of enemies to fall that should not - like Zoras. (This also affected the 'Fall From Ceiling' flag).
* Added something to the combo selector right-click menu: Open Tile Page. This lets you edit the tile of the selected combo with only two and a half clicks! I deem it great for quick alterations.
* Made a fix that allowed Digdoggers to use different animation types instead of just their own routine, regardless of the Enemy Editor.
* Item Editor: Now, all level 0 items will have their level set to 1. Hopefully only good things will come of this.
* String Editor: Here's something new for Large Mode - in the string list, if a string has been placed immediately after a string that links to it, then that string will be indented in the list. This is intended to be helpful for quickly identifying blocks of linked strings in the list. ( _L_, 2009-10-08 07:52:28 )



Build 1075 - macosx-Leopard
* This build is Intel only.
* Fixed the, er, Sideview bug where several kinds of non-falling enemies were frozen in midair. Special thanks to that tester with an eye on the ball!
* Large Mode: Expanded the Edit String dialog and the Map Styles dialog. ( _L_, 2009-09-27 04:48:24 )



Build 1074 - windows
* Diagonal Movement: Greatly freed up the Stepladder's usage. It now no longer adheres to the 16x16 grid when it is placed, and can be walked upon regardless of Link's adherence to the 16x16 grid. This fixes at least a few issues that users have been having with it.
* Sideview: Fixed a long-lived bug where enemies would stop moving after falling. As you know, I prevent enemies from moving horizontally when they're falling. However, when this has occured, enemy movement AI got 'trapped', and the enemy often couldn't move after landing. This is fixed.
* Large Mode: Fixed the Side Warp direction selector's resizing. ( _L_, 2009-09-26 04:17:52 )

* String Editor: Fixed a bug where clicking 'Duplicate' and then clicking 'Cancel' would cause the '<New String>' menu entry to disappear permanently. The next build will restore it if this has happened to you.
* Corrected a comment in std.zh about GEN_MAGICDRAINRATE. Link's magic drain is multiplied by Game->Generic[GEN_MAGICDRAINRATE] divided by 2, not multiplied by one over that value.
* Fixed a bug where the Potions would always usen the highest-level owned item's refill rates, rather than their own refill rates.
* ZQuest: Now, the W and F keys show walkability and inherent flags for combos in the combo selector, too.
* Large Mode: the currently selected combo's type is now listed in the upper-right corner. ( _L_, 2009-09-22 02:39:43 )



Build 1072 - windows
* Fixed a bug with the previous build where duplicating (or, for that matter, deleting) a string without having scrolled through your entire string list first would mess up various things.
* Enemy Editor: renamed the 'Zora (4-Frame)' animation type to 'Zora (NES)' and 'Zora' to 'Zora (4-Frame)'.
* Tooltips: The combo selector tooltip now shows the combo type of the combo. ( _L_, 2009-09-20 07:40:37 )



Build 1071 - windows
* Fixed the bugs where the 'Goto If' string codes wouldn't set the string's tile backdrop correctly, and would skip over or print incorrect symbols regardless of what happened.
* Now, duplicate strings are generated immediately after the original string in the list... thus saving a certain amount of re-positioning.
* Now, right-clicking in the combo selector brings up a menu offering two choices: edit the individual combo, or open the Combo Editor at that combo's page. ( _L_, 2009-09-19 06:19:40 )

* Fixed the bug where Link kept holding his sword while stepping down a Cave combo.
* Now, a Ring item with a damage divisor of 0 will make Link immune to damage rather than crashing ZC. This goes for Peril Rings too. (That would be interesting.)
* Fixed the bug where the preview pane in the screen Enemies dialog was absent.
* Large Mode: enlarged the Autolayer Setup dialog.
* Fixed the bug where Screen->TriggerSecrets() wouldn't compile correctly.
* ZScript: added Game->End(). When this command is run, ZC immediately ends the entire game without saving and goes to the file select screen. What could you use this for? ...Maybe you could put it at the end of a custom 'game over' or 'end of demo' sequence? ( _L_, 2009-09-18 22:45:09 )

* Added a combo type: Eyeball (4-Way). It only needs tiles for the four cardinal directions. It works a bit differently to the other eyeballs - the tilesheet direction order is up, down, left, right. What this means is that you can use 'n-frame 4-dir' enemy tiles as Eyeball combo tiles with no alteration! That's convenient. (P.S: The other Eyeball types are renamed '8-Way'.)
* Fixed the bug where, with a Save Game combo in a dark room, entering the Save Game prompt then selecting 'Don't Save' would cause the room to become lit inexplicably.
* Now, Whistle items with an invalid Warp Ring number (one that isn't between 1 and 8) will never create whirlwinds.
* Fixed the Super Bomb's damage to Link. It is now at 8 instead of 10.
* The Bomb and Super Bomb's Misc. 3 value now determines the damage done to Link when the 'Bombs Hurt Link' rule is set. (Setting these to negative values will presumably heal Link. If you can think of an in-game reason for this to happen, full speed to you.)
* Added some space-saving functions to std.zh - CreateNPCAt, CreateItemAt, CreateLWeaponAt and CreateEWeaponAt. ( _L_, 2009-09-11 05:00:25 )

* Fixed the Whisp Ring so that its default values are correct, and that its Item Editor values are actually used in the game. Because until now, they weren't!
* Fixed the bug where FFCs with inherent Secret Tile Flags wouldn't change when Screen Secrets was triggered.
* Fixed the bug where individual FFCs pasted anew into a screen weren't being saved in the quest file.
* Default Template: Fixed those two counters in the passive B subscreens.
* Fixed the bug where a bunch of string control codes were being displayed wrongly in the String Editor. ( _L_, 2009-09-05 06:24:32 )

* Fixed the bug where setting Screen->ComboD would not update spinning tiles
* ZScript no longer uses floating point arithmetic in multiplication, division or modulus operations.
* Finished implementing setting of InputMouseX/Y, which should now work correctly.
* Added 'Game->DMapFlags[]' and some script-specific DMap flags, which should be the next best thing to having actual DMap scripts.
* Gave the final sprite - Link - its Misc array. You could argue that this is pretty pointless, but seeing as Link inherits his miscellaneous variables from the sprite class anyway I thought it wouldn't hurt.
* npc, lweapon and eweapon now have a 'CollDetection' bool, with which you can turn off their collision detection.
* Renamed Link->Invincible to Link->CollDetection to be consistent with this (sorry if you were using it).
* Screen->TriggerSecrets() (which was in the last build, if you happened to stumble across it) now works.
* Added the maximum number of drawing commands, and some information about the maximum size of variables to std.zh.
* Added 'OnSidePlatform' to std.zh, which uses (pretty much) the same method as the internal code.
* Documented Waitdraw, which we've had for a while... ( Joe123, 2009-09-03 06:45:26 )

* Fixed the bug where passageway warps to different DMaps would use the current DMap's offset rather than the destination DMap's offset.
* Now, if, via placed and inherent combos, you have a Secret Tile or Armos->Secret type flag and a Hammer or Strike flag in the same spot, and you hammer-pound the spot, the Secret Tile / Armos->Secret flag will no longer take precedence over the Hammer/Strike flag.
* Fixed the bug where 2.10 and earlier quests had their Ghini Transparency and Ghini Flickering Quest Rules set to the opposite of what they ought to be.
* Fixed the Wall Master's movement. Now, if their Misc. 1 is 1, they will advance farther from the screen edge depending on their Step speed. If not, they will only advance two tiles from the edge regardless as to how swift they are.
* Large Mode: enlarged the Init Data/Link Data dialog, AND all of the popup alert boxes. This applies to both ZQuest and Zelda Classic. Note: largeness of Zelda Classic depends on your settings.
* Also enlarged the Quest Info, Controls, Quest MIDI Info, and some Cheat dialogs. ( _L_, 2009-08-28 02:22:00 )



Build 1065 - windows
* New Build. -Changes to the DrawTile and DrawCombo format. As a result of this, any older beta scripts using these will have to be updated. I apologize for the inconvenience, and did consider this as the last option, however such is the price of progress.-
* Too many changes in this build to name them all, so here is a basic breakdown:
* Added basic 3D support to ZScript via functions available using the Screen pointer.
* Fixed the ellipse loppiness/wonkyness bug.
* Fixed the clipping issues with some drawing routines when they were being rotated.
* Optimized slightly some drawing routines. Will do some more work on this later.
* Changes to Drawtile: PLEASE READ:
* DrawTile and DrawCombo have been finalized and now take one extra argument: 'Scale' has been replaced with xscale and yscale. These are actual representations of the drawn tile or combo, including w and h arguments, in PIXELS! Yes, you can scale things up or down now. ^_^ So to draw things using default values this now needs to be -1 or another negative number. Unfortunately as previously stated, this leaves old scripts using these features as horribly incompatible with the new format. Also rotation, rx, ry now all work.
* Whats that? You want to know more about the 3D drawing stuff? ...well ok.
* ZScript: Added Quad3D(x1,y1,x2,y2,x3,y3,x4,y4,w,h,cset,flip,texture,rendermode);
* ZScript: Added Triangle3D(x1,y1,x2,y2,x3,y3,w,h,cset,flip,texture,rendermode);
* These will draw a triangle/quad on the screen with the specified vertex coordinates then texture map a tile/combo or block of using w,h onto them! Color interpolation, depth sorting, and color mapping using a z buffer are not implemented.
* Updated zscript and std.zh.....again. ( Gleeok, 2009-08-26 20:10:21 )

* ZScript : Finished adding Screen->DrawCharacter, which will draw one ASCII character from any one of the available internal fonts to the screen (Not before having the option to perform some neato blitting routines of coarse), and as such I've updated std.zh and zscript.txt to match this. Finally there is the beginnings of scripted texts outside the string editor without resorting to using DrawTile!
* Performed some housecleaning of script.txt so it should be readable in any notepad editor now. It looks to be up-to-date, but feel free to let us know if we've missed something. ( Gleeok, 2009-08-22 04:22:24 )

* Fixed all, if not most, of the 30-something items whose default template values were swapped around since about three builds ago. Previous messages indicated fixes of specific instances, but not the majority of problems. My thanks to the testers for their thoroughness.
* Fixed the bug where a newly-created string would be filled with spaces, preventing you from typing into the editor's box.
* Also in the String Editor: fixed the bug where string control code 25 would consume the character immediately after it. (Actually, I think someone else did but forgot to mention it earlier.)
* Fixed some capitalisation for the quest rules.
* Fixed the bug where grabbed tiles, overwritten over blank tiles, would still be considered blank by the Tile Editor's 'hide blank' feature.
* Added default Fire Trail (Enemy), Hover Boots Glow and Cane of Byrna (Beam) weapon sprites to the default template.
* Also added another couple of magic meter tiles by Pokegamer1989.
* Added Screen Flag: Maze Overrides Side Warp, whereby a Side Warp in a Maze Path won't be triggered unless you solve the maze or use its specified exit direction. (And yes, ZScript's Screen->Flags[] can access it. I think.)
* Fixed the bug where the checkmarks in the Cheat menu were on the wrong menu items (and the wrong menu item being disabled sometimes.) ( _L_, 2009-08-21 03:10:10 )

* Fixed some slight errors with the default template.
* Joe123 and myself would like to take this time and announce that phase 1 of operation ZScript: Draw Text is underway. I could tell you what this is, but then I'd have to kill you. ...err, actually it's not fully implemented yet is all. Details will be in zscript.txt. ( Gleeok, 2009-08-20 19:52:26 )

* Updated zscript.txt and std.zh slightly.
* Fixed the bug where Link would be drawn over 'walk down' type combos if he was charging or spinning.
* Fixed another charging bug where you could not trigger 'touch' type combos if Link was not facing them. ( Gleeok, 2009-08-20 05:51:01 )



Build 1057 - windows
* Added ffc->InitD[], which refers to the value of the ffc's D Input values are they are stored in the .qst file
* Made some changes which could've been causing underlying problems with ArcTan
* New build, as we've had quite a few serious bugs fixed recently. ( Joe123, 2009-08-19 08:45:41 )



Build 1056 - linux
* Added a new option to screen data, under the S.Data 1 tab. Now you can set one layer to be either invisible or visible only through the Lens of Truth.
* Some of the Magic and Fire Boomerangs' default data had gotten mixed up. That's fixed now.
* Fixed another ZQuest crash on Linux. The quest header dialog this time.
* That's enough crash fixes to warrant a new build, don't you think? Back up your quests, and all that. ( Saffith, 2009-08-18 17:26:23 )

* Fixed itemdata->Keep
* Fixed the slow-down issue when setting Link->Item
* Added some new Trace-like functions to ZScript for de-bugging. They are:
* TraceB for tracing a boolean state.
* TraceToBase which traces an integer to a number of numerical bases.
* TraceNL which traces a newline.
* ClearTrace which clears allegro.log completely.
* Added Link->Invincible to ZScript, which is reasonably self explanitory.
* Added Screen->EFlags to ZScript, which is the same as Screen->Flags, but for the E.Flags tab of Screen Data. Read-only.
* Added npc->MiscFlags, which allows acces to the 'Misc. Flags' tab of the Enemy Editor, and is read-only.
* Added some new utility routines to std.zh ( Joe123, 2009-08-18 16:36:40 )

* Fixed a screen data dialog crash on Linux.
* Fixed the boomerang's movement after hitting a blocking combo.
* Changed step combo detection.
* Fixed string preview when 25 appears at the end of a line.
* Tweaked the Armageddon Games logo a bit. Those gaps were bugging me. ( Saffith, 2009-08-14 22:40:46 )

* Added left analogue joystick support to ZC. You can now move using the d-pad or left analog.
* Changed the default joystick buttons to reflect the updated button support from way back to build 900 or so. Ex1-4 are now L2, R2, but4, and but3. select=menu, start=start, etc. You can still change these in the controls menu. ...Hey 1990 called, it wants it's button configuration back. ( Gleeok, 2009-08-13 19:38:59 )

* Fixed screen info crashing on some shops.
* Fixed item editor crashing on long item names.
* Repositioned progress boxes in ZQuest's classic interface when scaled up. ( Saffith, 2009-08-13 18:18:20 )

* Fixed the bug where the Old Tile in the Enemy Editor's tile selection dialog was flipped 90 degrees.
* Changed & improved some NPCT_ constant names in std.zh, no doubt ruining hours of work on your part.
* ZQuest: Added an FFC-specific tooltip that is displayed when mousing over an FFC.
* Fixed the bug where instant-appearing strings (by a control code setting the text speed to 0, or pressing B) would be displayed one character too long for their row.
* Renamed the 'Touchy' combos to use the word 'Continuous', which better describes what they do differently.
* Now the Touchy combos do something different. Here it is: normally, if you have a Secret Tile flag on a Bush combo (for instance), and the Secret Combo is a Grass combo (for instance), and you slash it, once, at just the right distance, the Bush combo is slashed (creating the Grass combo) but the Grass combo is not. With the Continuous type, the slash's influence 'continues' from the Bush combo and affects the resultant Grass combo as well. Comprehende? Good. ( _L_, 2009-08-13 06:27:11 )

* Fixed the bug with slashing weapons causing Link to use slash tiles even he doesn't have the slash ability.
* Fixed the bug where ZC crashes if you use a bomb while the arrows are on the other weapon button.
* Fixed bugs regarding slash combos. ( DarkNation, 2009-08-12 20:34:24 )

* Fixed a special case crash in the player along with some assumptions on how zc handles video card errors. To put this another way: Go ahead and try to get zelda-w to crash on startup now. I dare you. ;-D
* Updated qst.dat. Previous proposed fixes in the default template should now be withstanding. ( Gleeok, 2009-08-12 18:55:16 )

* Restored the keyboard shortcuts in the enemies dialog, including the otherwise inaccessible copy and paste functions.
* Fixed a crash when the screen info displays certain tile warps. ( Saffith, 2009-08-12 16:51:05 )



Build 1046 - windows
* The maximum number of hearts displayed on the file select screen is now 48 (very large numbers of hearts had looked a little interesting in previous
* Implicit casts from Float to Bool in ZScript no longer throw up a compiler warning. One day in the distant future when we have discrete Integers and
* Added ffc->Script, which is and only ever will be read-only.
* Link->Equipped is no longer read-only, and I've added a few functions to std.zh for this.
* Added Link->Invisible. No more dummy LTM items!
* Added npc->Type, which is read-only.
* After an horrifically tedious few hours of coding I bring you Screen->Flags, which can only be read-only. I also added a couple of script-specific screen
* I have spent quite a long time testing them, but it is very possible that some might be returning the wrong flag (as I've had to rearrange all of the
* I'm experimenting with making InputMouseX and InputMouseY set-able via allegro's position_mouse(). If it turns out to be causing problems it can be ( Joe123, 2009-08-12 12:48:24 )



Build 1045 - windows
* New build. Added some extra debugging code to the initialization routine.
* Fixed some inconsistencies with the Patra and Gleeok enemies in the default template. Thanks Pokegamer! ( Gleeok, 2009-08-12 04:51:54 )

* Fixed the bug where the mouse cursor would vanish when it was outside the drawing area in combo alias mode.
* Fixed the tile page "goto page" dialog so it no longer prompts to goto the page you're already viewing.
* Recanted the previous offering of the CanWalk functions based on redundancy alone. Now it's just one function 1/4 of the size. Hey, they can't all be winners, right? ( Gleeok, 2009-08-10 23:06:20 )

* Fixed the bug where finishing the first or second quest would break the next one. Unfortunately, this won't fix saves that are already affected. ( Saffith, 2009-08-10 20:32:07 )



Build 1042 - linux
* Fixed a couple of crashes on Linux.
* Accordingly, here's a new Linux build, assuming I've done this right. ( Saffith, 2009-08-09 14:03:31 )

* Fixed the bug where the controls menu was only accepting the first eight of the joystick buttons.
* Added again the InputPress stuff for right analogue, which somehow I managed to leave out the last time. Sorry about that. ( Gleeok, 2009-08-03 03:16:31 )

* Added the feature whose absence was preventing the String Editor from ascending to true greatness (...well, one such feature, anyway). It is a Duplicate button which lets you duplicate an existing string. Now, instead of tediously and intricately setting the tile and attributes for a bunch of new strings, you can just duplicate a previous string and edit that.
* Removed the 'View Darkness' menu item. You'll just have to use the L key again.
* Fixed the bug where continuing in a dark screen wouldn't set the room's darkness correctly.
* New ZQuest hotkey: holding down Control while pressing the arrow keys switches to the destination screen of the Side Warp in that direction, if there is any. This is convenient for quickly switching to warp destinations without having to open the Side Warp dialog. Tell a friend! ( _L_, 2009-08-02 01:30:52 )



Build 1038 - windows
* Testing out a new windows build.
* Please remember to BACKUP your quests! If you like to perform any downloading rituals, now is the time. I prefer the highly scientific fingers crossed please work please work method myself. ( Gleeok, 2009-08-01 04:31:18 )

* Fixed the bug where peahat AI would fail on the left side of the screen if they were placed there by a script or other means.
* Added some general purpose functions to std.zh: RadtoDeg, DegtoRad, and Rand2.
* Added a few more functions to std.zh for the benefit of simplifying solidity collision checking. These are CanWalk() and CanWalkSideview(). Now you can use one line of code where previously it may have taken 20.
* ZScript: Hey, remember how the scale and rotation arguments for DrawTile and DrawCombo didn't work? Well I sure hope you haven't been setting these. Why, you ask? Because they work now that's why! :D That's right, you can scale and/or rotate these now using single or a block of size less than 20. -Note that arguments 9 and 10 (anchor x,y) are still reserved for future use, so leave these at 0. Also currently you cannot scale or rotate a transparent tile or combo...for now. Do me proud. ( Gleeok, 2009-07-31 22:08:50 )

* Fixed a bug such that if Link is moved by a script while shooting the Hookshot, but the Hookshot itself is not, the Hookshot will dismiss itself after it retracts and Link isn't caught in an infinite loop waiting for the head to arrive.
* Now, when pasting a screen, the screen's selected Door Combo Set is pasted as well as the Doors.
* Large Mode: Fixed a bug where some adjacently-listed Commands buttons (such as 'Save' and 'Screen Data') were being incorrectly disabled or enabled.
* Fixed the bug where 'Spinning Tile' combos placed directly onto the screen (that is, without combo cycling etc.) wouldn't generate the Spinning Tile enemy when the screen was loaded.
* Fixed the bugfix relating to NES quest push block CSets. Now it works as previously advertised in b1024. ( _L_, 2009-07-27 09:18:08 )

* ZScript: I bet all you zscripters out there were wondering why it currently wasn't possible to access Right Analogue Joystick Input for those of you who use game pads. Well now you can. Added new Link boolean values to ZScipt: You can set or read these by calling "Link->InputAxisUp", *Down, *Left, and *Right. Also going along with the current trend, there are also InputPress"*" values as well for these. However due to memory constrictions these have been shortened to "InputPAxisUp" etc. Have fun with these!
* Added ComboX() and ComboY() functions to std.zh. These are basically the inverse of of "ComboAt()" in that they return the X,Y coordinate of said Combo. ( Gleeok, 2009-07-27 04:31:28 )

* Fixed several inconsistencies in the 1st, 2nd, and 3rd quest files and their proposed versions.
* Fixed a bug where newly-created quests would cause your hp to drain if you picked up a sword.
* Implemented Gleeok's fix for the Fullscreen to Windowed lock up bug. ( DarkNation, 2009-07-26 21:13:42 )



Build 1032 - windows
* Err let's try this gain.... ( Sean, 2009-07-23 23:22:17 )



Build 1031 - windows
* [ZCL] [BUGFIX] Windows Scale not keeping it's settings ( Sean, 2009-07-23 23:18:11 )



Build 1030 - windows
* Let's try that again then... ( Joe123, 2009-07-23 10:45:54 )



Build 1029 - windows
* Added the Item Drop Set Editor to the favourites list in large mode
* Fixed the Misc[] arrays in zscript.txt
* Added npc->D[], which correlates the npc's Miscellaneous Attribute from the Enemy Editor. They are read-only.
* Added Link->Equipment, which contains the item IDs of what Link currently has equipped. It is read-only
* Added some functions to std.zh (and fixed the ones I added last time). You may find them useful if:
* A) You look at the number '10' and think of how many digits there are on your hands
* B) You loose sleep at night over the symbols '&', '|', '<<' and '>>' ( Joe123, 2009-07-23 09:32:44 )



Build 1028 - linux
* ZCL for linux build ( Sean, 2009-07-22 12:39:51 )



Build 1027 - windows
* [ZCL] [Bug Fix] Sometimes ZCL doesn't read the settings properly. Thus Ignoring them
* [ZCL] [Bug FIx] Fixed the FPS problem
* [ZCL] [GUI] [New Feature] Name Entry Mode in Zelda Classic Tab
* [ZCL] [GUI] [New Feature] Settings are read in Title Screen now
* [ZCL] [GUI] [New Feature] Combo Brush in ZQ Tab
* [ZCL] [GUI] [New Feature] Enable Tooltips in ZQ Tab
* [ZCL] [GUI] [New Feature] Floating Brush in ZQ Tab
* [ZCL] [GUI] [New Feature] Mouse Scroll in ZQ Tab
* [ZCL] [GUI] [New Feature] Overwrite Protection in ZQ Tab
* [ZCL] [GUI] [New Feature] Palette Cycle in ZQ Tab
* [ZCL] [GUI] [New Feature] Show Ruleset Dialog When Creating New Quests in ZQ Tab
* [ZCL] [GUI] [New Feature] Tile Protection in ZQ Tab
* [ZCL] [GUI] [New Feature] Uncompressed Auto Saves in ZQ Tab
* [ZCL] [GUI] [New Feature] Use Static for Invalid Data in ZQ Tab
* [ZCL] [GUI] [New Feature] Auto backup features in ZQ Tab
* [ZCL] [GUI] Got rid of the white space
* [ZCL] [GUI] Major clean up of the GUI
* [ZCL] [GUI] [Removed Feature] A lot of tabs were removed because of the GUI clean up
* [ZCL] [GUI] [Removed Feature] Welcome screen removed
* [ZCL] [GUI] [Removed Feature] Removed secondary tabset icons
* [ZCL] [Core] Edited how ag.cfg is being read :) ( Sean, 2009-07-22 00:08:39 )



Build 1025 - linux
* OMG A LINUX BUILD :D. I still think about you guys. Also later down the road you guys will see a new build of ZCL. Here is a teaser shot of that http://dproj.ath.cx/tmp/newzcl.jpg ( Sean, 2009-07-21 13:22:41 )



Build 1024 - windows
* It's my honour to present build 10000000000 to all those ZC users who can count in binary. Speaking on behalf of Joe123 and myself: though the two most commonly used ZQuest menus have been rearranged, it is our belief that even several years of muscle memory can be overcome after about twenty minutes of use, and the gains from its more efficient menu item placement are not to be idly cast over. (But we are of course receptive to feedback with regards to specific menu arrangement decisions and their worth thereof.) ( _L_, 2009-07-21 06:12:06 )

* Fixed the bugs where fireball-shooting Statue combos and Spinning Tile combos wouldn't generate the appropriate enemies when they were placed using scripts and other methods. This includes occasions when an existing combo's type was changed to 'Spinning Tile' or 'Statue' using Screen->ComboT[].
* ZQuest: Added a right-click menu that appears when you right-click visible FFCs. The options are: Edit FFC, Copy FFC, and Paste FFC (that is, overwrite the clicked FFC with the copied FFC).
* An option has been added to the standard right-click menu allowing you to move the next unused FFC to the mouse's coordinates, and then edit it. This is believed to be a smoother, more natural manner of instantiating FFCs than using the Screen menu item all the time.
* Another option in the same right-click menu: Paste FFC as FFC n, where n is the first unused FFC in the screen. It lets you paste a copied FFC into the screen overwriting an unused FFCs. This function can also be used to duplicate FFCs quickly and smoothly, by copying and pasting them into the same screen. That sounds highly useful, right? ( _L_, 2009-07-21 04:53:15 )

* Fixed the bug where scrolling in the bottom panel in large mode would move the combo list
* Correctly assigned the blank favourites command to 'Default Items'; it no longer crashes ZQuest
* Set the initial focus of the Compile Script and Assign Compiled Script dialog (you can now compile scripts without using the mouse)
* Items can now be edited directly from the 'Screen Item' and 'Special Item' dialogs, and Enemies from the 'Select Enemy' dialog
* Re-arranged the right-click menu, moving select and scroll to combo to the top, and giving 'Draw Block' its own sub-menu, with some more block sizes
* In large mode, the 'Current Combo' and 'Cycle Combo' boxes now show the walkability and inherent flags of the selected and cycle to combo when the respective toggles are activated
* Shift-Click now sets the CSet of a combo on-screen to the current CSet without changing the combo
* Documented the 'InputMouseB' and 'InputMouseZ' variables, which were added to ZScript but not mentioned. They are read-only.
* Removed ffc->WasTriggered() from ZScript as it does nothing. ( Joe123, 2009-07-19 08:18:19 )

* Fixed the bug where scrolling with the mouse wheel in large mode only changed the current map in the top left hand corner of the minimap
* The 'Y' key now opens the 'Compile Script' dialog, and the 'I', 'C', 'E' and 'X' keys can be used to select the buttons in that dialog
* The braces '{' and '}' can now be used to increment and decrement the current flag, for the benefit of laptop users who have no * and / numpad keys
* Reorganised the flags in the Screen Data dialog under various headings, and removed the unused flags from view
* Enemies with Extend set to >= 3 via ZScript now drop items in the middle of their graphics rather than in the top left corner. This does not affect NES Bosses
* Other (Floating) and Other enemy types no longer have their random and halt rates and homing factors truncated to small integer values in the enemy editor as they do not affect the enemy's movements and may be used as an 'input' to a script
* Added e->Homing to ZScript, which should only be read and not set ( Joe123, 2009-07-17 16:59:07 )

* Fixed the bug where the Tile Editor's 'Show Only Unused' option wasn't displayed correctly in Large Mode.
* Added some extra entries to the Tile Editor right-click menu, providing access to a few features formerly restricted to hotkeys. These are the Color Depth option (bound to B and control-B), and the Show Only Unused option (bound to control-U). This later feature now takes the form of three options: Hide Used, Hide Unused, and Hide Blank, with Hide Blank as the default.
* Conversely, these are added to the Combo Editor right-click menu: Insert New (bound to I), and Delete (bound to shift-I).
* Now, tiles hidden with the Hide options are shown as invalid static if you have invalid static turned on. You might want to turn it off before you export a tile page, though.
* Large Mode only: 8-bit colour tiles are now marked with a tiny flashing '8' in the Tile Editor, to distinguish them from 4-bit colour tiles.
* Fixed the bug where the Edit and Done buttons in the Select Combo dialog were incorrect.
* You know, I was going to implement the 'Spinning Tile (Random)' Combo Type from scratch, but then I pondered and thought... nah. So, it's now 'Unused'. If you still want the behaviour, ask someone to write a script that, once every 3 seconds, randomly chooses a specific kind of combo and changes it to a 'Spinning Tile (Immediate)' combo.
* Also, the matching default enemy has been changed - it is now called 'Spinning Tile (Enemy Sprite)' (and the other is 'Spinning Tile (Combo)') and has been given some default tiles, to show that you can make spinning tiles with a standard tile outside of that defined by the combo that summoned them.
* Added some Spinning Tile tiles to the default quest, as well as a Spinning Tile combo, and cycling combos allowing one to make use of them.
* Increased the spinning tile enemies' default step speed from 50 to 200, where it used to be. Don't know how that got that way.
* Enemy Editor: Fixed the 'bug' where it looked like you ought to be able to set the Flip of an enemy's tile, even though in reality you can't.
* Select Combo: fixed the bug where the displayed 'Cycle' combo number was the same as the current combo number.
* Enemy Editor: Implemented the '4-Frame 4-Dir + Tracking' animation type, which previously did nothing. What? Nothing? Seriously?
* Also added '2-Frame 4-Dir + Tracking'. (As you know, 'Tracking' means that the enemy will always face Link, like an Eyeball-type combo.)
* Fixed the bug where the 'Choose Freeform Combo' dialog's combo preview would slide upward every time you opened it.
* Reset some of the default item data (Sword 1, Sword 2, Heart, Heart Container) in the default quest, fixing several dastardly bugs where these items killed Link or else didn't work.
* Fixed the bug where NES quest push blocks sometimes used CSet 9 unwantedly. Now, they only use CSet 9 in NES Dungeons while the related NES Fix quest rule is off. ( _L_, 2009-07-13 06:41:47 )

* Secret Combos can now be accessed by pressing 'F5' in ZQuest, and re-organised the 'Screen' menu.
* Moved the Screen Data dialog around so all of the tabs fit on one screen.
* Moved the 'Is Flashing', 'Is Flickering' and 'Is Transparent' flags in the Enemy Editor to the previous tab, to seperate the spawning flags from the other flags.
* The non-numpad +/- keys now work in RomView.
* Under the level 1 cheat, 'H' can now be used to refill hearts in addition to Numpad *, and 'M' can be used to refill magic in addition to Numpad for the benefit of laptop users. ( Joe123, 2009-07-07 14:29:06 )



Build 1018 - windows
* Fixed the crash that occurs when Link takes a Maze Path route that leads north of the northmost screens.
* Fixed the bug where dismissing the 'Go To' cheat dialog caused the music to resume even when the game was inactive (that is, greyed out) when you entered the dialog.
* Fixed the bug where one could use the 'Go To' cheat while the game was inactive, and then, without resuming the game, quit the quest and open a different quest, causing Link, in the different quest, to be warped where the dialog had specified. Unlimited cheating potential: denied!
* Fixed the small bug where dismissing a 'Quit' or 'Reset' dialog with a press of Return/Enter while in-game would also open the pause subscreen as soon as the dialog was dismissed.
* Finally added a button to the Tile Editor that, when clicked, lets you save the current tile page to a BMP file. It is most desirable for those using Large Mode, and you must be appalled that we waited this long before implementing it. My apologies. ( _L_, 2009-07-07 04:09:25 )

* Fixed the Large Mode bug where the 'Choose Freeform Combo' dialog wrongly positioned the FFC information over the combo preview. Sorry.
* Changed the name of Screen Flags: 'Use As Save Screen(SP)' to 'Save Point -> Continue Here', and 'Use As Save Screen (AUTO)' to 'Save Game On Entry'. This is to reflect that you don't really need the firstmentioned Screen Flag alongside a Save Point combo, but it's what most situations would call for.
* Tweaked the Large Mode screen information: now, screens with Save Point combos and the 'Save Point -> Continue Here' are labeled 'Save-Continue Screen', screens with just Save Point combos are labeled 'Save Screen', and screens with the 'Save Game On Entry' flag are labeled 'Automatic Save/Continue Screen'.
* Fixed the bug where hookshot-deflected weapons would occasionally explode like a bomb. ( _L_, 2009-06-29 04:44:36 )

* Fixed the bug where gaining magic and crossing into a Ring's magic cost threshold wouldn't update Link's colour instantly.
* Fixed the bug where losing magic and crossing out of a Ring's magic cost threshold wouldn't permit Link to use a lower-level Ring with a lesser cost.
* Fixed the bug where losing a large sum of magic through a Ring could cause Link to have negative magic (which, of course, wraps around to positive magic.)
* (To clarify: even if you run out of the magic to use it, a Ring will still appear in the subscreen, and still have an active Link Tile Modifier. This is intended behaviour.) ( _L_, 2009-06-29 00:51:08 )



Build 1015 - windows
* Copied the recent fixes to the original quests to the proposed versions. ( DarkNation, 2009-06-28 20:04:46 )

* Added sensitive (touchy) versions of the slashable combos. Old quests will autoupdate their slashable combos to these versions for compatibility.
* Fixed the bug where beating a default quest would set your continue hp to 0 so you die immediately upon starting the next quest.
* Updated the ZQuest large mode font to include some missing elements (like the up and down arrows on the tile and combo screens and the check mark on the enemy list screen).
* Fixed the slide speed of the Zol enemies.
* "Fire 2 Trail (Enemy)" and "Magic (Ice, Enemy)" are now listed with "Disabled" tags until these are implemented after 2.5 is released.
* Fixed a bug where the screen wouldn't update in ZQuest (and sometimes it would appear to get stuck on a purple screen when you first started).
* Fixed the bomb and super bomb damage ratios to Link.
* Fixed the bug where latching your hookshot onto a hookshot combo while facing downwards on a sideview screen would cause the chain to fall off the screen and Link to freeze.
* Music now stops when you warp via a tile until you arrive on the new screen as it did in Zelda 1.
* The low hp warning beep now pauses when you enter a warp or a cave as it did in Zelda 1.
* Fixed the bug where bombing through a wall would not update the connecting wall in the connecting room even if the room had been visited previously until you entered the next room.
* Unused items at the end of the item list are now preceded with 'zz' instead of just 'z' to help them stay at the bottom of the list correctly.
* The fairy guy now animates properly when the new enemy tiles rule is enabled.
* The -scale command-line switch for ROMView has been disabled for the timebeing due to it always crashing.
* The default quests now properly hide the items in the subscreen while the subscreen is scrolling up or down.
* The default original subscreen type now properly hides the items in the subscreen while the subscreen is scrolling up or down.
* Sound and music now pause while the "Goto" cheat dialog is open.
* Fixed the bug with the translucency rebuild command after opening an image in the tile grabber.
* The 'reduce color' and 'show original palette' commands int the tile grabber now disable each other as they are mutually exclusive.
* The plus and minus (equals) keys on the main keyboard now work in the tile and combo selector windows. ( DarkNation, 2009-06-28 20:01:08 )

* Attention: I've radically altered expanded the scope of my previously mentioned Large Mode error-listing display feature. Now, in addition to just simple errors, it now lists, in small white-on-black text in the corner of the screen area, most every significant mechanical feature of the screen before you. This includes the presence of: Screen State Carryover, Timed Warp, Maze Path, the 'Sideview Gravity', 'Invisible Link', 'Save Screen', 'Continue Here' and 'Treat As..' Screen Flags, the String, every Room Type and Catch All, and all relevant Tile and Side Warps. This is entirely practical because the majority of screens in a quest would have less than 3 of those features. This information display can be toggled by tapping N if it obscures something important.
* Do you know what this means? What this means is that I have made most of the 'Small Mode panels' functionally obsolete in Large Mode! This is tremendous tidings, for those panels have been a bugbear in the Large Mode interface for years. Now, every relevant detail conveyed by those panels (except the increasingly irrelevant Screen Flags panel) is covered by the screen info display, and what remains - the eight warp return and coloured square selectors - has been placed on a single compact panel. (But don't forget that all of the panels still exist in Small Mode.)
* And, having reduced those two panels into one, I have also been permitted to expand the Large Mode minimap selector even further! It is now 3 times the size of the Small Mode selector, and is about as large as it can practically be.

* Of course, you're thinking I forgot something important. But I haven't! A box showing the 'Cycle' of the currently selected combo has been added to the top of the Large Mode combo selectors.
* Large Mode: Enlarged the Secret Combos dialog, the Select Enemy dialog and the Choose Freeform Combo dialog.
* Added a preview pane to the Select Enemy dialog, and fixed some bugs with the pane's choice of 'face' tiles for Gleeok and Aquamentus enemy types. ( _L_, 2009-06-23 04:59:43 )

* ZQuest: Replaced the 'Lost Woods' MIDI with a Zelda piano medley called 'The Travels of Link' that some of you might have already heard at vgmusic.com a few years back - and yes, I received permission from the sequencer, Jeff Glenen. This new MIDI is 32 minutes long, so there's a submenu that lets you choose from 19 individual Zelda songs within the medley. (There are actually more than 19, but the submenu wouldn't fit in Small Mode's screen if I added any more.)
* Large Mode: enlarged the Edit MIDI dialog, the Select/Add Door Combo Set dialog, and the Map Import Bias dialog.
* Added a 'Help' button to the Combo Flag dialog, Room Type dialog and Guy dialog. Press it to get a terse description of the currently selected Combo Flag, Room Type or Guy, so you can learn what exactly 'Block Hole' does, how the '3-Stair Warp' room works or what tile Ama uses.
* Screen Data: Moved the Timed Warp related flags and input boxes to their own tab, so that there is room for an included explanation, and so that nobody confuses them with, say, Room State Carryover. Also moved 'Sideview Gravity' to the first tab, and 'Floating Traps' to the E. Data tab. ( _L_, 2009-06-21 10:35:39 )

* Fixed the ZQuest tooltip crash. It turns out that some combo type names, such as 'Treasure Chest (Locked, Copycat)' were too long for the tooltip bitmap. The bitmap has been expanded.
* Fixed the bug where Gohmas frozen temporarily by a temporary Clock would get their movement routine confused.
* Fixed a few slightly malfunctioning Integrity Checks.
* Amazing ZQuest feature alert: screen integrity errors are now automatically identified and listed in the lower-right of the current screen in Large Mode. These include most of the errors that the Integrity Check quest report diagnoses. Outright mistakes (such as not setting a Guy for a particular Room Type) are printed in red, whereas suspicious behaviour of unknown intent (such as setting the Special Item to item 0) is printed in innoculous grey. ( _L_, 2009-06-19 10:45:58 )



Build 1010 - macosx-Leopard
* Fixed the bug where the continue screen was wrong if Link tile-warped to a 'Do Not Continue' screen soon after starting the game.
* Fixed the bug where if Link, when 'restarting the level' (Wallmaster, Wind Wizzrobe, Farore's Wind), was sent back to a different DMap then the current one, then the DMap palettes wouldn't change during a subsequent inter-DMap scrolling warp.
* Screen Data: Moved the 'Invisible Enemies' checkbox to the E. Flags tab.
* Added a brief descriptive caption to the Maze Path dialog, as well as some confirmative warning dialogs.
* Changed the default Farore's Wind sound effect... again?! (But this time it's more like what I want. I think.) ( _L_, 2009-06-16 18:58:53 )

* Fixed the bug where constant-moving Traps would sporadically use their Special Tile unwantedly.
* Seemingly fixed the bug where using a script to set a Patra core's HP to 0 wouldn't kill the flyers as well.
* Added to the Default submenu: Items (which is now separate from Sprites) and Enemies.
* Removed '<Slide-Proof>' from the names of the Zora, Boulder and Rock enemies.
* Default Template: fixed the bug where one of the combos in the default room 0x80 was wrong.
* Default Template: fixed the bug where the Ladder 1 item's name was 'Ladder' instead of 'Ladder 1'.
* Fixed the bug where a Side Warp Passageway would use the screen's Tile Warp destination instead of the Side Warp destination. ( _L_, 2009-06-08 10:49:07 )



Build 1008 - windows
* Fixed the bug where coloured string text wasn't being coloured correctly in the String Editor preview pane.
* Fixed the bug where Link would re-enter Cave combos and such as soon as he exited or appeared on them, if they were on the top row of the screen.
* Fixed the bug where Link would be able to prematurely exit the fairy circle animation if a string was still visible on-screen. ( _L_, 2009-05-29 03:54:27 )



Build 1007 - macosx-Leopard
* Fixed the bug where the 'Messages Can Be Bypassed With The B Button' rule wasn't working correctly with the most recent string format.
* ZScript: division and modulo has been sanitised against divide-by-zero crashes. Now if a division-by-zero operation is performed, an error will be sent to Allegro.log and the arbitrary value of 0 will be returned. Make sure you don't divide something by zero on purpose, though.
* Fixed the bug where certain item classes had a mislabeled Action Sound.
* Fixed the bug where the Super Quake Scroll's Action Sound wasn't being used. ( _L_, 2009-05-18 02:52:16 )

* The clouds part, an angelic choir sings, and down from the heavens comes the feature we've all been waiting for: the ability to click and drag FFCs in ZQuest. Just click on them with the standard cursor and drag them wherever you want! The only downside is that you have to move an FFC aside if you want to change the underlying combo beneath it.
* Hopefully fixed the bug where non-Darknut walking enemies would use their Special Tile wrongly, and also fixed the bug where enemies with the '3-Frame' animation would actually use four-directional tiles.
* Added the new '3-Frame 4-Dir' animation type. I would like to remind everyone now that the '3-Frame' animation is actually quite similar to the 4-Frame animation. It runs thus: 1->2->3->2->repeat. If any of you have 4-Frame animations where panels 2 and 4 are the same, consider converting to 3-Frame animation for the extra tilespace efficiency.
* Fixed the bug where the 'Learn Slash' and '1/2 Magic Upgrade' screens would endlessly play a sound effect, and the recurring bug with the 'Door Repair' room type.
* ZScript: changed Game->GetMIDI() - now, custom MIDIs are numbered from 1 upward instead of 7 upward, for compatability with Game->PlayMIDI().
* Fixed the bug where default Wizzrobes in pre-Enemy Editor quests had a Misc. Attribute 5 of 0 instead of 74.
* Level 4 Cheats: added the option to show the names of FFC scripts currently being executed. Use it to see if your FFC is carrying over, or the script is exiting at the right time, or somesuch. ( _L_, 2009-05-10 01:58:34 )



Build 1005 - linux
* [ZCL] Small bug in the interface I had to fix :P ( Sean, 2009-05-04 12:52:16 )



Build 1004 - windows
* [ZCL] Fixed a bug with scaling option not working. (Windows only issue) ( Sean, 2009-05-04 12:21:46 )

* The non-numpad +/- now change CSet when editing and grabbing a tile./r/n * Link's charge and jump sprites are now moved when pressing 'M' in the tilepage./r/n * The 'Select Enemies' dialog is now enlarged slightly, and the "copy" indicator positioned correctly in large mode./r/n ( Joe123, 2009-05-04 04:51:14 )



Build 1002 - linux , windows


Build 1001 - macosx-Leopard
* Now that we have reached the COMPLETELY ARBITRARY milestone of 1,000 source code updates since the equally arbitrary time of January 2007, I would just like to take the time to thank testers who've written clear & exact bug reports, testers who've helped find crashes within hours of the new build, testers who've taken the time to make versatile and thorough testing quests, testers who've pointed out my mistakes when I've been wrong in diagnosis, testers who've made certain that even the simplest bug has been genuinely fixed, testers who've been patient but firm when a bug goes unchecked for months, testers-
* What?
* What do you mean, this isn't revision 1000?
* Really?
* By how many minutes?
* Gosh. What're the odds, eh?
* .........
* ...Well, um, nevermind then. Forget it. Don't mind me. Carry on. ( _L_, 2009-05-02 04:31:47 )



Build 1000 - windows
* The normal +/- keys now function on the tilepage, for laptop users.
* The Misc[] values are no longer truncated to integers.
* ffc->Misc[] values are now retained for Carryover ffcs changing screen.
* Added Game->GetMIDI to ZScript.
* Build 1000 is upon us! ( Joe123, 2009-05-02 04:05:23 )

* Fixed the bug where the quest file wasn't marked as unsaved when you pasted a CSet in the Palette Editor.
* Fixed the bug where, with NES movement enabled, using a script to slightly shift Link perpendicular to his facing direction wouldn't work.
* Fixed the bug where, if a Fairy combo flag's heart circle animation was interrupted, it wouldn't be disposed of afterward.
* Renamed the 'Heart Ring' Quest Rules to use the name 'Heart Circle'.
* Game event logging: the 'Screen Secrets triggered' event now signifies if secrets were triggered by Enemies->Secret or the Secrets screen state.
* Fixed the bug where stepping onto a Raft Path combo flag while using the Walk Through Walls cheat would cause unintended rafting.
* Fixed the bug where the Flippers wouldn't be properly disabled by DMap Item Disabling.
* Added several extra debugging level 4 cheats to the Cheat menu. These include the ability to show and hide layers (including ZScript primitives) and sprites, and the ability to turn on and off lighting in the screen. Also, some other menu items have been shifted to the Refill submenu.
* Removed the enemy animation types 'Slow Flip' and 'Slow 2-Frame' because they're redundant and also buggy. Affected enemies will be updated to use 'Flip' or '2-Frame' and have their Frame Rate values doubled. (This fixes the Fairy guy animation bug as well.)
* Also removed '4-Frame 3-Trap', 'Pols Voice', and 'Darknut (New)', relegating their combined functionality into '4-Frame 4-Dir'. As a result, Pols Voices now use their Special Tile for their leaping animation, rather than just their usual tile plus 20, and Traps now use their Special Tile for something rather than just their usual tile plus 20 (but only when they were placed by the 'Middle Traps' Screen Flag).
* Also, the enemy animation dropdown menu in the Enemy Editor is now alphabetically sorted. Good!
* Fixed the bug where Link couldn't walk a Maze Path direction that happened to lead outside of the DMap's bounds. ( _L_, 2009-05-02 03:28:45 )



Build 998 - linux , windows
* ZCL Release only ( Sean, 2009-04-29 10:26:34 )



Build 997 - linux
* This version of ZC was built on svn 990
* This is the last ZCL 2.5 release for linux. Windows Version coming soon
* I made this build so Majora would stop whining :P ( Sean, 2009-04-27 19:35:42 )

* New Quest Rule: 'Things That Remove Sword Jinxes Also Remove Item Jinxes'. It applies to Potions, Triforces, and Fairy combo flags. This is set for all new created quests from now on.
* Moved the 'No Position Offset for Screen Items' rule to the 'NES Fixes' category.
* Fixed the bug where Link's shadow wasn't visible while the screen was scrolling.
* Fixed the bug where a Patra's Misc. Attribute 5 interfered with the creation of the inner eyes.
* Fixed the bug where oval-type Patras' inner rings weren't using the oval pattern.
* Fixed the bug/crash where an enemy that splits into itself wouldn't continue to split into itself. ( _L_, 2009-04-24 02:40:27 )

* The bug where strings were stored backward in ZScript should be fixed by now ( jman2050, 2009-04-21 11:15:10 )

* I noticed that the Quest Rule 'Slow Enemy Animation' only has the effect of internally doubling each enemy's Frame Rate. So, it is done away with, and affected quests will be updated.
* Fixed: the Frame Rate value no longer affects a teleporting Wizzrobe in any way.
* Because someone asked for it: the teleporting Wizzrobe's Misc. Attribute 5 now controls the amount of frames duration between its disappearing from the screen and its reappearing elsewhere in the screen. Default is 74. Minimum is 0. Maximum is 1200, which is 20 seconds - a number I chose myself.
* Fixed the bug where non-Zora enemies with the 'Zora (New)' animation type had incorrect preview tiles in the Enemies dialog. ( _L_, 2009-04-19 07:54:13 )

* Fixed the whistle Warp Ring inconsistency in proposed2nd.qst, and added a missing walk-through wall in level 9.
* Fixed the bug where having a Super Bomb Ratio of 0 would cause division-by-zero crashes.
* Fixed the bug where "Secret Money" Room Types could be used repeatedly if they weren't in a Cave screen. ( _L_, 2009-04-15 10:54:08 )

* Fixed the bug where the Door Repair rooms' fee was being charged repeatedly each frame.
* Fixed the bug where rafting between screens into non-walkable water didn't work with Smart Screen Scrolling.
* Seemingly fixed the bug where the Sword Beam Trigger combo flags couldn't be triggered by higher-leveled sword beams.
* Fixed the bug where the Game Icons dialog had improperly scaled sprites in Small Mode.
* Hopefully fixed the bug where getting items that increased maximum Bomb capacity didn't also affect Super Bomb capacity.
* Also fixed the bug where More Bombs rooms ignored the current Super Bomb Ratio and assumed it was 4. ( _L_, 2009-04-08 10:53:57 )



Build 987 - windows
* Just testing a new upload. ( DarkNation, 2009-04-05 18:23:36 )

* Fixed the bug where the Wand's slash hitbox was vertically wider than the Sword's.
* Fixed the bug where pressing the Sword's button while slashing with the Wand would prolong the Wand's animation.
* Fixed the bug where the DMap flag 'Use Caves Instead of Item Cellars' prevented the use of Passageway warps.
* ZQuest: Fixed the bug where the Link Sprites dialog's tile selectors' clickable areas weren't quite the right size.
* Zscript.txt: Added to the X, Y and Z descriptions a note that float values passed to them are cast to int. ( _L_, 2009-03-28 11:09:41 )



Build 984 - windows
* ZCL Release ( Sean, 2009-03-26 18:05:59 )



Build 982 - windows
* The Misc[] values actually work now, I'd forgotten to initialise them.
* Added the 'VBound' function to std.zh.
* Documented Game->PlayMIDI and w->Behind. ( Joe123, 2009-03-21 07:55:46 )

* Ellipse no longer occasionally fills the exterior instead of interior of the ellipse. ( DarkDragon, 2009-03-18 17:45:42 )



Build 980 - windows
* Fixed the bug where guy fires wouldn't animate with the new enemy tile srule checked
* Fixed a few instances in ZQuest where the screen wouldn't update while manipulating GUI elements.
* Added quest rule which, when checked, removes the slight vertical offset of items placed in rooms, among other places
* Fixed up the init/cheat menu so that map/compass/key values and flags can be manipulated for level numbers up to 511.
* Fixed the bug where Link wouldn't exit water going upwards if the top half of the above tile was solid, regardless of whether the bottom half wasn't. This obviously only refers to standard Link collision.
* Fixed a bug where joypad input wouldn't disable the matrix screensaver.
* Applied two fixes to proposed1st.qst. Thanks AmazingAmpheros!
* Fixed the default Zelda 3 subscreen template. Now the subscreen will look and function properly in a fresh new quest. Obviously, if you're using your own tileset you will have to change the tile references of some subscreen elements.
* Fixed a semi-major memory leak in the script compiler.
* Fixed some bugs involving the hotspot of the fill tool cursor in the tile editor. It should now work properly.
* As always, back up your quests and save files! ( jman2050, 2009-03-18 13:38:59 )



Build 979 - windows
* The selected item tile graphic is no longer distorted in small mode

* The lweapon, eweapon, item, ffc and npc objects in ZScript now each have a miscellaneous array of 8 integers which you can use in your scripts. These are similar to the 'Screen->D[]' variables, but they are not saved with the file.
* New build. ( Joe123, 2009-03-17 16:03:10 )

* Compiling scripts twice no longer crashes ZQ. ( DarkDragon, 2009-03-16 21:20:10 )

* The Vire and Rope animation types no longer show the wrong tile in the enemy selection dialog
* Moved the 'Output ASM Script to Allegro.log' checkbox so it's no longer on top of the 'OK' button in small mode.
* Added the 'Screen->LayerScreen' and 'Screen->LayerMap' commands to ZScript. ( Joe123, 2009-03-15 12:53:33 )



Build 976 - windows
* New build. Back up your quests, all normal caveats apply, yadda yadda. Some important steps have been made in the game's development, and the release of 2.5 looks closer than it ever has. The support of everyone is appreciated by all the developers. ( jman2050, 2009-03-14 20:59:19 )

* Fixed the bug where Moldorms were not using the assigned tiles.
* Fixed the bug where the fill tool cursor would jump during its first use in the tile editor.
* Fixed the bug where the move tool in the tile editor would make the tile slide erratically in large mode.
* Added keyboard shortcuts for the tile and combo editors ('t' and 'k', respectively).
* The '/', '*', '-', and '+' keyboard keys now work like their keypad counterparts (for people without a keypad) in ZQuest.
* The keyboard repeat delay and repeat rate in ZQuest are now customizable. Set them to 0 to turn off key repetition (typewriter mode). ( DarkNation, 2009-03-14 20:36:28 )

* Fixed a pretty bad memory leak in the combo code that caused the memory usage of ZQ to increase while idling on the combo page. This is likely the source of the random crashing.
* Preliminary recoding of the ZQuest rendering code has netted a substantial increase in overall response and speed of the program, especially in dialog boxes and the like. Will do further testing before making a release.
* Fixed bug where pressing space on the combo pages would result in spaces between each combo.
* Fixed a bug where right clicking on a tile in the tile selector would point to a different tile than the one intended.
* Fixed a bug where inserting new combos into the combo page corrupted the combo buffer memory. ( jman2050, 2009-03-14 17:56:49 )

* Doing nothing while viewing the combo table no longer leaks memory and crashes. ( DarkDragon, 2009-03-14 11:59:22 )



Build 971 - windows
* Whoops there was a bug in the setup wizard which would not let ZCL setup correctly. Sorry about that. Must of missed it. ( Sean, 2009-03-12 20:55:00 )



Build 970 - windows
* This new build release is just ZCL only. ( Sean, 2009-03-12 20:36:13 )

* [ZCL] Minor Interface Fixes
* [ZCL] When an error occurs it now fails gracefully. This means it shouldn't give you that corruption message.
* [ZCL] ZCL now supports multiple versions of ZC from 1.92 to current. This is new so expect bugs.
* [NOTE] For all ZCL testers. Please make sure you extensively test this version of ZCL. There was a lot of core rewriting again due to the multi zc support. So please report the bugs! ( Sean, 2009-03-12 20:34:48 )

* ZQ no longer crashes when you create a new quest and click "Zelda 3-esque." ( DarkDragon, 2009-03-11 17:42:53 )



Build 967 - windows
* Shortened the ZQuest key delay. I'll probably make it changable in the config file or something later on
* Hopefully fixed the screen data dialog box. The lesson? If you want to experiment with the code, don't leave your changes in when things don't work! ( jman2050, 2009-03-10 09:46:36 )



Build 966 - windows
* New build to apply _L_'s fixes to the Screen Data dialog since that bug kind of sucks
* Also reverted romview. Sorry about that! ( jman2050, 2009-03-10 07:40:56 )

* Fixed the bug where the Screen Data dialog was invisible! We're all sorry about that.
* Fixed the bug where the 'Layer 2 is Background' and 'Layer 3 is Background' Screen Flags weren't being honoured in ZQuest's screen edge previews. ( _L_, 2009-03-10 00:20:50 )



Build 964 - windows
* Seems like the latest changes broke ZCL. Well I recompiled ZCL and now this would be the correct release to use. Still gots me wondering. Who broke my program :( ( Sean, 2009-03-09 19:52:06 )



Build 963 - windows
* Lots of stuff here. First off, the quest format was changed slightly, so double, triple, and quadruple check that quest integrity isn't compromised. BACK UP YOUR QUESTS as always.
* Added 4 new key/button assignments to the ZC engine. These are defaulted to q, w, a and s on the keyboard and can be changed just like any other button. They don't actually do anything by default, but they can be accessed in scripts just like any other key/button.
* Speaking of input, there are now INPUTPRESSx variables which, for each button, is set ONLY on the frame where a particular button is actually pressed. Should be useful to those planning custom actions.
* Fixed the "memory exhausted" compile-time bug that occurs when making large global arrays.
* Fixed a fatal memory corruption bug relating to tooltips that may be responsible for the rampant crashing in Zquest.
* Fixed the bug where initialized global arrays would bork when starting a quest that has already been saved. Due to the method of this fix, a new global script slot is being introduced: The Continue script. This runs at the same point as the Init script does, but will run EVERY time a quest is started or continued, not just on a new save file as with the Init script. As an extra bonus, just as with the Init script, naming a global script "Continue" will append the user-made code to the generated Continue script.
* A small input delay has been added to ZQuest to allay the phenomenon where ZQuest would lag behind the input buffer. In other words, holding shift+page down to scroll through combos won't continue scrolling long after you've let go of the keys. Of course, the timing is experimental, so if you think it's too sluggish, it can be changed easily. ( jman2050, 2009-03-09 18:13:20 )



Build 962 - windows
* DO NOT USE OR DOWNLOAD BUILDS 961 OR 962! ( DarkNation, 2009-03-09 17:13:33 )



Build 961 - windows
* Fixed a bug where BS Dodongos could randomly spawn inside 1-combo spaces, causing them to be unmoving and drawn incorrectly.
* Fixed a bug where init data wouldn't be kept on tabs other than the current one.
* Fixed a bug where some custom sfx names were reset after going into the tile grabber.
* Fixed a bug where some item names were reset after going into the tile grabber.
* Fixed a bug where some weapon names were reset after going into the tile grabber.
* Fixed a bug where some tile windows in large mode were 1 pixel too small in the x and y directions.
* Fixed a bug where the "First Enemy Carries Screen Item" screen flag wasn't showing up in the editor.
* Fixed a bug where enemy screen flags would be reset if the screen data window was closed on a different tab.
* Fixed the bug where the Next Message dropdown text was partially cut off. ( DarkNation, 2009-03-09 16:14:14 )

* Init Data: Moved the Keys and Rupees boxes from the Misc tab to the Items tab, where they belong.
* ZScript: Fixed the bug where EW_BOMB weapons were being created instead of EW_BOMBBLAST weapons.
* Fixed the bug where projectiles created by Prism combos didn't have valid parent item IDs, potentially causing crashes.
* Fixed the bug where you could walk out of a Candle or Byrna slash before it finished.
* Also fixed the bug where a Candle or Byrna slash didn't display Link's stab sprite. ( _L_, 2009-03-09 03:43:32 )

* Fixed the bug where having the Wavy and Quake effects occur at the same time would result in a crash. ( _L_, 2009-03-02 20:20:31 )

* ZScript: added Screen->Lit, a simple boolean variable pertaining to whether this room is dark or not. Setting it will darken or brighten the room.
* Fixed the bug where the enemy->ID of an NPC_ITEMFAIRY was about 4096 larger than what it ought to be.
* Also, setting enemy->ID will now do nothing, for safety purposes.
* Fixed the bug where setting a Screen->Door[] value to D_OPEN wouldn't do anything.
* Removed the Enemy Flags menu item, now that its purpose is done.
* Now, clicking the 'Flags' button in the Enemy dialog will take you directly to the E. Flags tab in Screen Data.
* The checkbox labels for the 'Zora', 'Corner Traps', 'Middle Traps', 'Falling Rocks' and 'Statues Shoot Fireballs' enemy flags now also display the name of the enemy that has the matching checkbox in its enemy data.
* Large Mode: enlarged the Enemy Pattern dialog, changed the Random pattern's name to Spawn, and added some short explanatory text. ( _L_, 2009-02-23 19:18:41 )

* For personal reasons, Lanmolas now obey gravity, and can fall. Incidentally - if their segments should become vertically separated when one walks off an edge in Sideview, don't necessarily consider it a bug.
* Large Mode: enlarged the Link Sprites dialog, the Misc Colors dialog, the Compile ZScript dialog, and the Doors dialog.
* Also, the buttons in the Doors dialog now display the currently selected door for that direction.
* ZScript: Recanted the recent entirely well-meaning change to Screen->ComboS[], on the basis that it might break backwards-compatability with some prior scripts.
* ZScript: added Screen->IsSolid(int x, int y), which returns true if the coordinate position is treated as solid by ZC (referring, of course, to combos on layers 0, 1 and 2). Since it uses in-engine methods to identify solidity, it should be ideal for the sort of situation where you need to call it 1,024 times per frame. ( _L_, 2009-02-19 20:14:58 )



Build 956 - windows
* Forgot to add in one of the ZScript parser files a few builds ago, so some of the things I added were crashing the compiler. Sorry about that. They're not now. ( Joe123, 2009-02-19 04:12:05 )



Build 955 - windows
* The enemy flags dialog has moved to 'Screen Data'.
* ComboS now checks solidity on layers one and two, as well as layer zero.
* New build
* Hopefully this one won't corrupt everyone's quests... ( Joe123, 2009-02-19 03:39:40 )

* Fixed the bug where custom open door types were being overwritten in the game engine.
* Link's swim speed it now selectable in the quest editor (slow or fast).
* Tooltips in ZQuest can now be turned off in options. ( DarkNation, 2009-02-16 19:34:27 )

* Added the 'Ln' command to ZScript, for the sake of practise/completeness.
* Added the 'InputMap' variable to ZScript ( Joe123, 2009-02-15 06:31:27 )

* Added the Log10 function to ZScript. ( Joe123, 2009-02-14 11:59:50 )

* Moved the 'Message More Y is Offset' check box down in the large mode dialog/r/n
* Fixed my change to the code so that an enemy's down facing sprite actually is shown in the enemy selection dialog. ( Joe123, 2009-02-14 08:40:50 )

* ZScript: Fixed the bug where the pointer returned by Screen->CreateNPC() pointed to the last segment of a boss rather than the boss itself.
* Added to std.zh the function NumNPCsOf(int type), which might be useful.
* Fixed a subsequent, and possibly final, bug with the implementation of Screen->D[] that caused adjacent DMaps' variables to overlap.
* Improved the weapon sound effect disposal routine. Now, boomerangs and such should have their looping sounds disposed at the right occasions.
* Fixed the bug where setting Screen->Door[] to D_SHUTTER before scrolling onto the screen wouldn't result in the proper shutter-closing animation. ( _L_, 2009-02-12 05:48:33 )

* ZScript: Added the variable item->Pickup, which determines what happens when Link picks up the item. It determines whether Link holds up the item when collecting it, whether the item vanishes after awhile and whether melee weapons can collect it, whether an enemy is carrying the item, and what Screen States are set when the item is picked up.
* Fixed the bug where scrolling into a screen onto a warp combo prevented that warp combo from triggering. ( _L_, 2009-02-08 00:42:34 )

* ZScript feature: Screen->Message(0) now makes the currently displayed message disappear, even if your quest doesn't have the 'Messages Disappear' rule checked. This also removes the 'invisible Guy wall' that 'Feed The Goriya' and other such Room Types have.
* Now, when a DMap Intro message is being displayed, the effects of Screen->Message() calls are delayed until after the DMap Intro message has been dismissed. At that point, only the most recent Screen->Message() call will be used. ( _L_, 2009-02-05 02:46:18 )

* ZScript: added the bitwise NOT, which is represented by the tilde '~'. If you have been trying to use the bitwise NOT prior to now, rest assured that it was actually equivalent to the logical NOT. (Also, the ZASM command is BITNOT).
* Fixed the bug where a screen's and DMap's palette selection was being saved as a byte instead of a word.
* ZScript: a warning is now logged to Allegro.log when you try to reference a Screen->D[] value outside of the 0-7 range.
* Now, the 'Visited' Screen State is no longer logged in Allegro.log as '<Unknown>'. ( _L_, 2009-02-04 22:49:29 )



Build 946 - linux , windows
* New ZCL Builds for windows and linux. Also this is a good time to try the updater feature in ZCL. :) ( Sean, 2009-02-02 12:12:43 )

* [ZCL] Minor Interface Fixes
* [ZCL] Updater shows the wget console. This is so you guys know it's actually doing something :P
* [ZCL] Oh look icons on the tabs.
* [ZCL] Interface improvements
* [ZCL-LINUIX] Using the GTK2 Interface again
* [ZCL Updater] Handles errors better
* [ZCL Updater] Checks to make sure you have a connection
* [ZCL Updater] Interface improvements
* [ZCL] Added 800x600 in ZC Resolution Tab ( Sean, 2009-02-02 11:04:44 )



Build 944 - linux , windows
* [ZCL] Removed ZSCRIPT (Source code will be released to public soon)
* [ZCL] Core Optimizations
* [ZCL] ZCL for Linux will be using GTK until Lazarus becomes more stable with GTK2 sorry people =/
* [ZCL] New Logo
* [ZCL] Updater Feature implemented - On the first download of the alphas please click on the updater feature so it can configure itself. This is a very new feature so if you spot any bugs please immediately report them. ( Sean, 2009-02-01 16:38:14 )

* ZScript: Added Game->GetCurLevel(), which tells you the dungeon level of the current DMap. It works great as an index into Game->LItems[]!
* Fixed a bug where if an item is, by being collected, upgraded into a new item with a pickup script, then the pickup script will use the new item's script number but the old item's arguments. (Now, it will use the new item's arguments.)
* Fixed the bugs where certain ZQuest tile preview panels were slightly smaller than they ought.
* Fixed a bug where 'Paste Spec. -> Screen Data' would also paste the Side Warp trigger settings.
* Also, 'Paste Spec. -> Warps' now pastes the status of the 'Combos Carry Over' checkbox as well.
* Fixed a bug where it was possible in Sideview to fall into screen 0x80 from screen 0x70, crashing ZC! ( _L_, 2009-01-29 09:34:34 )

* ZScript: Fixed a bug that made various events, such as setting Link->Item[] or using the level 4 cheat, erase certain values in Game->LItems[].
* ZScript: Fixed a potential bug where Screen->D[] might now have worked correctly when used in Overworld DMaps.
* ZScript: Fixed another bug that made Screen->D[x] pointed to not quite the same variable as Game->GetScreenD(Game->GetCurDMap(), x). Now, they are assured to point to the same variable. This also affects the string control code \3\X\X\X (Goto If Screen Variable).
* ZScript: Fixed the bug where setting positive values to weapon->Jump and item->Jump actually resulted in negative values, and vice versa. If you've been unknowingly compensating for this deficiency, please change your code now!
* ZScript: Added the functions Game->GetDMapScreenD() and Game->SetDMapScreenD(), which are like Game->GetScreenD() and Game->SetScreenD(), but allow you to get and set values in other DMaps with minimum fuss!
* Added several more clarificatory notes to Zscript.txt, such as how Screen->D[] differs by DMap, and the difference between Link->Warp() and Link->PitWarp().
* Fixed some potential bugs where getting a screen item or special item via Boomerang or Hookshot (with the 'Boomerang/Hookshot Grabs All Items' quest rule) wouldn't set the appropriate Screen State.
* ZQuest: As you know, water combos only function on layer 0. So, water combos on layers 1 and 2 no longer show up blue when you press the 'w' key to show walkability.
* Sideview: Now, if Link stands on a solid damage combo as a platform, he will take damage! That's pretty intuitive, isn't it? ( _L_, 2009-01-27 01:56:30 )

* Fixed a bug where 3-Stair Warp Rings didn't work quite right in non-Overworld DMaps.
* Fixed a bug where setting a positive value to Game->DCounter[CR_MAGIC] that wasn't divisible by 8 would cause it to endlessly empty and fill the magic meter. ( _L_, 2009-01-21 03:24:57 )



Build 935 - windows
* Thought I'd try uploading a new build.
* Added the 'Message More Y is offset' flag to the 'Strings' Dialog. Now, your 'Message More' so as always to be in-line with the string.
* Changed the sprite in the Enemy Selection dialog to show the 'down' facing sprite.
* Moved around some of the boxes in the Enemy Editor dialog, mostly so the whole 'W:' attribute now fits in the box in small mode.
* First proper upload, wish me luck! ( Joe123, 2009-01-14 14:27:44 )

* Added a new feature to Zplayer called BIG2 use it like you are using BIG when you enter in your resolution. There will be a feature added to ZCL to show you what I mean. Example what this does http://sjnetwork.net/big2.jpg ( Sean, 2009-01-14 08:51:56 )

* Renamed the combo flag ' 52 Push Block (Vert, Once, Trigger)' to ' 52 Push Block (Vert, Once)'.
* Moved the hitbox for Link's southward-facing sword stab five pixels downward.
* Fixed the bug where the 'Smooth Vertical Scrolling' rule caused a string to display improperly while scrolling.
* ZScript: fixed the bug where setting Link->Dir (Link's direction) every frame didn't prevent him from firing sword beams perpendicular to this direction. ( _L_, 2009-01-13 03:17:24 )

* Fixed a bug in the Enemie Data Editor. When you edit the name and click cancel. It still applies the new name. ( Sean, 2009-01-10 22:44:58 )



Build 928 - windows
* Fixed a bug that made script-created Bait lweapons vanish as soon as they appeared if Link didn't have a Bait item.
* Now, 'No Enemy' combo flags are treated as solid platforms by walking enemies in sideview. This should be convenient!
* Helpful advisory: if you place a combo flag on a layer, but that combo flag only works on layer 0, you'll be notified that the flag doesn't function on layers 1 and above.
* Changed the 2008 copyright to 2009. Kids, remember what to do when you suddenly feel old: SCREAM REAL LOUD! ( _L_, 2009-01-09 07:41:09 )

* Fixed the bug where Remote Super Bombs didn't work quite right.
* Presumably fixed the bug where the Action Script attached to a Farore's Wind, Din's Fire or Nayru's Love item wouldn't ever run.
* Fixed the sideview bug where jumping upward into a screen ignored the 'Smart Screen Scrolling' quest rule.
* Fixed the sideview bug where falling into the bottommost row of combos in the bottommost row of screens wasn't recognised as a platform. ( _L_, 2009-01-06 05:33:25 )



Build 923 - windows
* New version of ZC for windows. ( Sean, 2009-01-04 11:37:00 )



Build 922 - windows
* New ZCL Release Only
* --Much Cleaner Interface
* --ZCL Zscript Editor
* --Notepad
* --Load Quest On Start
* --New Banner
* --Descriptions for some options you check. This tells you what does what :P
* --Go To Color Scheme and Title Screen has been removed
* --Load SFX.dat has been removed
* I am still accepting requests and also BUG TEST THIS! ( Sean, 2009-01-03 17:19:10 )



Build 921 - macosx-Leopard
* Leopard build. Testing build system. ( Takuya, 2009-01-02 19:35:32 )



Build 919 - macosx-Tiger-and-Leopard
* Sorry about that. I need to talk to DD. Again should run on Leopard... probably not Tiger. Sorry folks. Working on it. Happy New Year. ( Takuya, 2009-01-01 00:00:52 )

* Fixed a bug with an OS X lib on my end. ( Takuya, 2008-12-31 23:54:46 )

* Oops. There should be a new build ( Takuya, 2008-12-31 23:48:09 )

* Placed an upper limit on the wavyness of Screen->Wavy, where values greater than 2048 don't increase the screen's distortion any further.
* Added an Integrity Check for screens that contain Save Point combos, but don't have the 'Use As Save Room' screen flag checked. This may be deliberate, but the most likely intended behaviour is to have the flag checked.
* Fixed the bug where the Boomerang's range was ignored if its weapon sprite had more than one frame of animation specified.
* Fixed the Boomerang's 'Corrected Animation' clip tile bug. To reiterate, the clip tile's location is: tile 54 if 'Corrected Animation' is off, starting tile + frames if 'Corrected Animation' is on, and starting tile + (frames x 8) if both 'Corrected Animation' and 'Directional Tiles' are on. ( _L_, 2008-12-31 20:39:10 )

* Fixed some more mistakes in ZScript.txt.
* Tooltips: the main screen tooltip gives the properties of the pointed combo. It lists all of the properties in the Properties dialog.
* Fixed the bug where an Item Override subscreen item wouldn't be non-visible when a DMap explicitly disabled that item. ( _L_, 2008-12-26 08:42:34 )

* Fixed a bug where too many weapons on the screen would cause the hookshot to freeze the game.
* Fixed a bug where the tile editor would sometimes cause the mouse to not work outside of a certain area on the screen.
* Fixed a bug where certain locked doors in the default template would not work properly.
* Tweaked the new larger tile list window.
* The combo list window is now enlarged as well.
* Preliminary work on the new tooptip system (the code has been in there since build 827, but dormant). ( DarkNation, 2008-12-24 15:13:44 )

* Extended the FFC Editor's D value caps from 32767.0000 to 214748.3647, both positive and negative.
* Now, using the Raft will set your 'drowning return point' at wherever you stop rafting.
* ZScript: Fixed the bug where weapon->Flash was a float instead of a bool.
* The Screen Flag 'All Triggers->16-31' now recognises layered triggers.
* Large Mode: enlarged the Select Tile dialog. It took awhile. ( _L_, 2008-12-22 02:34:30 )

* Sorry for the break in updates... I've had a bad week. The bug where setting out-of-bounds values for a string's Y Position was possible and could crash ZC has been fixed.
* The Item Drop Set editor's item tile panes display the tiles at exactly double resolution now.
* The 'What Links Here' Quest Report now also displays a list of screens that use the current screen as a layer. Nifty! ( _L_, 2008-12-16 07:07:43 )



Build 910 - linux , windows
* [ZCL]Fixed a little color issue when ZCL is running with the windows classic theme
* [ZCL]Fixed another issue that Classic Mode will not save the settings ( Sean, 2008-12-14 08:44:43 )



Build 908 - windows
* Windows version of ZCL ( Sean, 2008-12-09 22:11:27 )



Build 907 - linux
* Finally a ZCL build for Linux Again
* Changed Large checkbox to Use Classic Interface since the Large mode is now the default. This will be updated on the windows version soon. ( Sean, 2008-12-09 21:13:03 )



Build 906 - windows
* New build fixing more critical bugs yay! ( jman2050, 2008-12-09 11:18:03 )

* Fixed the critical bug where the Enemy Rules window was broken. Fin fang foom!
* Fixed the critical bug where an Item Drop Set with all chances set to 0 would cause a 'divide by zero' crash when used.
* Fixed the bug where a charging sword had no collision detection.
* Now, the counter-refilling equipment items no longer refill counters while a message has frozen the action. This has the potential for player abuse! ( _L_, 2008-12-07 00:23:31 )



Build 904 - linux
* Added Linux soundfont. Run zelda-l and zquest-l once and sound should be working if it was not before. ( Takuya, 2008-12-06 13:21:30 )



Build 903 - linux
* My bad.. try now? ( Takuya, 2008-12-05 20:58:16 )

* Testing a Linux build ( Takuya, 2008-12-05 20:55:05 )



Build 901 - windows
* New build to fix the item drops. Sorry for taking so long. As usual, BACK UP ALL QUEST FILES!!! ( jman2050, 2008-12-05 14:27:06 )

* Fixed the bug where the Nothing Chance of an Item Drop Set was being read as an item ID. On behalf of all developers, I apologise for this messup.
* Deprecated the 'Allow 10 Rupee Drops' and 'Enemies Don't Drop Clocks' rules. Quests which had those rules set will simply have their item drop lists modified accordingly.
* Also, the hidden condition where Non-gameplay Items could never be dropped has been removed. Quests which have Non-gameplay Items in their lists will have their drop chances reduced to 0 and the 'Nothing' chance extended accordingly.
* After a moment's introspection, a decision: the rule 'Old Style Warp Detection' now does nothing if diagonal movement is enabled. I believe that nobody who uses diagonal movement genuinely wants OSWD as well, but if anyone can convince me otherwise, I may recant.
* Added a new default item drop set, 'Tall Grass Combos', which is used by all Tall Grass, Bush, and other combos to determine what item appears when they are slashed. This directly replaces item drop set 12, which should be blank... unless you edited it during the last two days. If you did so, please recreate it in another empty item set before using the next build, and accept my fond apologies. ( _L_, 2008-12-03 05:16:51 )



Build 899 - windows
* Just uploading the windows build. BACKUP YOUR QUEST FILES BEFORE USING THIS ON THEM! 3 QUEST FILE CHANGES WERE INTRODUCED IN THIS VERSION. ( DarkNation, 2008-12-01 17:59:44 )

* New item drop set editor. It can be accessed from the Quest menu in the Misc Data submenu.
* Fixed a bug regarding a raft leaving a raft path if the path turns immediately after entering a screen.
* There are now 255 shop and info types and they can now be named.
* The shop editor now displays a picture of each item being sold.
* Tweaked the message string lists so that the numbers line up a bit better when numbers are needed and the numbers don't show when they aren't.
* Item lists (for the item editor and the room item and special item properties) now show the item's tile.
* Renamed the Music menu in the Quest menu to Audio and moved the SFX menu inside of it.
* Shop and Info type names now appear in the room information panel.
* Shop and Info types for a room are now selected from a list instead of a manual-entry number box.
* The minimap preview for the dmap list now also shows the minimap background in small mode instead of just in large mode.
* The warp editor destination screen box can be filled in automatically now by clicking on the appropriate screen in the dmap preview box. ( DarkNation, 2008-12-01 17:53:40 )

* Removed the 'If Possible, Use Slash Tiles' checkbox. Instead, the Sword, Wand, Cane of Byrna and Candle itemclasses now use an item flag, 'Can Slash'. This works for all classes, including Swords, and is backwards-compatable with current quests.
* Tile Editor: Fixed the bug where the focus of the Fill cursor was in the upper-right corner, instead of the tip of the spiliing paint.
* Large Mode: Fixed the bug where the Shop Types and Info Types editors' dropdown menus were broken. My apologies! ( _L_, 2008-11-27 02:25:45 )



Build 896 - macosx-Tiger-and-Leopard
* OS X build includes proposed quests 1 2 and 3 ( Takuya, 2008-11-25 18:35:14 )



Build 895 - macosx-Tiger-and-Leopard
* OS X fullscreen does not work, but should run on Leopard (PPC/Intel), MAYBE Tiger ( Takuya, 2008-11-25 17:31:26 )

* OS X fullscreen does not work, but should run on Leopard (PPC/Intel), MAYBE Tiger ( Takuya, 2008-11-25 17:28:54 )

* Fixed the bug where a DMap's disabled item list was cleared when a certain procedure was called.
* Modernised the Under Combo dialog (such that you now click on the current combo to select a new one), and expanded it in Large Mode.
* Added labels to the Game Icons dialog, and expanded it in Large Mode. ( _L_, 2008-11-22 09:29:21 )

* Rulesets: The following quest rules are ZC engine improvements to ZC-exclusive features, and are now present in all rulesets for future quests: 'Damage Combos Work On Layers 1 and 2', 'Warps Ignore Arrival X/Y Position When Setting Continue Screen', 'Use Warp Return Points Only', 'Combo Cycling On Layers', and 'Must Kill All Bosses To Set 'No Return' Screen State'. It is recommended that all future quest files have these rules set.
* NES Fix Quest Rule: 'Invincible Link Isn't Hurt By Own Fire Weapons'.
* Also, added the 'Use Old Style Warp Detection' rule to the 'Authentic NES' ruleset, and moved the 'No NES Sprite Flicker' rule to the NES Fixes category.
* Fixed the bug where the string control code \5\X\X (Goto If Item) wasn't working for certain item IDs.
* Fixed the bug where reflected magic sent from Magic Prism combos had the wrong HitYOffset value.
* Fixed the bug where you couldn't use the Magic Containers cheat menu option to add extra magic containers. ( _L_, 2008-11-17 06:51:40 )

* The 'Block All' combo type no longer blocks Hookshot handles and chains.
* Forcibly fixed a bug that made Link's retracting stab (that is, frame 15 of the stab animation) slice the Tall Grass combo that Link was standing on. Now, that frame no longer has hit detection.
* Misc. Colors: Renamed 'Dungeon Foreground' to 'Minimap Foreground 1' and 'Cave Foreground' to 'Minimap Foreground 2', as well as some others.
* As you know, if a NES Dungeon DMap had a Level of 0, then ALL of its NES Dungeon features were suppressed! This behaviour is removed, and instead, all previous quests' Level 0 NES Dungeon DMaps are converted to Interior type DMaps, which have completely identical functionality.
* ...Except, of course, for the minimap foreground colour. So, the 'Use Minimap Foreground Color 2' DMap flag has been added. All non-Overworld DMaps use Minimap Foreground 1 unless that flag is set. In prior quests, all normal Interior DMaps will have it set, and all converted level 0 NES Dungeons will have it unset.
* Helpful messages: The Secret Combos dialog now indicates which Layer's Secret Combos are currently being edited. Also, the DMap Editor now tells you that one of the Minimap tile options silently disables the classic NES minimap.
* Rejoice! The 'Trigger->Self' and 'Trigger->Self, Secret Tiles' Combo Flags now work on layers!
* Large Mode: expanded the Warp Rings dialog, the Tile and Side Warps dialog, and the Select DMap dialog.
* Large Mode only: The Select DMap preview box now shows the Minimap tile background in addition to (or instead of) the classic NES Minimap. ( _L_, 2008-11-12 02:08:45 )

* ZScript: sanitised the code for the Screen combo arrays so that out-of-bounds array indices (for instance, getting and setting combo number 176 and above) no longer meltdown the system.
* Repositioned the Hammer's vertical collision box four pixels downward. Or, to put it another way, its lweapon->HitYOffset value is now 4 when swung vertically. ( _L_, 2008-11-06 09:14:34 )

* Fixed the bug where screen SFX weren't being hushed when Link left the screen via certain whirlwinds.
* Added some sanity checks to the combo flag secret-triggering code, to prevent chaos from ensuing when a weapon passed through the upper-left corner of the screen.
* Made a fix to the aforementioned Goriya tile flip compatability fix. Now, it won't be applied if the 'Use New Enemy Tiles' rule was in effect. ( _L_, 2008-11-02 08:38:40 )

* ZScript: If a Like Like or Wallmaster is holding Link and is moved by a script, then Link will also be moved.
* Large Mode: expanded the 'Assign Compiled Script' dialog.
* Added a checkbox, 'Output ZASM code to allegro.log', to the Assign Compiled Script dialog. If unchecked, then the resulting ZASM code from the compilation process will not be output to allegro.log when assigned to script slots. If your quest uses startlingly large numbers of scripts, then this should reduce compile times by about 40%.
* Change of plans: setting an LW_HOOKSHOT's DeadState to WDS_BOUNCE multiple times will no longer continually negate the lweapon's Step. Rather, it will remain negative if it is already so.
* Fixed a bug where previously deleted characters in a message string were sometimes being printed in-game.
* Added some more IC_ and I_ constants to std.zh. ( _L_, 2008-10-29 01:54:30 )



Build 887 - windows
* Changed the blinking and transparent Ghini quest rules into enemy flags that can be used by all enemies.
* All enemies now respect the 'is flashing' enemy flag, not just Bubbles and Rope 2's.
* Removed the obsolete "Link Slash" misc weapon sprite.
* Fixed the bug where the descenders of letters in certain text objects in large mode were being clipped.
* Added two new non-keyboard letter grid name entry modes for the save slot screen. These are accessible from the Settings Menu.
* Moved the "Key Buttons", "Key Directions" and "Joystick/Gamepad" menus to a "Controls" submenu.
* The "Corrected Animation" and "Directional Sprites" item flags now work for boomerangs. The sequence for the tiles used by the "Corrected Animation" flag are up, down, left, right, up-left, up-right, down-left, and down-right. If the "Corrected Animation" flag is checked, the edge-of-screen clipping spark is pulled from the tile following the list of tiles used in the animation instead of from tile 54. That way, each boomerang can have its own clip spark.
* Fixed a bug where the sprites would not show up when the test button was pressed in the item editor. ( DarkNation, 2008-10-25 15:45:25 )

* ZScript: the LW_HOOKSHOT lweapon's Dir now remains the same even when it's retracting. To tell if it's retracting, know that, instead, its Step becomes negative. Also note that now, setting DeadState to WDS_BOUNCE multiple times will negate its Step each time.
* Fixed the bug where the Tile Editor's Fill cursor jumps position when used.
* Fixed the bug where the Combo Flag cursor becomes invisible when changing screens with Combo Brush enabled. ( _L_, 2008-10-25 03:07:10 )



Build 885 - windows
* Fixed a crippling save game bug that would most certainly kill any save files you're currently using. But that's not so bad because you all back up your quests and save files before every beta, right? .....right?
* As usual, it's _L_'s fault :P ( jman2050, 2008-10-23 19:10:17 )



Build 884 - windows
* Fixed the bug where using assignment operators on arrays crashed the compiler.
* Fixed a brutal quest corruption bug that occured if you created a zero-length text object in a subscreen.
* Fixed the bug where clicking on the grid in the misc colors menu for "Message Text" crashed the program
* New build for you guys! ( jman2050, 2008-10-23 13:24:12 )

* Fixed the Small Mode Enemy Editor dropdown menus.
* Fixed the bug where the Wealth Medal messed up the displayed pricing of the 'Leave Life or Money' Room Type.
* Added an option checkbox enabling/disabling the aforementioned Rulesets dialog. ( _L_, 2008-10-23 08:05:36 )

* Fixed the bug where Link couldn't warp while a message was being typed out, even if the 'Messages Freeze All Action' rule was not set.
* Fixed the bug where whirlwinds reflected off magic mirror combos weren't properly disposed of, causing sound effects problems.
* ZQuest: Fixed the long-standing bug where the door in a left screen edge preview was incorrect.
* Fixed the bug where Link grabbing an item that must be held up, while being propelled by the hookshot, caused him to freeze. ( _L_, 2008-10-16 01:09:37 )

* Seemingly fixed the bug where Tektites, Vires and Pols Voice enemies couldn't have their Y modified if the 'Enemies Move Through Z-Axis' rule was set.
* Now, the 'Nayru's Love' item family uses left and right rocket sprites, the latter of which already exist in the Default Template. Also, the shield sprites can now be changed for each Nayru's Love item.
* Spell rockets are no longer blocked by 'Block All' combos.
* Slightly tweaked the hitbox for Link's sword slash, to make it more closely overlap the sprite itself.
* Also, the LW_SWORD, LW_WAND and LW_HAMMER lweapons now have correct hit detection and combo detection when they're moved away from Link with a script. Telekinesis! ( _L_, 2008-10-14 19:03:03 )

* Save file bug: Only 64 Screen->D[] variables existed per DMap, even though Overworld DMaps can have 128 screens. This is fixed.
* Fixed the bug where Screen->State[] would sometimes not produce the correct values in non-Overworld DMaps.
* Fixed the bug where Link wasn't properly adhered to the grid when walking down a 'Cave (Walk Down)' combo. ( _L_, 2008-10-10 09:16:19 )

* The 'Screen Enemies' dialog now contains a preview tile showing the Tile or E. Tile of the currently selected enemy in the list.
* Also, the dialog has been expanded in Large Mode.
* Also, you'll receive a warning if your list has the '(None)' enemy in the beginning or middle of the list.
* Fixed the bug where you couldn't set the Bait's sprite in the Item Editor.
* Added a Sign macro to std.zh, and added extra comments to some constants, such as GEN_WARPLEVEL. ( _L_, 2008-10-08 05:54:44 )

* Fixed the bug where the 'Upgrade Item If Collected Twice' attribute wouldn't work for custom items with IDs > 128.
* Fixed the bug where getting an item from a Treasure Chest combo wouldn't set the 'Treasure Chest' or 'Special Item' Screen States.
* Fixed the bug where hookshot chain sprites would be left behind if the hookshot's position was modified with ZScript. ( _L_, 2008-10-04 22:58:43 )

* Fixed that pesky bug where the values of Screen->D[] wasn't being saved in save files.
* The 'Hookshot Only' combo type now works in layers. So, if nothing on layers 0, 1 and 2 obstructs a hookshot, it can pass.
* Fixed the bug where using ZScript to set a LW_HOOKSHOT's DeadState to 0 would freeze up the game. ( _L_, 2008-10-03 05:31:44 )

* Fixed the bug involving the Link Animation Style dropdown menu.
* ZScript: Added lweapon->Behind and eweapon->Behind, which match the Behind checkbox in the Weapons/Misc. sprites editor.
* Fixed a counterintuitive peculiarity involving Screen Secrets, Inherent Combo Flags and flagged Secret Combos. For more information on how these three things interact, please visit http://shardstorm.com/ZCwiki/Screen_Secrets. ( _L_, 2008-10-02 00:43:23 )

* The Damage Multiplier of the current Hurricane Spin item is now used in damage calculations involving the Hurricane Spin.
* The Whimsical Ring's damage bonus is now added after the Spin Attack and Hurricane Spin's damage multiplier, rather than before.
* The bug where Sword, Wand and Hammer lweapons' Damage was always 0 is fixed.
* Tile Editor: Using the Alt-Arrow hotkey to shift tiles around will now correctly mark the quest as altered.
* ZQuest: the FPS meter is now sufficiently easier to read in Large Mode, and no longer interferes with the Show Script Names view option. ( _L_, 2008-09-30 09:21:24 )

* Fixed a bug relating to menus and clicking. ( DarkNation, 2008-09-29 21:26:38 )

* Fixed a bug in ZQuest's Preview Mode, which now correctly shows the effects of Screen Secrets on inherent-flagged FFCs.
* ZScript: Fixed a bug where a call to Screen->Message made by an FFC with 'Run Script On Screen Init' would cause the message's tile frame to be missing when it appeared. ( _L_, 2008-09-29 10:14:57 )

* Fixed the bug where enemies could walk into walls while falling in sideview. ( _L_, 2008-09-27 09:57:59 )

* Helpful ZQuest feature: Now, when you start a new file, a dialog box offers you a selection of initial 'rulesets'. Selecting one automatically unsets and sets a selection of quest rules corresponding to the theme of the ruleset. The current rulesets are 'Default', 'Original NES' (only one rule), 'Fixed NES' (all NES Fixes only), 'BS-Zelda' (Fixed NES, plus BS-Zelda animations, new enemy tiles, fast scrolling, new pushblocks, opening wipes, etc.) and 'Zelda 3-esque' (BS-Zelda, plus diagonal Link movement, messages freeze, speed-up messages, magic, true arrows, more sound effects, etc.) This should greatly benefit new users, who might not be aware of ZC's ability to transcend the NES game's limitations, and allow them to immediately build 'modern' quests without the daunting task of setting each quest rule individually. ( _L_, 2008-09-21 09:40:12 )

* Applied a compatability fix where BS-Zelda Patras in quests made before the Enemy Editor appeared have their CSet changed to Extra Sprite Palette 2, which is how it was in 2.10.
* ZScript: Now, the values of Link->InputMouseX and Link->InputMouseY are appropriately scaled to match the resolution of ZC.
* Large Mode: The 'dummy bar' in ZQuest has been inflated into Layers Bar, which shows you at a glance what layers are active and which screens those layers use, and lets you switch to or hide layers at any time. It also subtly shows whether the 'Layer 2 Is Background' or 'Layer 3 Is Background' Screen Flags are active.
* Also, the now-redundant Layers main panel has been removed... but it is still active in Small Mode.
* Also, to make room for the bar, the number of Commands has been reduced from 10 to 8. ( _L_, 2008-09-21 00:18:44 )

* Fixed the bug where you could walk onto unwalkable land combos while swimming.
* ZScript: changed the range of values of weapon->Step, bringing them into line with npc->Step. A weapon->Step value of 1 is now 100, and so forth. Please forgive any temporary inconvenience thus caused.
* This, by the way, permits weapon->Step values of 150, 172 and such - previously, values of 1.5 and 1.72 weren't possible. ( _L_, 2008-09-19 10:14:57 )

* Fixed the bug that made Ropes with unusual Step values have erratic charging movement.
* ZScript: Fixed the, ahem, other bug that prevented eweapon->UseSprite() from being recognised by the parser.
* Large Mode: expanded a few more dialogs, such as View Palette, Edit Shop Type and Edit Info Type.
* Fixed the bug where using Farore's Wind to return to a Cave combo would cause Link to warp as soon as he appeared. ( _L_, 2008-09-16 10:54:13 )

* Fixed the bug that prevented recently-slashed slashable combos from being slashed again. ( _L_, 2008-09-12 10:25:36 )

* Fixed the Fairy, Fire and Zelda room guys so that no weapon ever hits them, including damaging boomerangs.
* Fixed the bug where Link's swimming sprite would momentarily appear when jumping over walkable water with Flippers.
* Large Mode: enlarged many more ZQuest dialogs, such as Combo Editor, Dungeon Template, Options, View Map, Color Set Fix, Palette, Maze Path, Enemy Flags, Freeform Combo Editor, SFX Editor, Layers, Select Subscreen, and Door Combo Set Editor. ( _L_, 2008-09-09 23:21:50 )

* Fixed the bug that interfered with Link's movement when pushing a block with diagonal movement.
* Fixed the bug where Link's sword, hammer and such aren't drawn when in midair in sideview while also holding a directional key.
* ZScript: Fixed the bug where enemy weapons with IDs between EW_SCRIPT1 and EW_SCRIPT10 couldn't be created. ( _L_, 2008-09-07 09:07:23 )



Build 864 - windows
* Hopefully all the dialog box errors are gone in this build :x ( jman2050, 2008-09-06 14:12:34 )



Build 863 - windows
* Fixed a crippling bug in the Initialization menu. For this reason, a new beta. ( jman2050, 2008-09-04 11:27:26 )

* Fixed the fix for the Pound combos. And I bothered to test it this time!
* ZScript: Fixed the bug that prevented eweapon->UseSprite() from being recognised by the parser.
* Also added a line about weapon->UseSprite() to zscript.txt.
* Fixed the bug where enemies' DrawYOffset was -2 in sideview. It should only be -2 in topdown, as per the NES.
* Presumably fixed a bug where using 'Enemies Carryover In Warps' to carry enemies from a topdown screen to a sideview screen didn't change their Jump or DrawYOffset. Please test this! ( _L_, 2008-09-04 01:08:59 )



Build 861 - windows
* New build yay! As usual, use at own risk, test for bugs, and don't kill me if it turns your computer into mush. Happy questing! ( jman2050, 2008-09-03 10:21:17 )



Build 860 - windows
* Let's try that again. >_> ( Sean, 2008-09-02 08:22:14 )



Build 859 - windows
* This release is only for the bugfix for ZClauncher ( Sean, 2008-09-02 08:13:38 )

* Fixed the bug where a file slot's icon would sometimes use the wrong ring after choosing a different custom quest.
* Fixed the bug where an Item Override Sword could interfere with a Boomerang's sparkles.
* Presumably fixed the bug where Game->Cheat wasn't influencing or being influenced by the current cheat level. ( _L_, 2008-08-30 06:50:16 )

* Changed the tab code a bit to ensure that only objects that are on the active tab actually get drawn. Test for problems and such. ( jman2050, 2008-08-28 16:53:53 )

* Fixed the bug where Leevers with a Step of 300 would sometimes ignore walkability.
* Scaled up several more minor dialogs. ( _L_, 2008-08-26 05:05:10 )

* Fixed the bug where Fairy flag heart rings would cause the hookshot to freeze.
* ZScript: Link's sword, Link's hammer, and his wands/candles/canes are now lweapons that can be read and modified with Screen->LoadLWeapon. Aah! The power!
* As a consequence, you can now make sword, hammer and wand sprites flash.
* Use these constants in std.zh: LW_SWORD for swords, LW_HAMMER for hammers, and LW_WAND for wands, candles and canes. ( _L_, 2008-08-24 03:45:05 )

* Fixed the bug where the current quest's string order would be messed up if you opened a quest file after editing a different file.
* Now, ZQuest will reset your string order if your quest file's ordering becomes corrupted.
* Increased the maximum number of custom sound effects to 255.
* Large Mode: various dialog boxes, such as Enemy Editor, Item Editor, Screen Data and Quest Rules, have been scaled up to match Large Mode's screen size. Note that the remaining dialog boxes will almost certainly also be scaled up at some point. Note also that the font choice for the new dialogs shouldn't be considered final just yet. ( _L_, 2008-08-17 05:10:14 )

* As you know, one of the misc. values for 'Walker and Shooter' and 'Rope' enemy types is a weapon offset value for enemy deaths. It is now possible to use said offset to specify the '(None)' weapon - that is, have no weapon at all for enemy deaths. Comprehende?
* State change carryover log messages now correctly list the screen number in hexadecimal.
* If a scripted FFC uses combo 0 (i.e is inactive) then its name won't be listed by the Show Script Names view option, and nor will it appear in the Script Locations quest report. ( _L_, 2008-08-12 08:56:09 )

* Fixed the bug where damaging Boomerangs can hit Guys in caves.
* Fixed the bug where the enemy placement routine sometimes places enemies in unreachable areas in dungeons.
* Fixed the bug where the \3\X\X\X control code, Goto If Global, wasn't being interpreted correctly in ZQuest.
* Now, the ZQuest error message logs for referencing nonexistant LWeapons and EWeapons mention the variable that was being referenced, making debugging easier.
* Fixed a slight bug with the NumLWeaponsOf and NumEWeaponsOf functions in std.zh.
* Added entries for the DrawXOffset, DrawYOffset and DrawZOffset variables into zscript.txt.
* Fixed the bug where looping Hookshot and Boomerang sounds, as well as the wavy screen effect, were present when viewing the Overworld Map. ( _L_, 2008-08-09 00:56:24 )

* Fixed the bug where old-animation Leevers had a slow frame rate.
* Fixed the bug where giving/removing items via scripting was not being logged.
* Fixed another Item Override sword beam bug.
* ZScript: all of the drain counters now work (including hearts) rather than just the rupee and magic counters. ( _L_, 2008-08-06 02:13:59 )

* Fixed the Pound combos.
* Fixed the menu letter shortcut in Quest->Defaults.
* Fixed the CSet of the Patra enemies' inner circle of eyes.
* Fixed the bug where Darknuts with hunger 3 ignore solid combos while walking.
* Fixed a potential bug involving endless looping Room State Carryovers.
* Fixed the bug where setting Screen->State[] wouldn't work.
* Combo Types: renamed the 'Trigger' types to 'Step->Secrets'. To avoid confusion for new users, the word 'Trigger' ought to be reserved for Trigger Flags. (If this sounds familiar, it's because last time I changed their names in the wrong places.)
* Combo Types: renamed 'Auto Tile Warp' back to 'Sensitive Warp'. Reason: I was wrongly informed by some documentation that they were identical. But they are not! Sorry, folks.
* Other Quest Rule: Log Game Events To Allegro.log. Now all of the special event logging is tied to that rule. It's a helpful rule for debugging! But turn it off if you don't want players to be able to peek behind the curtain, so to speak. ( _L_, 2008-08-01 08:19:06 )

* Fixed the bug where consecutive magic spell casting (that is, Nayru's Love, Din's Fire and Farore's Wind) wouldn't work.
* Fixed the 'slow walking in whistle-dried walkable water combos' bug. Understand?
* Fixed the bug where Link wouldn't be frozen when prompted to press A by the 'Messages Disappear' quest rule.
* Seemingly fixed the bug where enemies held in a negative Y-axis quadrant were eventually removed from the game.
* ZScript: Until negative constants are implemented - and they are not! - the WDS_NOHIT constant in std.zh is no longer usable. If you're using build 846, you should probably remove that line from your std.zh file as well. ( _L_, 2008-07-29 09:48:48 )

* New Build for OS X Leopard ( Takuya, 2008-07-25 20:52:01 )

* Fixed the bug where the Potions' magic cost wasn't functional.
* Fixed the bug where reverting a quest would mess up the FFC script dropdown menu items.
* Fixed the bug where the 'Special Items Don't Appear In Passageways' quest rule was not functional. Whoops!
* Large Mode: enlarged the Select Room Type, Select Item and Select Weapon dialogs. ( _L_, 2008-07-24 20:11:01 )



Build 846 - windows
* Added a new font, "Phantom" from the DS title, "The Legend of Zelda - Phantom Hourglass" (the font used for the name entry screen, anyway). This comes in 2 versions, fixed-width and proportional. ( DarkNation, 2008-07-22 20:55:59 )

* Fixed the bug concerning the permanency of 'Take One Item' and 'Red Potion or Heart Container' room types. Whoops!
* Fixed the bug where setting npc->Extend to 3+ would interfere with 4-frame 8-dir enemy animations (which, as you know, use more than one tile row even for 1x1 tiles).
* The subscreen element called 'Minimap Title' has a new checkbox - 'Invisible w/o Dungeon Map'. Until you collect the level's Map, you won't know the name of the dungeon you are in!
* Removed the LW_SWORD and LW_HAMMER constants from std.zh, on the basis that, hey, they don't actually ever appear in-game. Those hand-held objects manifest as Link sprite decorations instead of actual lweapons.
* Now, a line is outputted to allegro.log when Link gains or loses an equipment item. Use this for quest debugging purposes! (Hey, that 'Gain All Lower Level Items' item checkbox can trip you up sometimes.) ( _L_, 2008-07-22 09:53:14 )

* Fixed a quite unfortunate bug where ZQuest became confused about which sound effects were customised and which were not.
* Fixed the bug where Leevers with unusual misc3 values wouldn't adhere to the grid when moving. ( _L_, 2008-07-19 05:44:43 )

* Fixed the Quick Sword not affecting Wand bug. For the second time!
* Fixed the bug where the Cane of Byrna's beams were affected by combos that reflect or block sword beams.
* Added the weapon->DeadState constant WDS_NOHIT to std.zh, which is equal to -10. Reason to use it: it means your code is slightly more readable.
* Large Mode: the string selection dialog boxes are now twice as long and twice as wide, and use a larger font. ( _L_, 2008-07-18 11:01:10 )



Build 842 - windows
* New windows build finally! Made a slight addition to the weapon sprite code. If you want to control a weapon sprite via a script while having its collision detection continue to function normally, set DeadState to -10. Please test that this works.
* For the next build, I'm going to focus specifically on improving large mode and attempting to speed up the now-extremely slow ZQ interface. So for those complaining about that, I ask for just a bit of patience. ( jman2050, 2008-07-17 12:02:19 )

* Added two new variant enemy patterns: Fall From Ceiling (Random), and True Random. These patterns place enemies at any legal location onscreen, unlike the NES-style Random and Fall From Ceiling patterns. A basic rule of thumb is: if less than 50% of the screen is walkable, use the True Random pattern instead of the classic Random pattern.
* Furthermore, the bug where the NES-style Random pattern would run out of locations to place an enemy... is fixed. In that situation, it now defers to the True Random pattern.
* Added a warning box which appears when you have attached a script to an FFC with combo number 0. ( _L_, 2008-07-14 09:19:14 )

* Seemingly fixed the end-of-tile-list paste bug.
* Fixed the Large Map overworld Link position bug.
* Fixed the sword beam magic prism sprite flip bug. This is different to the magic mirror bug, by the way.
* Added an 'M' hotkey to the CSet Editor. What it actually does is swap the positions of the cut colour and the destination colour. ( _L_, 2008-07-13 08:44:25 )

* ZScript: the item->Data variable doesn't actually work, and has thus been removed.
* In its place is the item->ID variable, which is the integer ID number of the respective item.
* Finished implementing Game->LoadItemData(int item), which returns the itemdata pointer for the respective item ID.
* Fixed the bug where weapon->UseSprite(int id) didn't work in item scripts and global scripts. ( _L_, 2008-07-10 10:57:52 )

* The Bubble enemy type is no longer invulnerable regardless of its Invincible flag. Go ahead - make vincible Bubbles.
* Fixed the bug that suppressed the Quick Sword rule. For the fourth time!
* Fixed the bug where defeating Ganon in a Ganon room type was not made permanent.
* The Block Weapon combo types have been re-implemented, and should block all applicable weapons and itemclass levels. ( _L_, 2008-07-08 00:46:20 )

* Fixed the bug where Link couldn't move during the hurricane spin with NES movement.
* Enemies no longer walk around while they fall from the ceiling, bringing this behaviour in line with the official games. ( _L_, 2008-07-06 07:00:14 )

* And now, with no expense spared, I present the ability to name and rename your quest's sound effects.
* Another modern convenience: the FFC editor's script menu now lists script names in alphabetical order!
* Now, if a bomb or other lweapon falls through the bottom of a sideview screen, it will be removed. ( _L_, 2008-07-05 10:49:14 )

* The 'Item Override' box in the Subscreen Editor is now a dropdown menu of items.
* Fixed the buggy string deletion bug.
* All of the Slash, Bush, Flowers, Tall Grass and Pound combo types now work when used as Freeform Combos, to match the fact that Sword Trigger inherent flags already work on FFCs. Although, it should be said that a 'Tall Grass' type FFC will NOT produce the Tall Grass decoration on Link's sprite.
* Also fixed an apparant bug involving the Hammer Trigger flag as an inherent combo flag on an FFC. ( _L_, 2008-06-30 22:39:39 )

* Tweaked the Stomp Boots' collision detection (for the sixth time) with respect to flyers in sideview. Don't be discouraged! This time very few qualms remain.
* Fixed the bug where re-sorted strings interfered with the Select Message String dialog. ( _L_, 2008-06-28 00:59:06 )

* The 'Door Repair', '1/2 Magic Upgrade' and 'Learn Slash' room types are no longer broken if the 'Messages Disappear' Quest Rule is set.
* Quest Rule: Special Items Don't Appear In Passageways. This is a NES Fix rule, because the ROM hack 'Zelda Challenge: Outlands' makes use of this behaviour. ( _L_, 2008-06-27 01:08:10 )

* All lweapons are now aware of which equipment item created them. This should fix several unreported Item Override and/or scripted lweapon bugs.
* The Cane of Byrna's slash and stab sprites are now implemented.
* The Cane of Byrna now creates a beam lweapon that orbits Link, expends Link's magic or rupees, and damages any enemy that is vulnerable to wand magic.
* The Cane of Byrna itemclass now has the following editable features: Penetrates Enemies, Beam Speed Divisor, Orbit Radius, Number of Beams, Orbit Sound, Sparkle Sprite and Damaging Sparkle Sprite. Invincibility, however, remains unimplemented.
* Fixed the bug where 'Dive For Item' items could be collected repeatedly. ( _L_, 2008-06-25 22:54:34 )

* Added a new font, based on the font used in the Zelda Oracle games. There are 2 versions (fixed-width and proportional).
* Fixed the icons for the OS X ROMView application. ( DarkNation, 2008-06-24 02:12:08 )

* Custom wizzrobes will no longer create the (None) weapon if that is their weapon. Instead, they will perform their firing animation but make no sound.
* Added an npc->Tile variable, which is the current tile associated with the NPC - not just its original tile. Activity: you can use this in conjunction with certain enemy animations to determine if an enemy is trying to fire its weapon or not.
* But! For very necessary consistency with item->OriginalTile and weapon->OriginalTile, the former npc->Tile is renamed to npc->OriginalTile, and NPCTILE is now NPCOTILE. This will, I think, NOT break compiled and loaded scripts, but will require ZScript and ZASM source code that used those variables to be modifed.
* Fixed the bug where the Tile Editor's palette was resetting to the default palette needlessly.
* Fixed, again, the splitting enemies vs. Enemy Carries Item crash for Darknuts, and possibly Vires, Zols, Tribbles and Digdoggers as well.
* Here's an activity: in The Legend of Zelda level 1 entrance, go right, slay all Stalfos, but do not pick up the key. Leave and re-enter. Where does the key appear? ...I've fixed proposed1st.qst in that regard. Maybe you could check that all of the other default item locations in 'Enemy Carries Item' rooms in 1st.qst match with the game? ( _L_, 2008-06-23 20:56:24 )

* Transparent string frames are now supported. I thought that, like translucency, it would be too costly to implement at this point. But, in fact, an easy foolproof solution was there all along. Forgive my foolhardiness.
* Renamed a few subscreen fonts.
* Fixed the superfluous post-string sounds bug. ( _L_, 2008-06-22 00:10:14 )

* Fixed a bug in the tile overlay script command. ( DarkNation, 2008-06-20 19:55:42 )

* OS X Leopard Intel Only. Fullscreen is broken right now ( Takuya, 2008-06-20 18:49:17 )

* Fixed the bug where various lower-level Item Override weapons used the wrong sprite.
* Also fixed the bug where the sword's sprite could be changed to that of the other weapon's.
* Step->Next triggering now works absolutely perfectly - for both diagonal and non-diagonal movement.
* Patra BS segments no longer remove Armos combos when spawned. ( _L_, 2008-06-19 22:06:47 )

* Fixed the bug with ZC crashing when trying to play MIDI files and MP3 files simultaneously. ( DarkNation, 2008-06-18 18:34:20 )

* Fixed the bug where, ahem, special Room Type Guys were reappearing incessantly.
* Now, when you reorder your quest's string list, the Next String droplists won't display the wrong string.
* Subtly tweaked the sideview Stomp Boots again. ( _L_, 2008-06-15 23:24:35 )

* Moved Link's inverted right sword-slash slightly upward such that it actually touches his sprite. You probably didn't think I'd ever get around to doing that, right?
* Now the two other arrow buttons in the Select String box move the selected string up and down 12 spots, instead of just switching the places of the nth and the n+12th.
* You can no longer edit the '(None)' enemy. Why would you do that?
* Did you know that if you were on the Stepladder, over a walkable water combo, and you jumped, you would suddenly drown? ...Not anymore, though!
* Now, if an itemclass has no misc. values at all, you can't edit them. Why would you do that?
* If Link appeared on a Stair combo by exiting a Passageway, he no longer gets sent back into the Passageway.
* And finally, a new misc. value for swords: Beam Penetrates Enemies. Wasn't DN considering adding this back in 2001? ( _L_, 2008-06-15 04:24:09 )



Build 819 - windows
* This is exactly the same as the previous build, but has been compiled with optimizations turned on. See if it makes ZQuest run any faster for some of you. ( DarkNation, 2008-06-13 16:57:54 )



Build 818 - windows
* Corrected the keyboard shortcuts for the menus in the Zelda Classic game engine.
* The header dialog now hides the Quest Number box by default to keep people from accidentally setting it to something other than 0. You can still see/edit the value by holding down a shift key while accessing the dialog if you need it for some reason.
* The shift-click function of the combo alias feature (used to clear a combo from the alias) now works with both shift keys instead of just the left one. ( DarkNation, 2008-06-13 16:43:07 )

* Fixed a control code bug - now, consecutive control codes that appear after the 72nd displayable character won't be prematurely discarded.
* Setting Link->Jump in scripts now resets his jumping animation. So that's why those sideview scripts looked a bit odd.
* Fixed the long-standing bug that prevented damage combos on layers 1 and 2 from working! Yippee! ...What? ...What do you mean, you thought it wasn't? ...In what quest? ...How many times?
* ...Fine, I'll make it a quest rule. Happy now?
* I have a confession to make: I have added the ability to re-order a quest's string list. Without changing a string's ID number, you can move them up and down the string list using four buttons. The new order will be saved to the quest file. I get the feeling that this will greatly assist text-heavy questmaking.
* The Text Dump feature will now output the strings in the questmaker's order, as well. ( _L_, 2008-06-12 10:09:02 )



Build 816 - windows
* New beta to address the crippling sideview bug. Still working on other issues, so please try to be patient with us. ( jman2050, 2008-06-11 08:54:46 )

* Fixed the sword beam magic mirror sprite flip bug, using nothing short of brute force. Maybe today isn't so bad after all.
* Fixed the position of Small Mode's Preview Mode text. ( _L_, 2008-06-09 03:00:12 )

* Fixed the bug where Sideview stopped working. Again, I'm quite ashamed.
* Fixed the bug where 'Armos -> Item' items weren't setting the correct Screen State. Don't forget to test special rooms and special items!
* Now, a line is added to Allegro.log whenever the Screen State is changed, or whenever Screen Secrets are triggered. This should help you understand when and why these changes occur. ( _L_, 2008-06-09 00:15:22 )



Build 813 - windows
* New windows build to address the crippling new string bug. Sorry I didn't do it sooner, I neglected the fact that _L_ can't make Windows builds ( jman2050, 2008-06-08 11:02:34 )

* Fixed the bug where the flashing Warp Return blue square function often flashed the wrong square. You do remember that if 'Show Squares' is on and you click 'Go' in the Tile Warp dialog, the destination square flashes?
* Also fixed the bug where 'Whistle->Dry Lake' didn't stop Link from drowning in the non-water.
* Also, if you click on a letter in the String Editor's preview pane, the cursor in the string editing box will jump over to that letter. Not that useful, I know, but here it is. ( _L_, 2008-06-08 09:13:50 )

* Fixed the bug where setting positive values to npc->Jump had very wrong effects.
* Added the 'Other' enemy type, which is identical to the 'Fire' type, but is allowed to fall and jump if a script requests it.
* Since so many like to use it for custom boss scripts, the 'Fire' type is renamed to the 'Other (Floating)' type.
* Fixed the overly long wording for the Wand type's misc. flags.
* More script stuff: if you set an NPC's Extend to 4, its shadow won't be drawn even if the quest rules permit it.
* ...Of course, it would be tidier if you used the new EXT_ constants I added to std.zh just now. ( _L_, 2008-06-08 03:24:17 )

* Fixed that most humiliating New String crash.
* In sideview, Link no longer falls while drowning.
* Clocks can no longer be Equipment Items.
* The enemy animation styles '2-Frame', 'Slow 2-Frame' and such are no longer twice as long as they should be when 'Use New Enemy Tiles' is enabled. ( _L_, 2008-06-07 00:46:23 )



Build 809 - windows
* Fixed the bug in large mode where placing combo flags on the bottom or right edge of the screen would cause display errors in adjacent screens.
* As always, check for new bugs, and be sure to remind us of any bugs that haven't been fixed yet. Thanks. ( jman2050, 2008-06-06 14:05:09 )

* Fixed the bug where the enemy animation pattern '2-Frame 4-Dir' was actually identical to '4-Frame 4-Dir'. Don't forget to test those out!
* I've changed my mind - previous I changed three variables' names to HitWidth, HitLength and HitHeight. Now, for consistency with TileWidth and TileHeight etc., I've changed HitLength back to HitHeight, and HitHeight (formerly HitDepth) to HitZHeight. That should be the least confusing nomenclature.
* Those details will be listed in ZScript.txt, if you're confused. ( _L_, 2008-06-06 02:36:16 )

* Fixed the bug that caused ZScript-generated Red Wizzrobes to take a devilishly long time to appear.
* Now, right-clicking on a combo in the Favorites palette gives you the menu option of scrolling to the combo instead of just editing it.
* Fixed the bug where non-Link decorations (grass clippings etc.) were visible during screen scrolling. ( _L_, 2008-06-04 07:50:14 )

* As you know, strings are 144 characters long, permitting 72 visible characters and 72 control codes/arguments. A previously unseen bug has corrupted the final four characters in all strings containing control codes. This is fixed.
* You can now export a Text Dump, which is a formatted text file containing all of the quest's Strings, including control codes. Don't forget to proofread your text! (But no, you can't put a Text Dump back into the quest.) ( _L_, 2008-06-03 05:58:21 )

* Fixed a, ahem, fairly bad bug that made string control code \5\X\X not work at all. Sorry, folks!
* Now the 'Go To Location' cheat dialog box has a dropdown menu listing DMaps by name. Finally!
* Fixed the bug where, while crossing an unwalkable combo, the Stepladder disengaged when one jumped. ( _L_, 2008-06-02 02:40:31 )

* Now the very important 'Recolor' (or 'Reduce') function in the tile grabber is its own button rather than an invisible undocumented hotkey (Good lord, why?)
* Fixed the 'bug' where incrementing ffc->CSet, npc->CSet and Screen->ComboC beyond 15 did not 'wrap around' the value back to 0.
* Fixed the bug where setting item->CSet did nothing for non-animated items. ( _L_, 2008-05-31 21:49:17 )

* Fixed the bug where screen items disabled certain Special Items when collected.
* Fixed the bug where the subscreen's Item Override caused the wrong swords to trigger different-level Sword combo flags.
* Fixed the 'bug' where the S hotkey in Preview Mode didn't work.
* Also removed the E hotkey in Preview Mode, on the basis that Enemies->Secret is actually exactly the same as ordinary Screen Secrets. Hmmm.
* Made the Preview Mode hotkeys list larger in Large Mode.
* Fixed the bug where the A hotkey ('Catch All') worked on occasions when it shouldn't.
* Combo Flags: renamed the 'Push' flags to 'Push Block (Trigger)', 'Push (Silent)' to 'Push Block', 'Singular' to 'Trigger -> Self Only', and 'Singular(+16-31)' to 'Trigger -> Self, Secret Tiles'. They may be a bit less elegant, but they're quite less obtuse. Also added 'Trigger' to the names of the Trigger Flags, for easy identification.
* Combo Types: renamed 'Trigger' types to 'Step->Secrets'. To avoid confusion, the word 'Trigger' ought to be reserved for Trigger Flags.
* Formerly, scripts wouldn't Restart When Carried Over if they had halted at any point in their execution. This is fixed.
* New 'Current Item' subscreen objects are no longer initially invisible. And about time!
* Added some new utility routines to std.zh - NumLWeaponsOf(int type) and NumEWeaponsOf(int type), which can be used to find, say, how many LW_HOOKSHOTs are on the screen. ( _L_, 2008-05-26 22:25:55 )

* Fixed the bug in my fix for the Fire Magic's sprite. Please forgive my foolishness.
* Reverted the fix by jman2050 in build 780 concerning the Fire Magic sprite. It was made under a misassumption which has now been resolved.
* The Book class's 'Fire Sprite' renamed to 'Magic Sprite'. That explains it.
* Also, Farore's Wind items no longer have a 'Fire Sprite'. ( _L_, 2008-05-15 04:48:25 )

* Fixed the bug where the 'Fast Dungeon Scrolling' rule was listed twice, interfering with the other rules.
* Fixed that bug where Link can't collect items while spin-attacking.
* You may have noticed that the Large Dungeon Maps in the subscreen don't mark rooms when one is in Overworld DMaps. For now, this is changed.
* Re-labeled the 'Nayru's Love' item data flags appropriately, and fixed the 'Shield Flickers' flag.
* Renamed the 'ColWidth' and other sprite hitbox variables to 'HitWidth' and such.
* To make custom weapon scripting more convenient, a new function, weapon->UseSprite(int id) exists. It will set the weapon's Tile, CSet, NumFrames etc. to those values in a specific 'Weapon/Misc Sprite' entry, rather than requiring the script to set all of those variables individually. ( _L_, 2008-05-14 22:54:43 )

* Fixed a bug where trying to push a push block after landing on a dock would not work and would sometimes cause you to start rafting again.
* Changed the Quit menu item in ZC to read "Quit Quest".
* Corrected the position of the pressed Pal button in the tile grabber.
* Corrected conflicting keyboard shortcuts in the ZQuest menus.
* Added keyboard shortcuts to any menus in ZQuest that didn't have them.
* Fixed a bug where pressing 2 keys at once or holding down a key for several seconds could cause ZQuest to ignore the keyboard in preview mode until the user pressed the right mouse button to return to normal mode. ( DarkNation, 2008-05-09 12:33:46 )

* I dropped all of the 'Show' menu items into the new View menu - as well as View Map, but not View Pic or Preview Mode.
* Also reordered the Quest menu, putting internal data (Rules, Items etc.) at the top, and external data (SFX, Graphics, Scripts) below.
* Added, as promised, the Link->Drunk variable to match LINKDRUNK.
* Incidentally: previously Link->Drunk also made the screen wavy. Since you can control Screen->Wavy directly, this aspect of Link->Drunk has been removed.
* Fixed the bug that removed the Warp Return selectors from the interface. ( _L_, 2008-05-07 04:58:59 )



Build 798 - windows
* ArcTan ZScript command should work properly now. Ensure it does.
* Bug with random crashing when using item scripts has been fixed. ( jman2050, 2008-05-06 10:33:33 )

* Fixed the bug where items on conveyor combos did the opposite of what the 'Combos Affect Midair Link' Screen Flag was set as.
* Fixed the bug affecting the fire magic's sprite.
* Fixed the bug where the bottonmost selectable Command was buggy.
* Fixed the bug where the Quick Sword didn't affect Wands. Apparantly it should. Who'd have guessed?
* Large Mode: The 'Screen Tabs' (official name forgotten) now display the number of the screen contained therein.
* Large Mode: Due to very popular demand, the minimap selector is now twice as large as what it was. That's definitely easier on the eyes. (However, I made room by crushing the Commands panel down to just 8 buttons.) ( _L_, 2008-05-04 06:05:28 )



Build 796 - windows
* Renamed alleg42_crt.dll to alleg42.dll. A little whoops on our end :-D ( Sean, 2008-04-30 18:59:15 )



Build 795 - windows
* New Windows build is here. This is the first one I've compiled for you. Enjoy~ ( pikaguy900, 2008-04-30 18:10:00 )



Build 794 - linux
* Omg guess what? New linux build ^_^ also with ZCL 2.0 Final. ( Sean, 2008-04-29 16:58:43 )

* Peahats now get knocked back when you attack them. Remember that they can face 8 directions. Knockback only happens when you attack enemies from their front or back, so be careful. ( pikaguy900, 2008-04-29 12:38:41 )

* Changed the 2007 copyright to 2008.
* Fixed the bug where items carried by splitting enemies would shift around to other enemies when the splitting enemy died.
* Fixed the bug where Z3 animation in ZC was using 9 frames instead of 8, like in ZQ.
* Fixed the bug where the hookshot couldn't be used if Link was pressed directly up against a combo with the top half solid.
* Fixed a bug with the Quick Sword quest rule.
* Fixed a bug where Link could only do a direction change during a weapon strike if he was on an 8-pixel boundary while in diagonal walk mode.
* Fixed a bug where rafting onto a raft branch on a different screen would cause Link to be stuck.
* Fixed a bug where pressing the G key to bring up the goto dialog would place a G into one of the edit boxes in the dialog.
* Fixed a bug where bringing up the goto dialog with the keyboard would not display the mouse.
* Fixed a bug where opening an uncompressed quest file would not update the window title properly.
* Fixed a but where the item override edit box in the subscreen object properties dialog would only accept 2 characters.
* Fixed a bug where deleting a subscreen would not count as a change and so would not trigger the save confirmation dialog when exiting ZQuest.
* Fixed a bug where the subscreen object properties dialog was not centered.
* Expanded the tile editor in large mode.
* Fixed a bug where editing a tile could cause translucent colors to appear incorrectly.
* Fixed a bug where editing an 8-bit tile would display some wrong colors in the palette.
* Fixed several bugs with the default quest template. ( DarkNation, 2008-04-29 06:39:36 )



Build 788 - windows
* New Version of ZCL. So this new build is just a new updated version of ZCL. Sorry for the long delay. People. ( Sean, 2008-04-29 05:25:24 )

* Commands: the '(None)' command is now equivalent to the 'Select Command' command. Click it to select a command.
* Favorites: Clicking a Favorites spot that contains no combo will place the currently selected combo - in that case, you need not hold Shift.
* 'Show Squares' - shows the locations of blue Warp Returns, green Warp Arrivals, and yellow Stairs with a square outline. If you use the Tile Warp dialog's Go button, the matching Warp Return flashes white on the destination screen. Oooh. ( _L_, 2008-04-29 03:41:25 )

* Fixed the bug involving entering water while charging the sword, with flippers.
* Fixed the bug that prevents the third and subsequent split Gels from moving.
* A new option in the Tools menu: 'Show Script Names'. The names of the FFC scripts that will run on a screen are shown in the upper-left corner. ( _L_, 2008-04-27 17:38:36 )

* Renamed 'Auto Warp' to 'Auto Side Warp' and 'Sensitive Warp' to 'Auto Tile Warp'.
* Added a few more Integrity Checks for Screens and Warps.
* A new Quest Report: Combo Locations. It tells you which screens and FFCs use the currently selected combo. That'll be useful. ( _L_, 2008-04-25 04:22:26 )

* To make the Quest Reports easier to fathom, screen numbers are now preceded by the name of the default palette of the screen. Now those numbers aren't quite so cold and nameless.
* The 'Item Locations' Quest Report now notes if the 'Enemies->Item' flag is present, and if an enemy is carrying the item. Just a little extra detail.
* One of the Integrity Checks has been given its own Report to itself. Now called 'What Links Here', it lists all screens containing tile or side warps to the current screen.
* A new Quest Report: 'Script Locations'. A complete list of locations where FFC scripts are instantiated in the quest! Groovy. ( _L_, 2008-04-22 09:48:14 )

* Fixed some false positives with the tile warp destinations Integrity Check.
* Enabled the 'Screens' and 'Warps' Integrity Check menu options.
* Fixed the bug where the Item Override subscreen option wasn't properly acknowledged by the weapon sparkles code. ( _L_, 2008-04-20 08:57:32 )

* Fixed the bug where it took too long for Link to exit water with classic movement. ( _L_, 2008-04-19 09:02:19 )

* Now, the SetComboD() and related ZScript functions can be used to alter combos on screens that are also being used as active layers! Though, you do have to know where those screens are located...
* Fixed the bug that suppressed the Quick Sword rule. ( _L_, 2008-04-15 07:25:39 )



Build 780 - windows
* Sorry for not getting this build out sooner. Issue with guys in overworld caves should be fixed.
* Added an ArcTan function to ZScript. Input the X and Y coordinates to get the arctan. This should now make it possible to derive the angle of a location given a circle origin.
* Bug where the wand fire setting for the magic book wouldn't do anything fixed.
* Issues with keypresses in Preview mode not working fixed ( jman2050, 2008-04-14 11:25:52 )

* I've made a change to the warp detection functions, in which I've integrated both 'old-style' and regular warp detection into the same function. What this should do is fix most all of those 'Old-Style Warp Detection' bugs, but it wouldn't hurt to test those 2.10 quests' warp combos a little bit.
* Fixed Link's 'hoppy' swimming behaviour when using walkable water with classic movement. ( _L_, 2008-04-13 07:58:59 )

* Fixed that quite embarassing 'Guys in caves aren't appearing' bug.
* Fixed an alleged bug involving drowning while charging the sword. ( _L_, 2008-04-12 02:26:56 )



Build 777 - windows
* Fixed a bug that I shouldn't have missed. Zquest large mode shouldn't crash anymore. Do NOT download 776. ( jman2050, 2008-04-09 22:18:10 )



Build 776 - windows
* New windows build. May be a bit more buggy than usual since I'm just getting my bearings again. Try to be quick but thorough when testing so that I or the devs can promptly fix any major bugs that creep up, although I don't anticipate anything not related to the new script additions. Still though, all warnings regarding beta use apply. Sorry for the wait :) ( jman2050, 2008-04-09 21:20:17 )

* Added the sprite size variables (for tile height and collision) to the Link variable. However, this is far more limited than normal sprite variables at this point, so don't try to do much with it. Hopefully I'll have everything fully documented by the next beta.
* Added the WaitDraw command to ZScript, which only applies to global scripts. Basically, by default the global script is run once before all game processing is done. Now, if you place a WaitDraw command in your global script, it will halt execution of the script until after the game processing is done and before the screen gets drawn. This is for instances where you want your own scripting to occur after ZC has already done its work, instead of doing it before. Test carefully. ( jman2050, 2008-04-09 21:10:37 )

* Finally, after all these years, the Quest Rules have been organised into categories. The categories are Animation, Combos, Items, Enemies, NES Fixes and Other. I have also arranged them in approximate descending order of importance! ( _L_, 2008-04-09 10:20:33 )

* [ZCL]Fixed a bug which forced -large at all times
* [ZCL]Note- The scale mode only works with Zq if it's just in small mode. When in large mode ZQ just crashs so this is not a bug with ZCL. ( Sean, 2008-04-09 06:29:14 )

* The 'General Purpose' combo flags no longer appear white in the Lens of Truth.
* Lens of Truth combo reveals are now drawn on layer 0, whereas Lens of Truth hints are drawn over layer 2.
* Quite probably fixed the 'Patra segments removing Armos combos' bug. ( _L_, 2008-04-04 21:59:59 )

* I've just realised that the 'No Level 3 CSet Fix' quest rule has nothing to do with dungeon level 3, and everything to do with palette 3. So I've renamed it.
* Fixed a bug that caused Link ring colours to interfere with the 'No Palette 3 CSet 6 Fix' rule.
* The 'Special Rooms And Guys Are In Caves Only' DMap flag now applies to Zelda rooms as well.
* Fixed the bug that prevented 'Fairy' Guys from using Message Strings or having accompanying fires, even in DMaps where the 'Special Rooms And Guys Are In Caves Only' DMap flag was unset.
* Quite probably fixed the 'Gleeok heads removing Armos combos' bug. ( _L_, 2008-04-03 23:34:57 )

* Scrolling and whirlwind warps between different-coloured DMaps and/or differently lit rooms have been fixed!
* Tightened the sideview Stomp Boots even more. Now, hitting a half-solid combo in mid-jump, or jumping from a half-solid combo, won't interfere with stomping on enemies. ( _L_, 2008-03-28 08:55:18 )

* Surprise! Link's sprite decorations are now drawn on Link when he scrolls between screens.
* Whirlwinds now stop playing their sound every time that they are disposed of.
* Quite possibly fixed the bug where rafting into a locked door doesn't open the other side of the door.
* ZQuest hotkeys changed: Freeform Combos is now F7, and Layers is now F12.
* The Data menu is now named the Screen menu, as it refers exclusively to Screen-specific data.
* 'Doors' has been moved to the Screen menu, and the Scripts submenu has been moved to the Quest menu. Remember this!
* Also, since some people are unaware of some of the hotkeys, I've added given a few (W, F, L, ~ and Q) their own entries in the Tools menu. ( _L_, 2008-03-24 09:27:42 )

* Fixed the Pols Voice and Vire's Y-axis shadows.
* Fixed a bug that caused the 'Statues Shoot Fire' flag to crash the enemy-carried item. ( _L_, 2008-03-15 21:18:32 )

* Fixed the bug related to Whistle Whirlwinds misbehaving when exiting via the corner of the screen.
* Fixed the bug where the Hover Boots wrongly froze Link's jumping animation.
* Fixed the bug where the 'Use Old-Style Warp Detection' rule interfered with the Raft flag.
* When pressing 'W' in ZQuest, walkable (drownable) water combos will now be highlighted in blue. ( _L_, 2008-03-11 04:20:16 )

* Array declarations now accept strings as arguments. More work will be done on the functionality of this, including the ability to display custom messages via scripting. Also on a related note, single-quote characters are accepted in ZScript as well, and are treated as constants based on the characters ASCII value.
* Fun thing number one: The "Current Item" subscreen object now has a new variable, called "Item Override." Under normal circumstances, the object will select the highest level item in the selected family during gameplay, but if Item Override is anything other than -1, it will instead select that item directly. This allows one to have different selectable items within the same family (selectable swords, arrows, etc). Make sure to test that everything works correctly.
* Fun thing number two: Though currently only doable via scripting, variable sized enemies, items, and weapon projectiles are now possible. Remember that extend variable each had? Set them to 3 or higher (1 or 2 are identical to Link's 16x32 and 24x32 sizes respectively) and they will switch to a new drawing mode that takes the arguments TileHeight and TileWidth and draw the sprite at that size. Additionally, one can change the offset from the enemy's position to start drawing the sprite, as well as the offsets and size of the sprite's collision box (so variable sized weapon projectiles are possible as well). More information when the new build comes out. ( jman2050, 2008-03-05 15:19:45 )

* Small graphical bug involving quakes has been fixed
* 10 rupee pieces shouldn't fall. For real this time.
* Fixed a few bugs in ZScript that might prevent the Get/SetComboX functions from working correctly.
* Fixed a bug where reading an enemy's CSet would always return the enemy's original CSet
* And finally, the additions of arrays to the scripting engine! Took a lot of work, but they're in. Now, each running script has the option via the global Declare() function to allocate for itself a block of memory. This block of memory is used as a scratch space for declaring and using arrays. One block is continually persistent as a 'global' memory and is used by default when an ffc or item script doesn't declare a piece of memory. Also included is a new section of memory in save files that allows you to store whatever miscellaneous data you like. ( jman2050, 2008-03-04 11:27:42 )

* Made corrections to zscript.txt and std.zh. Instead of the WPN_ constants, you should use the LW_ constants for Screen->CreateLWeapon, the EW_ constants for Screen->CreateEWeapon, and the WPN_ constants for npc->Weapon.
* ...and also, the constants LW_SCRIPT1 to LW_SCRIPT10 and EW_SCRIPT1 to EW_SCRIPT10 have been added. You should use these and only these for creating dummy script-controlled weapons. ( _L_, 2008-03-04 03:29:18 )

* Fixed a few bugs in the scripting engine and primitives drawing routines. Specifically, assigning lweapon->Angle shouldwork correctly, using Screen->Circle should not create a translucent circle every time, and a crash that may occur if you start a quest directly after playing a quest with global script variables has been fixed.
* 10 rupees should no longer drop in 2.10 quests
* Red Leevers do not attack link from the sides if Link is halfway on a solid combo from below. ( jman2050, 2008-03-01 15:46:24 )

* Fixed the bug where LW_SBOMBBLAST was identical in function to LW_SBOMB.
* Also fixed the bug where the Super Bomb's explosion was the same as the normal Bomb's.
* Fixed the 'Push (Very Heavy)' and 'Bomb (Any)' Lens hints. ( _L_, 2008-03-01 06:47:06 )

* Whoops! I accidentally broke the Octorok 4's bomb projectile. It's fixed now, so please don't bother reporting this.
* Also fixed: LWeapon bombs placed by scripts while Link lacks the Bomb item.
* Fixed some mistakes in the Wand and Hookshot weapon sprite code. ( _L_, 2008-02-29 23:27:46 )



Build 758 - windows
* CopyTile, SwapTile, and ClearTile implemented as golbal functions. Look in zscript.txt for more information.
* Reworked the idon system during quest loading. Before, if you had several save slots filled, the game would load each and every quest associated with the slots in order to get their icons. This would eventually make ZC load very slowly. Now, a file with the extension 'icn' will be created to store the icon data, substantially improving ZC's loading. The name of the file is associated with the name of the save file. So, for example, zc.sav would generate a file called zc.icn ( jman2050, 2008-02-29 12:11:28 )

* ZQuest now uses large mode by default. Use -small to revert to the previous mode. If you used scaling before, you may need to use '-scale 1' to allow the new large mode to work for you, ( DarkNation, 2008-02-29 09:33:19 )

* Performed a significant restructuring of the scripting engine, should result in a somewhat significant speed increase, especially with large scripts. ( jman2050, 2008-02-28 17:40:48 )

* Implemented the DrawCombo primitive drawing command. More on this on beta release.
* Implemented a series of functions in the Game type to be able to grab combo information from ANY screen in the entire quest. You can also change said information too. Make your own scripted 'carry-over secrets' ;)
* Fixed a few major slowdown issues, especially related to primitive drawing functions. Also optimized the scripting engine some more. ( jman2050, 2008-02-28 11:09:40 )

* Fixed a corner-case I'd forgotten when horizontally scrolling in the text editor and the first line of text is highlighted.
* Hopefully improved the fading in and out behavior when scrolling between dmaps. ( DarkDragon, 2008-02-27 22:26:17 )

* Fixed a bug where rafts and ladders would always show the tile of the default raft or ladder item when used.
* The bounding box on shadowed text items in the subscreen editor is now the correct size. ( DarkNation, 2008-02-26 13:28:58 )

* Way too many changes to list in regards to the scripting engine, but just know that weapon sprite handling is finally fully implemented. So you can do crap like spawn arrows and bombs directly via scripting. Fun stuff, I know. ( jman2050, 2008-02-25 21:05:58 )

* Accessing cheats no longer corrupts a quest's continue hearts and continue-is-percent flag.
* The lens effect now ends immediately if you release the appropriate key. ( DarkDragon, 2008-02-24 01:37:40 )

* Fixed a bug where purchased Info strings didn't use the default message speed.
* Fixed the bug where Info prices would reappear during a purchased message string sequence.
* Fixed the bug that caused Tektites to sometimes not land properly when they move through the Z axis.
* Renamed 'Full-Screen Warp' to 'Enemies Carry Over In Warps', 'Direct Auto-warp' to 'Auto-Warps Are Direct' and 'Direct Timed Warp' to 'Timed Warps Are Direct'. ( _L_, 2008-02-23 22:38:09 )



Build 743 - windows
* Forgot to fix isValid() for items and npcs.
* REFFFC works correctly again. For those using ZASM: REFFFC is an integer (eg, multiple of 10000), as before. All other REF variables are ( DarkDragon, 2008-02-23 14:46:31 )



Build 742 - windows
* Heart containers in old quests now have the correct "Full Max" value of 384.
* Fixed a buggy interaction between horizontal scrolling and highlighted text in the ZQuest script editor.
* ZQ/ZC no longers slows to a crawl while redrawing the dotted line around listboxes.
* Clicking on an item class inside of the Init Data dialog no longer freezes ZQ for a few seconds. ( DarkDragon, 2008-02-23 02:00:59 )

* Added bounds checking in the ZASM interpreter for the following variables: DATA, FCSET, LINKHELD, LINKITEMD, ITEMTILE, ITEMOTILE, NPCTILE, NPCWEAPON, NPCCSET, REFFFC.
* Setting an item's CSet or flash CSet in a script now works correctly.
* Loading an npc pointer will no longer do strange things to the screen D variables.
* The ZASM interpreter will no longer choke if you try to dereference an item or npc with large UID.
* Clarified in zscript.txt that writing to Link->Dir is has undefined effects. ( DarkDragon, 2008-02-22 18:53:53 )

* Okay! Three-digit string control codes work, and support for four-digit control codes has been added. That means that the Goto If control codes can now go to strings with numbers smaller than 10000.
* Sanitised the Counter Up, Counter Down, Goto If Counter, Goto If Item and Goto If Triforce control codes, in case you accidentally specify a preposterously out-of-bounds number for the dungeon level, counter or item. ( _L_, 2008-02-20 03:30:24 )

* When Link has the bow, arrow, and at least 1 arrow ammo, the subscreen selected item name object no longer uses a hard-coded string for the name of the bow.
* Changed the way tiles 130 - 134 are handled in old quests. Old quests using these tiles only as tiles for the Goriya enemy, the Goriya guy, or in non-animating combos should work correctly. ( DarkDragon, 2008-02-20 00:48:32 )



Build 738 - windows
* Forgot to rename the 24 Heart Containers quest rule to Unused.
* Fixed some minor complaints about the Screen Data text. ( DarkDragon, 2008-02-19 17:37:08 )

* Combos with "Y skip" set to a non-zero value now don't prematurely restart their animations.
* The selector no longer waits until the subscreen has completely scrolled down before moving to highlight the correct item.
* Layers now appear during a quest's opening curtain.
* ZQuest unencoded quest files (.qsu and .qt, if uncompressed timed saves are enabled) are no longer saved corrupt. ( DarkDragon, 2008-02-18 21:58:55 )

* Editing DMap info no longer trips an assertion.
* The default quest no longer has two copies of each built-in MIDI, one as a custom MIDI.
* Eliminated the "24 Hearts" quest rule, and replaced it with a Life Meter subscreen object attribute. Old quests should work correctly. ( DarkDragon, 2008-02-10 19:18:21 )



Build 735 - windows
* Custom Item 01 through 20 once again appear in the default quest.
* Link and non-flying enemies now appear behind the subscreen regardless of any quest rules.
* Pieces of heart once again show up on the subscreen.
* Subscreen selectors no longer animate at double speed.
* Items in the passive subscreen no longer animate at double speed during the opening wipe.
* Layers above 3 no longer are invisible while the active subscreen scrolls into view. ( DarkDragon, 2008-02-10 04:35:20 )

* Fixed a bug in Allegro which caused some quest to become corrupt when saved while ZQ played music in the background. Please verify all kinds of files (quests, unencrypted quests, old quests, exported stuff, save files, images, music, etc) still load correctly. ( DarkDragon, 2008-02-09 22:40:53 )

* Improved the randomness of string control code \4\X\X (Goto If Random).
* Fixed the bug where DMap introductions were interfering with screen Message Strings.
* Also: fixed the 'Cave (Walk Up)' fix, so that placing the blue square directly onto the combo no longer causes trouble. ( _L_, 2008-02-06 09:19:02 )

* Fixed the bug where shop prices weren't being properly disposed of, and were filtering into message strings.
* 'Block All' combos no longer make lit bombs and explosions disappear without a trace.
* Sanitised Link->HP and Link->MP, in case you foolishly set them to -1 or something.
* Screen Flag: Cycle Combos on Screen Init. It is a tiny flag with quite desirable ramifications. When you enter the screen, all cycling combos (including Secret Combos and other Screen State-related combos) are cycled up to 10 times before the screen appears. This is best used with animated Secret Combos that provide fancy transitions into other combos. It also cooperates with both the 'Combo Cycling On Layers' rule and the Overworld Map function.
* Also fixed the bug that made Spinning Tile combos not function when used as Secret Combos on layers. At least, I think they didn't.
* Apparantly Darknuts and Wizzrobes that can be stunned by certain boomerangs shouldn't also take damage. This is reinstated.
* Link's weapons (both candlefire and bombs) were doing twice as much damage to him as they were supposed to. This is fixed. ( _L_, 2008-02-01 05:03:10 )



Build 731 - windows
* ZCL 2.0 Beta 1.1 built for windows ( Sean, 2008-01-29 17:43:25 )



Build 730 - linux
* New build of ZCL ( Sean, 2008-01-28 23:39:11 )

* [ZCL] Uses GTK2 on linux builds
* [ZCL] GUI should not look messed up like it was.
* [ZCL] Checker is now fixed under linux
* [ZCL] Fixed the Quick Quest Load Feature that it wouldn't load saves 5-15
* [ZCL] Notice: Quest loader might show weird text. I am not sure what is causing this. I am investigating still on this. Seems like it's a linux only bug. ( Sean, 2008-01-28 23:36:00 )



Build 728 - linux
* Ok this one was long overdue. I have made a linux version of ZC also with a new version of ZCL for linux. It is using gtk so make sure you have gtk1 installed. Report bugs at agn etc. Enjoy people <3 Sean ( Sean, 2008-01-27 19:58:04 )

* Fixed checkbox alignment in ZQ Tab
* Fixed Button sizes in ZQ and ZC tab. (Text was being cut off)
* Some items were forcing dark colors. This should be fixed ( Sean, 2008-01-27 19:52:49 )



Build 726 - windows
* Dive warps now work in quests with "Old-style warp detection" checked.
* If Link swims or dives into a warp, he remains swimming/diving during the warp transition.
* Corrected the label next to some of the trap tiles in the default quest.
* ZC should no longer crash when returning to the main menu after beating a quest.
* "Win Game" combos should now work as advertised. ( DarkDragon, 2008-01-27 00:42:49 )

* Quest Rule: 'Hearts Required' Affects Non-Special Items. This replaces the previous 'Hearts Required' bugfix of mine. The rule is on page 5 and currently off for all quests.
* Quest Rule: Push Block CSet Fix. In The Legend of Zelda, moving push blocks are visible even in darkness. Presumably this is because they are set to CSet 9. This rule is on for all quests except proposed1st and its kin.
* Fixed Link's position when exiting 'Cave (Walk Up)' combos. Reminder to all: the blue square can either go on top of the 'Cave (Walk Up)' combo, or sixteen pixels north of it (which is the opposite of 'Cave (Walk Down)' combos).
* Discontinued the 'Translucent Nayru's Love Shield' and 'Flickering Nayru's Love Shield' Quest Rules, instead delegating those details to the Item Editor. ( _L_, 2008-01-25 07:58:37 )



Build 724 - windows
* The subscreen editor now respects your choice of Triforce fragment tile when editing a Triforce Frame item. ( DarkDragon, 2008-01-25 02:09:34 )

* When placed in midair by a script, Link no longer performs his falling animation as long as his Jump is fixed at 0.
* Spinning Tiles now count as required enemies to defeat (or rather, avoid) for Shutters and Enemies->Secret. ( _L_, 2008-01-20 08:07:57 )

* Fixed an unfortunate bug where any quest with the 'Hide Enemy Carried Items' rule set would crash whenever that rule took effect. Maybe this solves your particular problem, crash victims?
* Fixed the bug where the Heart Ring item's recovery was exceeding Link's max. health.
* Fixed a prolongued Stomp Boots sideview bug. ( _L_, 2008-01-19 08:09:12 )

* So it was impossible to detonate a Remote Bomb if you deployed your last bomb, because your bomb supply was 0 and the subscreen icon wasn't available. Now, a fix: the Remote Bomb's icon will still be available if one undetonated bomb remains onscreen. This also applies to Remote Super Bombs.
* Enemies will no longer Enter From Sides into walkable water.
* Changed 'Rupies' to 'Rupees' in the Cheat Menu. Tut, tut.
* Added the 'Arrows' level 1 cheat, which is disabled if the True Arrows rule is unset. However, using this cheat does not give you the Arrow or Bow items.
* As for the 'Bow & Arrow' subscreen icon: previously the current Bow item was drawn above the current Arrow item. This is now corrected.
* Improved the collision detection of Block combo types so that weapons can't be shot through them.
* Step->Next and related combos now work when the 'Old-Style Warp Detection' quest rule is enabled. ( _L_, 2008-01-18 03:30:30 )

* Fixed Screen->Wavy and Screen->Quake so that they decrement over time again.
* Re-fixed the bug that causes either two flames or no flames to come from the Candle.
* Now moving Fairies are dragged by Boomerangs and Hookshots again.
* Fixed the 'Never Returns After Death' enemy data flag.
* Now, putting Spinning Tile enemies in a screen's enemy list (and why would you want to do that?) will now result in Spinning Tiles whose animations use the default Tile or E. Tile selected in the Enemy Editor. ( _L_, 2008-01-14 20:10:16 )

* Correction to sand conveyors in the default template, by ZCAmazing. ( DarkDragon, 2008-01-07 22:43:37 )



Build 718 - windows
* The map viewer in ZQuest will now mark rooms as dark as appropriate.
* Restoring focus to ZQuest should no longer intermittently crash it.
* If Load Last is disabled, ZQuest will no longer give the default blank quest the name of your last opened quest. Good way to lose a lot of work.
* Fixed various issues with the quest template:
* - Oval Patras now use the correct E. Tile.
* - Swapped Din's Fire and Roc Items in the Active (New, B) subscreen.
* - Ladder 2 now has "2-Hand" checked.
* - Changed Stomp Boots to use CSet 8.
* - Set some door combos to Overhead.
* - The DMap name spaces in the subscreens of the default quest are now centered instead of left-aligned. ( DarkDragon, 2008-01-06 22:57:09 )

* Fixed the Triforce warp-out bug.
* Now, arrow ammunition counters will be unchanged if Link's Arrow item ceases to be available.
* Fixed the screen initialisation spinning tile bug.
* Intra-DMap scrolling warps no longer fade-out the palette unnecessarily.
* Scrolling Warps and warping combos now function correctly together. ( _L_, 2008-01-05 21:57:26 )



Build 716 - macosx-Tiger-and-Leopard
* OS X Build bugfix, it should run on Tiger correctly ( Takuya, 2008-01-04 14:47:57 )

* Fixed Screen->Quake, so that setting it to 20 or something on each frame will, as intended, make the screen shake continuously.
* Added some descriptions to zscript.txt for Screen->Quake and Screen->Wavy. Sorry!
* Re-fixed the double Candle flame bug. ( _L_, 2008-01-04 03:23:21 )

* Fixed the bug preventing several kinds of enemies from being moved outside the screen by scripts.
* Link can no longer drown while inside a Like Like.
* Fixed the backwards-compatability shieldless Darknut sprite bug. ( _L_, 2008-01-02 23:07:19 )



Build 713 - macosx-Tiger-and-Leopard
* OS X build ( Takuya, 2008-01-02 14:58:35 )



Build 712 - linux
* New Linux build. ( koopa, 2008-01-01 08:43:38 )

* Fixed a bug in which scripted items' script arguments were sometimes misplaced.
* Fixed the bug in which an item's 'Hearts Required' requirement would only be in effect for Special Items.
* Also: Scripts can remove items by setting their Y or X to 360 or 512. ( _L_, 2008-01-01 08:19:47 )

* Fixed the 'Bow and Arrow' subscreen item, which until now wasn't displaying properly in ZQuest.
* Potions no longer make a momentary 'refill' sound effect if both of their misc. values are actually 0.
* And while I'm at it, you can edit the Bait's duration onscreen. Default: 768 frames. ( _L_, 2007-12-31 09:34:59 )

* NES consistency fix: sliding pushblocks are now drawn above enemies.
* It seems a little off-putting that so much of the Triforce's behaviour is dependant on the 'Equipment Item' flag. So, I've added the 'Victory Cutscene' and 'Side Warp Out' flags to the Item Editor.
* Furthermore, the Whistle's misc2 is now the Warp Ring number to use when Link is warped by the whirlwind. Also, the original Whistle Warps are now Warp Ring 8.
* As you know, Gohma currently cannot be stunned. Instead, level 0 weapons will do 1 damage.
* Collecting a Big Triforce in an Item Cellar resulted in the wrong palette being used when the animation finished. Fixed!
* Collecting a Big Triforce no longer frivolously sets the 'Dungeon Boss defeated' level item. ( _L_, 2007-12-31 02:46:04 )

* Improved the String Editor: the message preview box now shows the selected background frame applied to the string.
* You can no longer edit 'Pols Voice (Magic)'.
* You can edit the 'Spinning Tile (Immediate)' and 'Spinning Tile (Random)' enemies. Meaningful editable values include HP, Damage and Step Speed.
* Did I accidentally make Spinning Tiles invisible? If so, then that is fixed. ( _L_, 2007-12-24 22:43:37 )

* Changed the names of GetMapFlag and CurMapFlag. Sorry, folks. But honestly - 'Map Flag'? The proper, non-misleading name for them is 'Screen States'. Game->GetMapFlag() is now Game->GetScreenState(), and Game->CurMapFlag[] is now Screen->State[].
* Also modified: the ZASM names for those variables and functions.
* Also updated: the std.zh constants passed to Screen->State[]. Now with slightly helpful explanatory comments!
* Also made the 'Terminal Velocity' entry box slightly wider. ( _L_, 2007-12-24 07:32:20 )

* Complemented the InputX and InputY Link scripting variables with InputZ (scroll wheel) and InputB (button mask).
* Fixed the bug where projectile shooters with no tile would damage Link when touched (for instance, Statue fireball shooters).
* Fixed a bug in the item editor where wrong flag names were being displayed.
* Fixed a bug where the Reopen Last Quest option in ZQuest was not working.
* Fixed a bug where using the favorite commands buttons would cause the opened dialogs to be in the wrong font.
* Fixed a bug where the Catch All favorite command button would show incorrect text when pressed. ( DarkNation, 2007-12-21 13:27:04 )

* Fixed the Stomp Boots' collision detection again.
* Fixed the bug where a Candle with 'stab' tiles wouldn't flame.
* Changed ZASM 'ICLASS' variables to 'IDATA', for consistency with ZScript.
* Furthermore, changed variable 'ICLASSSETGAME' to 'IDATAKEEP'.
* Furthermore, changed variable 'ICLASSFAMTYPE' to 'IDATALEVEL'. ( _L_, 2007-12-19 18:38:19 )



Build 704 - windows
* Taking away a ring from Link using a script should correct update his tunic colors (if in a dungeon, or on the overworld with the appropriate quest rule on).
* Fixed some minor layout issues in the enemy editor.
* Warping into a dark room using the wavy effect no longer causes you to arrive with the room lit.
* Link no longer travels at half-speed over canceled inta-warps.
* Obtaining a Triforce on screen 0x8* no longer warps you anywhere.
* Continuing the warp theme, warping to a new dmap using a passage no longer causes rooms on that dmap to alternate lit/dark. ( DarkDragon, 2007-12-18 21:14:23 )

* Flags 4 and 5 in the item editor now display the correct label.
* ZC now displays an opening wipe instead of just a blackout if such is set for a cave up/down combo.
* Link no longer reappears for a few frames in his original location if warping using a cave with zap effect.
* The default quest swords again has correct values for beam hearts and damage.
* (Forgotten from last time) Fixed the bug where all statues would fire. ( DarkDragon, 2007-12-18 16:07:09 )

* Added a UseSound variable to item data in ZScript.
* Fixed the bug where Super Darknut Ringleader children would die instantly when their spawning parent died.
* Fixed the bug where dungeon screens were having their walls replaced by standard, generic ones.
* Fixed a bug where Dmap-disabled items were not disabled until the player changed screens once.
* Fixed a bug where some scripting dialogs were not centered.
* Fixed a bug where deleting a quest that was set to reload when ZQuest was run would cause the old quest's name to still show in ZQuest.
* Fixed a bug where Enhanced music would not play in ZQuest.
* Fixed a bug where playing music in ZQuest would incorrectly alter the music playing menu items in the Etc menu.
* Fixed a bug where the X button the on the script assignment dialog would cause the dialog to reload. ( DarkNation, 2007-12-18 06:17:43 )



Build 701 - windows
* Widened the Sound panel in ZC so as to fit the full "Enhanced" instead of "E." for two of the sliders.
* Loading a new SFX while an old one is playing no longer crashes ZQ.
* "itemclass" is now "itemdata" in ZScript, as the pointer does not in any way represent the item's class. item->Class is similarly now item->Data. Scripts already compiled into ZASM are unaffected.
* Hopping into and out of water is no longer broken.
* Setting ffc->TileWidth no longer resets ffc->EffectWidth, and vice-verse, and similarly for Height. ( DarkDragon, 2007-12-17 23:30:35 )

* Fixed the bug where Link's BS-style animation was partially tied to the BS animation quest rule.
* Fixed the bug where enemies that leave the screen's boundaries die.
* fixed the bug where enemies could be knocked off the edge of the screen.
* Fixed the bug where changing a door to a wall or walk-through wall via a script would not work.
* Fixed the bug where the frame on the save slot select screen would not be drawm correctly.
* Changed the new quest file command to no longer open the quest template dialog. ( DarkNation, 2007-12-16 20:41:11 )



Build 699 - windows
* [ZCL]Added Screenshot Output in ZQ and ZC Options
* [ZCL]Added Cap FPS in ZQ Options
* [ZCL]Added Show FPS in ZQ Options
* [ZCL]Added Animate Combos Options
* [ZCL]Added Load Last Quest in ZQ Options
* [ZCL]Added Mouse Scroll in ZQ Options
* [ZCL]Added Save Paths in ZQ Options
* [ZCL]Added Show Misalignments in ZQ Options
* [ZCL]Launch Buttons now appear on every page
* [ZCL]GUI Updates again
* [ZCL]Fixed ZC Checker bug that did not detect allegro
* [ZCL]Replaced Win99 Color Scheme with Gold Color Sheme
* [ZCL]ZCL Logo updated
* [ZCL]Added Reset to defaults in ZC and ZQ Options
* [ZCL]Added Go to Color Scheme in ZC and ZQ Options
* [ZCL]Added Go to Set Title Screen in ZC Options
* [ZCL]Fixed a bug on Text Overlapping when you use a windows visual style
* [ZCL]Remove the Auto Reload on start. ZCL Auto reloads the settings on
* [ZCL]Added a feature if ag.cfg is not found. It will set default options for
* [ZCL]Extended the load quests slot to 15 ( Sean, 2007-12-15 17:15:13 )



Build 697 - windows
* Game->GetCurDMapScreen should now return a number compatible with Link->Warp, etc.
* Putting "<none>" in a script slot after compiling ZScripts will now fully erase any script that was in that slot previously.
* It is no longer possible to assign ffc or item scripts to (nonexistent) slots 512 and 256, respectively, thereby crashing ZQ.
* Rotated translucent combos should now render with the correct orientation. ( DarkDragon, 2007-12-15 11:52:26 )

* Fixed a bug where cycling to a statue would not allow the new statues to shoot fireballs.
* Fixed a bug where the Constants tab on the Cheat dialog in ZC would display incorrectly if the dialog was closed when the tab was active.
* Fixed a bug where the Cheat dialog in ZC was not centered.
* Fixed a bug where the "Empty" guy was defaulting to an incorrect tile.
* Fixed a bug where the Up Charging Link sprite was defaulting to the wrong tille.
* Fixed a bug where the favorite command button for an action would work even if the menu option for it was grayed out.
* Updated the favorite command names to be more clear.
* Set it so that the Catch All favorite command would show the corresponding room-related name.
* Removed the unimplemented Enhanced Music menu item.
* Renamed the Alternate Music label in the DMap editor to Enhanced Music. ( DarkNation, 2007-12-14 13:40:04 )

* Projectile enemies are now no longer necessarily invisible and invulnerable.
* Now, enemies with a tile of 0 are also invisible.
* 'Trigger' enemies no longer instantly self-destruct.
* Fixed the bug that was causing Zora screen enemies to destroy Armos combos when randomly placed.
* Fixed the stomp boots' hit detection.
* Fixed the 'Cave (Walk Up)' and 'Cave (Walk Down)' exit animations.
* Fixed the Cancel Warp Cave combos bug. ( _L_, 2007-12-13 23:15:49 )

* Fixed the bug where the Default button in the item editor would sometimes cause the item name to become corrupted.
* Fixed a bug where candles would often shoot double flames.
* Fixed the bug where the Potion Shop Letter wouldn't show up in the item area in the active subscreen.
* Added a few more controls to the sound dialog. Now, Enhanced music and SFX can both have custom volumes in addition to the MIDI and Master Digi volumes.
* Favorite commands now save between ZQuest sessions.
* Fixed a bug where the scet editor was not centered in -large mode.
* Fixed a bug where the cset grabber was not centered in -large mode.
* Fixed a bug where the tile grabber was not centered in -large mode.
* Fixed a bug where double-clicking would not work in the tile selector in -large mode. ( DarkNation, 2007-12-13 13:34:42 )



Build 693 - windows
* Just the same as the previous build just with an better updated ZCL ( Sean, 2007-12-11 14:45:59 )



Build 692 - windows
* Due to limitations in the undo system, it is no longer possible to Undo after changing a screen's layer properties, or inserting a combo on the combo page. (Previously doing so would cause quest corruption.)
* Added a quest rule, "Tunic Can Change Color On Overworld", off by default in old quests. If this rule is disabled, Link's tunic color will not change if he obtains a ring on the overworld (normally or via scripts) until he steps through a warp, as in 2.10. ( DarkDragon, 2007-12-11 07:52:07 )

* [ZCL]Fully implemented the Color Scheme preview.
* [ZCL]Fully implemented the Set Title Screen
* [ZCL]Fixed ZC Checker bug that didn't even scan
* [ZCL]Finally did some touch ups to the interface to look more appealing
* [ZCL]Added QuickLoad
* [ZCL]Added Skip Loading Icons
* [ZCL]Renamed Throttle FPS to Cap FPS
* [ZCL]Added Show FPS
* [ZCL]Fixed a bug with everytime ZCL was loaded fullscreen was always checked. This bug was back in the 1.5 days also. Finally Squashed. :-D
* [ZCL]Did touchups on the fonts. ( Sean, 2007-12-11 06:18:54 )

* Giving Link a Ring with scripts will now change his colours appropriately.
* Now, a magic-powered Ring will properly change Link's colours when his magic runs out.
* Fixed the bug related to stepping out of 'Cave (Walk Up)' combos.
* Fixed the 'swimming through walk-through walls' bug.
* Now, for convenience, the 'No walls' cheat overrides the 'Freeform Dungeons' quest rule, or lack thereof.
* Now, when Link steps out of a Cave combo, his Z is set to 0. ( _L_, 2007-12-09 22:14:17 )

* Reverted ZCL back to tab look
* Integrated Title Screen into the MAIN UI
* Did some arrangements on the features of ZCL
* Decided to start working back with ZCL AGAIN :-D ( Sean, 2007-12-09 17:11:24 )

* Reverted ZCL back to tab look
* Integrated Title Screen into the MAIN UI
* Did some arrangements on the features of ZCL
* Decided to start working back with ZCL AGAIN :-D ( Sean, 2007-12-09 16:51:28 )

* Finished implementation of stab and slash sprites for the Candle item class, as advertised in the Item Editor. Those of you who were reskinning the Candle as a lantern or wand may be pleased to see this.
* Fixed the bug that prevented sideview enemies from walking on lower-half-solid combos.
* Seemingly fixed a bug that apparantly prevented Moldorms and Gleeoks from ever returning even if the 'Never Returns After Death' flag was unchecked. ( _L_, 2007-12-07 22:29:44 )

* Fixed a bug where the Smart Scrolling rule stopped Walk-through walls from working.
* Now, for obvious reasons, you can't go through a Walk-through wall while diving.
* Fixed the bug that was preventing Dive Warps, Swim Warps and Dive for Item flags from working with walkable water - not to mention preventing Link from holding up items.
* Fixed the bug that allowed 'land-swimming' with walkable water. ( _L_, 2007-12-05 23:06:37 )

* Opening cheats or init data will no longer crash some quests where the bomb ratio is 0. ( DarkDragon, 2007-12-03 21:02:50 )

* Added Game->PlayMIDI(), because really, string control codes shouldn't be the only way to dynamically change the background music.
* If an enemy is moved more than 32 pixels out of the screen's bounds, it is removed. If you wanted a means for scripts to instantly remove enemies, I suppose this is it. ( _L_, 2007-12-03 02:38:48 )

* Fixed a bug affecting string control code parsing and the 'Messages Can Be Bypassed With The B Button' rule.
* Seemingly fixed a bug preventing damage combos from doing any damage at all, in some cases.
* I just realised something. The 'Dodongo CSet Fix' rule really shouldn't exist now that this functionality is handled by the Enemy Editor. Thus, I've discontinued it and added appropriate handling to the quest loader.
* Renamed: 'Solid Blocks' to 'Can't Push Blocks Onto Unwalkable Combos', 'Bombs Hurt Link' to 'Link's Bombs Hurt Link', 'Mean Placed Traps' to 'Traps Can Move Across Entire Screen', and 'Fliers Can Appear on Walls' to 'Flying Enemies Can Appear on Unwalkable Combos'. ( _L_, 2007-12-01 08:44:02 )

* It is again possible to access the first item on the screen with LoadItem. _L_, it was perfectly fine (and required) to be able to pass 0 into do_loaditem... ( DarkDragon, 2007-11-28 20:19:40 )

* The ZASM interpreter no longer refuses to load the first enemy of the screen, claiming it's an invalid NPC.
* Damage combos now no longer do 1/16 of a heart of damage sometimes when "Full Priority Damage Combos" is enabled.
* Mild optimization to accessing NPC and Item pointer in scripts. ( DarkDragon, 2007-11-25 21:31:05 )



Build 679 - windows
* Summoners no longer summon enemies on top of unwalkable tiles.
* The subscreens in old quests no longer show the potion instead of the bow.
* The first tile of an animating combo with the "Animation Resets When Cycled To" flag set now displays for the correct amount of time when cycled to. ( DarkDragon, 2007-11-25 00:46:10 )

* Renamed 'Cool Scrolling' to 'Cool Opening/Closing Wipes' and 'Insta-Warp with Opening Screen' to 'Insta-Warp with Opening Wipe'.
* Also renamed 'Z3-style Movement' to 'Diagonal Movement', to make it completely unambiguous.
* Cool Opening Wipes are now centered on Link even if he's in midair. ( _L_, 2007-11-23 01:17:08 )

* Changed the implementation of all JUMP and this->Jump variables. My apologies to those who were already making use of that variable. Rather than being an arbitrary value that was irrationally divided by the Gravity constant, Jump is now a straight acceleration variable, comparable to Ax and Ay.
* In that vein, the Gravity and Terminal Velocity constants have been shifted two decimal places to the right. (To convert Jump-related values in your scripts to the current format: divide by your Quest's Gravity variable as it is now expressed.)
* Added ZScript variable npc->ID, which matches the current ZASM variable NPCID. Setting it
* Sanitised LoadNPC and LoadItem - passing them 0 will no longer cause a core meltdown.
* Did you notice that Screen->Wavy and Screen->Quake actually didn't work at all? No? Well, now they're recognised by the ZScript compiler.
* The Defaults button in the Item Editor didn't default the item's name. Does it now? Yes! (Tip: use it in your pre-675 quests to find out which z### items are Custom Items.)
* The Enemy Editor. In particular, tile selectors. And a familiar three-hearted pattern. Begone!
* Also, the 'message backgrounds in item scripts' bug is fixed. ( _L_, 2007-11-22 09:20:12 )



Build 675 - windows
* Fire Gleeoks now have the correct tile offsets set in the default template.
* Major push to get the item editor in a 2.50-ready state. In particular:
* - The subscreen's "Current Item Name" text boxes now use the item's true name, as editable in the item editor.
* - All item classes can now be added to the subscreen.
* - To realize the above, I had to add two "decorative" item classes, "Letter or Potion" and "Bow and Arrow", to deal with the way these combined items are currently hacked into the item system. You can use them in the subscreen as before, but no actual items are members of these classes.
* - Reserved 20 item classes for use by quest authors in creating custom item classes. Do not assume other currently unused item classes will remain so in future releases of ZC.
* - Reserved 20 items for use by quest authors in creating custom items. Do not assume other currently unused item slots will remain so in future releases of ZC. ( DarkDragon, 2007-11-21 21:30:31 )

* Fixed the "Spawns from armos combo type" enemy flag to allow any enemy to spawn from an armos combo. Note that large or segmented enemies probably won't work like you expect.
* Fixed a bug in ZQuest where objects on the first page of a tabbed dialog box wouldn't work until the page was changed once. ( DarkNation, 2007-11-20 11:46:33 )



Build 673 - linux
* New linux build. ( koopa, 2007-11-19 10:45:45 )



Build 672 - windows
* Direct warping from a room with shutters to another room with shutters will no longer occasionally cause the destination shutters to fail to close.
* Walker/Shooters with misc10=0 and misc1=1 now fire projectile of the correct orientation.
* FFCs linked to FFCs earlier on the FFC list will no longer get out of sync when the primary FFC hits a changer.
* Directly changing the hp of the first of a Lanmola's segments will no longer occasionally crash ZC. ( DarkDragon, 2007-11-18 20:24:17 )

* Killing a Goriya now only removes that Goriya's boomerang from the screen.
* Improved handling of F12, F11, F5 while viewing the map, I, and Q in ZC. In particular, pressing them will no longer change the key repeat rate of other keys.
* Added five "General Purpose (Script)" combo flags. These do nothing, but are set aside for use with third-party scripts. Do not assume other "unused" combo flags will remain so in future builds.
* Screen->Ellipse now draws the ellipse at the correct y-position. ( DarkDragon, 2007-11-17 21:43:34 )

* Ladder positioning is no longer very incorrect when Z3 movement is disabled.
* Attempted fix of the Mac tile paste bug.
* The Magic Book's SFX field in the item editor is no longer labeled "unused".
* Disabling joystick input for a key no longer disables that keyboard key as well. ( DarkDragon, 2007-11-17 13:08:04 )

* Whoops - I almost forgot the Golden Arrow's backwards-compatability. ( _L_, 2007-11-17 02:16:36 )



Build 668 - windows
* Magic that hits Link's shield, hits a prism, then hits Link's shield again no longer passes through Link.
* Magic bouncing off a prism now shows the correct sprite in all directions.
* The Link Data cheat dialog now correctly handles the Double Magic check box.
* Link no longer takes 1-tile wide steps when to the left or right of water with Z3 movement off.
* Link is no longer blocked from turning to a perpendicular direction when left or right of a ladder combo with Z3 movement off.
* "Throttle FPS" is now "Cap FPS", as the word Throttle was causing some confusion. ( DarkDragon, 2007-11-16 23:55:33 )

* Fixed a bug where Eyeball combos were looking at the wrong location.
* Fixed a bug where the values on the Constants tab were different in the Init dialog in ZQ and the Cheat dialog in ZC.
* Fixed a key repeat issue with the Q and I keys in the game engine.
* Fixed a bug where combo types with long names would sometimes cause the properties dialog of a combo to not display everything properly. ( DarkNation, 2007-11-16 13:23:32 )

* Now, every single enemy's bgsfx will stop at the right time. ( _L_, 2007-11-16 09:31:16 )

* Due to overwhelming demand, I have added the 'Combos Affect Midair Link' screen flag. Trigger, Step, Stairs, Direct Warp, Sensitive Warp, Swim Warp, Slow Walk, Damage and Conveyor combos will affect Link regardless of his Z position. So... yay?
* Candle sprite backwards-compatability for very recent quests has been added.
* Fixed some inconsistencies with regards to the side-exits of Item Cellars and Caves.
* Now, the default power of Book magic is equal to that of Wand magic.
* Jumping enemies now make use of the 'Jumping Link Layer Threshold' (which is renamed to 'Jumping Sprite Layer Threshold').
* 'Fairy (Moving)' items are now drawn above layer 3 - they're flying, after all.
* Added some Item Editor labels for Peril Ring and Stomp Boots item classes. Fun fact: those items exist!
* Furthermore, the Golden Arrow's enemy-penetration ability is now controlled by the Arrow class's Misc. Flag 1. ( _L_, 2007-11-16 02:04:50 )

* Freeform combos are now drawn above push blocks, as they should be.
* Scripts can now correctly set the X and Y values of 'Fairy (Moving)' items.
* Picking up an item will now cancel Link's sword-charging. ( _L_, 2007-11-15 06:29:14 )

* Fixed the other bug that was preventing Peril Beams from firing. Sorry!
* The 'Reset Room' combo type now works when the 'Use Old-Style Warp Detection' quest rule is set. Did anybody notice?
* Combo type 'Screen Freeze (FFCs Animate)' renamed to 'Screen Freeze (FFCs Only)', and 'Screen Freeze' renamed to 'Screen Freeze (Except FFCs)'.
* Freeform Combos are now visible in the Overworld Map.
* I'm quite fond of the Overworld Map, and so, to encourage its use in Interiors and Dungeons, I added a DMap flag that makes it so that only screens that are plotted on the DMap's minimap grid are displayed in the Overworld Map. ( _L_, 2007-11-13 09:22:33 )

* Adding a magic meter no longer crashes ZQ. ( DarkDragon, 2007-11-13 05:38:51 )

* Fixed the backwards-compatability of Candles' fire sprites. Whoops!
* ...and the proposed quests' Candles as well.
* I noticed just now that the quest 'Lost Isle' (and presumably a few others) has cutscenes that are somewhat dependant on FFCs not being visible while the screen is scrolling. So, I've added the 'FFCs Are Visible While The Screen Is Scrolling' quest rule, which is off by default! ( _L_, 2007-11-12 20:11:42 )



Build 660 - windows
* Old quests should now have the correct default message string color.
* Update zscript.txt: corrected an error in the documentation of DrawTile, and added a notice to some variables that do not yet work correctly in all cases when written to by scripts. ( DarkDragon, 2007-11-11 23:14:24 )

* Fixed the default weapon sprites for the Candles. Changes to the template are still needed.
* The value of Link->Jump no longer carries over between games.
* Fixed the Hookshot sound carryover bug. ( _L_, 2007-11-10 09:46:07 )

* The 'Damaged by Power 0 Boomerang/Hookshot' enemy data flag is renamed to 'Damaged by Power 0 Weapons'.
* GetCurDMapScreen() now returns the correct number.
* The screen warp flag 'Overlay' is renamed to 'Combos Carry Over'.
* Seemingly fixed the bug where a few bosses' bgsfx wouldn't stop.
* Misc. Flag for Candles and Din's Fire: 'Don't Provide Light'. ( _L_, 2007-11-08 20:50:06 )

* Added the missing LA_DROWNING constant to the std.zh file.
* Fixed the bug where the item test screen in ZQuest would display the item in the wrong location in -large mode.
* Fixed the bug where ctrl-click filling on the map screen in -large mode of ZQuest would sometimes behave strangely. ( DarkNation, 2007-11-06 13:34:38 )



Build 655 - windows
* Fixed the sfx.dat file. ( DarkDragon, 2007-11-05 20:16:45 )



Build 654 - windows
* The "View Pic" palette in ZQuest now appears in the far lower-right in -large mode.
* When editing tiles in ZQuest in -large mode, the tile currently in the clipboard no longer has a slight y offset.
* When dragging the mouse while placing a warp return, item position, etc, in -large mode, the text no longer appears on top of the Favorites window.
* Scripts should no longer carry over from a quest to a subsequently loaded old quest.
* The default quest template now has the correct default sword item properties. ( DarkDragon, 2007-11-05 19:50:32 )

* Fixed the Candle item class's Weapon 3 sprite, which is actually used now.
* Now, level 3 Candle fire definitely won't trigger 'Wand Fire' and 'Din's Fire' combo flags.
* Fixed the damage Link takes from Candle fire, which now corresponds to the Candle's power.
* Finally remembered to reduce the 'floatiness' at the apex of Link's jump. I know a few people were unhappy with it, so here it is. This should only slightly reduce the distance of Link's jump, but if you were counting on that exact jump length... maybe you could try lowering the Gravity variable a little bit? ( _L_, 2007-11-04 07:50:25 )

* Now you can edit Weapon/Misc sprites' names. That should make weapon editing even easier.
* And now you aren't allowed to set Link->Z while in Sideview.
* Added a brief warning to the Screen Doors dialog, for the benefit of new users. ( _L_, 2007-11-03 00:03:22 )

* Link now uses the swim sprites when swimming instead of the float sprites.
* Fixed a bug where the Reset menu item in the ZC engine was tied to the Fullscreen menu item.
* ZQuest no longer tries to move tiles (which can result in a crash) when in tile select mode instead of tile edit list mode.
* The combo brush arrangement now starts in column mode instead of non-column mode. ( DarkNation, 2007-11-02 06:48:02 )

* Fixed the bug where boss segments were interfering with the boss's bgsfx.
* Fixed the bug where a PatraBS couldn't be hurt if its Misc. Attribute 2 was set to non-zero.
* Now, the Peril Beam will fire for all swords, except for those whose non-percentage Beam Heart requirement exceeds the maximum possible Heart Containers (12 or 20). ( _L_, 2007-11-02 02:19:41 )

* Change to Magic Ring 4: even if you have unlimited magic, you still cannot cast a spell unless your total Magic Containers meet the spell cost.
* New string control codes: 16/XX adds item number XX to Link's inventory, and 17/XX removes that item from Link's inventory. Furthermore, there's, 3/XX/XX/XX (Goto If Screen Variable). If the value returned by Screen->D[Argument 1] is greater than or equal to Argument 2, ZC will switch to another string (Argument 3).
* If Like Likes or messages remove items from Link's inventory (in particular Heart Pieces, level-specific items and counter-increasing items), appropriate changes will happen to the game counters.
* Added the following constants to std.zh: LA_DROWNING, LA_CHARGING, LA_SPINNING and LA_DIVING.
* Added ZScript variables Screen->Wavy and Screen->Quake, to match the ZASM commands added in build 461. Hint: use Screen->Quake to tell if someone's used the Quake Hammer.
* Added ZASM variable LINKDRUNK. This makes the screen wavy just like WAVY, but it also messes with Link's controls for awhile. This effect has actually been lying dormant in the code since before my time...
* Setting Link->Z while Link is swimming, holding up items, or charging the sword will no longer cause problems. (Maybe Link->Jump needs a similar fix?)
* Have you noticed something funny with Link's 'exit cave' animation? How it only seems to occur if you place the Warp Return square 16 pixels south or north of the cave combo itself? Yeah, that. Well, I've coded it so that Link will also exit the cave if the square is placed right on top of the cave combo, where it should be.
* Have you tried putting Ocean SFX or noisy enemies in an Item Cellar or Passageway? And then exiting the Item Cellar? Well, I fixed that as well.
* Some incongruities between cave combos and item cellars have been resolved.
* Also fixed a bug where Link would walk back down a recently-exited Cave combo after drowning. ( _L_, 2007-10-31 07:31:50 )

* Items now animate at the correct speed in the item animation test window and during preview mode.
* Moving combo 0 to a different location on the combo page no longer changes all non-cycling combos to cycle to that new combo.
* The door tool should no longer make the mouse cursor disappear in combo alias mode.
* Clicking one of the panel squares (stair point, start point, flags, etc) in combo alias mode should no longer trash the mouse cursor.
* Eliminated the panel flickering in preview mode. ( DarkDragon, 2007-10-28 20:59:46 )



Build 643 - macosx-Tiger-and-Leopard
* Leopard Compatible ( Takuya, 2007-10-27 11:38:56 )

* Hooray! ZScript script names now appear in the FFC editor's Script menu.
* Tightened and improved the drowning collision detection even further.
* Link's drowning animation now works as expected. * And, south-north stepladders work with drowning water again.
* Fixed Smart Screen Scrolling's interaction with Side Warps.
* Setting Link->Action to either LA_DROWNING, LA_GOTHURT, LA_GOTHURTWATER, or one of the LA_HOLDs will now do something instead of nothing. Activity Time: if you set it to LA_DROWNING, and Link isn't on a water tile, then he will 'drown', but his sprite won't be drawn at all. See if you can use this to your advantage!
* So maybe I've been playing Phantom Hourglass a little much, but it strikes me that, extra keyboard buttons notwithstanding, Zelda Classic doesn't really utilise the unique input methods offered by its current platform. This is hardly the time to do anything significant about that, but just for now, here are ZScript variables Link->InputMouseX and Link->InputMouseY, which reflect the mouse's movement within the ZC game window. They use standard Allegro routines, and to my knowledge they work perfectly for gameplay applications. ( _L_, 2007-10-25 04:00:37 )

* Tweaked the Link walkability code so that Link will on longer try to hop out of water onto solid combos. Please verify other subtle parts of Link walkability, eg the ladder, conveyors, still work correctly in normal and Z3 movement mode.
* Split "Message Text" from "Text" in the Misc Colors dialog box to restore 2.10 compatibility.
* Opening Link Data in cheats will no longer reset Link's max bombs. ( DarkDragon, 2007-10-24 16:20:48 )

* Accessing Link Data using cheats no longer occasionally crashes ZC.
* The magic shield now absorbs enemy fire by default.
* Unused item properties in the item editor no longer stay permanently disabled. ( DarkDragon, 2007-10-20 07:18:30 )



Build 639 - linux
* Time for another linux build. ( koopa, 2007-10-20 05:55:43 )

* Fixed a bug where bombable wall rubble wasn't being drawn over layer 2.
* Fixed a bug where inherent-flag pushblocks would not lock into block trigger combos unless the block trigger was also an inherent flag.
* Fixed a deficiency with warps by adding an overlay flag to tile, side, and whistle warp types. When this is set, any combo on the new screen that is 0 will be replaced with whatever combo is in that position on the old screen. This allows combos to carry over (slashed bushes, for example). ( DarkNation, 2007-10-18 13:20:45 )

* Fixed the bug where Farore's Wind particles weren't being disposed of when quitting.
* Screen Flag: 'Don't Offset Screen' (when the No Subscreen screen flag is on). Have you noticed that when you are warped between a 'cutscene' screen and a game screen, the playing area suddenly jolts downward or upward? Yeah, that. ( _L_, 2007-10-17 00:37:31 )

* Added the message control code \21\XX - play MIDI. Stop music with \21\0.
* You can now specify the Hold Up Item sound ID for each screen.
* Fixed the interaction between holding up items and the 'Messages Freeze All Action' rule.
* Added a default sound effect for Farore's Wind.
* And hey, I added another Farore's Wind warp animation (2). This one's based on the 'Sand of Hours' in Phantom Hourglass, which doesn't actually have anything to do with warping. It uses cset 0, colour 1 and cset 1, colour 2. ( _L_, 2007-10-16 06:27:20 )



Build 635 - windows
* The default template's mirror shield no longer reflects swords.
* Walking into projectile reflected by a shield will no longer occasionally still hurt Link.
* Hammering outside the boundaries of the screen will now use the "water-ness" of the nearest on-screen tile. ( DarkDragon, 2007-10-14 21:40:16 )

* Now you can edit an item's ZScript arguments, D0-D8, and A0-A1. Item scripts just became more workable!
( _L_, 2007-10-13 06:47:48 )

* Fixed a bug where invalid misc10 values for enemies would crash the player.
* Fixed a bug where dropdown lists would sometimes be drawn incorrectly.
* Fixed a bug where the F11 key would rapidly toggle the 'Walk Through Walls' cheat.
* Fixed a bug where options in ZQuest wouldn't save correctly. ( DarkNation, 2007-10-08 13:28:36 )

* Triforce pieces no longer show up as an Init Data item class.
* Fixed the other enemy sound bug.
* Fixed the Super Bomb Ratio crash.
* Ganon can be edited again.
* The low HP beep will no longer occur if Link's maximum hearts are 1 or lower.
* You can now edit the default Text Speed (that is, delay) of all Message Strings. Default is 5. 0 is instantaneous. You might want to set it to 3 or 2 if your quest includes long spans of message text.
* You can now edit the strength of Gravity in sideview and topdown areas, as well as the Terminal Velocity of falling sprites. See Init Data.
* You can also edit a new 'Jumping Link Layer Threshold' constant in Init Data. Jumping Link will be drawn above layer 3 if his Z is greater than this. You might want to set it to, say, 15 if you use Layer 3 a lot.
* Thus, I've discontinued the 'Draw Jumping Link Above Layer 3' rule. ( _L_, 2007-10-07 08:32:10 )

* The combo brush now shows up no matter where the mouse is if running ZQuest in -large mode.
* Layers 2 and 3 are now drawn with the correct vertical offset when used as background.
* Viewing the map in ZC now shows layer 3 of a screen correctly if it is set to be the background. ( DarkDragon, 2007-10-04 23:33:24 )

* Scrolling into a water tile from a nonwater tile with Z3 movement on should no longer cause Link to "float" across the entire screen. ( DarkDragon, 2007-10-04 00:08:38 )

* Giving Link bombs when he has no other items via cheats no longer sets Link's B button to a usable bomb when he has 0 bombs. ( DarkDragon, 2007-09-30 22:18:19 )

* Fixed the book's default power to be 1 in the proposed quests, the default template, and all old quests.
* Overhead combos and all layers should now appear under the triforce curtain.
* Flipping a tile on the combo page no longer trashes the value of that combo's cset2. ( DarkDragon, 2007-09-30 19:54:37 )



Build 626 - windows
* Trying again, with a fixed alpha packaging script. ( DarkDragon, 2007-09-30 17:28:42 )

* Registering a name no longer crashes ZC.
* Attempting a Windows build... using Vista. *sacrifices four virgins and prays profusely* ( DarkDragon, 2007-09-30 17:13:54 )



Build 624 - windows
* ZOMG I COMPILED A WINDOWS VERSION. Didn't want to see you guys left out. <3 Deviance ( Sean, 2007-09-30 12:17:21 )

* Fixed the bug where setting a message string's speed to 0 (instantaneous) would prevent you from setting it to anything higher later.
* Fixed the continuous enemy sound effect bug.
* Fixed the double Armos spawning bug.
* The Combo Editor now displays the combo's number in the window title. ( _L_, 2007-09-30 00:36:12 )



Build 622 - linux
* New Linux build. ( koopa, 2007-09-28 07:54:19 )

* Renamed 'No Jump Zone' to 'No Jumping Enemies' and 'No Fly Zone' to 'No Flying Enemies'.
* I noticed that there was a one frame delay between a message string appearing, and the 'Messages Freeze All Action' rule taking effect. This caused problems with some people's Signpost scripts, so it's now fixed. ( _L_, 2007-09-28 02:39:21 )

* You can now edit the Bomb/Super Bomb maximum capacity ratio. Default is 4 Bombs to a Super Bomb. ( _L_, 2007-09-25 06:52:47 )

* Removed the 'S' debug key (give Magic Shield), because it seems out-of-place. But if anyone genuinely misses it...
* FFCs are now visible while the screen is scrolling. Yippee!
* Presumably fixed the walkable water screen entry bug.
* Quest Rule: No Screen Scrolling. The advantage of not having a scrolling transition between screens is that you don't need to ensure that each screen's combos seamlessly transition into the next screen's. ( _L_, 2007-09-25 05:19:44 )

* If an item's class is 'Non-gameplay item', then enemies will never drop it, nor will Grass or Slash combos ever create it.
* Tightened the 'Block X' combo types' hit detection. ( _L_, 2007-09-22 10:34:41 )

* Added a brief warning to the 'Select Palette' dialog, for the benefit of new users.
* Continued developing the Link drowning quest rule. The stepladder works with it, and Link's water combo detection is fixed. Go ahead and try it out. (The drowning animation is still buggy, though.)
* If the 'Drown in Walkable Water' quest rule is set, enemies won't walk on walkable Water combos. ( _L_, 2007-09-18 05:50:08 )

* Hopefully fixed the midair death animation bug.
* Now the Whimsical Ring is implemented. There is a one-in-misc1 chance that your sword, hammer or wand strikes will have an increase in power. Don't forget that it has an Action Sound! ( _L_, 2007-09-12 21:30:11 )

* Fixed EXIT command in Zquest-large buttons. ( koopa, 2007-09-11 02:26:07 )

* Fixed bug where music is quieter in Zquest than in Zc by making ZQ use Zc's settings. ( koopa, 2007-09-11 02:07:19 )



Build 613 - macosx-Tiger-and-Leopard
* New OS X build ( Takuya, 2007-09-10 12:43:13 )



Build 612 - linux
* New Linux build. ( koopa, 2007-09-10 07:36:29 )

* ZQuest will now remember whether to start in windowed or fullscreen mode (overrideable with the command-line parameters -windowed and -fullscreen). ( DarkDragon, 2007-09-10 07:25:41 )

* Explicit command-line arguments -windowed and -fullscreen now take precedence over stored settings in ag.cfg. ( DarkDragon, 2007-09-09 22:32:46 )

* Fixed music bug, where clicking out and back in to a paused ZC window, played music. ( Takuya, 2007-09-09 17:28:49 )

* ZC will now (correctly) remember your fullscreen preferences. ( Takuya, 2007-09-09 11:05:31 )



Build 600 - macosx-Tiger-and-Leopard
* Fixed a bug I just made causing Zelda Classic to crash. OS X ZC will start out at 640x480, using sbig, in fullscreen. Ability to switch to windowed is present. Have fun. ( Takuya, 2007-09-08 23:59:47 )



Build 599 - macosx-Tiger-and-Leopard


Build 598 - macosx-Tiger-and-Leopard


Build 595 - macosx-10-3-9
* Copying FFCs with Paste Spec. now also copies script assignments. ( DarkDragon, 2007-09-08 22:30:03 )

* Added a fullscreen option in Misc. for Zelda Classic ( Takuya, 2007-09-08 22:10:03 )

* OS X: graphics->tiles and graphics->palettes->main work in fullscreen on OS X. Rejoice! ( Takuya, 2007-09-08 20:59:03 )

* Fixed an bug on OS X where graphics->tiles crashes the player. ( Takuya, 2007-09-07 23:13:40 )

* OK, sorry about the last comment, there's an option for it in etc->options. No, it's not a new feature. It's just an accessibility. ( Takuya, 2007-09-07 17:48:01 )

* OS X users rejoice. If you want -large mode just add large = 1 to ag.cfg, any other value will not be counted. ( Takuya, 2007-09-07 17:00:27 )

* OS X ZC -large flag currently works. ( Takuya, 2007-09-07 15:49:01 )

* Color change message codes should once again work as before.
* Enemy boomerangs will no longer become stuck when they hit a block combo (fix). ( DarkDragon, 2007-09-06 23:54:13 )



Build 584 - windows
* F12 should now create only one screenshot per press.
* Changer FFCs with no combo set will no longer function in ZQ preview mode, to be consistent with ZC behavior.
* The text color set in Misc colors is now used by default for all ZC text, including guy messages, dmap into messages, and text on the subscreen.
* FFCs with the "Draw Over" flag set should now appear in ZC again.
* Enemy boomerangs will no longer become permanently stuck when they hit a boomerang block combo.
* The overworld map should once again be viewable in very old (1.90) quests. ( DarkDragon, 2007-09-06 21:16:34 )

* ZCL SET Title Screen has been integrated into the main gui now.
* Fixed a bug that caused ZCL not to save the options
* Removed some old code that was uneeded
* Changed the code how the options are selected. This basically is behind the scenes work. Basically what I did was worked on the core of the program to help save some space and memory consumption. This also will help make ZCL more stable.
* Added 2 new options that helps you preselect the options for ZC and ZQ. What this does if you have a fast pc, hit the fast pc button, If you have a slow pc, press the slow pc button. Yeah you don't need a fast pc for ZC. I only have a 466mhz processor and it runs just fine :-D. Ok that's it for now. ( Sean, 2007-09-04 14:53:35 )

* Undo now works on layers. ( DarkDragon, 2007-09-04 08:03:26 )

* Fixed the bug where entering a 10-Rupee room would cause the rupees to not return if the room was entered a second time even though no rupees were taken. ( DarkNation, 2007-09-04 06:35:35 )

* Weapons have a new flag, "Beneath." If this flag is checked, the weapon appears under any enemies on the screen. The fire trail weapon has this flag checked by default.
* The Triforce curtain effect should once again work properly.
* Entering a boss room whose boss has been defeated once again triggers items and shutters.
* Custom Like-Likes should once again draw on top of Link when Link is engulfed. ( DarkDragon, 2007-09-03 22:19:51 )



Build 579 - windows
* Palette grabbing with ZQuest running in -scale mode is no longer cluttered with garbage.
* Loading a second file in the tile grabber correctly reduces the new image's colors if "r" color reduction mode is set. ( DarkDragon, 2007-09-03 00:40:56 )

* There's no longer a close button hidden behind the tile edit page when running ZQ in non-large mode.
* Paste special FFC no longer corrupts subsequent screens.
* The wand now fires magic of the correct power when Link does not possess the book.
* Hitting "defaults" in the item editor no longer resets certain non-gameplay item properties.
* Proposed1st/2nd now have Triforce rooms with the correct warp type (thanks AmazingAmpharos). ( DarkDragon, 2007-09-02 21:43:22 )

* The "Gain All Lower Lever Items" checkbox in the item editor should now remain checked when hitting "OK."
* FFCs use their CSet 2 settings in ZC (again).
* Items in older quests with missing families will now adopt the "Non-gameplay Item" family. ( DarkDragon, 2007-09-02 11:16:33 )



Build 576 - windows
* ZC no longer crashes if the first string displayed in a quest is an info string.
* The "infinite" dropdown list in the subscreen editor was badly broken; it's now fixed but you'll probably have to fix it in your quests.
* Fixed the "infinte" items in the default quest template, per the above.
* Loading old quests in ZC that do not have custom subscreens no longer occasionally crashes ZC. ( DarkDragon, 2007-09-02 01:29:18 )

* Hitting "cancel" on the password prompt when loading a quest will no longer put the name of the loading file in the bottom ZQuest panel.
* It is no longer possible to save by hitting F2 if the save option is greyed out in the File menu (again.)
* Removed the Gleeok from the default quest template. ( DarkDragon, 2007-09-01 23:54:29 )



Build 573 - windows
* Garbage tiles no longer appear in the subscreen if you don't have a sword and the "A Button Selectable" quest rule is disabled.
* Removed extraneous combos from proposed1st.qst.
* Increased the maximum item level from 8 to 255.
* Various changes to the default quest template, suggested by L and others:
* - The Gleeok enemy properties specifying the neck and head tiles are now correct.
* - The two cactus combos now do 1/2 instead of 2 hearts of damage.
* - Fixed the clock animation.
* - Swapped Din's Fire and Roc's Feather on the A+B active subscreen.
* - Changed the worn-out glove to use CSet 7.
* The "Default" in the item editor should no longer swap the use and play sound effects.
* Moved the "Bait Sprite:" label in the item editor from the Misc 2 flag to the Weapon 1 field.
* Hitting Cancel on the password prompt will now silently load a blank quest instead of trying to open the locked quest anyway.
* Optimized writing to Link->Item[].
* Changed the behavior of y skip in the combo editor: every frame of animation, a combo's tile increases by 20*(yskip) additional tiles.
* It is no longer possible an illegal combination of animation frames, x skip, and y skip in the combo editor. ( DarkDragon, 2007-09-01 21:20:53 )



Build 572 - windows


Build 571 - windows
* Swords above level 4 are now usable if the "A Item Selectable" quest rule is disabled.
* FFCs above combos with singular flags will no trigger secrets as if they themselves had those flags.
* FFCs moving to the left now wrap around if the wrap screen flag is set.
* The "any keys" counter types are now implemented.
* Items now appear in Ganon rooms.
* Loading old 1.92 quests no longer keeps the level palette names of the previous quests.
* The fire trail bounding box has been increases by one pixel in both directions. ( DarkDragon, 2007-09-01 12:30:45 )

* The "Auto" button in the door combo editor should now work even before you've clicked on any of the panel tabs.
* "Remove Item when Used" should work on items of non-standard families.
* The boss flag and "Never Returns" enemy flag now work correctly on screens with enemies entering from the sides. ( DarkDragon, 2007-08-31 21:43:13 )

* Fixed a speed issue with the Link animation preview window.
* Fixed some bugs with the -large ZQuest mode.
* Fixed a bug where the pickup sound and the action sound were reversed in the item editor. ( DarkNation, 2007-08-31 13:19:21 )

* You may now select a boss CSet up to 29 in the enemy editor.
* Horizontal traps positioned exactly in the center of the screen no longer fly off of the screen.
* Link no longer occasionally gets knocked back differing distances when he is hit with Z3 movement turned off. ( DarkDragon, 2007-08-31 02:19:39 )



Build 564 - windows
* Timed warps no longer fire immediately on the first screen when starting a quest.
* Added a "Restart Animation When Cycled To" flag to combos. ( DarkDragon, 2007-08-30 14:25:10 )

* Fixed a bug where block combos would not block weapons if Link was halfway on them.
* Fixed and deprecated the 999 Rupees quest rule.
* Fixed the missing enemies in the proposed2nd.qst and proposed3rd.qst files. ( DarkNation, 2007-08-30 13:37:59 )

* Trying to save an unencrypted quest to a file that cannot be opened for writing no longer crashes ZQ.
* Changed item->Tile to return the current displayed tile of an item instead of its animation start point. Added item->OriginalTile to manipulate items' animation start points.
* Ropes no longer jerk back and forth while moving.
* Splitting enemies no longer occasionally crash ZC. ( DarkDragon, 2007-08-30 00:25:15 )

* Fixed a bug where non-Ghini enemies could only be released from a grave once.
* Fixed a bug where leaving a dungeon from a dark room would cause the next screen after the entrance to "re-light".
* Zelda 3 animation now has a slow walk option to make the walking animation slower (though the travel speed is the same).
* Fixed a bug where the default "BS Zelda Enhanced" subscreens would have the selection cursor a 1/2 tile too low on the boow and arrow.
* Loading a sprite cset into cset 9 should no longer be reset when entering the tile list screen.
* It is no longer possible to set animation frames high enough to cause the animation to wrap around to the front of the tile list.
* The dropdown menu in the tile list window now has a Move option.
* Fixed a bug where tile quarters would sometimes not be drawn if there wasn't much in the tile quarter.
* The dropdown menu in the tile list window now has (temporarily) a Blank option to show if the above fix is working.
* Auto timed saves will no longer overwrite quests from older versions. They have to be manually saved once first. Instead of the autosave, a window will now appear, informing the user of this.
* Added 6 new weapon slots for items (for future expansion).
* Added 6 new misc slots for items (for future expansion).
* Added 6 new misc slots for enemies (for future expansion). ( DarkNation, 2007-08-29 13:27:02 )



Build 560 - windows
* ZCL now had a new gui which makes it even easier to set it up.
* ZCL's old interface has been removed
* Adjusted the ZCL icon again =/
* Enjoy :-D ( Sean, 2007-08-29 05:46:17 )



Build 559 - windows
* Deleting a quest template no longer crashes ZQ.
* Current Item objects on the passive subscreen should no update correctly when Link's inventory changes.
* FFCs should no continue to run at all times if the "Messages Freeze All Action" rule is off. ( DarkDragon, 2007-08-28 18:13:48 )



Build 557 - windows
* New version of ZCL for the latest build. This release doesn't have the updates that is mentioned below except ZCL. ( Sean, 2007-08-28 08:17:13 )

* ZCL has the new -large mode implemented :-D ( Sean, 2007-08-28 08:09:37 )

* Fixed the icon issues in ZCL now it looks better :) ( Sean, 2007-08-28 07:36:30 )

* Lanmola segments should now be correctly spaced. ( DarkDragon, 2007-08-27 00:23:38 )

* Link no longer uses the raft if no clipping is enabled. ( DarkDragon, 2007-08-26 19:12:00 )

* It is no longer possible to scroll past the last combo in the combo panel on the main ZQ screen.
* The file open dialog should no longer crash on OS X. ( DarkDragon, 2007-08-26 17:49:43 )

* You can now specify the IDs of the Ocean sound, Boss Roar sound, and Secret sound of each screen! Leave as 0 for no sound. This, of course, replaces the 'Ocean SFX', 'Boss Roar SFX', 'Roar=Gasp Style', 'Roar=Dodongo' and 'No Secret Sounds' Screen Flags.
* Fixed the bug that prevented the 'Leaving Item/Passage Room Doesn't Restart Music' quest rule from sticking to old quests.
* 'Remove Item When Used' is hopefully fixed for custom item classes. ( _L_, 2007-08-26 04:04:03 )



Build 550 - windows
* Upped the maximum number of heart containers obtainable through cheats to 128.
* Palettes x100 through x1FF should now be editable without corrupting your misc sprite palettes/crashing ZQ.
* Added item->isValid() and npc->isValid(). Both return true if the object pointed to is still valid. ( DarkDragon, 2007-08-26 00:16:43 )

* Removed some debugging code which prevented the screen from fading to red on Link's death on some occasions.
* Both FFCs and regular combos on the map now only trigger once each per slash of Link's sword.
* Eyeball statues should now look in the correct direction in ZC.
* The preview of selector 1/2's size should now respect the "Large" checkbox when the dialog is first opened.
* Music no longer stops before the fade to black when leaving a cave with the "Cave Exit Doesn't Stop Music" rule disabled.
* The dropdown boxes for Items 1-3 when editing a counter in the subscreen editor are now wider. ( DarkDragon, 2007-08-25 21:34:09 )



Build 548 - windows
* Picking up an item with "Keep Old Items" unchecked, and an old version of the item selected as the A or B weapon, no longer changes that button to a new weapon.
* Editing a Counter in the subscreen editor no longer causes memory corruption.
* Pressing "Cancel" in the subscreen editor properties dialog no longer leaks memory. ( DarkDragon, 2007-08-25 15:18:03 )

* You can no longer view the Properties dialog when no subscreen objects are displayed.
* Creating a new Blank subscreen no longer ignores your choice of active/passive subscreen.
* Map importing/exporting should now work, instead of filling the imported map with random combos, random flags, random csets, and/or crashing ZQ. Old .maps are hopelessly corrupt and cannot be imported. ( DarkDragon, 2007-08-25 14:27:28 )

* For technical reasons I had to recode every single list (or list variant, such as the dropboxes) in ZC and ZQ. Please report any dialogs that crash. ( DarkDragon, 2007-08-25 12:42:58 )



Build 545 - linux
* New Linux build. ( koopa, 2007-08-25 07:22:49 )

* Bomb upgrade rooms now also give link all items with level 1 in the Bombs family, if one exists.
* Windrobes in old quests no longer shoot 8 tornadoes.
* CreateItem now returns the correct pointer when no other items exist on screen.
* Bracelets specified in the init data of old quests now correspond to the bracelets of the correct level in the current build.
* The long hookshot in quests saved in ZC 2.10 and older now uses the same weapon graphics as the short hookshort.
* There are now 512 instead of 256 named level palettes, restoring consistency with the 512 available levels. ( DarkDragon, 2007-08-24 02:06:02 )

* Enemy super bombs no longer become normal bombs mid-explosion.
* Added an FFC flag, "Ethereal." If this flag is checked, the FFC is completely ignored for the purposes of detecting if Link is touching a combo or combo flag (like Changers are.) Obviously the FFC's combo and combo flag does not work if this flag is checked. ( DarkDragon, 2007-08-23 14:55:58 )

* Fixed 'Enter From Sides (Random)' so that it no longer randomly gives up altogether when placing enemies.
* Fixed the shieldless Darknut tiles' backwards-compatability. Sorry about that.
* Fixed the Bombchu's other death weapon so that non-Bomb weapons work. ( _L_, 2007-08-22 23:01:47 )

* Darknuts animate correctly once their shields are broken.
* The wand no longer occasionally plays a random sound when fired without the book. ( DarkDragon, 2007-08-22 22:34:18 )

* Bombs no longer hurt submerged Leevers.
* Copying FFCs using "Spec. Paste" now copies the FFC's script argument as well.
* Quests saved before 2.11 beta 7 will no longer have tiles 130-133 reordered if the "New Enemy Tiles" quest rule is enabled.
* When viewing the map, each screen's door combo set is now used instead of always using the current screen's door combo set. ( DarkDragon, 2007-08-22 15:59:03 )

* More fixes to the default template relational mode tiles.
* It should now be impossible for Link to equip an item to both the A and B slots, even if the only equippable item at quest start-up is in position 0. ( DarkDragon, 2007-08-22 12:42:28 )

* Link will no longer wander in a straight line on his own if he tries to enter water while charging, facing a direction perpendicular to his direction of motion, and with Z3 movement disabled.
* Pressing V in the combo editor dialog will no longer corrupt the preview tile and the CSet 2 field. ( DarkDragon, 2007-08-22 01:14:33 )



Build 536 - windows
* Selecting "Custom" in the Romview file open dialog no longer crashes Romview.
* Link's up and down slash animation no longer shows Link letting go of the sword during his lunge.
* If a quest has no bombs or super bombs set in Init Data, the subscreen editor will still display subscreens as if Link had 1 of that bomb.
* CreateItem now returns a pointer to the correct item.
* Octorok 3 no longer tries to shoot flame if it is stuck.
* The following enemies no longer crash if their E. Rate is set below 4: Digdogger, Moldorm, Lanmola, Manhandla, Tektite, Rock, Vire, and Pols Voice.
* DigDoggers (and other enemies with 8-directional movement) will no longer fly up off the top of the screen if stuck.
* Link's stab will now do damage in mid-air even if Link has pressed a directional button while jumping.
* Link's jump is no longer garbled if Z3 movement is disabled.
* Starting 2nd.qst after beating 1st.qst should no longer kill Link. ( DarkDragon, 2007-08-21 23:09:17 )

* Fixed and enhanced the Gleeok enemies (more variables can be set now).
* Fixed the heart/fairy bug in proposed2nd.qst and proposed3rd.qst. ( DarkNation, 2007-08-21 13:35:26 )

* Loading a quest with a custom subscreen (or importing one) containing fewer than the default number of subscreen objects, then duplicating or creating a new subscreen object, no longer corrupts the subscreens.
* Link will no longer attempt to use the ladder to cross any walkable combo, or water if he has the flippers, under any circumstance. ( DarkDragon, 2007-08-21 12:20:39 )

* Wizzrobes no longer use the secret combination misc1=1, misc2=2 to denote a mirror wizzrobe; instead, misc4 is now used. 1 = immune to other weapons.
* Proposed2nd and Proposed3rd now have "Correct Enemy Weapon Collision" disabled.
* Patra children are now spaced out correctly if given a nonstandard number of children through the enemy editor.
* Grabbing tiles now preserves the x and y offset of the image or tileset you're grabbing, until you load a new image or quest.
* Cheats now carry over when continuing a quest after quitting.
* The init data dialog box's item family list box now uses the normal font instead of a narrow font, to circumvent a nasty bug in the window UI framework.
* Gleeoks now fire non-fireball weapons straight down instead of in a random direction. ( DarkDragon, 2007-08-20 12:03:52 )



Build 530 - macosx-10-3-9
* Spinning Tiles are no longer counted as enemies by the Screen Flags.
* Traps can now be edited. ( _L_, 2007-08-19 09:54:22 )



Build 528 - windows
* Wizzrobes should now behave correctly under all legal combinations of misc1 and misc2 attributes.
* Undo should now work on all screens, in particular those greater than 0x80.
* The used and blank tile information given by Control-U should now correctly update after copying or moving tiles.
* The title bar of the tile editor window should now update to display the correct tile ID.
* NES compatibility quest rules ahoy: "Leaving Item/Passage Room Doesn't Restart Music" and "Holding Up Items Doesn't Restart Music," whose behavior should be evident. These rules are disabled in the proposed quests, and enabled by default in all other quests.
* Fixed some problems in the default quest template, including the relational mode tiles. (Thanks zcAmazing and AmazingAmpharos) ( DarkDragon, 2007-08-18 21:00:42 )

* Fixed the Link midair death sprite bug.
* Fixed enemy Super Bombs.
* Fixed the Hammer's magic cost.
* Possibly fixed the Boots' Power. ( _L_, 2007-08-14 22:20:35 )

* FFC changers now work correctly after warping in ZQuest preview mode.
* Disabled key repeat in ZC.
* Passive subscreens again show up when not scrolling. ( DarkDragon, 2007-08-11 13:24:40 )

* Added an option in ZQuest to turn off the "Invalid Static". ( DarkNation, 2007-08-08 12:33:15 )

* Changed path for OS X instead of being in the app, in ZQ, file->open reports to outside the App, so in most cases it's /Applications ( Takuya, 2007-08-08 09:16:38 )



Build 516 - linux
* Linux build.
* Added some manual/wiki related scripts and files. ( koopa, 2007-08-07 07:53:34 )



Build 515 - macosx-10-3-9


Build 514 - macosx-10-3-9


Build 513 - macosx-10-3-9


Build 511 - macosx-10-3-9
* The Light Force->Cheat Menu interaction bug should be fixed.
* Fixed the sword beam backwards-compatability bug.
* Fixed the bug that prevents Link from being pushed off a conveyor belt platform while in sideview. ( _L_, 2007-08-05 23:27:00 )



Build 509 - windows
* Bringing up the enemy list in ZQuest no longer crashes ZQuest.
* The built-in subscreens no longer have invisible elements. ( DarkDragon, 2007-08-04 02:26:00 )



Build 508 - windows
* Reset CSet 6 of the default template to the default NES colors, which should fix the default icon colors.
* FFCs now correctly use the CSet2 settings of their combos.
* Button items no longer shift around vertically when scrolling between screens with sideview gravity enabled.
* The mirror shield no longer reflects swords by default.
* Hitting F2 while the Save menu item is greyed out now does nothing.
* The first game script slot now executes only the first time a quest is started, instead of every time a save is loaded. As a consequence, the ~Init script now only executes once and global variables are not reset when loading a save. ( DarkDragon, 2007-08-03 23:34:46 )

* Fixed the 'Messages Freeze All Action' rule's interaction with 'Messages Disappear'. Now, action won't resume until the last message has been dismissed.
* Added the Item Editor pickup flag 'Gain All Lower Level Items'. Picking up an item with this flag will quietly add all of the lower-level items in its class to your inventory. Best used with the 'Remove Item When Used' action flag.
* New for Fairy items: Action Sound controls which sound effect to play when it appears, and Misc. Attribute 3 controls the Step speed of the moving fairy.
* It is now no longer possible to remove an enemy from the Enemy Editor list forever by simply appending a space to the end of its name.
* Ganon can now be edited. ( _L_, 2007-08-02 23:18:47 )

* Updated the default template (thanks AmazingAmpharos) ( DarkDragon, 2007-08-02 23:08:18 )

* Corrected the documentation of npc->Rate, and added a new field npc->Step which does what npc->Rate pretended to do.
* npc->CSet and npc->Damage now work correctly.
* Pointers returned by CreateNPC, LoadNPC, CreateItem, and LoadItem no longer become stale at the end of the frame. (NOTE: old scripts may need to be recompiled, see thread in Scripting forum).
* When registering a new name, the name is no longer treated as a printf format string.
* Importing a .qst from 1.92 or earlier no longer corrupts your subscreens and sound effects. ( DarkDragon, 2007-08-01 23:25:59 )

* Importing an old .qst will no longer corrupt enemy and item strings.
* Replaced the "Display:" dropdown box in the subscreen editor with three checkboxes giving finer controller over when a subscreen component is displayed. I've also converted the official quests to this feature. ( DarkDragon, 2007-08-01 00:38:58 )

* Fixed the custom Like Like/Wallmaster engulfing sprite bug.
* For forwards-compatability reasons, the Leever's Misc. Attribute 3 no longer modifies anything.
* Fixed enemy Bombs fired by non-Octoroks.
* Non-Goriyas can no longer use Boomerangs, for now. ( _L_, 2007-07-31 23:00:47 )



Build 500 - windows
* Tweaked the quest template: added missing tiles for the 2nd/3rd quest icons, the ending triforce and ending dust; removed all strings; checked "Smooth Vertical Scrolling" to be on by default; unchecked the first dmap flag on all dmaps.
* Bombed doors now show up in the correct place when scrolling between screens.
* As a measure to reduce quest size, default sounds effects are no longer saved with the quest. Only new quests are affected; if you want to reduce the size of an existing quest, load it in ZQuest, "default" all unmodified sound effects, and save the quest. ( DarkDragon, 2007-07-31 01:14:07 )

* Underwater wave effects now stop while opening and viewing the subscreen.
* Underwater wave effects no longer go berserk when scrolling vertically.
* Link now animates correctly when two directions are pressed simultaneously, Link is swimming, his path is obstructed, and Z3 movement is off.
* Changing a DMap to the "Overworld" type now resets the DMap's x offset to 0. ( DarkDragon, 2007-07-28 01:43:54 )

* Now, an enemy's ID will appear in the Enemy Editor window title.
* Samesuch for the Item Editor! ( _L_, 2007-07-26 19:42:04 )

* Romview now works like it supposed to work. ( Sean, 2007-07-25 21:21:40 )

* Fixed the other enemy boomerang sound bug.
* Now, shieldless Darknuts are displayed with their S. Tile, as they should.
* Slightly tweaked the left/right bomb doors.
* Fixed the recursive item upgrading/combining bug.
* NES consistency fix: picking up the Magic Boomerand while the normal Boomerang is flying will change the flying Boomerang's graphics to match those of the Magic Boomerang. ( _L_, 2007-07-25 02:36:57 )

* The up and down buttons now move the selector in the correct direction on the subscreen.
* Reinserted the door script in proposed1st.qst, which had regressed. ( DarkDragon, 2007-07-23 00:40:02 )

* Fixed the Fire Boomerang->Bat interaction.
* Now, Treasure Chest combos can't be opened while jumping.
* The Light Force Init Data bug should be fixed. ( _L_, 2007-07-22 01:48:55 )



Build 492 - windows
* Small fix to quest rule loading in old (pre-b16) quests. ( DarkDragon, 2007-07-21 23:38:51 )



Build 491 - windows
* More fixes to vertical scrolling.
* ZQuest now obeys the "Use Layer 3 As Background" screen flag.
* Fixed a critical old quest compatibility problem involving quest rules. As a consequence, some quest rule settings in newer quests (post b16) may have become corrupt. ( DarkDragon, 2007-07-21 22:43:21 )

* Up and down arrows work again in the subscreen.
* Added the correct version of qst.dat to the build. ( DarkDragon, 2007-07-21 14:25:23 )



Build 488 - windows
* Hitting "Default" or "Default All" while a stereo sound is playing in ZQ will no longer crash ZQ.
* Proposed1st now has the correct shield item properties.
* Numerous fixes to the default template: the Alt active subscreens Current Item objects have been correctly set up, headers and cheats have been cleared, an extraneous MIDI removed, and a Moldorm segment tile added.
* Importing tiles from a quest with sound effects no longer confuses ZQ.
* Importing tiles from any quest no longer corrupts your subscreens.
* Custom items now have "Non-gameplay Items" as their default item family, instead of absorbing the item family of whichever item was edited last.
* The key counter now correctly displays the number of keys. ( DarkDragon, 2007-07-21 01:47:52 )



Build 487 - linux
* New Linux build.
( koopa, 2007-07-20 08:27:31 )

* Completed an extensive attempt to fix various bugs with the item selector. ( DarkDragon, 2007-07-20 00:53:43 )

* The Lanmola no longer incorrectly uses its Misc2 property. ( DarkDragon, 2007-07-19 17:04:55 )

* Entering a passage warp no longer re-fades the screen to black if the room is already dark.
* Leaving a passage warp on a map of dungeon level 0 now fades to black from palette 10 instead of 11. ( DarkDragon, 2007-07-19 08:22:51 )

* Further tweaking of NES-style vertical screen scrolling.
* Looping sound effects (such as the Ocean sound) now continue to play when leaving and rapidly reentering a screen.
* Screen sound effects, such as the Ocean sound, start playing again once a fairy heart ring has finished circling Link.
* Scrolling between DMaps using different palettes should no longer cause the screen to fade out twice.
* Insta-warps now respect the destination screen's dark flag. ( DarkDragon, 2007-07-18 23:34:53 )

* Fixed the other side of that door in proposed1st.
* Fixed the Whistle directional whirlwind bug.
* Now, the Whistle's Misc. 1 controls the direction of the whirlwind. 0 to 3 = up, down, left, right. 4 = in front of Link.
* Fixed the Whirlwind->Block All combo bug. Now, if Link is in a whirlwind, and it hits a Block All combo, Link is expelled and the whirlwind vanishes.
* Quest Rule: Magic Mirrors Reflect Whistle Whirlwinds.
* Now, the Book's Power is used for the damage of the Wand beams instead of the Wand's Power (except when Link has no Book).
* Now, the Book's Misc. 1 decides if the Wand's beams are fiery or not.
* Now, the Wand's Misc. 1 decides if the Wand can shoot Magic without the Book. ( _L_, 2007-07-18 05:38:27 )

* Tribbles and summoners should no longer crash ZC if too many enemies are on the screen. ( DarkDragon, 2007-07-16 22:38:55 )

* The default quest template now has the correct DMap flags enabled by default.
* Attempting to load too many enemies onto a screen using a script prints a warning to allegro.log instead of crashing ZC. (The pointer returned by the CreateNPC method is in this case invalid.)
* Counters now correctly respect their infinite items. Note that infinite items stack with, but do not replace, intrinsic infinite items: ie, giving the key counter a "raft" infinite item will cause the key counter to be infinite if Link possesses either the magic key or the raft. ( DarkDragon, 2007-07-16 22:22:12 )

* Screen scrolling in the dungeon is now slower than the overworld when "Fast Dungeon Scrolling" is enabled, instead of the other way around.
* Glitched NES-style scrolling is now correct when Link is moving up. ( DarkDragon, 2007-07-16 17:05:49 )



Build 478 - windows
* Loading a quest containing a subscreen with more than 127 subscreen objects no longer corrupts the subscreen.
* Zoras, Bubbles, and Rocks no longer crash ZC when the enemy entrance type is "Enter From Sides."
* Wealth medals no longer always set the prices of shops and info rooms to 1.
* When using the ZC menu, the screensaver should no appear after an amount of time reasonably close to that specified in the Screen Saver options. ( DarkDragon, 2007-07-15 21:58:05 )

* Screen scrolling should now be true to the NES when the "Smooth Scrolling" quest rule is not enabled.
* The new view map dmap flag should now work correctly. ( DarkDragon, 2007-07-15 01:15:12 )

* Fixed the Power 0 boomerang/hookshot damage.
* Fixed the Din's Fire ring bugs.
* Fixed proposed1st.qst's scripts.
* Fixed the Room Guy damage sound effects. ( _L_, 2007-07-15 00:09:58 )

* Resetting an SFX past 61 no longer crashes ZQuest.
* Attempting to loading a stereo SFX no longer crashes ZQuest upon playback. ( DarkDragon, 2007-07-14 01:45:07 )

* Fixed the Boomerang->Bat and Hookshot->Bat interactions.
* ZQuest: fixed the hookshot's Power label and the 'View Overworld Map' DMap flag label.
* Further progress with the 'Link Drowns' quest rule. ( _L_, 2007-07-13 21:54:08 )



Build 473 - windows
* Proposed1st.qst now has the correct bomb item properties.
* Falling rocks no longer show a spawn animation if used as a normal enemy instead of a screen flag.
* Sword beam power now respects the "is percent" flag instead of always treating it as on.
* Link again animates at normal instead of half speed while swimming. ( DarkDragon, 2007-07-13 15:13:24 )

* Added a quest rule to allow the lens to show raft paths and branches.
* Cleared up the cursor flicker on the tile grab screen
* Cleaned up the quest rules so they are no longer overlapping (making some unusable).
* Fixed a bug where setting the item to (None) in a shop wouldn't always keep the change.
* Reversed the function of the NES Enemy Weapons collision quest rule to keep with the "No Quest rules = Classic" approach.
* Fixed the mouse flickering issue in the palette and palette bitmap areas of the screen in ROMView.
* Fixed the bug where clicking in the palette bitmap area of the screen without having a palette bitmap loaded would cause ROMView to hang.
--- The following were fixed in build 465 ---
* Added a Quarter Hearts misc weapon.
* Fixed the bug where bombable walls would not show up with the lens.
* Fixed the bug where the beta warning screen would sometimes cause all of ZC's setting to revert to default.
* Updated the default blank quest in ZQuest. ( DarkNation, 2007-07-13 13:27:15 )

* Fixed the boss roar bug.
* Fixed the Goriya boomerang sound bug.
* Now, when the 'More Sounds' quest rule is set, enemy boomerangs will use the boomerang sound when flying.
* Replaced proposed1st's bug script with more efficient ZASM. Why? I just felt like it. ( _L_, 2007-07-11 23:38:35 )

* The active subscreen no longer displays Current Items or item selectors, in accordance with NES behavior. ( DarkDragon, 2007-07-11 21:56:26 )

* A shield set to reflect a projectile now reflects that projectile even if it comes in at a sharp angle.
* Screen items in ZQuest are displayed one pixel below tile boundaries, to mimic their appearance when the quest is played in ZC.
* Enemies which do not normally have a shadow display the first small shadow tile while falling.
* Changing the map properties while viewing the map in ZQuest no longer changes the foreground color of some UI elements to white.
* Fixed a minor (4 kbyte/second) but continual memory leak in ZQuest. ( DarkDragon, 2007-07-11 21:24:30 )

* Lanmolas now stay on the screen and correctly obey combo walkability when their step speed has been modified in the enemy editor or when they hit Link. ( DarkDragon, 2007-07-11 18:59:44 )



Build 467 - linux
* New Linux build. I got MIDI music to work here, though no SFX yet. ( koopa, 2007-07-11 06:39:32 )

* Moldorms will no longer wander off screen if his step speed is changed. ( DarkDragon, 2007-07-10 23:02:23 )

* Fixed the default template's combo 0 to point to a tile filled with a non-zero color, so that the CSet Fix will work with this tileset.
* Swords now have the correct default item properties in the default template. ( DarkDragon, 2007-07-10 07:18:47 )

* Magic fired up at a mirror (or from the right, in rare cases) no longer causes magic to reflect off of the wrong tile. ( DarkDragon, 2007-07-09 22:20:43 )

* proposed2nd.qst and Proposed3rd.qst are now custom quests, and unpassworded.
* Selecting the "View Map" dmap flag no longer tampers with the other dmap flags. ( DarkDragon, 2007-07-09 21:43:16 )



Build 461 - windows
* Fixed some typographic issues in std.zh.
* GetCurDMapScreen() is now spelled correctly in zscript.txt. ( DarkDragon, 2007-07-09 18:00:48 )

* Added a script to proposed1st.qst (thanks Dan Furst!) to reproduce the NES bug allowing a player to skip the level 1 dungeon's first locked door.
* All default quests now have the correct Pols Voice step speed. ( DarkDragon, 2007-07-09 17:38:24 )

* Added a new default template (thanks BigJoe and crew!) that includes complete tiles for all new items and better prebuilt subscreens. Please test aggressively. ( DarkDragon, 2007-07-09 17:29:36 )

* Subscreens are now deletable in ZQ. ( DarkDragon, 2007-07-09 17:08:57 )

* Finished adding ZASM variables WAVY and QUAKE. SETting these variables will activate either the 'underwater wave effect' or the 'earthquake effect' for awhile. ZScript commands are forthcoming.\r\n * NES consistency fix: Peahats will no longer appear in a puff of smoke.\r\n * Discontinued quest rule 'View Overworld Map', which was counterintuitively dependant on DMap levels. Instead, the DMap flag 'View Overworld Map' (and backwards compatability thereof) has been implemented.\r\n * Discontinued quest rule '4 Heart Pieces Don't Make 1 Heart Container'. Instead, all quests that used this rule will have their 'Heart Piece per Heart Container' ratio set to 255. ( _L_, 2007-07-09 18:11:32 )

* Fixed a bug where Zelda's message string would sometimes still be visible behind the ending text after winning the game. ( DarkNation, 2007-07-09 08:47:20 )

* Fixed proposed1st.qst and added proposed2nd.qst and proposed3rd.qst, which all have combo 4 (overworld ladder) changed to Slow Walk. ( DarkDragon, 2007-07-08 15:39:29 )

* Swords now have correct default item properties.
* The "Zap Effects" warp is no longer glitched. ( DarkDragon, 2007-07-08 15:15:36 )

* Opening the active subscreen no longer blanks the play screen.
* If Cool Scrolling is disabled, sprites on the play screen disappear when entering and exiting the active subscreen.
* If the Can Select A Button quest rule is disabled, item buttons on the passive subscreen disappear while entering, using, and exiting the active subscreen. ( DarkDragon, 2007-07-08 01:47:36 )

* Added Link->HeldItem, which is equal to the item Link is currently holding up if his action is a hold action (LA_HOLD1LAND, etc.) See zscript.txt for details. ( DarkDragon, 2007-07-08 00:02:47 )

* Potions and fairies now have the correct default item properties.
* Fixed fairies and triforce fragment properties in proposed1st.qst. ( DarkDragon, 2007-07-07 21:25:45 )

* Special items once again appear in caves/passages of dmap with nonzero dungeon level. ( DarkDragon, 2007-07-07 11:47:22 )

* Selecting combo aliases from the combo panel in ZQuest should no longer leak memory and ultimately crash ZQ. ( DarkDragon, 2007-07-06 22:14:06 )



Build 448 - windows
* The minimap grid's position on the passive subscreen is now drawn relative to the rest of the minimap.
* Shooting the hookshot into or on a Block All combo no longer hangs ZC.
* Getting hit with fire, a bomb, a projectile, or a damage combo while charging for a spin attack stops the attack, instead of turning the attack into a "ghost" spin which does no damage.
* Boulders now correctly use the big shadow sprites.
* Enemies with the "Spawned by 'falling rocks'" flags now appear randomly over the entire top of the screen, and are no longer permanently paralysed.
* It is no longer impossible to select various fields in the enemy editor.
* Using a tab panel's arrows (such as in the DMap dialog box) no longer crashes ZQ.
* Underground shops, potion shops, and info rooms of dmaps with non-zero dungeon level should no longer act erratically. ( DarkDragon, 2007-07-06 20:57:02 )

* Enemy background sfx will now stop playing when the enemy is defeated.
* Fixed DMap item disabling.
* Empty DMaps in newly-created quests will no longer have the first four DMap flags enabled by default. ( _L_, 2007-07-05 23:48:49 )

* Collision detection between FFCs and Changers should now have perfect precision. ( DarkDragon, 2007-07-05 15:32:16 )

* Tab pane components no longer "leak" through when other tabs are selected. ( DarkDragon, 2007-07-04 21:49:33 )



Build 443 - windows
* Greyed out the unimplemented Enhanced Music menu item.
* Save As should no longer rename your original file if timed saves are disabled.
* Selecting a Bow and Arrow on a subscreen should no longer randomly crash ZC. ( DarkDragon, 2007-07-04 00:17:25 )

* Further tweaked the item init code so that the cheat dialog works as expected: any effects a newly added item has on a counter's max value is applied after that max value is set to the value in the cheat dialog. ( DarkDragon, 2007-07-02 23:29:36 )

* The ZQuest tile grabber should no longer crash/fail to load .qst files containing SFX, script, or subscreen data.
* Altered the way items interact with Init Data counters. Specifically, when a quest is started, the following counters' max values are set to the values specified in init data: life, bombs, superbombs, magic, arrows, rupees, and keys. These max values are then potentially modified by the properties of the Init Data items. When cheating, the values always override item effects. ( DarkDragon, 2007-07-02 23:20:28 )

* Link now moves at 1/2 speed when swimming using Classic movement, as per Z3 movement behavior.
* Link now walks at 2/3 speed on Slow Walk combos using Z3 movement, as per Classic movement behavior. This change is a reversal of a previous "fix".
* Slow Walk combos now stack with the "Slow walk while charging" quest rule.
* Link now continues to animate at the correct speed while swimming using Z3 movement. ( DarkDragon, 2007-07-02 09:55:06 )

* Fixed the D_ constants in std.zh.
* Fixed the Farore's Wind game continuation bug.
* Fixed the north/south bombwall tapping bug.
* Fixed the heart beep/cave entrance NES inconsistency.
* 'Run on Screen Init' scripts now work correctly for initial rooms when reloading quests and restarting levels.
* Hopefully fixed the regenerating bomb bag bug. ( _L_, 2007-07-02 01:59:36 )

* Fixed a bug where sword beams were being corrupted when being reflected by a prism.
* Compressed and uncompressed timed autosaves now have different file extensions. ( DarkNation, 2007-07-02 00:20:22 )

* Added a new item class for the Dust Pile, Selection (A), Selection (B), Misc 1, and Misc 2, so that editing them no longer corrupts the item properties of quests.
* The Longshot now has the correct default block flags. ( DarkDragon, 2007-07-01 23:05:49 )



Build 434 - windows
* Using the shortcut assignment operators (+=, etc) with the left-hand side involving a function call no longer crashes the ZScript compiler.
* Link no longer ceases to animate 50% of the time when floating in water with Z3 movement enabled.
* Item selection no longer completely fails if Link has only one item, and "A button selectable" is enabled.
* Bomb explosions no longer display an incorrect extra frame at the end of the explosion animation. ( DarkDragon, 2007-07-01 20:50:58 )

* Revamped the item properties dialog box. Labels are now changed depending on the item class of the item. ( DarkDragon, 2007-07-01 16:55:47 )

* Reset proposed1st.qst's Fairy (Moving)'s item properties back to their defaults, so that its fairies no longer fail to move.
* Failing to load a quest shows the correct default tile and palette on the quest selection screen.
* Layers no longer bleed into the subscreen when the screen scrolls.
* "Defaults" in the item properties dialog now correctly resets misc3 and misc4. ( DarkDragon, 2007-07-01 01:00:03 )



Build 429 - windows
* The overworld map no longer displays garbage.
* I'm releasing this build immediately due to the importance of DN's last fix. ( DarkDragon, 2007-06-28 17:31:07 )

* Fixed a bug where editing a combo would throw off all of the animated combos in the quest. ( DarkNation, 2007-06-28 13:14:17 )



Build 424 - windows
* Corrected various inaccuracies and typographical problems in std.zh and zscript.txt.
* Added L's updates to std.zh (concerning dungeon doors).
* Added proposed1st.qst, a slightly modified version of 1st.qst which fixes some inconsistencies with floor tiles in some dungeon rooms. (thanks zcAmazing.) If testing suggests this quest has not become corrupt by saving it in an alpha build, it will replace 1st.qst.
* Screen enemy lists in old quests should now be loaded correctly.
* The Item Location feature will no longer continue to report screen items which were set to "<none>".
* "No Enemy" combos once again actually keep out enemies. ( DarkDragon, 2007-06-28 00:52:53 )

* Finished the implementation of the Stomp Boots. Jump onto enemies to damage them. Leevers and certain other enemies are immune.
* Now, most weapons with Power 0 will stun enemies.
* Fixed the Hookshot's Misc. Flag 1.
* Fixed a few Wealth Medal cases.
* Fixed the 'Vulnerable only to Super Bombs' Enemy Editor flag.
* Fixed the 'Never Return After Death' Enemy Editor flag.
* Suppressed all of the unimplemented Enemy Editor flags. We'll meet again / Don't know where / Don't know when... ( _L_, 2007-06-28 00:26:52 )

* Bomb and superbomb lens hints now display correctly.
* Push block lens hints now use the tile of the bracelet item with the power needed to push that block.
* Fairy combos now show up as a lens hint again. ( DarkDragon, 2007-06-27 19:50:17 )

* Fixed the bug where blue leevers were appearing simultaneously instead of sequentially.
* Fixed the Z1 inconsistency where Link's low hp warning beep would keep playing during a screen scroll. ( DarkNation, 2007-06-27 13:27:51 )

* Highlighting the bow on the active subscreen no longer continuously leaks memory. ( DarkDragon, 2007-06-26 23:36:30 )



Build 417 - linux
* new Linux build. ( koopa, 2007-06-26 05:12:10 )

* Fixed Screen->ComboD's documentation.
* Items now are thoroughly reset when quitting a quest.
* A/B weapon button choices are not saved in the save file.
* Removing an item (via cheat, script, or edibility) now correctly updates the active subscreen. ( DarkDragon, 2007-06-24 23:19:24 )



Build 414 - windows
* Testing the new repository host. This build is functionally identical to the last. ( DarkDragon, 2007-06-24 02:37:21 )

* Testing the new repository host. This build is functionally identical to the last. ( DarkDragon, 2007-06-24 01:52:32 )



Build 411 - windows
* Slow walk combos now halve Link's movement speed (on average) in both normal and Z3 animation mode.
* Editing a combo after having moved/deleted an animating combo no longer corrupts your combo table. ( DarkDragon, 2007-06-23 23:29:41 )

* Fixed the boomerang/enemy boomerang sound bug.
* Added the ZScript function Game->GetCurDMapScreen().
* Fixed Game->Get/SetScreenD(), which now works on DMaps other than 0. ( _L_, 2007-06-23 06:19:26 )

* Added the ZScript array Screen->Door[], which controls the four doors on a screen. See zscript.txt and std.zh for details. ( _L_, 2007-06-22 06:47:09 )

* Added 'Misc. Attribute 3', 'Misc. Attribute 4' and 'Action Sound' boxes to the Item Editor. ( _L_, 2007-06-21 23:21:01 )

* Corrected "Don't Keep Lower Level Items" to "Keep Lower Level Items."
* Shields now have "Keep Lower Level Items" set by default. ( DarkDragon, 2007-06-21 11:58:48 )

* GOTOLESS now jumps if, in the previous comparison, arg1 <= arg2, to bring it in line with GOTOMORE. Previously it jumped only if arg1 < arg2.
* Fixed ZScript's inequality operators (<, >, <=, >=), and made them slightly more efficient. ( DarkDragon, 2007-06-21 11:04:13 )



Build 403 - windows
* Loading quests should no longer freeze ZC.
* Opening the passive subscreen no longer displays garbage in the background.
* The init data and cheat dialog boxes now apply items *before* processing the misc. fields. Thus changes to counters bestowed by items no longer trumps what was actually set for that counter. ( DarkDragon, 2007-06-21 01:24:12 )

* Incompatibility between SFX loaded in Windows and on the Mac is potentially fixed. Old quests with SFX saved on the Mac will need to be reloaded (on either a PC or Mac). ( DarkDragon, 2007-06-20 20:38:16 )

* Beating a custom quest no longer resets your hearts and rings.
* Link no longer goes crazy when crossing a conveyor belt and using old-style (NES) animation. ( DarkDragon, 2007-06-19 22:06:57 )

* Link once again displays the Triforce for (almost) the entire Ganon intro sequence.
* Making changes to a quest's SFX data now flags the quest as modified.
* Magic now animates correctly when leaving a prism combo. ( DarkDragon, 2007-06-19 20:49:22 )

* Timed quest file (.qt*) now load correctly when opened normally instead of imported. ( DarkDragon, 2007-06-19 19:45:41 )

* Inserting combos on the combo page (with the 'i' key) now correctly updates combo aliases and freeform combos. ( DarkDragon, 2007-06-19 15:08:22 )

* Fixed the 'Select A Button Weapon' quest rule, and fixed solid damage combo interaction with conveyors. ( _L_, 2007-06-19 07:08:42 )



Build 393 - linux
* New Linux build. ( koopa, 2007-06-18 10:34:30 )

* Fixed the Bait sound crash and the Din's Fire damage bug. ( _L_, 2007-06-18 02:18:47 )

* The subscreen now shows up while the "Game Over" text is displayed.
* Messages now continue to be visible while the screen is scrolling.
* In accordance with NES behavior, Link now disappears before the screen fades when entering item rooms and passages, disappears before the screen fades when exiting item rooms and passages, and appears after the screen fades in when leaving item rooms and passages. ( DarkDragon, 2007-06-18 00:02:48 )



Build 389 - windows
* Resolved the pthreads dll problem. ( DarkDragon, 2007-06-17 21:18:46 )



Build 388 - windows
* Shops now work correctly with linked messages, and with the "Messages Disappear" quest rule. ( DarkDragon, 2007-06-17 14:37:25 )



Build 386 - windows
* Accessing the disk while playing music will no longer randomly crash ZC/ZQ. ( DarkDragon, 2007-06-17 13:53:27 )

* Added the variables usesound, misc3 and misc4 to item data. Corresponding Item Editor changes are forthcoming.
* Fixed the 'Z3 Boomerang/Hookshot' rule.
* Whistles will now freeze action for as long as the sound plays, and no more.
* Fixed the Mirror Shield->reflected magic bug.
* Fixed an infinite Super Bombs counter bug, and a Magic Key counter bug. ( _L_, 2007-06-17 11:01:51 )

* Farore's Wind's vibration will no longer send Link scrolling wildly across the dmap. ( DarkDragon, 2007-06-15 17:33:16 )

* Subscreen now does not turn completely black upon Link's death. ( DarkDragon, 2007-06-15 17:03:54 )

* Fixed the invisible wall bug, and the shop price display bug. ( _L_, 2007-06-15 10:46:55 )

* Swords, rings and shields can now expend magic when used.
* If Link doesn't have enough magic to use a ring, his sprite isn't drawn in the ring's palette. ( _L_, 2007-06-14 22:20:16 )



Build 380 - linux


Build 379 - macosx-10-3-9
* Custom scripted items can now cost magic to use, as is possible with other items. ( _L_, 2007-06-14 04:47:47 )



Build 378 - windows
* Fixed multiple bugs with Screen->DrawTile, and partially implemented its scale parameter.
* Updated the ZScript documentation: added Link->Z, Link->ItemJinx, Link->Jump, Link->SwordJinx, and fixed various other inaccuracies. ( DarkDragon, 2007-06-13 09:50:12 )

* Fixed a minor glitch in Screen->DrawTile. ( DarkDragon, 2007-06-10 21:47:39 )



Build 373 - windows
* Bomb bags no longer tie bomb ammo to your current arrow supply.
* Bombs (and super bombs) now respect their power attribute when damaging Link.
* Walking into an item room from a dark dungeon room no longer screws up the room's palette.
* Fixed a critical bug in the new lighting code causing ZC to crash in many cases when enemy fire is on the screen. ( DarkDragon, 2007-06-10 15:05:50 )



Build 372 - windows
* This build includes a new version of ZCL ( sean, 2007-06-10 06:54:03 )



Build 371 - windows
* Fixed various problems with Screen->Line and Screen->DrawTile.
* Fixed some inaccuracies in the ZScript documentation.
* Added a new utility method, Distance(), to std.zh. It computes the Euclidean distance between two points. ( DarkDragon, 2007-06-10 03:35:10 )

* Enemies entering from the sides will now wander in exactly on tile boundaries, and will not enter on top of unwalkable tiles. ( DarkDragon, 2007-06-09 21:34:19 )

* ZCL - Fixed Title Screen Selector Scrollbar Bug (I hope)
* ZC Checker has been recoded AGAIN! ( sean, 2007-06-09 21:33:09 )

* ZCL Crc Checker Removed
* ZQuest Tab has a redirection setting to Extra's (Requested)
* ZCL 1.5 Final Almost Done =-D ( sean, 2007-06-09 21:00:24 )

* Darkness should work correctly when entering or leaving a passage or item room.
* Using the candle in an item cave or passage should no longer screw up the palette.
* Darkness should interact correctly again with the temporary light quest rule. ( DarkDragon, 2007-06-09 16:16:35 )

* Fixed the potion pickup problem. ( _L_, 2007-06-09 08:02:21 )



Build 364 - windows
* Trying to quit at a save point no longer freezes ZC's controls.
* Fixed a further glitch in the interaction of walking on water and Z3 movement.
* The ZScript this pointer should now work correctly even if multiple FFCs are on the screen. ( DarkDragon, 2007-06-09 02:10:31 )

* Gold arrows now default to the correct power and firing sprite. ( DarkDragon, 2007-06-08 22:19:29 )

* Fixed the implementation and documentation of Game->GetMapFlag() and SetMapFlag().
* Removed deprecated miscellaneous flags from std.zh.
* Fixed a serious correctness bug in the ZScript compiler's constant-folding code. ( DarkDragon, 2007-06-08 21:57:26 )

* Added a new quest rule, "NES-style Enemy Weapon Collision Detection," which is enabled by default for the official quests, and disabled for custom quests. If this rule is unchecked, the following enemy weapons will use more sensitive weapon collision code from ZC 2.11 and older: sword beam, magic, boomerang, rocks. ( DarkDragon, 2007-06-07 23:17:49 )

* Auto-backup no longer dumps garbage in the ZC directory. ( DarkDragon, 2007-06-07 21:14:40 )

* Fixed the Hookshot Chain->Keese bug. ( _L_, 2007-06-07 10:35:04 )



Build 357 - windows
* Added documentation for Screen->Message().
* Link-seeking boomerangs now always return to the correct enemy. ( DarkDragon, 2007-06-06 23:17:43 )

* Hitting F5 while viewing the map no longer crashes ZC. ( DarkDragon, 2007-06-06 20:35:35 )

* If Link is drawn above layer 3, his fired weapons (and Hover Boots glow) are also drawn above layer 3.
* Fixed the Hookshot->Keese bug. ( _L_, 2007-06-06 04:47:29 )

* Added Screen->Message().
* Walkable water (produced by Whistle->Dry Lake) should now work correctly with Z3-style movement.
* FPS should now be capped even while the game is paused. ( DarkDragon, 2007-06-05 21:43:15 )

* New quest rule: Draw Jumping Link Above Layer 3. ( _L_, 2007-06-05 20:52:13 )

* Hopefully fixed the Book Magic sprite bug. ( _L_, 2007-06-05 20:36:46 )



Build 350 - windows
* Rand() now returns an int, as specified in the documentation.
* Screen->PutPixel() no longer refuses to compile.
* Properties of the Minimap in the subscreen editor are no longer invisible; in particular, checkboxes to show the map graphic, Link position, and compass marker are now visible.
* Doors at the edge of maps leading into a non-Scrolling sidewarp no longer refuse to open. ( DarkDragon, 2007-06-05 15:03:52 )

* Fixed various Triforce bugs.
* Now, if a Triforce has the 'Equipment Item' flag set, it will act like a level Triforce Piece. Otherwise, it will act like a Big Triforce.
* You can now set the Triforce MIDI on a per-item basis, using the Triforce's Misc. Attribute 1 (0 = use default MIDI).
* Fixed the bug that prevented an item's Collect Script from being set in the Item Editor.
* Added the ZASM commands 'MSGSTRV' and 'MSGSTRR'. These take one argument, and display a specific message string on command. Using this, you can make items display strings when you pick them up. Matching ZScript commands are forthcoming. ( _L_, 2007-06-05 00:27:16 )

* Link no longer gets stuck if he goes wading in water immediately after blowing the whistle on a Whistle->Dry Lake screen. ( DarkDragon, 2007-06-04 22:09:34 )

* The Whistle->Pal palette effect now ends when you leave the screen, even in dungeon dmaps.
* You may now set an item's level to 0 in the item properties dialog.
* Old quest now show the correct icon for the Letter (Used), and should start respecting the deprecated quest rules if those were set in the original quest. Quests saved after item properties were introduced will need, as always, to manually fix the Letter (Used) tile. ( DarkDragon, 2007-06-03 23:32:13 )



Build 346 - windows
* Bug of the Week: Link would not pick up 200 rupees items as he walked over them, but only if he was carrying a potion. ( DarkDragon, 2007-06-03 03:33:51 )

* Updated linux build (finally!) This one is build 319. ( koopa, 2007-06-03 02:13:00 )

* Rings in the init data of very old quests are now respected. ( DarkDragon, 2007-06-02 23:04:38 )

* Split "Whistle->Stairs" into three screen flags: Whistle->Stairs, Whistle->Pal Change, and Whistle->Dry Lake. Old Whistle->Stairs is equivalent to all three being checked: the first makes the stairs appear, the second animates color 3 of Cset 3 as in the NES, and the third dries all water tiles and kills all Zoras.
* Bombs now use more animation frames if more are provided in their weapon data. ( DarkDragon, 2007-06-02 22:53:52 )

* The title screen now correctly displays the default Link icon for old quests who do not have game icons specified.
* The title screen icon's cset is now correct when Link is wearing a ring. ( DarkDragon, 2007-06-02 17:00:52 )

* Seemingly fixed the shield->boss fireball interaction.
Implemented a simpler strategy for dealing with deprecated quest rules. ( _L_, 2007-06-01 21:07:25 )

* Picking up a red potion gives you a blue potion too again, so that the red potion turns into a blue potion after use.
* Selecting items when both the A and B buttons are selectable should work again.
* Fixed a glitch that would display the bomb and superbomb on the active subscreen even if you are out of ammo. ( DarkDragon, 2007-06-01 19:47:49 )



Build 339 - windows
* Weakened the "defaults" item properties button: it now only resets the item's non-graphics properties. This change should make the button safer for recovering quests whose items have become corrupt due to bugs in earlier builds. ( DarkDragon, 2007-06-01 01:55:39 )

* Right-facing slash now beings at the correct x-coordinate. ( DarkDragon, 2007-06-01 00:22:26 )



Build 337 - windows
* Shops now display the correct prices instead of -1 rupees.
* ZQ is now more careful to preserve price order when permuting shop info with missing strings.
* Flame weapon sprites (eg, from the candle) now animate correctly if old-style flipping animation is set instead of normal animation frames. ( DarkDragon, 2007-05-31 20:26:05 )

* Potions, Roc's Feathers, and Whistles now obey their "disappear when used" flags. ( DarkDragon, 2007-05-31 19:15:02 )

* Max Keys and Max Rupees are no longer switched in the Init Data (and cheat) dialog.
* Item classes are now alphabetized throughout. ( DarkDragon, 2007-05-31 18:33:38 )

* ZC's FPS counter should no longer flicker.
* Tweaked the FPS throttle code somewhat to try to minimize the influence of the graphics card. ( DarkDragon, 2007-05-31 15:17:42 )

* The bomb item's flag 1 now replaced the (short-lived) Long Bomb Explosion rule.
* Shooting magic into a magic prism no longer crashes ZC.
* Fixed broken MIDI loading code which prevented ZQ from successfully saving some quests.
* Fixed my fix of the "default" button in the item properties dialog. Arghh.
* ZC's credits and screensaver now run at normal speeds again.
* Enemies with frame rates less than 4 no longer crash ZC.
* Triggers no longer make sound effects when they die. ( DarkDragon, 2007-05-30 23:33:33 )



Build 332 - windows
* Added a new quest rule, "Long Bomb Explosion Duration." If this is enabled, bomb explosions last an extra few frames, allowing link to kill enemies such as the Aquamentus in one hit, as was possible in some old betas.
* The mirror shield should now correctly block all projectiles in old quests. If the mirror shield is misbehaving in a new quest, you will need to reset its item properties to their defaults. ( DarkDragon, 2007-05-30 11:40:45 )

* Bombs work again in old quests. ( DarkDragon, 2007-05-30 10:51:05 )

* Removed the unused quest rules from the Quest Rules dialog. ( DarkDragon, 2007-05-30 01:42:44 )



Build 329 - windows
* Link can now use the super bombs he's given when he uses the bomb cheat.
* Detonating multiple bombs on a screen with the "Bombs don't flash palette" quest rule off will no longer royally screw up the palette.
* Items in the passive subscreen should now continue to animate at normal speeds during the Triforce curtain sequence.
* Optimized the rendering code. ( DarkDragon, 2007-05-30 00:13:04 )

* Cleaned up the FPS throttling code. ( DarkDragon, 2007-05-29 00:35:40 )

* Added midair hookshooting.
* Fixed sideview gravity for Link's weapons. ( _L_, 2007-05-29 00:06:15 )

* Block combos now work even when placed on FFCs.
* ZScript draw primitives should now work on layers other than layer 0. ( DarkDragon, 2007-05-28 20:21:31 )

* Fixed sideview gravity.
* Shop items will no longer fall in sideview. ( _L_, 2007-05-27 23:39:27 )

* Gleeoks on screens also containing other enemies will no longer cause crashes or other funny business.
* Din's fire now sparkles while rising no matter how many times it's been already used on the screen.
* ZScript draw primitives now take angles in degrees instead of funky 256/360th-of-a-degree units.
* ZScript draw primitives now reside as functions of the Screen pointer.
* Added documentation for the ZScript draw primitives (that are implemented).
* Updated std.zh to include some overlooked constants. ( DarkDragon, 2007-05-27 21:22:04 )

* Fixed the Bracelet 3 in older quests.
* Fixed the Item Editor's item family dropdown menu to include unused item families. ( _L_, 2007-05-27 20:38:28 )

* If you use the item editor to give the Manhandla a direction-dependent weapon, the Manhandla heads will now shoot it in the correct direction. ( DarkDragon, 2007-05-27 15:03:37 )

* Picking up fairies should no longer give the player an extra heart container piece.
* The "Default" button in the item editor should now actually reset all item properties to defaults. ( DarkDragon, 2007-05-27 14:42:59 )



Build 319 - linux , windows
* Quests from older builds should no longer randomly fail to load while reading MIDI data.
* ZQ no longer crashes while saving old quests originally lacking screens 83-87. ( DarkDragon, 2007-05-27 01:55:03 )



Build 318 - windows
* ZScript global variable declaration syntax has changed to be more intuitive; please see the post in the AGN scripting forum. ( DarkDragon, 2007-05-26 22:17:01 )

* The first there dmap flags and "Guys appear only in caves" are now enabled by default in the overworld of quests created in 1.90 or earlier. ( DarkDragon, 2007-05-26 17:32:21 )

* Re-fixed the Bombchu's bomb. ( _L_, 2007-05-26 09:29:08 )

* The "temporary clocks" quest rule now works correctly for older quests. For quests saved in newer betas, you will have to manually set the clock item's misc1 variable to 256 to restore your quest's original behavior. ( DarkDragon, 2007-05-26 00:11:03 )

* All fields in the enemy editor should accept user input again.
* Leaving a cave screen after detonating a bomb no longer carries over the cave palette into the next screen. ( DarkDragon, 2007-05-25 20:13:54 )

* CreateNPC() called to create segmented enemies now returns the primary segment instead of the last segment.
* Gleeok heads now move relative to the Gleeok body (if it happens to move somehow, eg. through scripts) instead of the center of the screen. ( DarkDragon, 2007-05-25 15:23:03 )

* Fixed the non-heavy push blocks. ( _L_, 2007-05-25 00:50:17 )



Build 311 - windows
* Fires in guy rooms now do 1/2 instead of 1/4 of a heart of base damage when touched.
* The subscreen item selection code was tweaked slightly to restore NES compatibility. ( DarkDragon, 2007-05-24 22:31:27 )

* Added a "Use Pal CSet" checkbox to the enemy editor; enabling this check box will set the enemy's cset to 14 for you. ( DarkDragon, 2007-05-24 21:37:00 )

* Fireballs shot by Zora et al should once again follow a correct trajectory. Aquamentus and Gohma have been retroactively given a new weapon, Fireball (Rising), which behaves like their fireballs always have. ( DarkDragon, 2007-05-24 20:17:07 )

* Fixed a bug where the whistle whirlwind would sometimes not take you to a different screen if you had the Smart Screen Scrolling quest rule enabled.
* The timed auto-saves can now be stored in an unencrypted form for a greater chance of recovery if something gets corrupted. ( DarkNation, 2007-05-24 13:30:06 )

* Fixed the placement of multiple Remote Bombs. ( _L_, 2007-05-24 07:05:48 )

* ZC is now resistant to bogus Current Item subscreen object topology: that is, if some of the item positions are missing, or if the grid has more exotic pathologies (eg, infinite loops that never take you back to the first element), ZC should no longer crash. Note that item selection will nevertheless be eccentric if you fail to set up the Current Item objects correctly, and in particular, omission of a Current Item in Position 0 will block the player from ever selecting an item. ( DarkDragon, 2007-05-23 23:28:25 )

* The Item Locater should no longer crash ZQ when run on a quest containing custom items.
* Fixed a memory leak in the Item Locater. ( DarkDragon, 2007-05-23 21:49:07 )

* ZC no longer ignores the current dmap when calculating whether to show the map, compass, and boss key on the subscreen. ( DarkDragon, 2007-05-23 20:15:11 )



Build 303 - windows
* Fixed an illegal memory access in Link's tile modifier code. ( DarkDragon, 2007-05-23 19:25:59 )

* Typing text into text fields in the subscreen editor's Object Properties dialog box should no longer randomly crash ZQ.
* Viewing the properties of counters in the subscreen editor should no longer randomly crash ZQ. ( DarkDragon, 2007-05-23 15:08:37 )

* Timed saves can now happen in most places in ZQuest instead of just the main screen.
* Added an automatic quest recovery feature to ZQuest. If ZQuest crashes, then when it is run again, if a timed save had been performed at some point before the crash, then ZQuest will ask if you wish to reopen the timed save file.
* Fixed the bug where the X and Y size and offset variables for the subscreen grid in ZQuest were being improperly reset. ( DarkNation, 2007-05-23 08:43:59 )

* When previewing equipment in the subscreen editor, ZQ will now show the existing item of lowest level belonging to the family in question instead of showing the item of level 1 if it exists, and nothing otherwise. ( DarkDragon, 2007-05-22 21:24:39 )

* Added a reports menu to the tools menu and moved the Integrity Check under it.
* Added a new report to the reports menu. The item location report will scan every screen in your quest and generate a report of what items are located where, whether they are room items, special items, shop items, potion shop items, "take any one" items, or "heart container / red potion" items.
* Corrected the functionality of the auto-backup feature. Now, it makes a copy of the quest file on disk as the backup instead of resaving the quest a second time for use as a backup file. Additionally, the extension for quest backup files is qb0.
* Added a retention variable for the auto-backup feature. Now older backups are renamed to make room for newer ones. For instance, a qb1 file is renamed to qb2 and a qb0 file is renamed to qb1. You can keep up to 10 versions (qb0 - qb9) of a quest backup file (selectable in the options menu).
* Added a timed save feature. Intervals are selectable from 1 to 10 minutes. However, saving can only occur on the main screen (though this may change later on). Timed save files are saved as qt0 files and also have a retention variable to allow a longer history (qt0 - qt9) to be kept.
* Reworked the options menu to make use of tabs. All of the check boxes are on one tab while the dropdowns are on another.
* The quest open dialog now has a dropdown to allow you to filter the file list to only show quest files (qst), unencrypted quest files (qsu), quest backup files (qb0 - qb9), quest timed save files (qt0 - qt9), and all files (not sure why anyone would need or want the last one, though). ( DarkNation, 2007-05-22 13:43:09 )

* ZC should no longer stop Link from moving in a direction perpendicular to the direction he's facing while Link is charging with Z3 movement off. ( DarkDragon, 2007-05-21 16:14:37 )

* Implemented solid damage combos. Added options to Arrow, Boomerang, Bomb Bag, Wallet and Quiver item families. ( _L_, 2007-05-21 09:06:04 )

* Picking up any item of the Triforce Pieces class, including custom items, will now trigger the triforce cinematic. ( DarkDragon, 2007-05-20 18:16:59 )



Build 293 - windows
* Updated std.zh. Added FFCF_PRELOAD, FFCF_LENSVIS, FFCF_RESET to the FFC flags, and GEN_HCPPERHC, GEN_CONTINUEHEARTS, GEN_CONTINUEISPERCENT to the generic data indices.
* Changing an FFC's Flags[] (ZScript) or FFFLAGSD (ZASM) variable should now work correctly.
* Increased the limit on numeric constants in ZScript and ZASM to [-214748.3648, 214748.3647], up from the old limit of around 30000. ( DarkDragon, 2007-05-20 14:08:33 )

* HCP Per HC should now be read-only when playing a quest in ZC, as should the checkbox for whether the continue hearts value is absolute or a percent.
* ZC should now correctly remember modifications to the number of heart container pieces in the cheat dialog.
* ZC will now show the correct values in the HCP Per HC and Continue Hearts fields in the cheat dialog instead of bogus values. ( DarkDragon, 2007-05-19 21:02:13 )



Build 291 - macosx-10-3-9
* Personally, I fail to see the point of allowing one to edit enemies that cannot be used, and are in fact not even implemented (diagonal traps, NPCs etc). So away with them!
(Also, corrected the custom shields' implementation.) ( _L_, 2007-05-15 03:18:30 )



Build 290 - macosx-10-3-9
* Fixed the Subscreen item class bug, and the no-shield bug. Also, discontinued the All Shields Reflect Rocks rule. ( _L_, 2007-05-15 01:03:24 )

* Improved the shields, fixed the bomb counter, Boomerang->Keese, and a few more. ( _L_, 2007-05-14 20:34:25 )



Build 288 - windows
* Added some debugging information to help track down the quest loading bug. ( DarkDragon, 2007-05-14 18:27:00 )



Build 287 - windows
* Attempted to fix the bug preventing the Mac build from loading quests with MIDIs. ( DarkDragon, 2007-05-14 12:37:52 )



Build 286 - windows
* Equipping the Light Force (or any magic or health ring with Misc2 set to 0) will no longer crash the game. Setting Misc2 to 0 for items of those classes is now equivalent to setting it to 1.
* Built-in MIDIs should once again play at the correct (non-zero) volume. ( DarkDragon, 2007-05-14 04:20:10 )

* Converted the following combo types to the new class system: Block Boomerang, Block Sword Beams, Block Fireballs, Block Magic, Block All. The changes should not be evident to the end user.
* Fixed the bug where Normal Dodongos using new enemy tiles would be drawn 1 tile to the right of their correct location when they were walking vertically.
* Fixed the bug where the Small Bow would make arrows not move. ( DarkNation, 2007-05-09 13:13:13 )

* Fixed the infinite items bug and the Misc1 checkbox bug. ( _L_, 2007-05-09 03:10:57 )

* Fixed bug where Zoras using weapons other than fireballs would always fire upwards.
* Fixed bug encountered when Octorok 3 enemies are set to use weapons other than the flame weapon. ( DarkNation, 2007-05-08 13:38:58 )

* Fixed the Bracelets and push blocks. ( _L_, 2007-05-07 20:12:11 )

* Fixed a bug where Link could appear 1 pixel below the bottom of the playing field.
* Made some internal coding changes to the following combo types: Damage, Water, Dock, Conveyor, Slow Walk, Overhead, Eyeball, Block Arrow. The changes should not be evident to the end user.
* Fixed the timing for Bombchu explosions.
* Fixed a bug where left conveyor combos would not work.
* Fixed a bug where damage combos would increase hp.
* Added the ability to block MIDI saving in ZC on a per-MIDI basis (in the MIDI editor in ZQuest).
* Ctrl-U in the tile selector in ZQuest now switches between 3 tile display modes. This will either show all tiles, all unused tiles, or all unused blank tiles. This helps to find out which tiles are actually being used in a quest.
* Fixed the bug where saving an item in the item editor would change the item family to a seemingly random value.
* Fixed a bug where some enemies were not showing up in the enemy list for the enemy editor.
* Fixed a bug where the last 2 quest rules on the last quest rule page would sometimes appear on the wrong pages.
* Fixed a bug where some tiles were not being properly registered by the tile overwrite protector. ( DarkNation, 2007-05-07 11:27:17 )

* Reinstated the changes in revision 268, which somehow got erased between then and now. ( _L_, 2007-05-07 11:00:32 )



Build 278 - windows
* FFC scripts that carry over should now also carry over their runtime parameters.
* I've recompiled the binaries with additional optimization flags to try to eliminate the sluggishness observed on some machines. ( DarkDragon, 2007-05-06 03:19:00 )



Build 277 - windows
* Fixed the text of the Longshot and other newer items in the subscreen. ( DarkDragon, 2007-05-05 22:43:59 )

* Item Class in item editor is now a drop down box containing item class names. ( DarkNation, 2007-04-27 13:31:47 )

* New equipment: Peril Rings (increase defense when HP is low), Whimsical Rings (to be completed with Enemy Editor changes), Stomp Boots (jump onto enemies to damage them - also to be completed with Enemy Editor changes) and the Stone of Agony (Link vibrates when standing on secret combo flags).
Furthermore, the Lens Hint symbols are now determined by searching through item data for the matching item.
Also, ring colour is now determined by a Ring's misc1. ( _L_, 2007-04-27 05:07:28 )

* Fixed a bug where Fire Gleeok neck tiles would be displayed wrong.
* Fixed a bug where Link would not be animated while waking and charging his sword. ( DarkNation, 2007-04-16 13:29:36 )

* Added the following flags to the Item Editor: 'Remove Item When Used', 'Upgrade Item When Collected Twice', 'Don't Keep Lower Level Items', 'Uses Rupees Instead Of Magic' and 'If Possible, Use Slash Tiles'.
* Item names can now be edited. ( _L_, 2007-04-11 04:55:37 )

* Added the following variables to the Item Editor: power, wpn, wpn2, wpn3, wpn4, pickup_hearts, misc1, misc2 and magic.
* Removed the Item Properties menu item.
* Removed 16 quest rules.
* Changed the implementation of nearly every item for compatability with the Item Editor. (Note, however, that the weapon power functionality '0 = stun', and boomerang damage related enhancements, won't be functional until I finish the Enemy Editor enhancements.)
There is, however, one bug to solve: when using Din's Fire twice, the second up-rocket won't have any sparkles. I suspect this is because certain wPhantoms aren't being properly disposed of. ( _L_, 2007-04-11 04:37:52 )

* Slightly fixed the 'Smart Screen Scrolling' rule.
* Enabled the Quake hammer's quake effect.
* New equipment: Heart Rings (regenerate hearts), Magic Rings (regenerate magic), and the Light Force (infinite magic). ( _L_, 2007-03-29 09:29:58 )

* Custom item Link Tile Modifiers have been implemented.
* Added \'Pickup Script\' and \'Edible\' boxes to item editor.
* Discontinued the \'Like Likes Eat Small Shield\' quest rule.
* Finished implementing selectable custom items. ( _L_, 2007-03-29 01:42:03 )

* Small shield is no longer 'displayed' in pre-2.11 quests' subscreens. Also half-implemented selectable custom items. ( _L_, 2007-03-27 08:47:50 )

* Added a quest rule, "Correct Bomb/Darknut Interaction" that causes Darknuts to react to the position of bombs in relation to themselves instead of the direction that Link was in when he placed the bomb. ( DarkNation, 2007-03-26 08:07:59 )

* Fixed bug where the max keys and max rupees text boxes were too short in the Init Data dialog.
* Fixed the bug where the Magic and Max Magic text boxes would change values higher than 255.
* Added the ability to custom number of heart container pieces required to complete a heart container.
* Added the ability to set sword beam power to higher than 100%.
* Fixed a misspelling of rupees (rupies) on the Init Data dialog. ( DarkNation, 2007-03-21 08:39:09 )

* Have done the final touches for ZCL which has now been versioned to 1.5 RC1. Expect a release soon on purezc. :-D ( Sean, 2007-03-18 16:46:15 )

* Fixed the default Fire Octorok so that it sprays fire correctly.
* Initial unification of Vire and Pols Voice code. New default Pols Voice enemies will work correctly. Older quests will need to cut the step variable of the pols voice enemies in half.
* Fixed the bug where traps would sometimes push enemies into solid blocks.
* Fixed the bug where Bombchus had a delay in their explosions.
* Fixed the bug where enemies were spawning at the wrong times.
* Fixed the bug (via a quest rule) where jumping enemies would be obscured by the subscreen if they went off the top of the playing field.
* Fixed the bug where grid values of 0 in the subscreen editor would freeze ZQuest.
* Fixed the bug where changing the title screen type and then immediately trying to exit (while the menu is still on) would reset ZC instead of exiting.
* Fixed the bug where enemies were not being saved correctly when saving as a 2.10 version quest file.
* Fixed the bug where strings would not be written correctly when saving as a 2.10 version quest file.
* Fixed the bug where eyeball combos were not looking at the mouse in ZQuest.
* Added a flip screen/map feature to ZQuest. Shift-H key will flip the screen horizontally. Ctrl-H will flip the map horizontally. Ctrl-Shift-H will flip both. The V key works the same but vertically. There may still be some glitches. When flipping a screen, remember that only the combo positions are flipped, not the combo tiles, so the screen will probably look strange until you either flip all of the combos that the screen uses (and cause other, unflipped screens to look wrong) or until you replace the combos with flipped versions. This isn't so much a tool to flip things for you but to make the process of flipping something a lot faster. ( DarkNation, 2007-03-19 10:25:44 )

* Random direct warps should now work. ( DarkDragon, 2007-03-15 21:44:15 )

* Fixed the rendering code so that ghost enemies display correctly. ( DarkDragon, 2007-03-15 21:25:32 )

* Entering a screen with Zoras should no longer randomly crash ZC. ( DarkDragon, 2007-03-10 04:26:35 )



Build 254 - windows
* Build 240 quests should now load correctly. ( DarkDragon, 2007-03-09 16:45:54 )



Build 251 - windows
* ZC should now prompt the user before erasing all saved games when it encounters an error while loading. ( DarkDragon, 2007-03-09 04:14:40 )

* ZScript function declaration parameters now belong to the function's scope instead of the enclosing scope. ( DarkDragon, 2007-03-09 01:34:58 )

* Subscreen counters now remember "infinite" items correctly. ( Saffith, 2007-03-08 08:40:29 )

* Fixed the Bombchu bug, and probably got the 'Script Restarts When Carried Over' FFC flag working. ( _L_, 2007-03-08 08:34:42 )



Build 247 - macosx-10-3-9
* Added a Mac OS X (pre-10.3.9) build of 244. Also updated SFX_DINSFIRE and SFX_TAP2. ( _L_, 2007-03-08 05:56:20 )

* ZQ's ZScript editor will no longer crash if you try to import nonexistent .z files. ( DarkDragon, 2007-03-08 05:14:23 )

* Init data items in old quests should now correctly load upon quest start. ( DarkDragon, 2007-03-07 04:24:59 )

* Combos will now cycle even if the combo has less than 2 animation frames. Previously the behavior of combos under these conditions was undefined. ( DarkDragon, 2007-03-06 17:14:48 )

* The SFX field of the string editor now defaults to 18 instead of 32.
* The starting position of the cursor of the string editor's edit box is now the far left. ( DarkDragon, 2007-03-05 15:25:32 )

* Exiting the Enemy editor now keeps that enemy highlighted on the enemy select list.
* Fixed a sporadic memory bug in ZC causing sporadic crashes on quest load. ( DarkDragon, 2007-03-05 04:14:54 )



Build 240 - windows
* The Digits field of the Counter subscreen is now editable. ( DarkDragon, 2007-03-04 20:45:58 )

* Fairies (both from enemies and as independent items) should now be moving again. ( DarkDragon, 2007-03-04 19:44:30 )

* Pressing B to skip DMap intro strings should no longer permanently freeze Link.
* Added a new DMap flag, "Always Display Intro Text." If checked, the intro string will always be displayed when Link enters the DMap, even if Link has been there before. If unchecked, the text will only appear once, even if you Quit->Continue or Save. In old quests this flag defaults to unchecked. ( DarkDragon, 2007-03-04 16:17:59 )

* The Snapshot Format menu item, submenu, and associated checkmarks now render correctly. ( DarkDragon, 2007-03-04 04:59:40 )

* Link's magic and max magic, as specified in the init data and cheat dialog, can now be set to multiples of 1/32nd of a magic container instead of just integral multiples of a whole container.
* Picking up an item, or opening the cheat dialog, or giving Link an item in a script, should no longer round Link's magic to the nearest multiple of a magic container. ( DarkDragon, 2007-03-04 04:43:43 )

* Creating a Selector or Selector 2 in the subscreen editor should no longer crash ZQ. ( DarkDragon, 2007-03-04 03:00:34 )

* Importing maps with layers on nonexistent map numbers will now cause only one warning message.
* Compasses and boss keys should no longer be automatically removed when cheating.
* The potion and HCP radio buttons in the cheat and init. data dialogs are no longer linked. ( Saffith, 2007-03-01 09:41:57 )



Build 233 - windows
* Re-fixed the perennial "windows in wrong places" preprocessor misconfiguration bug. Hopefully this represents the last of the MSVC 2005 porting pains.
* Deleting a screen should now clear all of that screen's tiles, instead of leaving half a screen of "ghost" tiles.
* Cheating should no longer decrease your max magic containers to 8. ( DarkDragon, 2007-02-25 16:36:12 )



Build 232 - windows


Build 231 - windows
* Attempted to fix the MSVC 2005 problem by carefully rebuilding most of the ZC libraries. ( DarkDragon, 2007-02-25 01:03:46 )

* The rings should now update Link's palette again. Here's how it works using the new item system: let n be the highest level among rings in Link's possession. Then Link will use sprite CSet 15 or 5+n, whichever is lower. If Link has no rings, CSet 6 is used instead. Notice that this system should be completely compatible with previous hard-coded ring behavior.
* I've upgraded my compiler to MSVC 2005. Please bear with me if this has introduced some temporary configuration problems. ( DarkDragon, 2007-02-24 03:13:50 )

* Combining block hole and block trigger flags should work now
* ASM item scripts can now be imported
* Names of currently loaded scripts are now visible when importing ASM scripts ( Saffith, 2007-02-21 10:20:10 )



Build 226 - windows
* All fields of components in the subscreen editor should now register changes instead of occasionally keeping their old value. ( DarkDragon, 2007-02-21 03:02:12 )

* Adding new maps to a quest should no longer corrupt your combo table. ( DarkDragon, 2007-02-20 14:33:50 )



Build 224 - windows
* Highlighting text in the script editor should no longer crash ZQ.
* Tweaked the highlight a bit not to "bleed" into neighboring text.
* ZScript's == operator should now work with all variables and pointers of same type. ( DarkDragon, 2007-02-18 20:13:58 )

* Link should no longer get hurt by damage combos adjacent to him that he is not touching. ( DarkDragon, 2007-02-18 15:00:30 )



Build 222 - linux
* Subscreens with an "item name" component should no longer crash ZC when viewing the subscreen without having an item selected. ( DarkDragon, 2007-02-17 17:53:29 )



Build 219 - windows
* Tentative fix of the MIDI playback problems. ( DarkDragon, 2007-02-12 02:13:13 )

* Fixed the bug where the file type selector wasn't updating the file list.
* Fixed the bug where eyeball combos didn't work on freeform combos.
* Fixed the bug where eyeball combos were looking at the wrong place in relation to Link.
* Fixed the bug where the raft (when being used by Link) was being drawn 4 pixels too high. May have to create a variable for the raft to determine the raft's offset can be changed in case some people were depending on the raft's old/incorrect position.
* Fixed the bug where blue leevers were appearing simultaneuosly instead of sequentially. ( DarkNation, 2007-02-11 20:41:11 )



Build 216 - linux


Build 215 - windows
* The enemy selection list should now show the correct buttons both in the custom enemy editor and the screen enemy list. ( DarkDragon, 2007-02-11 04:15:44 )

* Removed the Warp Type drop-down list from the whistle warp dialog box, as it makes no sense and currently does nothing.
* Pressing GO in the whistle warp dialog box should now take you to the correct screen, instead of warping you to a different warp's screen or crashing ZQ. ( DarkDragon, 2007-02-11 03:38:40 )

* ZQ should no longer crash when combo cycling in Preview mode while on a screen with missing layers in a quest with Cycle Combos on Layers enabled. ( DarkDragon, 2007-02-11 02:55:47 )



Build 212 - windows
* Finished a tentative fix to the custom-quest load crash. ( DarkDragon, 2007-02-11 02:37:27 )



Build 211 - linux
* Startup logo on ZC has a better look now :) ( Sean, 2007-02-09 16:23:13 )

* Fixed issue that ZCL would lock up launching ZQ or ZC on linux. ( Sean, 2007-02-09 16:08:25 )

* ZCL will not lock when you launch ZC or ZQ on windows. ( Sean, 2007-02-09 14:29:12 )



Build 206 - linux
* Updated ZCL.ini
* Added linux build ( Sean, 2007-02-09 11:59:59 )



Build 204 - windows
* Fixed a buffer overrun which corrupted data and intermittently crashed ZQ while loading MIDIs at program start.
* Canceling while in the Map Count dialog should no longer crash ZQ, and should no longer flag a quest as being modified.
* Recompiled the binaries using statically-linked runtime libraries. ( DarkDragon, 2007-02-09 01:22:55 )

* Fixed the top-down stepladder bug and the bow & arrows crash. Enemy-related changes still forthcoming. ( _L_, 2007-02-09 00:22:24 )



Build 200 - windows


Build 199 - linux


Build 198 - windows
* Added the C runtime library to the Windows alpha build. ( DarkDragon, 2007-02-08 07:24:47 )

* ZQ should no longer crash when opening a passive subscreen for editing.
* The subscreens in the subscreen editor should now (mostly) reflect the starting values specified in init data.
* Three independent pointer bugs, all of which crash ZQ when trying to edit active subscreen component properties, should now be fixed. ( DarkDragon, 2007-02-07 17:29:23 )

* New ZCL Icon made. Thanks DN ^_^
* More bug fixes (New build soon) ( Sean, 2007-02-07 12:03:54 )



Build 193 - windows
* Fixed a configuration problem in my MSVC project that caused windows in ZQ scaled mode to appear in the wrong place. ( DarkDragon, 2007-02-06 18:18:51 )



Build 192 - windows
* ZQuest should no longer produce corrupted files when saving quests with at least one MIDI. ( DarkDragon, 2007-02-06 14:09:24 )

* Started the conversion/update of ROMView. ( DarkNation, 2007-02-04 21:01:48 )

* Warp destination walkability integrity check should now work correctly.
* Cleaned up the String Editor layout. ( DarkDragon, 2007-02-04 14:51:37 )

* ZQ should no longer crash when trying to start editing a subscreen. ( DarkDragon, 2007-02-04 03:36:35 )

* ZQ should now no longer crash when attempting to trigger secrets on a screen with missing layers. ( DarkDragon, 2007-02-02 20:47:28 )

* Added a lot of new checks to the Quest Integrity Checker ( DarkNation, 2007-02-02 12:01:08 )

* The text editor now recognize the keypad enter and delete keys. ( DarkDragon, 2007-02-02 11:24:00 )

* Fixed two buffer overruns which crashed ZQ on attempts to view the guy/item/etc information in the panel at the bottom of the screen.
* The horizontal scrollbar in the ZScript editor should now work correctly.
* The ZScript help file seemed to have disappeared. Readded. I can be viewed from within the ZScript editor by pressing F1. ( DarkDragon, 2007-02-01 13:50:53 )

* Fixed the warning dialogs during quest saving in ZQuest.
* Moved the scripting menus into their own scripting submenu.
* Began work on a quest integrity checker. ( DarkNation, 2007-02-01 13:09:59 )



Build 177 - linux , windows
* Added new Alpha build of ZCL for windows and linux
* Added new Alpha build of Zelda for linux ( Sean, 2007-01-31 15:34:28 )

* ZCL Removed Launch Zq and Zc Button
* Fixed coding errors which caused it not to compile in linux. ( Sean, 2007-01-31 15:26:42 )

* ZCL Changes - Added Allegro Log Tab and implemented it. This allows after you close down ZC or ZQ from launching it on ZCL. It will output the allegro log to ZCL. I implemented this so people know what is going on if ZC or ZQ crashes on them. ( Sean, 2007-01-31 14:29:37 )

* Started working on the launch ZC and ZQ option button. ( Sean, 2007-01-30 21:47:22 )

* Fixed mouse scale issue for linux ( Sean, 2007-01-30 21:44:27 )

* Shop prices are now drawn immediately before the sprites instead of at the very end of rendering. ( DarkDragon, 2007-01-30 20:08:01 )

* Fixed a pointer double-deletion bug which was causing ZC to occasionally crash when viewing the map. ( DarkDragon, 2007-01-30 19:30:21 )



Build 169 - windows
* Fixed numerous outstanding ZScript bugs. ( DarkDragon, 2007-01-30 17:48:27 )

* Welcome to the new ZC change log! Alpha builds and changes are reported here automatically and in real time. ( DarkDragon, 2007-01-30 17:26:48 )

