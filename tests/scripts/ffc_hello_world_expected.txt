Compiling 'ffc_hello_world.zs'
Pass 1: Parsing
Pass 2: Preprocessing
Pass 3: Registration
Pass 4: Analyzing Code
Pass 5: Checking code paths
Pass 6: Generating object code
Pass 7: Assembling
Success!
Compile finished with exit code '0' (success)

PUSHR d0; void run(int) Params
PUSHR REFFFC; void run(int) Body Start
PUSHARGSV 0,0.0004
SETR d4,SP
ALLOCATEMEMV d2,40
STORED d2,3
WRITEPODSTRING d2,"FFC script started, ID: %d x: %d y: %d\n"
LOADD d2,3; InlineFunc[void printf(char32)] Params Start
PUSHR d2
LOADD d2,4
PUSHR d2
POP REFFFC
PUSHVARGR FFCID
LOADD d2,4
PUSHR d2
POP REFFFC
PUSHVARGR X
LOADD d2,4
PUSHR d2
POP REFFFC
PUSHVARGR Y; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOADD d3,3
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,9
STORED d2,2
WRITEPODSTRING d2,"num: %d\n"
LOADD d2,2; InlineFunc[void printf(char32)] Params Start
PUSHR d2
LOADD d2,5
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOADD d3,2
DEALLOCATEMEMR d3
SETV d2,0
STORED d2,1
LOADD d2,1; if() #9322 Test AND while(true) #9320 Body [Opt:AlwaysOn] Start
PUSHR d2
ADDV d2,1
STORED d2,1
POP d2
COMPAREV d2,30
SETTRUEI d2
COMPAREV d2,0
GOTOTRUE 69; Test 'if'
ALLOCATEMEMV d2,43; if() #9322 Body Start
STORED d2,0
WRITEPODSTRING d2,"FFC script is running, ID: %d x: %d y: %d\n"
LOADD d2,0; InlineFunc[void printf(char32)] Params Start
PUSHR d2
LOADD d2,4
PUSHR d2
POP REFFFC
PUSHVARGR FFCID
LOADD d2,4
PUSHR d2
POP REFFFC
PUSHVARGR X
LOADD d2,4
PUSHR d2
POP REFFFC
PUSHVARGR Y; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOADD d3,0
DEALLOCATEMEMR d3; if() #9322 Body End
WAITFRAME; InlineFunc[void Waitframe()] Body AND while(true) #9320 Body [Opt:AlwaysOn] End
GOTO 39; while() #9320 End
NOP; [Opt:NeverRet] AND void run(int) Body End


ALLOCATEGMEMV d2,4096; void run() Body Start
SETR gd1,d2
QUIT; void run() Body End