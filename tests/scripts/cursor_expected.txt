Compiling 'cursor.zs'
Pass 1: Parsing
Pass 2: Preprocessing
Pass 3: Registration
Pass 4: Analyzing Code
Pass 5: Checking code paths
Pass 6: Generating object code
Pass 7: Assembling
Success!
Compile finished with exit code '0' (success)

PUSHR d0; void run(int) Params
PUSHR REFFFC; void run(int) Body Start
PUSHARGSV 0,0.0002
SETR d4,SP
SETV d2,0; while(true) #8 Body [Opt:AlwaysOn] Start
PUSHR d2
POP d0
SETR d2,MOUSEARR
STORED d2,1
SETV d2,1
PUSHR d2
POP d0
SETR d2,MOUSEARR
STORED d2,0
PUSHV 3; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOADD d2,1
PUSHR d2
LOADD d2,0
PUSHR d2
LOADD d2,3
PUSHR d2
PUSHARGSV 1,0.0002
PUSHV 3
PUSHARGSV -1,0.0002
PUSHARGSV 0,0.0005
PUSHV 1
PUSHV 128; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBO; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS d5,0.0016; InlineFunc[void Screen->DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
WAITFRAME; InlineFunc[void Waitframe()] Body AND while(true) #8 Body [Opt:AlwaysOn] End
GOTO 5; while() #8 End AND [Opt:NeverRet] AND void run(int) Body End


ALLOCATEGMEMV d2,4096; void run() Body Start
SETR gd1,d2
QUIT; void run() Body End