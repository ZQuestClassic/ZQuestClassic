Compiling 'websocket.zs'
Pass 1: Parsing
Pass 2: Preprocessing
Pass 3: Registration
Pass 4: Analyzing Code
Pass 5: Checking code paths
Pass 6: Generating object code
Pass 7: Assembling
Success!
Compile finished with exit code '0' (success)

PUSHR REFGENERICDATA; void run() Body Start
PUSHARGSV 0,0.0010
SETR d4,SP2
ALLOCATEMEMV d2,26
STORE d2,0.0009
WRITEPODSTRING d2,"Connecting to websocket.\n"
LOAD d2,0.0009; InlineFunc[void printf(char32)] Params Start
PUSHR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0009
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,18
STORE d2,0.0008
WRITEPODSTRING d2,"ws://ws.ifelse.io"
LOAD d2,0.0008; InlineFunc[WebSocket Game->LoadWebSocket(char32)] Params
WEBSOCKET_LOAD d2; InlineFunc[WebSocket Game->LoadWebSocket(char32)] Body
LOAD d3,0.0008
DEALLOCATEMEMR d3
STORE d2,0.0007
LOAD d2,0.0007; InlineFunc[void WebSocket->Own()] Params Start
SETR REFWEBSOCKET,d2; InlineFunc[void WebSocket->Own()] Params End
WEBSOCKET_OWN; InlineFunc[void WebSocket->Own()] Body
STOREV 0,0.0006
LOAD d2,0.0007; if() #189 Test AND while(true) #8 Body [Opt:AlwaysOn] Start
PUSHR d2
POP REFWEBSOCKET
SETR d2,WEBSOCKET_STATE
COMPAREV d2,0
SETCMP d2,I==
COMPAREV d2,0
GOTOCMP 36,==; Test 'if'
WAITFRAME; InlineFunc[void Waitframe()] Body AND if() #189 Body Start
GOTO 25; continue 1;
GOTO 67; if() #189 Body End
LOAD d2,0.0007; if() #558 Test AND if() #189 Else Start
PUSHR d2
POP REFWEBSOCKET
SETR d2,WEBSOCKET_STATE
COMPAREV d2,0.0003
SETCMP d2,I==
COMPAREV d2,0
GOTOCMP 67,==; Test 'if'
ALLOCATEMEMV d2,0; if() #558 Body Start
STORE d2,0.0005
LOAD d2,0.0007; InlineFunc[void WebSocket->GetError(char32)] Params Start
PUSHR d2
LOAD d2,0.0005; InlineFunc[void WebSocket->GetError(char32)] Params End
POP REFWEBSOCKET; InlineFunc[void WebSocket->GetError(char32)] Body Start
WEBSOCKET_ERROR d2; InlineFunc[void WebSocket->GetError(char32)] Body End
ALLOCATEMEMV d2,23
STORE d2,0.0004
WRITEPODSTRING d2,"Failed to connect: %s\n"
LOAD d2,0.0004; InlineFunc[void printf(char32)] Params Start
PUSHR d2
LOAD d2,0.0005
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0004
DEALLOCATEMEMR d3
LOAD d3,0.0005
DEALLOCATEMEMR d3
GOTO 225; break 1;
LOAD d3,0.0005
DEALLOCATEMEMR d3; if() #558 Body End
LOAD d2,0.0007; if() #189 Else End AND if() #559 Test
PUSHR d2
POP REFWEBSOCKET
SETR d2,WEBSOCKET_STATE
COMPAREV d2,0.0001
SETCMP d2,I!=
COMPAREV d2,0
GOTOCMP 89,==; Test 'if'
ALLOCATEMEMV d2,23; if() #559 Body Start
STORE d2,0.0005
WRITEPODSTRING d2,"Failed to connect: %l\n"
LOAD d2,0.0005; InlineFunc[void printf(char32)] Params Start
PUSHR d2
LOAD d2,0.0007
PUSHR d2
POP REFWEBSOCKET
PUSHVARGR WEBSOCKET_STATE; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0005
DEALLOCATEMEMR d3
GOTO 225; break 1; AND if() #559 Body End
LOAD d2,0.0006; unless() #560 Test
COMPAREV d2,0
GOTOCMP 129,!=; Test 'unless'
ALLOCATEMEMV d2,12; unless() #560 Body Start
STORE d2,0.0005
WRITEPODSTRING d2,"Connected!\n"
LOAD d2,0.0005; InlineFunc[void printf(char32)] Params Start
PUSHR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0005
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,13
STORE d2,0.0004
WRITEPODSTRING d2,"hello world!"
LOAD d2,0.0007; InlineFunc[void WebSocket->Send(char32, long)] Params Start
PUSHR d2
LOAD d2,0.0004
PUSHR d2
SETV d2,0.0001; InlineFunc[void WebSocket->Send(char32, long)] Params End
POP d3; InlineFunc[void WebSocket->Send(char32, long)] Body Start
POP REFWEBSOCKET
WEBSOCKET_SEND d2,d3; InlineFunc[void WebSocket->Send(char32, long)] Body End
LOAD d3,0.0004
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,14
STORE d2,0.0003
WRITEPODSTRING d2,"domo arigato!"
LOAD d2,0.0007; InlineFunc[void WebSocket->Send(char32, long)] Params Start
PUSHR d2
LOAD d2,0.0003
PUSHR d2
SETV d2,0.0002; InlineFunc[void WebSocket->Send(char32, long)] Params End
POP d3; InlineFunc[void WebSocket->Send(char32, long)] Body Start
POP REFWEBSOCKET
WEBSOCKET_SEND d2,d3; InlineFunc[void WebSocket->Send(char32, long)] Body End
LOAD d3,0.0003
DEALLOCATEMEMR d3
SETV d2,1
STORE d2,0.0006; unless() #560 Body End
LOAD d2,0.0007; while() #9 Test
PUSHR d2
POP REFWEBSOCKET
SETR d2,WEBSOCKET_HAS_MESSAGE
COMPAREV d2,0
GOTOCMP 223,==; Test 'while'
LOAD d2,0.0007; InlineFunc[long WebSocket->Receive()] Params Start AND while() #9 Body Start
SETR REFWEBSOCKET,d2; InlineFunc[long WebSocket->Receive()] Params End
WEBSOCKET_RECEIVE d2; InlineFunc[long WebSocket->Receive()] Body
STORE d2,0.0005
LOAD d2,0.0007
PUSHR d2
POP REFWEBSOCKET
SETR d2,WEBSOCKET_MESSAGE_TYPE
STORE d2,0.0004
LOAD d2,0.0004; if() #190 Test
COMPAREV d2,0.0001
SETCMP d2,I==
COMPAREV d2,0
GOTOCMP 161,==; Test 'if'
ALLOCATEMEMV d2,22; if() #190 Body Start
STORE d2,0.0003
WRITEPODSTRING d2,"got text message: %s\n"
LOAD d2,0.0003; InlineFunc[void printf(char32)] Params Start
PUSHR d2
LOAD d2,0.0005
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0003
DEALLOCATEMEMR d3
GOTO 129; if() #190 Body End
LOAD d2,0.0004; if() #191 Test AND if() #190 Else Start
COMPAREV d2,0.0002
SETCMP d2,I==
COMPAREV d2,0
GOTOCMP 211,==; Test 'if'
LOAD d2,0.0005; InlineFunc[int SizeOfArray(untyped)] Params AND if() #191 Body Start
ARRAYSIZE d2; InlineFunc[int SizeOfArray(untyped)] Body
STORE d2,0.0003
ALLOCATEMEMV d2,34
STORE d2,0.0002
WRITEPODSTRING d2,"got binary message of length: %d\n"
LOAD d2,0.0002; InlineFunc[void printf(char32)] Params Start
PUSHR d2
LOAD d2,0.0003
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0002
DEALLOCATEMEMR d3
STOREV 0,0.0001; for() #187 setup
LOAD d2,0.0001; for() #187 LoopTest
PUSHR d2
LOAD d2,0.0003
POP d3
COMPARER d3,d2
SETCMP d2,I<
COMPAREV d2,0
GOTOCMP 129,==; for() #187 TestFail?
ALLOCATEMEMV d2,8; for() #187 Body Start
STORE d2,0
WRITEPODSTRING d2,"%d: %l\n"
LOAD d2,0; InlineFunc[void printf(char32)] Params Start
PUSHR d2
LOAD d2,0.0001
PUSHVARGR d2
LOAD d2,0.0005
PUSHR d2
LOAD d2,0.0001
POP d0
READPODARRAYR d2,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0
DEALLOCATEMEMR d3; for() #187 Body End
LOAD d2,0.0001; for() #187 LoopIncrement
ADDV d2,1
STORE d2,0.0001
GOTO 181; for() #187 End
GOTO 129; if() #191 Body End
ALLOCATEMEMV d2,40; if() #191 Else Start
STORE d2,0.0003
WRITEPODSTRING d2,"got message, but with unknown type: %l\n"
LOAD d2,0.0003; InlineFunc[void printf(char32)] Params Start
PUSHR d2
LOAD d2,0.0004
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0003
DEALLOCATEMEMR d3; if() #191 Else End
GOTO 129; if() #190 Else End AND while() #9 Body End AND while() #9 End
WAITFRAME; InlineFunc[void Waitframe()] Body AND while(true) #8 Body [Opt:AlwaysOn] End
GOTO 25; while() #8 End
POPARGS d5,0.0011
QUIT; void run() Body End


ALLOCATEGMEMV d2,4096; void run() Body Start
SETR gd1,d2
QUIT; void run() Body End