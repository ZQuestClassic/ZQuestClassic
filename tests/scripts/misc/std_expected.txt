stderr:

Compiling 'std.zs'
Pass 1: Parsing
Pass 2: Preprocessing
Pass 3: Registration
Pass 4: Analyzing Code
Pass 5: Checking code paths
Pass 6: Generating object code
Pass 7: Assembling
Success!
Compile finished with exit code '0' (success)

stdout:

{
  "success": true,
  "diagnostics": [],
  "metadata": {
    "currentFileSymbols": 0,
    "symbols": 5,
    "identifiers": 5,
    "elided": true
  }
}

zasm:

SETV GD13 0; void run() Body Start
ALLOCATEGMEMV D2 18000 0
MARK_TYPE_REG GD15 0.0009
SET_OBJECT GD15 D2
SETV GD8 0
SETV GD7 0
ALLOCATEGMEMV D2 90 0
MARK_TYPE_REG GD6 0.0009
SET_OBJECT GD6 D2
SETV GD9 0
SETV GD10 0
SETV GD11 0
SETV GD12 0
SETV GD14 0
ALLOCATEGMEMV D2 8 0
MARK_TYPE_REG GD1 0.0009
SET_OBJECT GD1 D2
ALLOCATEGMEMV D2 2048 0
MARK_TYPE_REG GD4 0.0009
SET_OBJECT GD4 D2
ALLOCATEGMEMV D2 94 0
MARK_TYPE_REG GD2 0.0009
SET_OBJECT GD2 D2
ALLOCATEGMEMV D2 48 0
MARK_TYPE_REG GD5 0.0009
SET_OBJECT GD5 D2
ALLOCATEGMEMV D2 14 0
PUSHR D2
WRITEPODARRAY D2 {0,0,1024,0,0,256,512,0,1024,1024,256,0,256,512}
POP D2
MARK_TYPE_REG GD16 0.0009
SET_OBJECT GD16 D2
ALLOCATEGMEMV D2 480 0
MARK_TYPE_REG GD3 0.0009
SET_OBJECT GD3 D2
QUIT; void run() Body End
PUSHV 0; void run() Body Start
SETR D4 SP2
PUSHR D4
CALLFUNC 0.1809; UsrFunc[void Tango_Start()] Call
POP D4
PUSHR D4; while(true) #16 Body [Opt:AlwaysOn] Start
CALLFUNC 0.1991; UsrFunc[void Tango_Update1()] Call
POP D4
WAITDRAW; InlineFunc[void Waitdraw()] Body
PUSHR D4
CALLFUNC 0.2942; UsrFunc[void Tango_Update2()] Call
POP D4
WAITFRAME; InlineFunc[void Waitframe()] Body AND while(true) #16 Body [Opt:AlwaysOn] End
GOTO 42; while() #16 End AND [Opt:NeverRet] AND void run() Body End
SETR D4 SP2; Func[int Rand(int, int)] Body Start
SETV D2 0; InlineFunc[int randgen::Rand(int, int)] Params Start AND return Start
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0001
SETR D3 D2; InlineFunc[int randgen::Rand(int, int)] Params End
POP D2; InlineFunc[int randgen::Rand(int, int)] Body Start
POP REFRNG
RNGRAND3 D2 D3; InlineFunc[int randgen::Rand(int, int)] Body End
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int Rand(int, int)] Body End
SETR D4 SP2; Func[int Clamp(int, int, int)] Body Start
LOAD D2 0.0002; if() #18 Test
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 75 ==; Test 'if'
LOAD D2 0.0001; if() #18 Body Start
STORE D2 0.0002
GOTO 85; if() #18 Body End
LOAD D2 0.0002; if() #54 Test AND if() #18 Else Start
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 85 ==; Test 'if'
LOAD D2 0; if() #54 Body Start
STORE D2 0.0002; if() #54 Body End
LOAD D2 0.0002; if() #18 Else End AND return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int Clamp(int, int, int)] Body End
PUSHARGSV 0 0.0002; Func[int NumTriforcePieces(int)] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 1 0; for() #85 setup
LOAD D2 0; for() #85 LoopTest
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 114 ==; for() #85 TestFail?
LOAD D2 0; if() #257 Test AND for() #85 Body Start
PUSHR D2
POP D0
SETR D2 GAMELITEMSD
ANDV D2 1
COMPAREV D2 0
GOTOCMP 110 ==; Test 'if'
LOAD D2 0.0001; if() #257 Body Start
ADDV D2 1
STORE D2 0.0001; if() #257 Body End
LOAD D2 0; for() #85 Body End AND for() #85 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 92; for() #85 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int NumTriforcePieces(int)] Body End
SETR D4 SP2; Func[void Tango_ActivateMenu()] Body Start
SETR D2 GD2; if() #354 Test
PUSHR D2
POP D0
READPODARRAYV D2 23
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 131 ==; Test 'if'
PUSHR D4; if() #354 Body Start
PUSHV 301; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0147; UsrFunc[void __Tango_LogError(int)] Call
POP D4
GOTO 146; return (Void) AND if() #354 Body End
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
PUSHR D4
CALLFUNC 0.0170; UsrFunc[void __Tango_UnpressMenu()] Call
PEEK D4
PUSHV 0; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params
CALLFUNC 0.0192; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Call
PEEK D4
PUSHARGSV 0 0.0002; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start AND UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0283; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4
RETURNFUNC; Func[void Tango_ActivateMenu()] Body End
PUSHV 0; Func[void __Tango_LogError(int)] Body Start
SETR D4 SP2
SETV D2 300; if(true) #508 [Opt:AlwaysOn]
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
ALLOCATEMEMV D2 16 0
WRITEPODSTRING D2 "tango.zh error "
STORE_OBJECT D2 0
LOAD D2 0; InlineFunc[void TraceS(char32[])] Params Start
SETR D3 D2; InlineFunc[void TraceS(char32[])] Params End
TRACE6 D3; InlineFunc[void TraceS(char32[])] Body
LOAD D2 0.0001; InlineFunc[void TraceToBase(int, int, int)] Params Start
PUSHR D2
PUSHV 10
PUSHV 0; InlineFunc[void TraceToBase(int, int, int)] Params End
TRACE5; InlineFunc[void TraceToBase(int, int, int)] Body Start
POPARGS D5 0.0003; InlineFunc[void TraceToBase(int, int, int)] Body End
REF_REMOVE 0
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_LogError(int)] Body End
SETR D4 SP2; Func[void __Tango_UnpressMenu()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSB D2
RETURNFUNC; Func[void __Tango_UnpressMenu()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ScrollToMenuCursor(int)] Body Start
SETR D4 SP2
LOAD D2 0.0002; if() #588 Test
COMPAREV D2 0
GOTOCMP 208 <
LOAD D2 0.0002
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
GOTOCMP 208 >=
SETV D2 0
GOTO 209
SETV D2 1
COMPAREV D2 0
GOTOCMP 281 !=; Test 'if' AND return (Void) AND if() #588 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
STORE D2 0.0001
LOAD D2 0.0001; if() #589 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 281 !=; Test 'if' AND return (Void) AND if() #589 Body
SETR D2 GD2
PUSHR D2
LOAD D2 0.0002
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #294 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 256 ==; Test 'if'
PUSHR D4; if() #294 Body Start
LOAD D2 0.0001; UsrFunc[void Tango_ScrollSlot(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
POP D3
SUBR D3 D2
PUSHR D3; UsrFunc[void Tango_ScrollSlot(int, int)] Params End
CALLFUNC 0.1575; UsrFunc[void Tango_ScrollSlot(int, int)] Call
POP D4
GOTO 281; if() #294 Body End
LOAD D2 0; if() #590 Test AND if() #294 Else Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 26
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 281 ==; Test 'if'
PUSHR D4; if() #590 Body Start
LOAD D2 0.0001; UsrFunc[void Tango_ScrollSlot(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 26
POP D3
SUBR D3 D2
PUSHR D3; UsrFunc[void Tango_ScrollSlot(int, int)] Params End
CALLFUNC 0.1575; UsrFunc[void Tango_ScrollSlot(int, int)] Call
POP D4; if() #590 Body End
POPARGS D5 0.0003; if() #294 Else End
RETURNFUNC; Func[void __Tango_ScrollToMenuCursor(int)] Body End
SETR D4 SP2; Func[void __Tango_SetCursorMovement(int, int)] Body Start
LOAD D2 0; if() #296 Test
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 316 ==; Test 'if'
SETV D2 0; if() #296 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 31 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1554; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 27 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1564; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 28 D2
GOTO 368; if() #296 Body End
LOAD D2 0; if() #296 Else Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 31 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1554; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 27
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
LOAD D2 0
POP D3
DIVR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 29 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1564; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 28
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
LOAD D2 0
POP D3
DIVR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 30 D2; if() #296 Else End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_SetCursorMovement(int, int)] Body End
SETR D4 SP2; Func[void Tango_SetMenuFlags(int)] Body Start
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 14 D2
POP D5
RETURNFUNC; Func[void Tango_SetMenuFlags(int)] Body End
PUSHV 0; Func[bool __Tango_ValidateSlot(int)] Body Start
SETR D4 SP2
STOREV 1 0
LOAD D2 0.0001; if() #627 Test
COMPAREV D2 0
GOTOCMP 390 <
LOAD D2 0.0001
COMPAREV D2 1
GOTOCMP 390 >
SETV D2 0
GOTO 391
SETV D2 1
COMPAREV D2 0
GOTOCMP 395 ==; Test 'if'
SETV D2 0; if() #627 Body Start
STORE D2 0; if() #627 Body End
LOAD D2 0.0001; if() #628 Test
PUSHR D2
LOAD D2 0.0001
LSHIFTV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 406 ==; Test 'if'
SETV D2 0; if() #628 Body Start
STORE D2 0; if() #628 Body End
LOAD D2 0; unless() #629 Test
COMPAREV D2 0
GOTOCMP 415 !=; Test 'unless'
PUSHR D4; unless() #629 Body Start
PUSHV 403; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4; unless() #629 Body End
LOAD D2 0; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[bool __Tango_ValidateSlot(int)] Body End
PUSHV 0; Func[int Tango_GetSlotStyleAttribute(int, int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #373 Test
LOAD D2 0.0002; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0379; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 429 !=; Test 'unless'
SETV D2 -10; return Start AND unless() #373 Body Start
GOTO 446; return End AND unless() #373 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
MULTV D2 24
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD3; return Start
PUSHR D2
LOAD D2 0
MULTV D2 48
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int Tango_GetSlotStyleAttribute(int, int)] Body End
SETR D4 SP2; Func[void __Tango_LogError(int, untyped, untyped)] Body Start
PUSHR D4
LOAD D2 0.0002; UsrFunc[void __Tango_LogError(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_LogError(int)] Params End
CALLFUNC 0.0147; UsrFunc[void __Tango_LogError(int)] Call
POP D4
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_LogError(int, untyped, untyped)] Body End
PUSHARGSV 0 0.0005; Func[void __Tango_ClearSlotBitmap(int)] Body Start
SETR D4 SP2
LOAD D2 0.0005
MULTV D2 7
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 6
POP D0
READPODARRAYR D2 D2
STORE D2 0
PUSHV 6; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
PUSHV 0; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0003
ADDV D2 1
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
PUSHV 0
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
PUSHV 128; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_ClearSlotBitmap(int)] Body End
SETR D4 SP2; Func[void __Tango_IncScreenFreeze()] Body Start
SETR D2 GD2; if() #485 Test
PUSHR D2
POP D0
READPODARRAYV D2 11
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
SETR D2 GD2; Test 'if'
PUSHR D2
POP D0
READPODARRAYV D2 11
ADDV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 11 D2
RETURNFUNC; Func[void __Tango_IncScreenFreeze()] Body End
SETR D4 SP2; Func[bool __Tango_PressSpeedup()] Body Start
SETR D2 INPUTPRESSA; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressSpeedup()] Body End
SETR D4 SP2; Func[bool __Tango_PressSuperSpeed()] Body Start
SETR D2 INPUTPRESSB; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressSuperSpeed()] Body End
PUSHV 0; Func[void Tango_AddMenuChoice(int, int, int)] Body Start
SETR D4 SP2
SETR D2 GD2; if() #361 Test
PUSHR D2
POP D0
READPODARRAYV D2 23
COMPAREV D2 20
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 562 ==; Test 'if'
PUSHR D4; if() #361 Body Start
PUSHV 302; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0147; UsrFunc[void __Tango_LogError(int)] Call
POP D4
GOTO 608; return (Void) AND if() #361 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
MULTV D2 3
ADDV D2 34
STORE D2 0
LOAD D2 0.0003
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0002
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
ADDV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 23 D2
POPARGS D5 0.0004
RETURNFUNC; Func[void Tango_AddMenuChoice(int, int, int)] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_LoadMessage(int, int, bool, int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #499 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0379; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 621 !=; Test 'unless'
REF_REMOVE 0.0001; unless() #499 Body Start
GOTO 680; return (Void) AND unless() #499 Body End
PUSHR D4
LOAD D2 0.0006; UsrFunc[void __Tango_SetCurrentSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_SetCurrentSlot(int)] Params End
CALLFUNC 0.2374; UsrFunc[void __Tango_SetCurrentSlot(int)] Call
PEEK D4
LOAD D2 0.0004; UsrFunc[int __Tango_FindDestStart(bool)] Params Start
PUSHR D2; UsrFunc[int __Tango_FindDestStart(bool)] Params End
CALLFUNC 0.5344; UsrFunc[int __Tango_FindDestStart(bool)] Call
POP D4
STORE D2 0.0002
PUSHR D4; unless() #500 Test
LOAD D2 0.0005; UsrFunc[bool __Tango_ValidateMessage(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateMessage(int)] Params End
CALLFUNC 0.7755; UsrFunc[bool __Tango_ValidateMessage(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 655 !=; Test 'unless'
PUSHR D4; unless() #500 Body Start
PUSHV 101; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
REF_REMOVE 0.0001
GOTO 680; return (Void) AND unless() #500 Body End
ALLOCATEMEMV D2 256 0
STORE_OBJECT D2 0.0001
LOAD D2 0.0005; InlineFunc[void Game::GetMessage(int, char32[])] Params Start
PUSHR D2
LOAD D2 0.0001; InlineFunc[void Game::GetMessage(int, char32[])] Params End
POP D3; InlineFunc[void Game::GetMessage(int, char32[])] Body Start
GETMESSAGE D3 D2; InlineFunc[void Game::GetMessage(int, char32[])] Body End
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_FindSrcStart(char32[], char32)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_FindSrcStart(char32[], char32)] Params End
CALLFUNC 0.5387; UsrFunc[int __Tango_FindSrcStart(char32[], char32)] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0001; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params End
CALLFUNC 0.3441; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Call
POP D4
REF_REMOVE 0.0001
POPARGS D5 0.0007
RETURNFUNC; Func[void __Tango_LoadMessage(int, int, bool, int)] Body End
PUSHARGSV 0 0.0003; Func[void Tango_ClearSlot(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #363 Test
LOAD D2 0.0003; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0379; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 967 ==; Test 'unless' AND return (Void) AND unless() #363 Body
PUSHR D4; if() #364 Test
LOAD D2 0.0003; UsrFunc[bool Tango_SlotIsActive(int)] Params Start
PUSHR D2; UsrFunc[bool Tango_SlotIsActive(int)] Params End
CALLFUNC 0.0969; UsrFunc[bool Tango_SlotIsActive(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 714 ==; Test 'if'
PUSHR D4; if() #364 Body Start
LOAD D2 0.0003; UsrFunc[int Tango_GetSlotStyleAttribute(int, int)] Params Start
PUSHR D2
PUSHV 35; UsrFunc[int Tango_GetSlotStyleAttribute(int, int)] Params End
CALLFUNC 0.0418; UsrFunc[int Tango_GetSlotStyleAttribute(int, int)] Call
POP D4
STORE D2 0.0002
LOAD D2 0.0002; if() #365 Test
ANDV D2 512
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 714 ==; Test 'if'
PUSHR D4; if() #365 Body Start
CALLFUNC 0.1006; UsrFunc[void __Tango_DecScreenFreeze()] Call
POP D4; if() #365 Body End
LOAD D2 0.0003; if() #364 Body End
MULTV D2 24
STORE D2 0.0002
LOAD D2 0.0003
MULTV D2 7
STORE D2 0.0001
SETR D2 GD16
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -10
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0001
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0001
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 5
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 6
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 7
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 8
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 9
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 13
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 14
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 18
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 19
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 21
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 22
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 23
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4; if() #366 Test
CALLFUNC 0.1025; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 961 ==
LOAD D2 0.0003
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
POP D3
COMPARER D3 D2
GOTOCMP 961 !=
SETV D2 1
GOTO 962
SETV D2 0
COMPAREV D2 0
GOTOCMP 967 ==; Test 'if'
PUSHR D4; if() #366 Body Start
CALLFUNC 0.1033; UsrFunc[void __Tango_MenuCancel()] Call
POP D4; if() #366 Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void Tango_ClearSlot(int)] Body End
PUSHARGSV 0 0.0002; Func[bool Tango_SlotIsActive(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #396 Test
LOAD D2 0.0002; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0379; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 980 !=; Test 'unless'
SETV D2 0; return Start AND unless() #396 Body Start
GOTO 1004; return End AND unless() #396 Body End
LOAD D2 0.0002
MULTV D2 24
STORE D2 0.0001
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #397 Test
COMPAREV D2 0
GOTOCMP 998 ==
LOAD D2 0
COMPAREV D2 4
GOTOCMP 998 ==
SETV D2 0
GOTO 999
SETV D2 1
COMPAREV D2 0
GOTOCMP 1003 ==; Test 'if'
SETV D2 0; return Start AND if() #397 Body Start
GOTO 1004; return End AND if() #397 Body End
SETV D2 1; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[bool Tango_SlotIsActive(int)] Body End
SETR D4 SP2; Func[void __Tango_DecScreenFreeze()] Body Start
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 11
SUBV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 11 D2
SETR D2 GD2; if() #434 Test
PUSHR D2
POP D0
READPODARRAYV D2 11
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
RETURNFUNC; Test 'if' AND Func[void __Tango_DecScreenFreeze()] Body End
SETR D4 SP2; Func[bool Tango_MenuIsActive()] Body Start
SETR D2 GD2; return Start
PUSHR D2
POP D0
READPODARRAYV D2 15
COMPAREV D2 -214747.9999
SETCMP D2 I>
RETURNFUNC; return End AND Func[bool Tango_MenuIsActive()] Body End
SETR D4 SP2; Func[void __Tango_MenuCancel()] Body Start
SETR D2 GD2; if() #511 Test
PUSHR D2
POP D0
READPODARRAYV D2 33
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 1050 ==; Test 'if'
PUSHR D4; if() #511 Body Start
SETR D2 GD2; UsrFunc[void Tango_SaveMenuState(int[])] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 33
PUSHR D2; UsrFunc[void Tango_SaveMenuState(int[])] Params End
CALLFUNC 0.1466; UsrFunc[void Tango_SaveMenuState(int[])] Call
POP D4; if() #511 Body End
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
SETR D2 GD2; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 22; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
PUSHR D4
CALLFUNC 0.1131; UsrFunc[void __Tango_MenuNotify()] Call
POP D4
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 8
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
RETURNFUNC; Func[void __Tango_MenuCancel()] Body End
PUSHV 0; Func[bool __Tango_ValidateStyle(int)] Body Start
SETR D4 SP2
STOREV 1 0
LOAD D2 0.0001; if() #636 Test
COMPAREV D2 0
GOTOCMP 1092 <
LOAD D2 0.0001
COMPAREV D2 9
GOTOCMP 1092 >
SETV D2 0
GOTO 1093
SETV D2 1
COMPAREV D2 0
GOTOCMP 1097 ==; Test 'if'
SETV D2 0; if() #636 Body Start
STORE D2 0; if() #636 Body End
LOAD D2 0.0001; if() #637 Test
PUSHR D2
LOAD D2 0.0001
LSHIFTV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1108 ==; Test 'if'
SETV D2 0; if() #637 Body Start
STORE D2 0; if() #637 Body End
LOAD D2 0; unless() #638 Test
COMPAREV D2 0
GOTOCMP 1117 !=; Test 'unless'
PUSHR D4; unless() #638 Body Start
PUSHV 401; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4; unless() #638 Body End
LOAD D2 0; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[bool __Tango_ValidateStyle(int)] Body End
SETR D4 SP2; Func[void Tango_DeactivateMenu()] Body Start
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
PUSHR D4
CALLFUNC 0.1131; UsrFunc[void __Tango_MenuNotify()] Call
POP D4
RETURNFUNC; Func[void Tango_DeactivateMenu()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_MenuNotify()] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0; for() #144 setup
LOAD D2 0; for() #144 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1166 ==; for() #144 TestFail?
LOAD D2 0; for() #144 Body Start
MULTV D2 24
ADDV D2 1
STORE D2 0.0001
SETR D2 GD5; if() #512 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 5
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1162 !=; Test 'if' AND continue 1; AND if() #512 Body
SETV D2 7
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #144 Body End
LOAD D2 0; for() #144 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1135; for() #144 End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_MenuNotify()] Body End
PUSHV 0; Func[bool __Tango_CursorPosIsValid()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0
LOAD D2 0; if() #432 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1182 ==; Test 'if'
SETV D2 0; return Start AND if() #432 Body Start
GOTO 1196; return End AND if() #432 Body End
LOAD D2 0; if() #433 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 1195 ==; Test 'if'
SETV D2 0; return Start AND if() #433 Body Start
GOTO 1196; return End AND if() #433 Body End
SETV D2 1; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_CursorPosIsValid()] Body End
SETR D4 SP2; Func[int Tango_GetCustomVar(int)] Body Start
LOAD D2 0; if() #94 Test
COMPAREV D2 0.0055
GOTOCMP 1207 <
LOAD D2 0
COMPAREV D2 0.0062
GOTOCMP 1207 >
SETV D2 1
GOTO 1208
SETV D2 0
COMPAREV D2 0
GOTOCMP 1218 ==; Test 'if'
SETR D2 GD1; return Start AND if() #94 Body Start
PUSHR D2
LOAD D2 0
SUBV D2 0.0055
MULTV D2 10000
POP D0
READPODARRAYR D2 D2
GOTO 1224; return End AND if() #94 Body End
PUSHR D4; if() #94 Else Start
LOAD D2 0; UsrFunc[void Tango_LogUndefinedVariable(int)] Params Start
PUSHR D2; UsrFunc[void Tango_LogUndefinedVariable(int)] Params End
CALLFUNC 0.1226; UsrFunc[void Tango_LogUndefinedVariable(int)] Call
POP D4
SETV D2 0; return Start
POP D5; return End AND if() #94 Else End
RETURNFUNC; Func[int Tango_GetCustomVar(int)] Body End
SETR D4 SP2; Func[void Tango_LogUndefinedVariable(int)] Body Start
PUSHR D4
PUSHV 203; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
POP D5
RETURNFUNC; Func[void Tango_LogUndefinedVariable(int)] Body End
SETR D4 SP2; Func[int Tango_GetSlotVar(int, int)] Body Start
PUSHR D4; if() #374 Test
LOAD D2 0.0001; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0379; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 1254 ==; Test 'if'
SETR D2 GD5; return Start AND if() #374 Body Start
PUSHR D2
LOAD D2 0.0001
MULTV D2 24
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
GOTO 1255; return End AND if() #374 Body End
SETV D2 -10; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int Tango_GetSlotVar(int, int)] Body End
PUSHARGSV 0 0.0003; Func[int Tango_GetStringWidth(char32[], int[])] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0003
REF_INC 0.0003
MARK_TYPE_STACK 0.0001 0.0004
REF_INC 0.0004
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0 0; for() #111 setup
LOAD D2 0.0004; for() #111 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1319 ==; for() #111 TestFail?
LOAD D2 0.0004; for() #111 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; if() #377 Test
COMPAREV D2 32
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1315 !=; Test 'if' AND continue 1; AND if() #377 Body
LOAD D2 0.0003; if() #95 Test
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1304 ==; Test 'if'
LOAD D2 0.0002; if() #95 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 6
POP D3
ADDR D2 D3
STORE D2 0.0002
GOTO 1315; if() #95 Body End
LOAD D2 0.0002; if() #95 Else Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0001
ADDV D2 -26
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0002; if() #95 Else End
LOAD D2 0; for() #111 Body End AND for() #111 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1266; for() #111 End
LOAD D2 0.0002; return Start
REF_REMOVE 0.0003; return End
REF_REMOVE 0.0004
POPARGS D5 0.0005
RETURNFUNC; Func[int Tango_GetStringWidth(char32[], int[])] Body End
SETR D4 SP2; Func[int Tango_GetStyleAttribute(int, int)] Body Start
PUSHR D4; unless() #378 Test
LOAD D2 0.0001; UsrFunc[bool __Tango_ValidateStyle(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateStyle(int)] Params End
CALLFUNC 0.1081; UsrFunc[bool __Tango_ValidateStyle(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 1334 !=; Test 'unless'
SETV D2 -10; return Start AND unless() #378 Body Start
GOTO 1344; return End AND unless() #378 Body End
SETR D2 GD3; return Start
PUSHR D2
LOAD D2 0.0001
MULTV D2 48
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int Tango_GetStyleAttribute(int, int)] Body End
SETR D4 SP2; Func[void Tango_InitializeMenu()] Body Start
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 14 D2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 16 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 17 D2
SETV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 18 D2
SETV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 19 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 20 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 21 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 23 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 32 D2
SETV D2 -1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 24 D2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 25 D2
SETV D2 214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 26 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 33 D2
RETURNFUNC; Func[void Tango_InitializeMenu()] Body End
SETR D4 SP2; Func[void Tango_LoadMessage(int, int)] Body Start
PUSHR D4
LOAD D2 0.0001; UsrFunc[void __Tango_LoadMessage(int, int, bool, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
PUSHARGSV 0 0.0002; UsrFunc[void __Tango_LoadMessage(int, int, bool, int)] Params End
CALLFUNC 0.0610; UsrFunc[void __Tango_LoadMessage(int, int, bool, int)] Call
POP D4
POPARGS D5 0.0002
RETURNFUNC; Func[void Tango_LoadMessage(int, int)] Body End
SETR D4 SP2; Func[void Tango_LogUndefinedFunction(int)] Body Start
PUSHR D4
PUSHV 202; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
POP D5
RETURNFUNC; Func[void Tango_LogUndefinedFunction(int)] Body End
SETR D4 SP2; Func[void __Tango_LogError(int, untyped)] Body Start
PUSHR D4
LOAD D2 0.0001; UsrFunc[void __Tango_LogError(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_LogError(int)] Params End
CALLFUNC 0.0147; UsrFunc[void __Tango_LogError(int)] Call
POP D4
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_LogError(int, untyped)] Body End
PUSHARGSV 0 0.0002; Func[void Tango_SaveMenuState(int[])] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0002
REF_INC 0.0002
SETR D2 GD2; InlineFunc[int SizeOfArray(untyped[])] Params
ARRAYSIZE D2; InlineFunc[int SizeOfArray(untyped[])] Body
SUBV D2 14
STORE D2 0.0001
LOAD D2 0.0002; InlineFunc[int SizeOfArray(int[])] Params AND if() #385 Test
ARRAYSIZE D2; InlineFunc[int SizeOfArray(int[])] Body
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1493 ==; Test 'if'
PUSHR D4; if() #385 Body Start
PUSHV 405; UsrFunc[void __Tango_LogError(int, untyped, untyped)] Params Start
LOAD D2 0.0002; InlineFunc[int SizeOfArray(int[])] Params
ARRAYSIZE D2; InlineFunc[int SizeOfArray(int[])] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped, untyped)] Params End
CALLFUNC 0.0448; UsrFunc[void __Tango_LogError(int, untyped, untyped)] Call
POP D4
GOTO 1551; return (Void) AND if() #385 Body End
STOREV 0 0; for() #113 setup
LOAD D2 0; for() #113 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1520 ==; for() #113 TestFail?
SETR D2 GD2; for() #113 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 14
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #113 Body End
LOAD D2 0; for() #113 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1494; for() #113 End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1554; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1564; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 14 D2
SETV D2 0
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 17 D2
REF_REMOVE 0.0002
POPARGS D5 0.0003
RETURNFUNC; Func[void Tango_SaveMenuState(int[])] Body End
SETR D4 SP2; Func[int __Tango_GetMenuChoiceX(int)] Body Start
SETR D2 GD2; return Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetMenuChoiceX(int)] Body End
SETR D4 SP2; Func[int __Tango_GetMenuChoiceY(int)] Body Start
SETR D2 GD2; return Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetMenuChoiceY(int)] Body End
PUSHV 0; Func[void Tango_ScrollSlot(int, int)] Body Start
SETR D4 SP2
LOAD D2 0.0002
MULTV D2 24
STORE D2 0
SETR D2 GD5; if() #387 Test
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1694 !=; Test 'if' AND return (Void) AND if() #387 Body
LOAD D2 0.0001; if() #96 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1618 ==; Test 'if'
LOAD D2 0.0001; if() #388 Test AND if() #96 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1657 ==; Test 'if'
SETR D2 GD5; if() #388 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
SUBV2 0 D2
STORE D2 0.0001; if() #388 Body End
GOTO 1657; if() #96 Body End
LOAD D2 0.0001; if() #389 Test AND if() #96 Else Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 1657 ==; Test 'if'
SETR D2 GD5; if() #389 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0001; if() #389 Body End
SETR D2 GD5; if() #96 Else End
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD2; if() #390 Test
PUSHR D2
POP D0
READPODARRAYV D2 24
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1694 ==; Test 'if'
PUSHR D4; if() #390 Body Start
PUSHV 0; UsrFunc[void __Tango_ShiftMenu(int, int)] Params Start
LOAD D2 0.0001
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_ShiftMenu(int, int)] Params End
CALLFUNC 0.1696; UsrFunc[void __Tango_ShiftMenu(int, int)] Call
POP D4; if() #390 Body End
POPARGS D5 0.0003
RETURNFUNC; Func[void Tango_ScrollSlot(int, int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ShiftMenu(int, int)] Body Start
SETR D4 SP2
STOREV 34 0.0001
STOREV 0 0; for() #153 setup
LOAD D2 0; for() #153 LoopTest
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1754 ==; for() #153 TestFail?
SETR D2 GD2; for() #153 Body Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
ADDV D2 3
STORE D2 0.0001; for() #153 Body End
LOAD D2 0; for() #153 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1700; for() #153 End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_ShiftMenu(int, int)] Body End
SETR D4 SP2; Func[void Tango_SetCustomVar(int, int)] Body Start
LOAD D2 0.0001; if() #97 Test
COMPAREV D2 0.0055
GOTOCMP 1765 <
LOAD D2 0.0001
COMPAREV D2 0.0062
GOTOCMP 1765 >
SETV D2 1
GOTO 1766
SETV D2 0
COMPAREV D2 0
GOTOCMP 1780 ==; Test 'if'
LOAD D2 0; if() #97 Body Start
PUSHR D2
SETR D2 GD1
PUSHR D2
LOAD D2 0.0001
SUBV D2 0.0055
MULTV D2 10000
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 1785; if() #97 Body End
PUSHR D4; if() #97 Else Start
LOAD D2 0.0001; UsrFunc[void Tango_LogUndefinedVariable(int)] Params Start
PUSHR D2; UsrFunc[void Tango_LogUndefinedVariable(int)] Params End
CALLFUNC 0.1226; UsrFunc[void Tango_LogUndefinedVariable(int)] Call
POP D4; if() #97 Else End
POPARGS D5 0.0002
RETURNFUNC; Func[void Tango_SetCustomVar(int, int)] Body End
SETR D4 SP2; Func[void Tango_SetMenuCursorPosition(int)] Body Start
LOAD D2 0
LSHIFTV D2 0
STORE D2 0
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
PUSHR D4
LOAD D2 0; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params End
CALLFUNC 0.0192; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Call
PEEK D4
LOAD D2 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0283; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4
POP D5
RETURNFUNC; Func[void Tango_SetMenuCursorPosition(int)] Body End
PUSHV 0; Func[void Tango_Start()] Body Start
SETR D4 SP2
PUSHR D4
CALLFUNC 0.1839; UsrFunc[void __Tango_ValidateSavedVersion()] Call
PEEK D4
CALLFUNC 0.1346; UsrFunc[void Tango_InitializeMenu()] Call
POP D4
STOREV 0 0; for() #114 setup
LOAD D2 0; for() #114 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1831 ==; for() #114 TestFail?
PUSHR D4; for() #114 Body Start
LOAD D2 0; UsrFunc[void Tango_ClearSlot(int)] Params Start
PUSHR D2; UsrFunc[void Tango_ClearSlot(int)] Params End
CALLFUNC 0.0682; UsrFunc[void Tango_ClearSlot(int)] Call
POP D4; for() #114 Body End
LOAD D2 0; for() #114 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1817; for() #114 End
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 11 D2
POP D5
RETURNFUNC; Func[void Tango_Start()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ValidateSavedVersion()] Body Start
SETR D4 SP2
SETR D2 GD2; if() #333 Test
PUSHR D2
POP D0
READPODARRAYV D2 7
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1856 ==; Test 'if'
SETV D2 3; if() #333 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 7 D2
GOTO 1886; if() #333 Body End
SETR D2 GD2; if() #626 Test AND if() #333 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 7
COMPAREV D2 3
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1886 ==; Test 'if'
ALLOCATEMEMV D2 81 0; if() #626 Body Start
WRITEPODSTRING D2 "tango.zh error: The saved data is invalid for the current version of this quest."
STORE_OBJECT D2 0.0001
ALLOCATEMEMV D2 70 0
WRITEPODSTRING D2 "Serious errors are likely to occur. Begin a new game to correct this."
STORE_OBJECT D2 0
LOAD D2 0.0001; InlineFunc[void TraceS(char32[])] Params Start
SETR D3 D2; InlineFunc[void TraceS(char32[])] Params End
TRACE6 D3; InlineFunc[void TraceS(char32[])] Body
TRACE3; InlineFunc[void TraceNL()] Body
LOAD D2 0; InlineFunc[void TraceS(char32[])] Params Start
SETR D3 D2; InlineFunc[void TraceS(char32[])] Params End
TRACE6 D3; InlineFunc[void TraceS(char32[])] Body
TRACE3; InlineFunc[void TraceNL()] Body
SETV D2 1800
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
REF_REMOVE 0.0001
REF_REMOVE 0; if() #626 Body End
POPARGS D5 0.0002; if() #333 Else End
RETURNFUNC; Func[void __Tango_ValidateSavedVersion()] Body End
PUSHARGSV 0 0.0002; Func[void Tango_SuspendSlot(int)] Body Start
SETR D4 SP2
LOAD D2 0.0002
MULTV D2 24
ADDV D2 1
STORE D2 0.0001
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #399 Test
COMPAREV D2 0
GOTOCMP 1908 ==
LOAD D2 0
COMPAREV D2 4
GOTOCMP 1908 ==
SETV D2 0
GOTO 1909
SETV D2 1
COMPAREV D2 0
GOTOCMP 1922 !=; Test 'if' AND return (Void) AND if() #399 Body
LOAD D2 0
MODV D2 100
ADDV D2 100
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void Tango_SuspendSlot(int)] Body End
PUSHARGSV 0 0.0004; Func[bool __Tango_FindSyncingStrings(int)] Body Start
SETR D4 SP2
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0 0; for() #132 setup
LOAD D2 0; for() #132 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1988 ==; for() #132 TestFail?
LOAD D2 0; for() #132 Body Start
MULTV D2 24
ADDV D2 1
STORE D2 0.0003
SETR D2 GD5; if() #449 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 6
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1984 ==; Test 'if'
LOAD D2 0; if() #449 Body Start
MULTV D2 24
ADDV D2 2
STORE D2 0.0002
SETR D2 GD5; if() #450 Test
PUSHR D2
LOAD D2 0.0002
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1984 ==; Test 'if'
SETV D2 1; if() #450 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0003
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1
STORE D2 0.0001; if() #450 Body End
LOAD D2 0; if() #449 Body End AND for() #132 Body End AND for() #132 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1930; for() #132 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0005; return End
RETURNFUNC; Func[bool __Tango_FindSyncingStrings(int)] Body End
PUSHARGSV 0 0.0002; Func[void Tango_Update1()] Body Start
SETR D4 SP2
STOREV 0 0.0001
PUSHV 6; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
PUSHR D4
CALLFUNC 0.2142; UsrFunc[void __Tango_CheckScreenChange()] Call
PEEK D4
CALLFUNC 0.1025; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2009 ==; Test 'if'
PUSHR D4; if() #401 Body Start
CALLFUNC 0.2211; UsrFunc[void __Tango_UpdateMenu()] Call
POP D4
SETV D2 1
STORE D2 0.0001; if() #401 Body End
SETR D2 GD2; if() #402 Test
PUSHR D2
POP D0
READPODARRAYV D2 8
ANDV D2 8
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2037 ==; Test 'if'
PUSHR D4; if() #98 Test AND if() #402 Body Start
CALLFUNC 0.2363; UsrFunc[bool __Tango_InputMenu()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2027 ==; Test 'if'
PUSHR D4; if() #98 Body Start
CALLFUNC 0.0170; UsrFunc[void __Tango_UnpressMenu()] Call
POP D4
GOTO 2037; if() #98 Body End
SETR D2 GD2; if() #98 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ANDV D2 -9
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2; if() #98 Else End
STOREV 0 0; if() #402 Body End AND for() #115 setup
LOAD D2 0; for() #115 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 2054 ==; for() #115 TestFail?
PUSHR D4; for() #115 Body Start
LOAD D2 0; UsrFunc[void __Tango_SetCurrentSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_SetCurrentSlot(int)] Params End
CALLFUNC 0.2374; UsrFunc[void __Tango_SetCurrentSlot(int)] Call
PEEK D4
CALLFUNC 0.2471; UsrFunc[void __Tango_UpdateCurrentSlot()] Call
POP D4; for() #115 Body End
LOAD D2 0; for() #115 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 2038; for() #115 End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
STORE D2 0
LOAD D2 0; if() #403 Test
ANDV D2 1
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2077 ==; Test 'if'
PUSHR D4; if() #99 Test AND if() #403 Body Start
CALLFUNC 0.2755; UsrFunc[bool __Tango_InputSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2074 ==; Test 'if'
PUSHR D4; if() #99 Body Start
CALLFUNC 0.2758; UsrFunc[void __Tango_UnpressSpeedup()] Call
POP D4
GOTO 2077; if() #99 Body End
LOAD D2 0; if() #99 Else Start
ANDV D2 -2
STORE D2 0; if() #99 Else End
LOAD D2 0; if() #403 Body End AND if() #404 Test
ANDV D2 2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2095 ==; Test 'if'
PUSHR D4; if() #100 Test AND if() #404 Body Start
CALLFUNC 0.2770; UsrFunc[bool __Tango_InputSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2092 ==; Test 'if'
PUSHR D4; if() #100 Body Start
CALLFUNC 0.2773; UsrFunc[void __Tango_UnpressSuperSpeed()] Call
POP D4
GOTO 2095; if() #100 Body End
LOAD D2 0; if() #100 Else Start
ANDV D2 -3
STORE D2 0; if() #100 Else End
LOAD D2 0; if() #404 Body End AND if() #405 Test
ANDV D2 4
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2113 ==; Test 'if'
PUSHR D4; if() #101 Test AND if() #405 Body Start
CALLFUNC 0.2785; UsrFunc[bool __Tango_InputAdvance()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2110 ==; Test 'if'
PUSHR D4; if() #101 Body Start
CALLFUNC 0.2788; UsrFunc[void __Tango_UnpressAdvance()] Call
POP D4
GOTO 2113; if() #101 Body End
LOAD D2 0; if() #101 Else Start
ANDV D2 -5
STORE D2 0; if() #101 Else End
LOAD D2 0; if() #405 Body End AND if() #406 Test
ANDV D2 16
COMPAREV D2 0
GOTOCMP 2122 !=
LOAD D2 0.0001
COMPAREV D2 0
GOTOCMP 2122 !=
SETV D2 0
GOTO 2123
SETV D2 1
COMPAREV D2 0
GOTOCMP 2131 ==; Test 'if'
PUSHR D4; if() #406 Body Start
CALLFUNC 0.2800; UsrFunc[void __Tango_UnpressAll()] Call
POP D4
LOAD D2 0
ANDV D2 -17
STORE D2 0; if() #406 Body End
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
PUSHV -1; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
POPARGS D5 0.0002
RETURNFUNC; Func[void Tango_Update1()] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_CheckScreenChange()] Body Start
SETR D4 SP2
SETR D2 CURDMAP
LSHIFTV D2 8
PUSHR D2
SETR D2 CURDSCR
POP D3
ADDR D2 D3
STORE D2 0.0003
SETR D2 GD2; if() #429 Test
PUSHR D2
POP D0
READPODARRAYV D2 9
PUSHR D2
LOAD D2 0.0003
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2209 ==; Test 'if'
LOAD D2 0.0003; if() #429 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 9 D2
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0 0; for() #127 setup
LOAD D2 0; for() #127 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 2209 ==; for() #127 TestFail?
PUSHR D4; for() #127 Body Start
LOAD D2 0; UsrFunc[int __Tango_GetSlotState(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetSlotState(int)] Params End
CALLFUNC 0.3890; UsrFunc[int __Tango_GetSlotState(int)] Call
POP D4
STORE D2 0.0002
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetSlotFlags(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetSlotFlags(int)] Params End
CALLFUNC 0.3903; UsrFunc[int __Tango_GetSlotFlags(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0001; if() #430 Test
ANDV D2 8
COMPAREV D2 0
GOTOCMP 2197 ==
LOAD D2 0.0002
COMPAREV D2 4
GOTOCMP 2197 ==
SETV D2 0
GOTO 2198
SETV D2 1
COMPAREV D2 0
GOTOCMP 2205 ==; Test 'if'
PUSHR D4; if() #430 Body Start
LOAD D2 0; UsrFunc[void Tango_ClearSlot(int)] Params Start
PUSHR D2; UsrFunc[void Tango_ClearSlot(int)] Params End
CALLFUNC 0.0682; UsrFunc[void Tango_ClearSlot(int)] Call
POP D4; if() #430 Body End
LOAD D2 0; for() #127 Body End AND for() #127 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 2171; for() #127 End
POPARGS D5 0.0004; if() #429 Body End
RETURNFUNC; Func[void __Tango_CheckScreenChange()] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_UpdateMenu()] Body Start
SETR D4 SP2
SETR D2 GD2; if() #623 Test
PUSHR D2
POP D0
READPODARRAYV D2 10
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2227 ==; Test 'if'
SETV D2 0; if() #623 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2; if() #623 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0.0002
STOREV 0 0.0001
PUSHR D4
CALLFUNC 0.1168; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
STORE D2 0
SETR D2 INPUTPRESSUP; if() #324 Test
COMPAREV D2 0
GOTOCMP 2246 ==; Test 'if'
PUSHR D4; if() #324 Body Start
PUSHV 0; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6347; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2275; if() #324 Body End
SETR D2 INPUTPRESSDOWN; if() #325 Test AND if() #324 Else Start
COMPAREV D2 0
GOTOCMP 2255 ==; Test 'if'
PUSHR D4; if() #325 Body Start
PUSHV 1; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6347; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2275; if() #325 Body End
SETR D2 INPUTPRESSLEFT; if() #326 Test AND if() #325 Else Start
COMPAREV D2 0
GOTOCMP 2264 ==; Test 'if'
PUSHR D4; if() #326 Body Start
PUSHV 2; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6347; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2275; if() #326 Body End
SETR D2 INPUTPRESSRIGHT; if() #327 Test AND if() #326 Else Start
COMPAREV D2 0
GOTOCMP 2273 ==; Test 'if'
PUSHR D4; if() #327 Body Start
PUSHV 3; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6347; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2275; if() #327 Body End
LOAD D2 0.0002; if() #327 Else Start
STORE D2 0.0001; if() #327 Else End
PUSHR D4; if() #326 Else End AND if() #325 Else End AND if() #324 Else End AND if() #328 Test
CALLFUNC 0.9393; UsrFunc[bool __Tango_PressMenuSelect()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2287 ==
PUSHR D4
CALLFUNC 0.1168; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2287 ==
SETV D2 1
GOTO 2288
SETV D2 0
COMPAREV D2 0
GOTOCMP 2296 ==; Test 'if'
PUSHR D4; if() #328 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_MenuSelect(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_MenuSelect(int)] Params End
CALLFUNC 0.7776; UsrFunc[void __Tango_MenuSelect(int)] Call
POP D4
GOTO 2361; if() #328 Body End
SETR D2 GD2; if() #329 Test AND if() #328 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 14
ANDV D2 1
COMPAREV D2 0
GOTOCMP 2310 ==
PUSHR D4
CALLFUNC 0.9390; UsrFunc[bool __Tango_PressMenuCancel()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2310 ==
SETV D2 1
GOTO 2311
SETV D2 0
COMPAREV D2 0
GOTOCMP 2317 ==; Test 'if'
PUSHR D4; if() #329 Body Start
CALLFUNC 0.1033; UsrFunc[void __Tango_MenuCancel()] Call
POP D4
GOTO 2361; if() #329 Body End
LOAD D2 0.0001; if() #330 Test AND if() #329 Else Start
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2358 ==; Test 'if'
PUSHR D4; if() #330 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params End
CALLFUNC 0.0192; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Call
POP D4
SETR D2 GD2; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 20; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
LOAD D2 0.0001
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
LOAD D2 0; if() #331 Test
COMPAREV D2 0
GOTOCMP 2351 ==; Test 'if'
PUSHR D4; if() #331 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0283; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4
GOTO 2361; if() #331 Body End
PUSHR D4; if() #331 Else Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0283; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4; if() #331 Else End
GOTO 2361; if() #330 Body End
PUSHR D4; if() #330 Else Start
CALLFUNC 1.2541; UsrFunc[void __Tango_UpdateCursorMovement()] Call
POP D4; if() #330 Else End
POPARGS D5 0.0003; if() #329 Else End AND if() #328 Else End
RETURNFUNC; Func[void __Tango_UpdateMenu()] Body End
SETR D4 SP2; Func[bool __Tango_InputMenu()] Body Start
SETR D2 INPUTA; return Start
COMPAREV D2 0
GOTOCMP 2372 !=
SETR D2 INPUTB
COMPAREV D2 0
GOTOCMP 2372 !=
SETV D2 0
GOTO 2373
SETV D2 1
RETURNFUNC; return End AND Func[bool __Tango_InputMenu()] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_SetCurrentSlot(int)] Body Start
SETR D4 SP2
LOAD D2 0.0004
MULTV D2 7
STORE D2 0.0003
LOAD D2 0.0004
MULTV D2 24
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001
MULTV D2 48
STORE D2 0
LOAD D2 0.0004
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 2 D2
LOAD D2 0.0003
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 3 D2
LOAD D2 0.0002
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 4 D2
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 5 D2
LOAD D2 0.0001; if() #295 Test
COMPAREV D2 -10
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2463 ==; Test 'if'
SETR D2 GD3; if() #295 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 6 D2
GOTO 2469; if() #295 Body End
SETV D2 -10; if() #295 Else Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 6 D2; if() #295 Else End
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_SetCurrentSlot(int)] Body End
PUSHARGSV 0 0.0005; Func[void __Tango_UpdateCurrentSlot()] Body Start
SETR D4 SP2
SETR D2 GD5
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
LOAD D2 0.0004; if() #311 Test
COMPAREV D2 0
GOTOCMP 2491 ==
LOAD D2 0.0004
COMPAREV D2 4
GOTOCMP 2491 ==
SETV D2 0
GOTO 2492
SETV D2 1
COMPAREV D2 0
GOTOCMP 2496 ==; Test 'if'
GOTO 2753; return (Void) AND if() #311 Body Start
GOTO 2515; if() #311 Body End
LOAD D2 0.0004; if() #605 Test AND if() #311 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2515 ==; Test 'if'
SETV D2 1; if() #605 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 2753; return (Void) AND if() #605 Body End
PUSHR D4; if() #311 Else End
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0003
STOREV 0 0.0002
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
ADDV D2 19
STORE D2 0.0001
LOAD D2 0.0003; if() #606 Test
ANDV D2 1
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2574 ==; Test 'if'
SETR D2 GD2; if() #606 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
SETR D2 GD5; if() #312 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2567 ==; Test 'if'
PUSHR D4; unless() #607 Test AND if() #312 Body Start
CALLFUNC 0.2755; UsrFunc[bool __Tango_InputSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2574 !=; Test 'unless'
SETV D2 0; unless() #607 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; unless() #607 Body End
GOTO 2574; if() #312 Body End
PUSHR D4; if() #608 Test AND if() #312 Else Start
CALLFUNC 0.2755; UsrFunc[bool __Tango_InputSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2574 ==; Test 'if'
SETV D2 1; if() #608 Body Start
STORE D2 0.0002; if() #608 Body End
LOAD D2 0.0003; if() #312 Else End AND if() #606 Body End AND if() #609 Test
ANDV D2 2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2621 ==; Test 'if'
SETR D2 GD2; if() #609 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
SETR D2 GD5; if() #313 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2614 ==; Test 'if'
PUSHR D4; unless() #610 Test AND if() #313 Body Start
CALLFUNC 0.2770; UsrFunc[bool __Tango_InputSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2621 !=; Test 'unless'
SETV D2 0; unless() #610 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; unless() #610 Body End
GOTO 2621; if() #313 Body End
PUSHR D4; if() #611 Test AND if() #313 Else Start
CALLFUNC 0.2770; UsrFunc[bool __Tango_InputSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2621 ==; Test 'if'
SETV D2 2; if() #611 Body Start
STORE D2 0.0002; if() #611 Body End
LOAD D2 0.0003; if() #313 Else End AND if() #609 Body End AND if() #612 Test
ANDV D2 64
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2629 ==; Test 'if'
SETV D2 2; if() #612 Body Start
STORE D2 0.0002; if() #612 Body End
LOAD D2 0.0003; if() #613 Test
ANDV D2 16
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2645 ==; Test 'if'
SETR D2 GD2; if() #613 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 16
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2; if() #613 Body End
LOAD D2 0.0004; if() #614 Test
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2719 ==; Test 'if'
PUSHR D4; if() #614 Body Start
PUSHV 2; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
PUSHR D4; if() #314 Test
LOAD D2 0; UsrFunc[bool __Tango_PressAdvance(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_PressAdvance(int)] Params End
CALLFUNC 0.9379; UsrFunc[bool __Tango_PressAdvance(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 2712 ==; Test 'if'
SETV D2 1; if() #314 Body Start
STORE D2 0.0004
PUSHR D4
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHARGSV 1 0.0002; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start AND UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
PUSHR D4; if() #315 Test
CALLFUNC 0.0541; UsrFunc[bool __Tango_PressSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2697 ==; Test 'if'
SETV D2 1; if() #315 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 2719; if() #315 Body End
PUSHR D4; if() #615 Test AND if() #315 Else Start
CALLFUNC 0.0544; UsrFunc[bool __Tango_PressSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2719 ==; Test 'if'
SETV D2 2; if() #615 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #615 Body End
GOTO 2719; if() #315 Else End AND if() #314 Body End
PUSHR D4; if() #314 Else Start
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0
ADDV D2 1
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4; if() #314 Else End
LOAD D2 0.0004; if() #614 Body End AND if() #316 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2730 ==; Test 'if'
PUSHR D4; if() #316 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_UpdateActiveSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_UpdateActiveSlot(int)] Params End
CALLFUNC 1.2182; UsrFunc[void __Tango_UpdateActiveSlot(int)] Call
POP D4
GOTO 2753; if() #316 Body End
LOAD D2 0.0004; if() #317 Test AND if() #316 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2741 ==; Test 'if'
PUSHR D4; if() #317 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_UpdateAdvancing(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_UpdateAdvancing(int)] Params End
CALLFUNC 1.2254; UsrFunc[void __Tango_UpdateAdvancing(int)] Call
POP D4
GOTO 2753; if() #317 Body End
LOAD D2 0.0004; if() #616 Test AND if() #317 Else Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2753 ==; Test 'if'
PUSHR D4; if() #616 Body Start
LOAD D2 0.0003; UsrFunc[void __Tango_UpdateFinishedSlot(int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_UpdateFinishedSlot(int, int)] Params End
CALLFUNC 1.2391; UsrFunc[void __Tango_UpdateFinishedSlot(int, int)] Call
POP D4; if() #616 Body End
POPARGS D5 0.0005; if() #317 Else End AND if() #316 Else End
RETURNFUNC; Func[void __Tango_UpdateCurrentSlot()] Body End
SETR D4 SP2; Func[bool __Tango_InputSpeedup()] Body Start
SETR D2 INPUTA; return Start
RETURNFUNC; return End AND Func[bool __Tango_InputSpeedup()] Body End
SETR D4 SP2; Func[void __Tango_UnpressSpeedup()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
RETURNFUNC; Func[void __Tango_UnpressSpeedup()] Body End
SETR D4 SP2; Func[bool __Tango_InputSuperSpeed()] Body Start
SETR D2 INPUTB; return Start
RETURNFUNC; return End AND Func[bool __Tango_InputSuperSpeed()] Body End
SETR D4 SP2; Func[void __Tango_UnpressSuperSpeed()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSB D2
RETURNFUNC; Func[void __Tango_UnpressSuperSpeed()] Body End
SETR D4 SP2; Func[bool __Tango_InputAdvance()] Body Start
SETR D2 INPUTA; return Start
RETURNFUNC; return End AND Func[bool __Tango_InputAdvance()] Body End
SETR D4 SP2; Func[void __Tango_UnpressAdvance()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
RETURNFUNC; Func[void __Tango_UnpressAdvance()] Body End
SETR D4 SP2; Func[void __Tango_UnpressAll()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTUP D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSUP D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTDOWN D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSDOWN D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTLEFT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSLEFT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTRIGHT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSRIGHT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTL D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSL D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTR D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSR D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX1 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX1 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX2 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX2 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX3 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX3 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX4 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX4 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTSTART D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSSTART D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTMAP D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSMAP D2
RETURNFUNC; Func[void __Tango_UnpressAll()] Body End
PUSHARGSV 0 0.0003; Func[void Tango_Update2()] Body Start
SETR D4 SP2
PUSHV -1; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
STOREV 0 0.0002
STOREV 0 0.0001; for() #116 setup
LOAD D2 0.0001; for() #116 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 2981 ==; for() #116 TestFail?
PUSHR D4; for() #116 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetCurrentSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_SetCurrentSlot(int)] Params End
CALLFUNC 0.2374; UsrFunc[void __Tango_SetCurrentSlot(int)] Call
PEEK D4
PUSHV 1; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0002
LOAD D2 0.0002; if() #407 Test
COMPAREV D2 0
GOTOCMP 2971 ==
LOAD D2 0.0002
COMPAREV D2 4
GOTOCMP 2971 ==
SETV D2 1
GOTO 2972
SETV D2 0
COMPAREV D2 0
GOTOCMP 2977 ==; Test 'if'
PUSHR D4; if() #407 Body Start
CALLFUNC 0.3048; UsrFunc[void __Tango_DrawToScreen()] Call
POP D4; if() #407 Body End
LOAD D2 0.0001; for() #116 Body End AND for() #116 LoopIncrement
ADDV D2 1
STORE D2 0.0001
GOTO 2949; for() #116 End
PUSHR D4; if() #408 Test
CALLFUNC 0.1025; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2994 ==
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
COMPAREV D2 0
GOTOCMP 2994 >=
SETV D2 1
GOTO 2995
SETV D2 0
COMPAREV D2 0
GOTOCMP 3000 ==; Test 'if'
PUSHR D4; if() #408 Body Start
CALLFUNC 0.3215; UsrFunc[void __Tango_DrawMenuCursor()] Call
POP D4; if() #408 Body End
SETR D2 GD2; if() #409 Test
PUSHR D2
POP D0
READPODARRAYV D2 13
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 3031 ==; Test 'if'
ALLOCATEMEMV D2 22 0; if() #409 Body Start
WRITEPODSTRING D2 "tango.zh error logged"
STORE_OBJECT D2 0
PUSHV 6; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Params Start
PUSHARGSV 0 0.0003
PUSHV 1
PUSHARGSV 0 0.0002
LOAD D2 0
PUSHR D2
PUSHV 128; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Params End
DRAWSTRINGR; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Body Start
POPARGS D5 0.0009; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 13
SUBV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
REF_REMOVE 0; if() #409 Body End
POPARGS D5 0.0003
RETURNFUNC; Func[void Tango_Update2()] Body End
SETR D4 SP2; Func[int __Tango_GetCurrSlotData(int)] Body Start
SETR D2 GD5; return Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrSlotData(int)] Body End
PUSHARGSV 0 0.0006; Func[void __Tango_DrawToScreen()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0005
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0004
SETR D2 GD3
PUSHR D2
LOAD D2 0.0004
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD5
PUSHR D2
LOAD D2 0.0005
ADDV D2 6
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0005
ADDV D2 7
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
PUSHR D4
CALLFUNC 0.1025; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 3099 ==
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
POP D3
COMPARER D3 D2
GOTOCMP 3099 !=
SETV D2 1
GOTO 3100
SETV D2 0
STORE D2 0
LOAD D2 0.0003; if() #130 Test
COMPAREV D2 1
GOTOCMP 3109 ==
LOAD D2 0.0003
COMPAREV D2 2
GOTOCMP 3109 ==
SETV D2 0
GOTO 3110
SETV D2 1
COMPAREV D2 0
GOTOCMP 3122 ==; Test 'if'
PUSHR D4; if() #130 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawColorBackdrop(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawColorBackdrop(int, int, int)] Params End
CALLFUNC 0.4032; UsrFunc[void __Tango_DrawColorBackdrop(int, int, int)] Call
POP D4
GOTO 3183; if() #130 Body End
LOAD D2 0.0003; if() #131 Test AND if() #130 Else Start
COMPAREV D2 3
GOTOCMP 3130 ==
LOAD D2 0.0003
COMPAREV D2 4
GOTOCMP 3130 ==
SETV D2 0
GOTO 3131
SETV D2 1
COMPAREV D2 0
GOTOCMP 3143 ==; Test 'if'
PUSHR D4; if() #131 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawTileBackdrop(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawTileBackdrop(int, int, int)] Params End
CALLFUNC 0.5045; UsrFunc[void __Tango_DrawTileBackdrop(int, int, int)] Call
POP D4
GOTO 3183; if() #131 Body End
LOAD D2 0.0003; if() #132 Test AND if() #131 Else Start
COMPAREV D2 5
GOTOCMP 3151 ==
LOAD D2 0.0003
COMPAREV D2 6
GOTOCMP 3151 ==
SETV D2 0
GOTO 3152
SETV D2 1
COMPAREV D2 0
GOTOCMP 3164 ==; Test 'if'
PUSHR D4; if() #132 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawComboBackdrop(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawComboBackdrop(int, int, int)] Params End
CALLFUNC 0.4106; UsrFunc[void __Tango_DrawComboBackdrop(int, int, int)] Call
POP D4
GOTO 3183; if() #132 Body End
LOAD D2 0.0003; if() #443 Test AND if() #132 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3183 ==; Test 'if'
PUSHR D4; if() #443 Body Start
SETR D2 GD3; UsrFunc[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Params End
CALLFUNC 0.4165; UsrFunc[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Call
POP D4; if() #443 Body End
LOAD D2 0; if() #132 Else End AND if() #131 Else End AND if() #130 Else End AND if() #444 Test
COMPAREV D2 0
GOTOCMP 3189 ==; Test 'if'
PUSHR D4; if() #444 Body Start
CALLFUNC 0.3215; UsrFunc[void __Tango_DrawMenuCursor()] Call
POP D4; if() #444 Body End
PUSHR D4
LOAD D2 0.0005; UsrFunc[void __Tango_TransferText(int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_TransferText(int, int, int, int)] Params End
CALLFUNC 0.5104; UsrFunc[void __Tango_TransferText(int, int, int, int)] Call
POP D4
LOAD D2 0; if() #445 Test
COMPAREV D2 0
GOTOCMP 3210 ==; Test 'if'
PUSHR D4; if() #445 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_DrawMenuScrollIndicators(int, int)] Params Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawMenuScrollIndicators(int, int)] Params End
CALLFUNC 0.4736; UsrFunc[void __Tango_DrawMenuScrollIndicators(int, int)] Call
POP D4; if() #445 Body End
PUSHR D4
CALLFUNC 0.4915; UsrFunc[void __Tango_DrawMoreIcon()] Call
POP D4
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_DrawToScreen()] Body End
SETR D4 SP2; Func[void __Tango_DrawMenuCursor()] Body Start
PUSHR D4; unless() #436 Test
CALLFUNC 0.1168; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
COMPAREV D2 0
GOTOCMP 3258 ==; Test 'unless' AND return (Void) AND unless() #436 Body
PUSHV 6; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 27
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 28
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 16
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 18
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 19
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 17
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0005
PUSHV 1
PUSHV 128; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBOR; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0016; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
RETURNFUNC; Func[void __Tango_DrawMenuCursor()] Body End
PUSHV 0; Func[int __Tango_AddPadding(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
LOAD D2 0.0003; if() #114 Test
COMPAREV D2 29.0329
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3270 ==; Test 'if'
SETV D2 12; if() #114 Body Start
STORE D2 0
GOTO 3293; if() #114 Body End
LOAD D2 0.0003; if() #115 Test AND if() #114 Else Start
COMPAREV D2 1615.1672
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3278 ==; Test 'if'
SETV D2 8; if() #115 Body Start
STORE D2 0
GOTO 3293; if() #115 Body End
LOAD D2 0.0003; if() #116 Test AND if() #115 Else Start
COMPAREV D2 208.0657
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3286 ==; Test 'if'
SETV D2 9; if() #116 Body Start
STORE D2 0
GOTO 3293; if() #116 Body End
LOAD D2 0.0003; if() #426 Test AND if() #116 Else Start
COMPAREV D2 37.4073
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3293 ==; Test 'if'
SETV D2 16; if() #426 Body Start
STORE D2 0; if() #426 Body End
LOAD D2 0; if() #116 Else End AND if() #115 Else End AND if() #114 Else End
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0.0002
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0
LOAD D2 0; for() #124 LoopTest
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 3323 ==; for() #124 TestFail?
PUSHR D4; for() #124 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -1; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001
ADDV D2 1
STORE D2 0.0001; for() #124 Body End
LOAD D2 0; for() #124 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 3305; for() #124 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0004; return End
RETURNFUNC; Func[int __Tango_AddPadding(int, int, int)] Body End
SETR D4 SP2; Func[void __Tango_SetChar(int, int)] Body Start
LOAD D2 0.0001; if() #591 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 3343 ==; Test 'if'
PUSHR D4; if() #591 Body Start
PUSHV 103; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0147; UsrFunc[void __Tango_LogError(int)] Call
POP D4
GOTO 3352; return (Void) AND if() #591 Body End
LOAD D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_SetChar(int, int)] Body End
PUSHV 0; Func[void __Tango_AppendMessage(int, int)] Body Start
SETR D4 SP2
SETR D2 GD4; until() #5 Test
PUSHR D2
LOAD D2 0.0002
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
GOTOCMP 3377 !=
PUSHR D4
SETR D2 GD4; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params Start
PUSHR D2
LOAD D2 0.0002
SUBV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params End
CALLFUNC 0.3402; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 3377 !=
SETV D2 1
GOTO 3378
SETV D2 0
COMPAREV D2 0
GOTOCMP 3384 !=; Test 'until'
LOAD D2 0.0002; until() #5 Body Start
ADDV D2 1
STORE D2 0.0002; until() #5 Body End
GOTO 3356; until() #5 End
ALLOCATEMEMV D2 256 0
STORE_OBJECT D2 0
LOAD D2 0.0001; InlineFunc[void Game::GetMessage(int, char32[])] Params Start
PUSHR D2
LOAD D2 0; InlineFunc[void Game::GetMessage(int, char32[])] Params End
POP D3; InlineFunc[void Game::GetMessage(int, char32[])] Body Start
GETMESSAGE D3 D2; InlineFunc[void Game::GetMessage(int, char32[])] Body End
PUSHR D4
LOAD D2 0; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params Start
PUSHR D2
PUSHV 0
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params End
CALLFUNC 0.3441; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Call
POP D4
REF_REMOVE 0
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_AppendMessage(int, int)] Body End
SETR D4 SP2; Func[bool __Tango_IsSpecialDataMarker(int)] Body Start
LOAD D2 0; if() #486 Test
COMPAREV D2 -300
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3410 ==; Test 'if'
SETV D2 1; return Start AND if() #486 Body Start
GOTO 3439; return End AND if() #486 Body End
LOAD D2 0; if() #487 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3417 ==; Test 'if'
SETV D2 1; return Start AND if() #487 Body Start
GOTO 3439; return End AND if() #487 Body End
LOAD D2 0; if() #488 Test
COMPAREV D2 -100
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3424 ==; Test 'if'
SETV D2 1; return Start AND if() #488 Body Start
GOTO 3439; return End AND if() #488 Body End
LOAD D2 0; if() #489 Test
COMPAREV D2 -200
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3431 ==; Test 'if'
SETV D2 1; return Start AND if() #489 Body Start
GOTO 3439; return End AND if() #489 Body End
LOAD D2 0; if() #490 Test
COMPAREV D2 -600
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3438 ==; Test 'if'
SETV D2 1; return Start AND if() #490 Body Start
GOTO 3439; return End AND if() #490 Body End
SETV D2 0; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_IsSpecialDataMarker(int)] Body End
PUSHARGSV 0 0.0005; Func[void __Tango_LoadIntoBuffer(char32[], int, int)] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0007
REF_INC 0.0007
PUSHR D4
LOAD D2 0.0007; UsrFunc[int __Tango_GetStringEnd(char32[])] Params Start
PUSHR D2; UsrFunc[int __Tango_GetStringEnd(char32[])] Params End
CALLFUNC 0.6841; UsrFunc[int __Tango_GetStringEnd(char32[])] Call
POP D4
STORE D2 0.0004
ALLOCATEMEMV D2 2 0
STORE_OBJECT D2 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0006; while() #10 Test
PUSHR D2
LOAD D2 0.0004
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 3734 ==; Test 'while'
LOAD D2 0.0007; while() #10 Body Start
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; if() #177 Test
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 3487 ==; Test 'if'
LOAD D2 0.0007; if() #177 Body Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I==
STORE D2 0.0001
GOTO 3489; if() #177 Body End
SETV D2 0; if() #177 Else Start
STORE D2 0.0001; if() #177 Else End
LOAD D2 0.0002; if() #178 Test
COMPAREV D2 64
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3570 ==; Test 'if'
LOAD D2 0.0001; if() #179 Test AND if() #178 Body Start
COMPAREV D2 0
GOTOCMP 3510 ==; Test 'if'
PUSHR D4; if() #179 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV 64; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0006
ADDV D2 2
STORE D2 0.0006
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
GOTO 3455; if() #179 Body End
PUSHR D4; if() #491 Test AND if() #179 Else Start
LOAD D2 0.0007; UsrFunc[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Params End
CALLFUNC 0.7292; UsrFunc[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 3531 ==; Test 'if'
PUSHR D4; if() #491 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 3734; break 1; AND if() #491 Body End
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0006
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0005
SETR D2 GD4; if() #492 Test
PUSHR D2
LOAD D2 0.0005
SUBV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3455 ==; Test 'if'
LOAD D2 0.0005; if() #180 Test AND if() #492 Body Start
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 3558 ==; Test 'if'
GOTO 3734; break 1; AND if() #180 Body Start
GOTO 3455; if() #180 Body End
SETR D2 GD4; if() #493 Test AND if() #180 Else Start
PUSHR D2
LOAD D2 0.0005
SUBV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -100
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 3455 ==; Test 'if'
GOTO 3734; break 1; AND if() #493 Body
GOTO 3455; if() #180 Else End AND if() #492 Body End AND if() #179 Else End AND if() #178 Body End
LOAD D2 0.0002; if() #181 Test AND if() #178 Else Start
COMPAREV D2 0
GOTOCMP 3581 <=
LOAD D2 0.0002
COMPAREV D2 32
GOTOCMP 3581 >=
LOAD D2 0.0002
COMPAREV D2 26
GOTOCMP 3581 ==
SETV D2 1
GOTO 3582
SETV D2 0
COMPAREV D2 0
GOTOCMP 3615 ==; Test 'if'
PUSHR D4; if() #494 Test AND if() #181 Body Start
LOAD D2 0.0007; UsrFunc[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Params End
CALLFUNC 0.7587; UsrFunc[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 3604 ==; Test 'if'
PUSHR D4; if() #494 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 3734; break 1; AND if() #494 Body End
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0006
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0005
GOTO 3455; if() #181 Body End
LOAD D2 0.0001; if() #495 Test AND if() #181 Else Start
COMPAREV D2 0
GOTOCMP 3620 ==
SETV D2 1
GOTO 3621
SETV D2 0
COMPAREV D2 0
GOTOCMP 3715 ==; Test 'if'
STOREV 0 0; if() #495 Body Start
LOAD D2 0.0002; if() #182 Test
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3632 ==; Test 'if'
SETV D2 1; if() #182 Body Start
STORE D2 0
GOTO 3675; if() #182 Body End
LOAD D2 0.0002; if() #183 Test AND if() #182 Else Start
COMPAREV D2 91
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3640 ==; Test 'if'
SETV D2 2; if() #183 Body Start
STORE D2 0
GOTO 3675; if() #183 Body End
LOAD D2 0.0002; if() #184 Test AND if() #183 Else Start
COMPAREV D2 123
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3648 ==; Test 'if'
SETV D2 3; if() #184 Body Start
STORE D2 0
GOTO 3675; if() #184 Body End
LOAD D2 0.0002; if() #185 Test AND if() #184 Else Start
COMPAREV D2 60
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3656 ==; Test 'if'
SETV D2 4; if() #185 Body Start
STORE D2 0
GOTO 3675; if() #185 Body End
LOAD D2 0.0002; if() #496 Test AND if() #185 Else Start
COMPAREV D2 41
GOTOCMP 3670 ==
LOAD D2 0.0002
COMPAREV D2 93
GOTOCMP 3670 ==
LOAD D2 0.0002
COMPAREV D2 125
GOTOCMP 3670 ==
LOAD D2 0.0002
COMPAREV D2 62
GOTOCMP 3670 ==
SETV D2 0
GOTO 3671
SETV D2 1
COMPAREV D2 0
GOTOCMP 3675 ==; Test 'if'
SETV D2 -1; if() #496 Body Start
STORE D2 0; if() #496 Body End
LOAD D2 0; if() #185 Else End AND if() #184 Else End AND if() #183 Else End AND if() #182 Else End AND if() #497 Test
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 3715 ==; Test 'if'
LOAD D2 0; if() #186 Test AND if() #497 Body Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 3702 ==; Test 'if'
PUSHR D4; if() #186 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -1000; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
PEEK D4
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0005
ADDV D2 2
STORE D2 0.0005
GOTO 3711; if() #186 Body End
PUSHR D4; if() #186 Else Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -1100; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #186 Else End
LOAD D2 0.0006
ADDV D2 2
STORE D2 0.0006
GOTO 3455; continue 1; AND if() #497 Body End
PUSHR D4; if() #495 Body End
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0002; if() #498 Test
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3734 !=; Test 'if' AND break 1; AND if() #498 Body
LOAD D2 0.0006
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #181 Else End
GOTO 3455; if() #178 Else End AND while() #10 Body End AND while() #10 End
LOAD D2 0.0005; InlineFunc[int Min(int, int)] Params Start
PUSHVARGR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
SUBV D2 1
PUSHVARGR D2; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
STORE D2 0.0005
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
REF_REMOVE 0.0003
REF_REMOVE 0.0007
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_LoadIntoBuffer(char32[], int, int)] Body End
PUSHV 0; Func[void __Tango_BeginAdvancing()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0
SETV D2 3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
PUSHV 9; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POP D5
RETURNFUNC; Func[void __Tango_BeginAdvancing()] Body End
SETR D4 SP2; Func[int __Tango_GetCurrStyleData(int)] Body Start
SETR D2 GD3; return Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrStyleData(int)] Body End
SETR D4 SP2; Func[int __Tango_BoolToInt(bool)] Body Start
LOAD D2 0; if() #117 Test
COMPAREV D2 0
GOTOCMP 3839 ==; Test 'if'
SETV D2 1; return Start AND if() #117 Body Start
GOTO 3840; return End AND if() #117 Body End
SETV D2 0; return Start AND if() #117 Else Start
POP D5; return End AND if() #117 Else End
RETURNFUNC; Func[int __Tango_BoolToInt(bool)] Body End
SETR D4 SP2; Func[bool __Tango_CharacterWillFit(char32, int[], int, int)] Body Start
MARK_TYPE_STACK 0.0001 0.0002
REF_INC 0.0002
LOAD D2 0; return Start
PUSHR D2
LOAD D2 0.0001
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3865; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
POP D3
COMPARER D3 D2
SETCMP D2 I>=
REF_REMOVE 0.0002; return End
POPARGS D5 0.0004
RETURNFUNC; Func[bool __Tango_CharacterWillFit(char32, int[], int, int)] Body End
SETR D4 SP2; Func[int __Tango_GetCharacterWidth(char32, int[])] Body Start
MARK_TYPE_STACK 0.0001 0
REF_INC 0
LOAD D2 0; if() #142 Test
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3881 ==; Test 'if'
LOAD D2 0; return Start AND if() #142 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 6
GOTO 3887; return End AND if() #142 Body End
LOAD D2 0; return Start AND if() #142 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 -26
POP D0
READPODARRAYR D2 D2
REF_REMOVE 0; return End AND if() #142 Else End
POPARGS D5 0.0002
RETURNFUNC; Func[int __Tango_GetCharacterWidth(char32, int[])] Body End
PUSHV 0; Func[int __Tango_GetSlotState(int)] Body Start
SETR D4 SP2
LOAD D2 0.0001
MULTV D2 24
STORE D2 0
SETR D2 GD5; return Start
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_GetSlotState(int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetSlotFlags(int)] Body Start
SETR D4 SP2
LOAD D2 0.0002
MULTV D2 24
STORE D2 0.0001
SETR D2 GD5; if() #478 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -10
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3919 ==; Test 'if'
SETV D2 0; return Start AND if() #478 Body Start
GOTO 3932; return End AND if() #478 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
MULTV D2 48
STORE D2 0
SETR D2 GD3; return Start
PUSHR D2
LOAD D2 0
ADDV D2 35
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_GetSlotFlags(int)] Body End
SETR D4 SP2; Func[void __Tango_ClearAlternateColor()] Body Start
PUSHR D4
PUSHV 10; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV -1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 11; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV -1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 12; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
RETURNFUNC; Func[void __Tango_ClearAlternateColor()] Body End
SETR D4 SP2; Func[void __Tango_SetCurrSlotData(int, int)] Body Start
LOAD D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_SetCurrSlotData(int, int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_CountDown(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
STOREV 1 0
LOAD D2 0.0002; if() #431 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3984 ==; Test 'if'
LOAD D2 0; if() #431 Body Start
MULTV D2 5
STORE D2 0; if() #431 Body End
PUSHVARGV 0; InlineFunc[int Max(int, int)] Params Start
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
SUBR D3 D2
PUSHVARGR D3; InlineFunc[int Max(int, int)] Params End
MAXVARG; InlineFunc[int Max(int, int)] Body
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_CountDown(int)] Body End
SETR D4 SP2; Func[void __Tango_Delete(int, int)] Body Start
LOAD D2 0.0001; for() #128 LoopTest
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4030 ==; for() #128 TestFail?
SETV D2 -1; for() #128 Body Start
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #128 Body End
LOAD D2 0.0001; for() #128 LoopIncrement
ADDV D2 1
STORE D2 0.0001
GOTO 4009; for() #128 End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_Delete(int, int)] Body End
PUSHV 0; Func[void __Tango_DrawColorBackdrop(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
SETR D2 GD3; if() #120 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4047 ==; Test 'if'
SETV D2 128; if() #120 Body Start
STORE D2 0
GOTO 4049; if() #120 Body End
SETV D2 64; if() #120 Else Start
STORE D2 0; if() #120 Else End
PUSHV 6; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0002
ADDV D2 1
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
PUSHR D2
LOAD D2 0.0002
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
MULTV D2 16
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
LOAD D2 0
PUSHR D2; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_DrawColorBackdrop(int, int, int)] Body End
PUSHV 0; Func[void __Tango_DrawComboBackdrop(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
SETR D2 GD3; if() #121 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4121 ==; Test 'if'
SETV D2 128; if() #121 Body Start
STORE D2 0
GOTO 4123; if() #121 Body End
SETV D2 64; if() #121 Else Start
STORE D2 0; if() #121 Else End
PUSHV 6; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0005
PUSHV 1
LOAD D2 0
PUSHR D2; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBOR; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0016; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_DrawComboBackdrop(int, int, int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0004
REF_INC 0.0004
STOREV 0 0.0001
STOREV 0 0; for() #129 setup
LOAD D2 0.0004; for() #129 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 4518 ==; for() #129 TestFail?
LOAD D2 0.0004; if() #122 Test AND for() #129 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 4
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4340 ==; Test 'if'
LOAD D2 0.0004; if() #123 Test AND if() #122 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
GOTOCMP 4205 ==
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
GOTOCMP 4205 ==
SETV D2 0
GOTO 4206
SETV D2 1
COMPAREV D2 0
GOTOCMP 4211 ==; Test 'if'
SETV D2 128; if() #123 Body Start
STORE D2 0.0001
GOTO 4213; if() #123 Body End
SETV D2 64; if() #123 Else Start
STORE D2 0.0001; if() #123 Else End
LOAD D2 0.0004; if() #124 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4281 ==; Test 'if'
PUSHV 6; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start AND if() #124 Body Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0004
PUSHV 1
LOAD D2 0.0001
PUSHR D2; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWTILER; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0015; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
GOTO 4514; if() #124 Body End
PUSHV 6; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start AND if() #124 Else Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0005
PUSHV 1
LOAD D2 0.0001
PUSHR D2; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBOR; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0016; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End AND if() #124 Else End
GOTO 4514; if() #122 Body End
LOAD D2 0.0004; if() #125 Test AND if() #122 Else Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 6
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4455 ==; Test 'if'
LOAD D2 0.0004; if() #126 Test AND if() #125 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4361 ==; Test 'if'
SETV D2 128; if() #126 Body Start
STORE D2 0.0001
GOTO 4363; if() #126 Body End
SETV D2 64; if() #126 Else Start
STORE D2 0.0001; if() #126 Else End
PUSHV 6; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
ADDV D2 1
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
ADDV D2 1
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
MULTV D2 16
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
LOAD D2 0.0001
PUSHR D2; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
GOTO 4514; if() #125 Body End
PUSHR D4; if() #125 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Params End
CALLFUNC 0.4521; UsrFunc[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Call
POP D4; if() #125 Else End
LOAD D2 0; if() #122 Else End AND for() #129 Body End AND for() #129 LoopIncrement
ADDV D2 7
STORE D2 0
GOTO 4171; for() #129 End
REF_REMOVE 0.0004
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Body End
PUSHV 0; Func[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0005
REF_INC 0.0005
MARK_TYPE_STACK 0.0001 0.0006
REF_INC 0.0006
LOAD D2 0.0007; if() #127 Test
COMPAREV D2 9
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4546 ==; Test 'if'
LOAD D2 0.0002; if() #127 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0006; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params End
CALLFUNC 0.1257; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002
GOTO 4565; if() #127 Body End
LOAD D2 0.0007; if() #435 Test AND if() #127 Else Start
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4565 ==; Test 'if'
LOAD D2 0.0002; if() #435 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0006; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params End
CALLFUNC 0.1257; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Call
POP D4
MULTV D2 0.5000
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002; if() #435 Body End
STOREV 0 0; if() #127 Else End AND for() #130 setup
LOAD D2 0.0006; for() #130 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 4605 ==; for() #130 TestFail?
LOAD D2 0.0002; for() #130 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2
PUSHV 0
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 6; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params End
CALLFUNC 0.4609; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0.0002; for() #130 Body End
LOAD D2 0; for() #130 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 4566; for() #130 End
REF_REMOVE 0.0005
REF_REMOVE 0.0006
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Body End
PUSHV 0; Func[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0007
REF_INC 0.0007
LOAD D2 0.0008; if() #549 Test
COMPAREV D2 32
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 4726 ==; Test 'if'
LOAD D2 0.0007; if() #219 Test AND if() #549 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
GOTOCMP 4632 ==
LOAD D2 0.0007
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 1
GOTOCMP 4632 ==
SETV D2 0
GOTO 4633
SETV D2 1
COMPAREV D2 0
GOTOCMP 4701 ==; Test 'if'
LOAD D2 0.0008; if() #220 Test AND if() #219 Body Start
COMPAREV D2 255
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4665 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, char32, int)] Params Start AND if() #220 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0007
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2
LOAD D2 0.0006
MULTV D2 16
PUSHR D2
LOAD D2 0.0005
POP D3
ADDR D2 D3
PUSHR D2
PUSHARGSV -1 0.0003
LOAD D2 0.0008
PUSHR D2
PUSHV 128; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, char32, int)] Params End
DRAWCHARR; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, char32, int)] Body Start
POPARGS D5 0.0010; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, char32, int)] Body End
GOTO 4726; if() #220 Body End
LOAD D2 0.0007; if() #550 Test AND if() #220 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4726 ==; Test 'if'
LOAD D2 0.0007; if() #550 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 3
PUSHR D2
LOAD D2 0.0004
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0008
POP D3
ADDR D2 D3
SUBV D2 256
STORE D2 0
LOAD D2 0.0001; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0006
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params End
FASTTILER; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body End AND if() #550 Body End
GOTO 4726; if() #220 Else End AND if() #219 Body End
LOAD D2 0.0001; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params Start AND if() #219 Else Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0007
PUSHR D2
POP D0
READPODARRAYV D2 3
PUSHR D2
LOAD D2 0.0004
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0008
POP D3
ADDR D2 D3
ADDV D2 -33
PUSHR D2
LOAD D2 0.0006
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params End
FASTTILER; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body End AND if() #219 Else End
PUSHR D4; if() #549 Body End AND return Start
LOAD D2 0.0008; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0007
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3865; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
REF_REMOVE 0.0007; return End
POPARGS D5 0.0009
RETURNFUNC; Func[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Body End
PUSHV 0; Func[void __Tango_DrawMenuScrollIndicators(int, int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0
PUSHR D4; if() #437 Test
CALLFUNC 0.4835; UsrFunc[bool __Tango_MenuCanScrollUp()] Call
POP D4
COMPAREV D2 0
GOTOCMP 4788 ==; Test 'if'
PUSHV 6; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params Start AND if() #437 Body Start
LOAD D2 0.0002
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 25
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 26
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 23
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 24
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params End
FASTCOMBOR; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body End AND if() #437 Body End
PUSHR D4; if() #438 Test
CALLFUNC 0.4875; UsrFunc[bool __Tango_MenuCanScrollDown()] Call
POP D4
COMPAREV D2 0
GOTOCMP 4833 ==; Test 'if'
PUSHV 6; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params Start AND if() #438 Body Start
LOAD D2 0.0002
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 29
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 30
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 27
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 28
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params End
FASTCOMBOR; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body End AND if() #438 Body End
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_DrawMenuScrollIndicators(int, int)] Body End
PUSHV 0; Func[bool __Tango_MenuCanScrollUp()] Body Start
SETR D4 SP2
SETR D2 GD2; for() #143 setup
PUSHR D2
POP D0
READPODARRAYV D2 23
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #143 LoopTest
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 4872 ==; for() #143 TestFail?
SETR D2 GD2; if() #510 Test AND for() #143 Body Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 4868 ==; Test 'if'
SETV D2 1; return Start AND if() #510 Body Start
GOTO 4873; return End AND if() #510 Body End
LOAD D2 0; for() #143 Body End AND for() #143 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 4843; for() #143 End
SETV D2 0; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_MenuCanScrollUp()] Body End
PUSHV 0; Func[bool __Tango_MenuCanScrollDown()] Body Start
SETR D4 SP2
SETR D2 GD2; for() #142 setup
PUSHR D2
POP D0
READPODARRAYV D2 23
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #142 LoopTest
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 4912 ==; for() #142 TestFail?
SETR D2 GD2; if() #509 Test AND for() #142 Body Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 26
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 4908 ==; Test 'if'
SETV D2 1; return Start AND if() #509 Body Start
GOTO 4913; return End AND if() #509 Body End
LOAD D2 0; for() #142 Body End AND for() #142 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 4883; for() #142 End
SETV D2 0; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_MenuCanScrollDown()] Body End
PUSHARGSV 0 0.0008; Func[void __Tango_DrawMoreIcon()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0007
STOREV 0 0.0006
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0005
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 35
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
SETR D2 GD5; if() #128 Test
PUSHR D2
LOAD D2 0.0007
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4948 ==; Test 'if'
SETV D2 1; if() #128 Body Start
STORE D2 0.0006
GOTO 4977; if() #128 Body End
SETR D2 GD5; if() #439 Test AND if() #128 Else Start
PUSHR D2
LOAD D2 0.0007
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4977 ==; Test 'if'
LOAD D2 0.0004; if() #440 Test AND if() #439 Body Start
ANDV D2 128
COMPAREV D2 0
GOTOCMP 4972 ==
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 18
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
GOTOCMP 4972 !=
SETV D2 0
GOTO 4973
SETV D2 1
COMPAREV D2 0
GOTOCMP 4977 ==; Test 'if'
SETV D2 1; if() #440 Body Start
STORE D2 0.0006; if() #440 Body End
LOAD D2 0.0006; if() #439 Body End AND if() #128 Else End AND unless() #441 Test
COMPAREV D2 0
GOTOCMP 5043 ==; Test 'unless' AND return (Void) AND unless() #441 Body
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 31
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
LOAD D2 0.0003; if() #442 Test
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 5043 !=; Test 'if' AND return (Void) AND if() #442 Body
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 32
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 33
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0001
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 7
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 34
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0
PUSHV 6; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params End
FASTCOMBOR; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body End
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_DrawMoreIcon()] Body End
PUSHV 0; Func[void __Tango_DrawTileBackdrop(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
SETR D2 GD3; if() #129 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5060 ==; Test 'if'
SETV D2 128; if() #129 Body Start
STORE D2 0
GOTO 5062; if() #129 Body End
SETV D2 64; if() #129 Else Start
STORE D2 0; if() #129 Else End
PUSHV 6; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0004
PUSHV 1
LOAD D2 0
PUSHR D2; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWTILER; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0015; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_DrawTileBackdrop(int, int, int)] Body End
PUSHARGSV 0 0.0007; Func[void __Tango_TransferText(int, int, int, int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0.0006
LOAD D2 0.0008
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0005
LOAD D2 0.0007
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 7
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0002
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 8
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 9
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD5; if() #596 Test
PUSHR D2
LOAD D2 0.0010
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5192 ==; Test 'if'
LOAD D2 0; if() #596 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 2
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0; if() #596 Body End
PUSHARGSV 6 0.0002; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
PUSHR D2
PUSHV 0
PUSHV 1; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params End
BITMAPR; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body End
SETR D2 GD3; if() #597 Test
PUSHR D2
LOAD D2 0.0009
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 256
COMPAREV D2 0
GOTOCMP 5232 ==
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
GOTOCMP 5232 ==
SETV D2 1
GOTO 5233
SETV D2 0
COMPAREV D2 0
GOTOCMP 5322 ==; Test 'if'
SETR D2 GD16; if() #597 Body Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 16
STORE D2 0.0002
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHR D4
PUSHV 4; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0003
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
SUBR D3 D2
SETR D2 D3
DIVV D2 2
POP D3
ADDR D2 D3
STORE D2 0.0005
LOAD D2 0.0004
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
ADDR D2 D3
STORE D2 0.0004
PUSHARGSV 6 0.0002; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
PUSHV 0
PUSHV 1; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params End
BITMAPR; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body End AND if() #597 Body End
POPARGS D5 0.0011
RETURNFUNC; Func[void __Tango_TransferText(int, int, int, int)] Body End
SETR D4 SP2; Func[int __Tango_EatSpaces(char32[], int)] Body Start
MARK_TYPE_STACK 0.0001 0.0001
REF_INC 0.0001
LOAD D2 0.0001; while() #6 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 32
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5340 ==; Test 'while'
LOAD D2 0; while() #6 Body Start
ADDV D2 1
STORE D2 0; while() #6 Body End
GOTO 5327; while() #6 End
LOAD D2 0; return Start
REF_REMOVE 0.0001; return End
POPARGS D5 0.0002
RETURNFUNC; Func[int __Tango_EatSpaces(char32[], int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_FindDestStart(bool)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0001
LOAD D2 0.0002; unless() #446 Test
COMPAREV D2 0
GOTOCMP 5356 !=; Test 'unless'
LOAD D2 0.0001; return Start AND unless() #446 Body Start
GOTO 5385; return End AND unless() #446 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
SUBV D2 1
STORE D2 0
LOAD D2 0.0001; while() #7 Test
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
GOTOCMP 5377 >=
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
GOTOCMP 5377 ==
SETV D2 1
GOTO 5378
SETV D2 0
COMPAREV D2 0
GOTOCMP 5384 ==; Test 'while'
LOAD D2 0.0001; while() #7 Body Start
ADDV D2 1
STORE D2 0.0001; while() #7 Body End
GOTO 5362; while() #7 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_FindDestStart(bool)] Body End
PUSHV 0; Func[int __Tango_FindSrcStart(char32[], char32)] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0002
REF_INC 0.0002
LOAD D2 0.0001; if() #447 Test
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 5398 ==; Test 'if'
SETV D2 0; return Start AND if() #447 Body Start
GOTO 5428; return End AND if() #447 Body End
STOREV 1 0; for() #131 setup
LOAD D2 0.0002; for() #131 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 5427 ==; for() #131 TestFail?
LOAD D2 0.0002; if() #448 Test AND for() #131 Body Start
PUSHR D2
LOAD D2 0
SUBV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5423 ==; Test 'if'
LOAD D2 0; return Start AND if() #448 Body Start
GOTO 5428; return End AND if() #448 Body End
LOAD D2 0; for() #131 Body End AND for() #131 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5399; for() #131 End
SETV D2 0; return Start
REF_REMOVE 0.0002; return End
POPARGS D5 0.0003
RETURNFUNC; Func[int __Tango_FindSrcStart(char32[], char32)] Body End
PUSHARGSV 0 0.0006; Func[int __Tango_FloatToASCII(char32[], int, bool)] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0008
REF_INC 0.0008
STOREV 0 0.0005
STOREV 100000 0.0004
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0007; if() #451 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5456 ==; Test 'if'
SETV D2 45; if() #451 Body Start
PUSHR D2
LOAD D2 0.0008
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
SETV D2 1
STORE D2 0.0005
LOAD D2 0.0007
SUBV2 0 D2
STORE D2 0.0007; if() #451 Body End
STOREV 0 0; for() #133 setup
LOAD D2 0; for() #133 LoopTest
COMPAREV D2 10
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5591 ==; for() #133 TestFail?
LOAD D2 0.0007; for() #133 Body Start
PUSHR D2
LOAD D2 0.0004
POP D3
DIVR D3 D2
SETR D2 D3
LSHIFTV D2 0
MODV D2 10
STORE D2 0.0003
LOAD D2 0.0004; if() #133 Test
COMPAREV D2 1
GOTOCMP 5479 >=
LOAD D2 0.0006
COMPAREV D2 0
GOTOCMP 5479 !=
SETV D2 0
GOTO 5480
SETV D2 1
COMPAREV D2 0
GOTOCMP 5509 ==; Test 'if'
LOAD D2 0.0003; if() #452 Test AND if() #133 Body Start
COMPAREV D2 0
GOTOCMP 5490 >
LOAD D2 0.0002
COMPAREV D2 0
GOTOCMP 5490 !=
SETV D2 0
GOTO 5491
SETV D2 1
COMPAREV D2 0
GOTOCMP 5552 ==; Test 'if'
LOAD D2 0.0003; if() #452 Body Start
ADDV D2 48
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
SETV D2 1
STORE D2 0.0002; if() #452 Body End
GOTO 5552; if() #133 Body End
LOAD D2 0.0003; if() #134 Test AND if() #133 Else Start
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5518 ==; Test 'if'
LOAD D2 0.0001; if() #134 Body Start
ADDV D2 1
STORE D2 0.0001
GOTO 5552; if() #134 Body End
LOAD D2 0.0001; for() #134 LoopTest AND if() #134 Else Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 5539 ==; for() #134 TestFail?
SETV D2 48; for() #134 Body Start
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; for() #134 Body End
LOAD D2 0.0001; for() #134 LoopIncrement
SUBV D2 1
STORE D2 0.0001
GOTO 5518; for() #134 End
LOAD D2 0.0003
ADDV D2 48
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #134 Else End
LOAD D2 0.0007; if() #133 Else End
PUSHR D2
LOAD D2 0.0004
POP D3
MODR D3 D2
SETR D2 D3
STORE D2 0.0007
LOAD D2 0.0004
DIVV D2 10
STORE D2 0.0004
LOAD D2 0.0004; if() #135 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5570 ==; Test 'if'
SETV D2 1; if() #135 Body Start
STORE D2 0.0002
GOTO 5587; if() #135 Body End
LOAD D2 0.0004; if() #453 Test AND if() #135 Else Start
COMPAREV D2 0.1000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5587 ==; Test 'if'
SETV D2 46; if() #453 Body Start
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #453 Body End
LOAD D2 0; if() #135 Else End AND for() #133 Body End AND for() #133 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5457; for() #133 End
SETV D2 0
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005; return Start
REF_REMOVE 0.0008; return End
POPARGS D5 0.0009
RETURNFUNC; Func[int __Tango_FloatToASCII(char32[], int, bool)] Body End
SETR D4 SP2; Func[void __Tango_FuncActivateMenu(int, int, int)] Body Start
PUSHR D4
LOAD D2 0.0001; UsrFunc[void Tango_SetMenuFlags(int)] Params Start
PUSHR D2; UsrFunc[void Tango_SetMenuFlags(int)] Params End
CALLFUNC 0.0370; UsrFunc[void Tango_SetMenuFlags(int)] Call
PEEK D4
CALLFUNC 0.0117; UsrFunc[void Tango_ActivateMenu()] Call
PEEK D4
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 5; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 -20000
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
LOAD D2 0; UsrFunc[void Tango_SetMenuCursorPosition(int)] Params Start
PUSHR D2; UsrFunc[void Tango_SetMenuCursorPosition(int)] Params End
CALLFUNC 0.1787; UsrFunc[void Tango_SetMenuCursorPosition(int)] Call
POP D4
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_FuncActivateMenu(int, int, int)] Body End
SETR D4 SP2; Func[void __Tango_FuncAddMenuItem(int, int)] Body Start
SETV D2 -10000
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_FuncAddMenuItem(int, int)] Body End
PUSHV 0; Func[void __Tango_FuncClose()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #454 Test
ANDV D2 512
COMPAREV D2 0
GOTOCMP 5668 ==; Test 'if'
PUSHR D4; if() #454 Body Start
CALLFUNC 0.1006; UsrFunc[void __Tango_DecScreenFreeze()] Call
POP D4; if() #454 Body End
PUSHR D4
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
POP D5
RETURNFUNC; Func[void __Tango_FuncClose()] Body End
SETR D4 SP2; Func[void __Tango_FuncGoto(int)] Body Start
PUSHR D4
PUSHV 18; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
CALLFUNC 0.3757; UsrFunc[void __Tango_BeginAdvancing()] Call
POP D4
POP D5
RETURNFUNC; Func[void __Tango_FuncGoto(int)] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_FuncNumber(int, int)] Body Start
SETR D4 SP2
ALLOCATEMEMV D2 13 0
STORE_OBJECT D2 0.0002
STOREV 0 0.0001
LOAD D2 0.0004; if() #136 Test
PUSHR D2
LOAD D2 0.0004
LSHIFTV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5708 ==; Test 'if'
LOAD D2 0.0002; InlineFunc[int itoa(char32[], int)] Params Start AND if() #136 Body Start
PUSHR D2
LOAD D2 0.0004
SETR D3 D2; InlineFunc[int itoa(char32[], int)] Params End
POP D2; InlineFunc[int itoa(char32[], int)] Body Start
ITOA D2 D3; InlineFunc[int itoa(char32[], int)] Body End
STORE D2 0.0001
GOTO 5717; if() #136 Body End
PUSHR D4; if() #136 Else Start
LOAD D2 0.0002; UsrFunc[int __Tango_FloatToASCII(char32[], int, bool)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_FloatToASCII(char32[], int, bool)] Params End
CALLFUNC 0.5431; UsrFunc[int __Tango_FloatToASCII(char32[], int, bool)] Call
POP D4
STORE D2 0.0001; if() #136 Else End
STOREV 0 0; for() #135 setup
LOAD D2 0; for() #135 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5746 ==; for() #135 TestFail?
LOAD D2 0.0002; for() #135 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0003
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0003
ADDV D2 1
STORE D2 0.0003; for() #135 Body End
LOAD D2 0; for() #135 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5718; for() #135 End
REF_REMOVE 0.0002
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_FuncNumber(int, int)] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_FuncOrdinal(int, int)] Body Start
SETR D4 SP2
ALLOCATEMEMV D2 9 0
STORE_OBJECT D2 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0005
LSHIFTV D2 0
STORE D2 0.0005
LOAD D2 0.0003; InlineFunc[int itoa(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0005
SETR D3 D2; InlineFunc[int itoa(char32[], int)] Params End
POP D2; InlineFunc[int itoa(char32[], int)] Body Start
ITOA D2 D3; InlineFunc[int itoa(char32[], int)] Body End
STORE D2 0.0002
PUSHR D4
LOAD D2 0.0005; UsrFunc[int __Tango_GetOrdinal(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetOrdinal(int)] Params End
CALLFUNC 0.5900; UsrFunc[int __Tango_GetOrdinal(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0001; if() #137 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5796 ==; Test 'if'
SETV D2 115; if() #137 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 116
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 5865; if() #137 Body End
LOAD D2 0.0001; if() #138 Test AND if() #137 Else Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5821 ==; Test 'if'
SETV D2 110; if() #138 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 100
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 5865; if() #138 Body End
LOAD D2 0.0001; if() #139 Test AND if() #138 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5846 ==; Test 'if'
SETV D2 114; if() #139 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 100
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 5865; if() #139 Body End
SETV D2 116; if() #139 Else Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 104
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #139 Else End
LOAD D2 0.0002; if() #138 Else End AND if() #137 Else End
ADDV D2 2
STORE D2 0.0002
STOREV 0 0; for() #136 setup
LOAD D2 0; for() #136 LoopTest
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5897 ==; for() #136 TestFail?
LOAD D2 0.0003; for() #136 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0004
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0004
ADDV D2 1
STORE D2 0.0004; for() #136 Body End
LOAD D2 0; for() #136 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5869; for() #136 End
REF_REMOVE 0.0003
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_FuncOrdinal(int, int)] Body End
SETR D4 SP2; Func[int __Tango_GetOrdinal(int)] Body Start
LOAD D2 0; if() #476 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5909 ==; Test 'if'
LOAD D2 0; if() #476 Body Start
SUBV2 0 D2
STORE D2 0; if() #476 Body End
LOAD D2 0
MODV D2 100
STORE D2 0
LOAD D2 0; if() #477 Test
COMPAREV D2 11
GOTOCMP 5923 ==
LOAD D2 0
COMPAREV D2 12
GOTOCMP 5923 ==
LOAD D2 0
COMPAREV D2 13
GOTOCMP 5923 ==
SETV D2 0
GOTO 5924
SETV D2 1
COMPAREV D2 0
GOTOCMP 5928 ==; Test 'if'
SETV D2 0; return Start AND if() #477 Body Start
GOTO 5930; return End AND if() #477 Body End
LOAD D2 0; return Start
MODV D2 10
POP D5; return End
RETURNFUNC; Func[int __Tango_GetOrdinal(int)] Body End
SETR D4 SP2; Func[void __Tango_FuncPressA()] Body Start
PUSHR D4; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHV 14; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
PUSHR D4
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 8; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
RETURNFUNC; Func[void __Tango_FuncPressA()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_FuncSaveName(int)] Body Start
SETR D4 SP2
ALLOCATEMEMV D2 9 0
STORE_OBJECT D2 0.0001
LOAD D2 0.0001; InlineFunc[void Game::GetSaveName(char32[])] Params
GETSAVENAME D2; InlineFunc[void Game::GetSaveName(char32[])] Body
STOREV 0 0; for() #137 setup
LOAD D2 0.0001; for() #137 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 5980 ==; for() #137 TestFail?
LOAD D2 0.0001; for() #137 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0002
ADDV D2 1
STORE D2 0.0002; for() #137 Body End
LOAD D2 0; for() #137 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5951; for() #137 End
REF_REMOVE 0.0001
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_FuncSaveName(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_FuncString(char32[], int)] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0003
REF_INC 0.0003
PUSHR D4; unless() #455 Test
LOAD D2 0.0003; UsrFunc[bool __Tango_ValidateString(char32[])] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateString(char32[])] Params End
CALLFUNC 0.6050; UsrFunc[bool __Tango_ValidateString(char32[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 6010 !=; Test 'unless'
PUSHR D4; unless() #455 Body Start
PUSHV 205; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0003
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 6047; return (Void) AND unless() #455 Body End
LOAD D2 0.0003; InlineFunc[int strlen(char32[])] Params Start AND InlineFunc[int Min(int, int)] Params Start
SETR D3 D2; InlineFunc[int strlen(char32[])] Params End
STRINGLENGTH D2 D3; InlineFunc[int strlen(char32[])] Body
PUSHVARGR D2
PUSHVARGV 16; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
STORE D2 0.0001
STOREV 0 0; for() #138 setup
LOAD D2 0; for() #138 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6047 ==; for() #138 TestFail?
LOAD D2 0.0003; for() #138 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #138 Body End
LOAD D2 0; for() #138 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 6018; for() #138 End
REF_REMOVE 0.0003
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_FuncString(char32[], int)] Body End
SETR D4 SP2; Func[bool __Tango_ValidateString(char32[])] Body Start
MARK_TYPE_STACK 0.0001 0
REF_INC 0
LOAD D2 0; InlineFunc[bool IsValidArray(char32[])] Params AND unless() #336 Test
ISVALIDARRAY D2; InlineFunc[bool IsValidArray(char32[])] Body
COMPAREV D2 0
GOTOCMP 6060 !=; Test 'unless'
SETV D2 0; return Start AND unless() #336 Body Start
GOTO 6069; return End
GOTO 6068; unless() #336 Body End
LOAD D2 0; InlineFunc[int SizeOfArray(char32[])] Params AND if() #635 Test AND unless() #336 Else Start
ARRAYSIZE D2; InlineFunc[int SizeOfArray(char32[])] Body
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 6068 ==; Test 'if'
SETV D2 0; return Start AND if() #635 Body Start
GOTO 6069; return End AND if() #635 Body End
SETV D2 1; unless() #336 Else End AND return Start
REF_REMOVE 0; return End
POP D5
RETURNFUNC; Func[bool __Tango_ValidateString(char32[])] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_FuncSync(int[])] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0002
REF_INC 0.0002
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0002; if() #140 Test
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6101 ==; Test 'if'
PUSHR D4; if() #140 Body Start
LOAD D2 0.0002; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params End
CALLFUNC 0.1924; UsrFunc[bool __Tango_FindSyncingStrings(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0
GOTO 6122; if() #140 Body End
PUSHR D4; if() #140 Else Start
LOAD D2 0.0002; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params End
CALLFUNC 0.1924; UsrFunc[bool __Tango_FindSyncingStrings(int)] Call
PEEK D4
LOAD D2 0.0002; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params End
CALLFUNC 0.1924; UsrFunc[bool __Tango_FindSyncingStrings(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0; if() #140 Else End
LOAD D2 0.0001; if() #141 Test
COMPAREV D2 0
GOTOCMP 6127 ==; Test 'if'
SETV D2 0; return Start AND if() #141 Body Start
GOTO 6138; return End AND if() #141 Body End
PUSHR D4; if() #141 Else Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 6; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 1; return Start
REF_REMOVE 0.0002; return End AND if() #141 Else End
POPARGS D5 0.0003
RETURNFUNC; Func[int __Tango_FuncSync(int[])] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_FuncTab(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0
SETR D2 GD16
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_FuncTab(int)] Body End
PUSHV 0; Func[int __Tango_GetCurrFontData(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 6
STORE_OBJECT D2 0
LOAD D2 0; return Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
REF_REMOVE 0
GOTO 6189; return End
REF_REMOVE 0
POPARGS D5 0.0002
RETURNFUNC; Func[int __Tango_GetCurrFontData(int)] Body End
SETR D4 SP2; Func[int __Tango_GetCurrSlotDefData(int)] Body Start
SETR D2 GD16; return Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrSlotDefData(int)] Body End
PUSHV 0; Func[int __Tango_GetCurrentCSet()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 10; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #457 Test
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 6220 ==; Test 'if'
LOAD D2 0; return Start AND if() #457 Body Start
GOTO 6236; return End AND if() #457 Body End
PUSHR D4
PUSHV 8; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #458 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6235 ==; Test 'if'
PUSHR D4; if() #458 Body Start
PUSHV 10; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0; if() #458 Body End
LOAD D2 0; return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentCSet()] Body End
PUSHV 0; Func[int __Tango_GetCurrentColor()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 11; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #459 Test
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 6252 ==; Test 'if'
LOAD D2 0; return Start AND if() #459 Body Start
GOTO 6268; return End AND if() #459 Body End
PUSHR D4
PUSHV 9; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #460 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6267 ==; Test 'if'
PUSHR D4; if() #460 Body Start
PUSHV 11; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0; if() #460 Body End
LOAD D2 0; return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentColor()] Body End
PUSHV 0; Func[int __Tango_GetCurrentSFX()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 14; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #461 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6287 ==; Test 'if'
PUSHR D4; if() #461 Body Start
PUSHV 13; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0; if() #461 Body End
LOAD D2 0; return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentSFX()] Body End
PUSHV 0; Func[int __Tango_GetCurrentSpeed()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 13; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #146 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6308 ==; Test 'if'
PUSHR D4; return Start AND if() #146 Body Start
PUSHV 12; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
GOTO 6316; return End
GOTO 6315; if() #146 Body End
LOAD D2 0; if() #462 Test AND if() #146 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6315 ==; Test 'if'
SETV D2 0; return Start AND if() #462 Body Start
GOTO 6316; return End AND if() #462 Body End
LOAD D2 0; if() #146 Else End AND return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentSpeed()] Body End
SETR D4 SP2; Func[int __Tango_GetCurrentTileOffset()] Body Start
PUSHR D4; return Start
PUSHV 12; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
RETURNFUNC; return End AND Func[int __Tango_GetCurrentTileOffset()] Body End
PUSHV 0; Func[int __Tango_GetLineHeight()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 6
STORE_OBJECT D2 0
LOAD D2 0; return Start
PUSHR D2
POP D0
READPODARRAYV D2 4
PUSHR D2
LOAD D2 0
PUSHR D2
POP D0
READPODARRAYV D2 5
POP D3
ADDR D2 D3
REF_REMOVE 0
GOTO 6345; return End
REF_REMOVE 0
POP D5
RETURNFUNC; Func[int __Tango_GetLineHeight()] Body End
PUSHARGSV 0 0.0012; Func[int __Tango_GetNextMenuPos(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #463 Test
CALLFUNC 0.1168; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
COMPAREV D2 0
GOTOCMP 6356 !=; Test 'unless'
SETV D2 0; return Start AND unless() #463 Body Start
GOTO 6779; return End AND unless() #463 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0.0011
SETR D2 GD2
PUSHR D2
LOAD D2 0.0011
MULTV D2 3
ADDV D2 34
POP D0
READPODARRAYR D2 D2
STORE D2 0.0010
SETR D2 GD2
PUSHR D2
LOAD D2 0.0011
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
STOREV -1 0.0008
STOREV 0 0.0007
STOREV 0 0.0006
STOREV 0 0.0005
STOREV 0 0.0004
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
SETR D2 GD2; for() #140 setup
PUSHR D2
POP D0
READPODARRAYV D2 23
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #140 LoopTest
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 6771 ==; for() #140 TestFail?
LOAD D2 0; if() #464 Test AND for() #140 Body Start
PUSHR D2
LOAD D2 0.0011
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6767 !=; Test 'if' AND continue 1; AND if() #464 Body
SETV D2 0
STORE D2 0.0001
SETR D2 GD2
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
POP D0
READPODARRAYR D2 D2
STORE D2 0.0005
SETR D2 GD2
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
LOAD D2 0.0012; if() #147 Test
COMPAREV D2 0
GOTOCMP 6432 ==
LOAD D2 0.0012
COMPAREV D2 1
GOTOCMP 6432 ==
SETV D2 0
GOTO 6433
SETV D2 1
COMPAREV D2 0
GOTOCMP 6597 ==; Test 'if'
LOAD D2 0.0004; if() #465 Test AND if() #147 Body Start
PUSHR D2
LOAD D2 0.0009
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6767 !=; Test 'if' AND continue 1; AND if() #465 Body
LOAD D2 0.0005; InlineFunc[int Abs(int)] Params Start
PUSHR D2
LOAD D2 0.0010
POP D3
SUBR D3 D2
SETR D2 D3; InlineFunc[int Abs(int)] Params End
ABS D2; InlineFunc[int Abs(int)] Body
STORE D2 0.0003
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0009
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002
LOAD D2 0.0008; if() #148 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6466 ==; Test 'if'
SETV D2 1; if() #148 Body Start
STORE D2 0.0001
GOTO 6758; if() #148 Body End
LOAD D2 0.0012; if() #149 Test AND if() #148 Else Start
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6534 ==; Test 'if'
LOAD D2 0.0006; if() #150 Test AND if() #149 Body Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 6505 ==; Test 'if'
LOAD D2 0.0002; if() #466 Test AND if() #150 Body Start
COMPAREV D2 0
GOTOCMP 6499 <
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6499 >
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6497 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6499 <
SETV D2 0
GOTO 6500
SETV D2 1
COMPAREV D2 0
GOTOCMP 6758 ==; Test 'if'
SETV D2 1; if() #466 Body Start
STORE D2 0.0001; if() #466 Body End
GOTO 6758; if() #150 Body End
LOAD D2 0.0002; if() #467 Test AND if() #150 Else Start
COMPAREV D2 0
GOTOCMP 6514 >=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6528 >
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6526 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6528 <
SETV D2 0
GOTO 6529
SETV D2 1
COMPAREV D2 0
GOTOCMP 6758 ==; Test 'if'
SETV D2 1; if() #467 Body Start
STORE D2 0.0001; if() #467 Body End
GOTO 6758; if() #150 Else End AND if() #149 Body End
LOAD D2 0.0006; if() #151 Test AND if() #149 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6568 ==; Test 'if'
LOAD D2 0.0002; if() #468 Test AND if() #151 Body Start
COMPAREV D2 0
GOTOCMP 6562 >
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6562 <
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6560 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6562 <
SETV D2 0
GOTO 6563
SETV D2 1
COMPAREV D2 0
GOTOCMP 6758 ==; Test 'if'
SETV D2 1; if() #468 Body Start
STORE D2 0.0001; if() #468 Body End
GOTO 6758; if() #151 Body End
LOAD D2 0.0002; if() #469 Test AND if() #151 Else Start
COMPAREV D2 0
GOTOCMP 6577 <=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6591 <
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6589 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6591 <
SETV D2 0
GOTO 6592
SETV D2 1
COMPAREV D2 0
GOTOCMP 6758 ==; Test 'if'
SETV D2 1; if() #469 Body Start
STORE D2 0.0001; if() #469 Body End
GOTO 6758; if() #151 Else End AND if() #149 Else End AND if() #148 Else End AND if() #147 Body End
LOAD D2 0.0005; if() #470 Test AND if() #147 Else Start
PUSHR D2
LOAD D2 0.0010
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6767 !=; Test 'if' AND continue 1; AND if() #470 Body
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0010
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0003
LOAD D2 0.0004; InlineFunc[int Abs(int)] Params Start
PUSHR D2
LOAD D2 0.0009
POP D3
SUBR D3 D2
SETR D2 D3; InlineFunc[int Abs(int)] Params End
ABS D2; InlineFunc[int Abs(int)] Body
STORE D2 0.0002
LOAD D2 0.0008; if() #152 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6628 ==; Test 'if'
SETV D2 1; if() #152 Body Start
STORE D2 0.0001
GOTO 6758; if() #152 Body End
LOAD D2 0.0012; if() #153 Test AND if() #152 Else Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6696 ==; Test 'if'
LOAD D2 0.0007; if() #154 Test AND if() #153 Body Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 6667 ==; Test 'if'
LOAD D2 0.0003; if() #471 Test AND if() #154 Body Start
COMPAREV D2 0
GOTOCMP 6661 <
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6661 >
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6659 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6661 <
SETV D2 0
GOTO 6662
SETV D2 1
COMPAREV D2 0
GOTOCMP 6758 ==; Test 'if'
SETV D2 1; if() #471 Body Start
STORE D2 0.0001; if() #471 Body End
GOTO 6758; if() #154 Body End
LOAD D2 0.0003; if() #472 Test AND if() #154 Else Start
COMPAREV D2 0
GOTOCMP 6676 >=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6690 >
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6688 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6690 <
SETV D2 0
GOTO 6691
SETV D2 1
COMPAREV D2 0
GOTOCMP 6758 ==; Test 'if'
SETV D2 1; if() #472 Body Start
STORE D2 0.0001; if() #472 Body End
GOTO 6758; if() #154 Else End AND if() #153 Body End
LOAD D2 0.0007; if() #155 Test AND if() #153 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6730 ==; Test 'if'
LOAD D2 0.0003; if() #473 Test AND if() #155 Body Start
COMPAREV D2 0
GOTOCMP 6724 >
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6724 <
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6722 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6724 <
SETV D2 0
GOTO 6725
SETV D2 1
COMPAREV D2 0
GOTOCMP 6758 ==; Test 'if'
SETV D2 1; if() #473 Body Start
STORE D2 0.0001; if() #473 Body End
GOTO 6758; if() #155 Body End
LOAD D2 0.0003; if() #474 Test AND if() #155 Else Start
COMPAREV D2 0
GOTOCMP 6739 <=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6753 <
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6751 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6753 <
SETV D2 0
GOTO 6754
SETV D2 1
COMPAREV D2 0
GOTOCMP 6758 ==; Test 'if'
SETV D2 1; if() #474 Body Start
STORE D2 0.0001; if() #474 Body End
LOAD D2 0.0001; if() #155 Else End AND if() #153 Else End AND if() #152 Else End AND if() #147 Else End AND if() #475 Test
COMPAREV D2 0
GOTOCMP 6767 ==; Test 'if'
LOAD D2 0; if() #475 Body Start
STORE D2 0.0008
LOAD D2 0.0003
STORE D2 0.0007
LOAD D2 0.0002
STORE D2 0.0006; if() #475 Body End
LOAD D2 0; for() #140 Body End AND for() #140 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 6392; for() #140 End
LOAD D2 0.0008; if() #156 Test
COMPAREV D2 -1
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 6778 ==; Test 'if'
LOAD D2 0.0008; return Start AND if() #156 Body Start
GOTO 6779; return End AND if() #156 Body End
LOAD D2 0.0011; return Start AND if() #156 Else Start
POPARGS D5 0.0013; return End AND if() #156 Else End
RETURNFUNC; Func[int __Tango_GetNextMenuPos(int)] Body End
SETR D4 SP2; Func[int __Tango_GetNumSCCArgs(int)] Body Start
LOAD D2 0; if() #157 Test
COMPAREV D2 9
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6831 ==; Test 'if'
LOAD D2 0; if() #158 Test AND if() #157 Body Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6794 ==; Test 'if'
SETV D2 2; return Start AND if() #158 Body Start
GOTO 6839; return End AND if() #158 Body End
LOAD D2 0; if() #159 Test AND if() #158 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6801 ==; Test 'if'
SETV D2 1; return Start AND if() #159 Body Start
GOTO 6839; return End AND if() #159 Body End
LOAD D2 0; if() #160 Test AND if() #159 Else Start
COMPAREV D2 4
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6808 ==; Test 'if'
SETV D2 3; return Start AND if() #160 Body Start
GOTO 6839; return End AND if() #160 Body End
LOAD D2 0; if() #161 Test AND if() #160 Else Start
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6815 ==; Test 'if'
SETV D2 2; return Start AND if() #161 Body Start
GOTO 6839; return End AND if() #161 Body End
LOAD D2 0; if() #162 Test AND if() #161 Else Start
COMPAREV D2 6
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6822 ==; Test 'if'
SETV D2 2; return Start AND if() #162 Body Start
GOTO 6839; return End AND if() #162 Body End
LOAD D2 0; if() #163 Test AND if() #162 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6829 ==; Test 'if'
SETV D2 3; return Start AND if() #163 Body Start
GOTO 6839; return End AND if() #163 Body End
SETV D2 3; return Start AND if() #163 Else Start
GOTO 6839; return End AND if() #163 Else End AND if() #162 Else End AND if() #161 Else End AND if() #160 Else End AND if() #159 Else End AND if() #158 Else End AND if() #157 Body End
LOAD D2 0; if() #164 Test AND if() #157 Else Start
COMPAREV D2 17
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6838 ==; Test 'if'
SETV D2 2; return Start AND if() #164 Body Start
GOTO 6839; return End AND if() #164 Body End
SETV D2 1; return Start AND if() #164 Else Start
POP D5; return End AND if() #164 Else End AND if() #157 Else End
RETURNFUNC; Func[int __Tango_GetNumSCCArgs(int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetStringEnd(char32[])] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0002
REF_INC 0.0002
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0002; while() #8 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 6871 ==; Test 'while'
LOAD D2 0.0002; if() #479 Test AND while() #8 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 32
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 6867 ==; Test 'if'
LOAD D2 0; if() #479 Body Start
STORE D2 0.0001; if() #479 Body End
LOAD D2 0
ADDV D2 1
STORE D2 0; while() #8 Body End
GOTO 6847; while() #8 End
LOAD D2 0.0001; return Start
REF_REMOVE 0.0002; return End
POPARGS D5 0.0003
RETURNFUNC; Func[int __Tango_GetStringEnd(char32[])] Body End
SETR D4 SP2; Func[int __Tango_GetTargetOffset()] Body Start
PUSHR D4; return Start
PUSHV 5; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
PUSHR D2
PUSHR D4
PUSHV 4; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6191; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
PUSHR D4
PUSHV 4; UsrFunc[int __Tango_GetCurrFontData(int)] Params
CALLFUNC 0.6174; UsrFunc[int __Tango_GetCurrFontData(int)] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
PUSHR D4
PUSHV 9; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
RETURNFUNC; return End AND Func[int __Tango_GetTargetOffset()] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetVar(int)] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0002; if() #480 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6918 ==; Test 'if'
SETV D2 1; if() #480 Body Start
STORE D2 0
LOAD D2 0.0002
SUBV2 0 D2
STORE D2 0.0002; if() #480 Body End
LOAD D2 0.0002; if() #165 Test
COMPAREV D2 0.0034
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6929 ==; Test 'if'
PUSHR D4; if() #165 Body Start
PUSHV 22; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 7049; if() #165 Body End
LOAD D2 0.0002; if() #166 Test AND if() #165 Else Start
COMPAREV D2 0.0035
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6940 ==; Test 'if'
PUSHR D4; if() #166 Body Start
PUSHV 23; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 7049; if() #166 Body End
LOAD D2 0.0002; if() #167 Test AND if() #166 Else Start
COMPAREV D2 0.2015
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6950 ==; Test 'if'
PUSHR D4; if() #167 Body Start
CALLFUNC 0.6206; UsrFunc[int __Tango_GetCurrentCSet()] Call
POP D4
STORE D2 0.0001
GOTO 7049; if() #167 Body End
LOAD D2 0.0002; if() #168 Test AND if() #167 Else Start
COMPAREV D2 1.3059
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6960 ==; Test 'if'
PUSHR D4; if() #168 Body Start
CALLFUNC 0.6238; UsrFunc[int __Tango_GetCurrentColor()] Call
POP D4
STORE D2 0.0001
GOTO 7049; if() #168 Body End
LOAD D2 0.0002; if() #169 Test AND if() #168 Else Start
COMPAREV D2 5.1391
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6970 ==; Test 'if'
PUSHR D4; if() #169 Body Start
CALLFUNC 0.6290; UsrFunc[int __Tango_GetCurrentSpeed()] Call
POP D4
STORE D2 0.0001
GOTO 7049; if() #169 Body End
LOAD D2 0.0002; if() #170 Test AND if() #169 Else Start
COMPAREV D2 0.0997
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6980 ==; Test 'if'
PUSHR D4; if() #170 Body Start
CALLFUNC 0.6270; UsrFunc[int __Tango_GetCurrentSFX()] Call
POP D4
STORE D2 0.0001
GOTO 7049; if() #170 Body End
LOAD D2 0.0002; if() #171 Test AND if() #170 Else Start
COMPAREV D2 5.3793
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6991 ==; Test 'if'
PUSHR D4; if() #171 Body Start
PUSHV 0; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 7049; if() #171 Body End
LOAD D2 0.0002; if() #172 Test AND if() #171 Else Start
COMPAREV D2 0.0024
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7002 ==; Test 'if'
PUSHR D4; if() #172 Body Start
PUSHV 6; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 7049; if() #172 Body End
LOAD D2 0.0002; if() #173 Test AND if() #172 Else Start
COMPAREV D2 0.0025
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7013 ==; Test 'if'
PUSHR D4; return Start AND if() #173 Body Start
PUSHV 7; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
GOTO 7056; return End
GOTO 7049; if() #173 Body End
LOAD D2 0.0002; if() #174 Test AND if() #173 Else Start
COMPAREV D2 0.0024
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7024 ==; Test 'if'
PUSHR D4; if() #174 Body Start
PUSHV 18; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 7049; if() #174 Body End
LOAD D2 0.0002; if() #175 Test AND if() #174 Else Start
COMPAREV D2 57.0513
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7032 ==; Test 'if'
SETV D2 -1; if() #175 Body Start
STORE D2 0.0001
GOTO 7049; if() #175 Body End
LOAD D2 0.0002; if() #176 Test AND if() #175 Else Start
COMPAREV D2 7.5754
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7043 ==; Test 'if'
SETR D2 GD2; if() #176 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 10
STORE D2 0.0001
GOTO 7049; if() #176 Body End
PUSHR D4; if() #176 Else Start
LOAD D2 0.0002; UsrFunc[int Tango_GetCustomVar(int)] Params Start
PUSHR D2; UsrFunc[int Tango_GetCustomVar(int)] Params End
CALLFUNC 0.1198; UsrFunc[int Tango_GetCustomVar(int)] Call
POP D4
STORE D2 0.0001; if() #176 Else End
LOAD D2 0; if() #175 Else End AND if() #174 Else End AND if() #173 Else End AND if() #172 Else End AND if() #171 Else End AND if() #170 Else End AND if() #169 Else End AND if() #168 Else End AND if() #167 Else End AND if() #166 Else End AND if() #165 Else End AND if() #481 Test
COMPAREV D2 0
GOTOCMP 7055 ==; Test 'if'
LOAD D2 0.0001; if() #481 Body Start
SUBV2 0 D2
STORE D2 0.0001; if() #481 Body End
LOAD D2 0.0001; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_GetVar(int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetWordWidth(int, int[])] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0002
REF_INC 0.0002
STOREV 0 0.0001
STOREV 0 0
SETR D2 GD4; while(true) #9 Body [Opt:AlwaysOn] Start
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #482 Test
COMPAREV D2 0
GOTOCMP 7081 ==
LOAD D2 0
COMPAREV D2 32
GOTOCMP 7081 ==
LOAD D2 0
COMPAREV D2 26
GOTOCMP 7081 ==
SETV D2 0
GOTO 7082
SETV D2 1
COMPAREV D2 0
GOTOCMP 7115 !=; Test 'if' AND break 1; AND if() #482 Body
LOAD D2 0; if() #483 Test
COMPAREV D2 32
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 7101 ==; Test 'if'
LOAD D2 0.0001; if() #483 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3865; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0.0001; if() #483 Body End
PUSHR D4; if() #484 Test
LOAD D2 0; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params End
CALLFUNC 0.3402; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 7111 ==; Test 'if'
LOAD D2 0.0003; if() #484 Body Start
ADDV D2 1
STORE D2 0.0003; if() #484 Body End
LOAD D2 0.0003
ADDV D2 1
STORE D2 0.0003; while(true) #9 Body [Opt:AlwaysOn] End
GOTO 7064; while() #9 End
LOAD D2 0.0001; return Start
REF_REMOVE 0.0002; return End
POPARGS D5 0.0004
RETURNFUNC; Func[int __Tango_GetWordWidth(int, int[])] Body End
PUSHV 0; Func[void __Tango_InitializeMenu(int)] Body Start
SETR D4 SP2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 23 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 32 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 16 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 17 D2
PUSHR D4
SETR D2 GD3; UsrFunc[int Clamp(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 1
PUSHV 20; UsrFunc[int Clamp(int, int, int)] Params End
CALLFUNC 0.0063; UsrFunc[int Clamp(int, int, int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 18 D2
PUSHR D4
SETR D2 GD3; UsrFunc[int Clamp(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 19
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 1
PUSHV 20; UsrFunc[int Clamp(int, int, int)] Params End
CALLFUNC 0.0063; UsrFunc[int Clamp(int, int, int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 19 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 20
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 20 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 21
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 21 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 24 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE_OBJECT D2 0
PUSHR D4
PUSHV 7; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 7
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 25 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 9
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0
PUSHR D2
POP D0
READPODARRAYV D2 4
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 26 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 33 D2
REF_REMOVE 0
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_InitializeMenu(int)] Body End
PUSHARGSV 0 0.0003; Func[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0003
REF_INC 0.0003
MARK_TYPE_STACK 0.0001 0.0006
REF_INC 0.0006
LOAD D2 0.0004
STORE D2 0.0002
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; if() #200 Test
COMPAREV D2 48
GOTOCMP 7314 <
LOAD D2 0.0001
COMPAREV D2 57
GOTOCMP 7314 >
SETV D2 1
GOTO 7315
SETV D2 0
COMPAREV D2 0
GOTOCMP 7344 ==; Test 'if'
PUSHR D4; if() #200 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
PUSHV 1
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params End
CALLFUNC 0.9279; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Call
POP D4
STORE D2 0
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0005
PUSHR D4
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0004
ADDV D2 1
STORE D2 0.0004
GOTO 7557; if() #200 Body End
LOAD D2 0.0001; if() #201 Test AND if() #200 Else Start
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7437 ==; Test 'if'
PUSHR D4; if() #201 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5324; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; unless() #525 Test
COMPAREV D2 48
GOTOCMP 7372 <
LOAD D2 0.0001
COMPAREV D2 57
GOTOCMP 7372 >
SETV D2 1
GOTO 7373
SETV D2 0
COMPAREV D2 0
GOTOCMP 7383 !=; Test 'unless'
PUSHR D4; unless() #525 Body Start
PUSHV 106; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7583; return End AND unless() #525 Body End
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
PUSHV 1
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params End
CALLFUNC 0.9279; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5324; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006; if() #202 Test
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
COMPAREV D2 41
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7428 ==; Test 'if'
PUSHR D4; if() #202 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
LOAD D2 0.0004
ADDV D2 1
STORE D2 0.0004
GOTO 7557; if() #202 Body End
PUSHR D4; if() #202 Else Start
PUSHV 106; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7583; return End AND if() #202 Else End
GOTO 7557; if() #201 Body End
LOAD D2 0.0001; if() #203 Test AND if() #201 Else Start
COMPAREV D2 97
GOTOCMP 7445 <
LOAD D2 0.0001
COMPAREV D2 122
GOTOCMP 7445 >
SETV D2 1
GOTO 7446
SETV D2 0
COMPAREV D2 0
GOTOCMP 7549 ==; Test 'if'
PUSHR D4; if() #203 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params End
CALLFUNC 0.8865; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5324; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006; if() #204 Test
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7540 ==; Test 'if'
PUSHR D4; if() #204 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetStartMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetStartMarker(int, int)] Params End
CALLFUNC 0.8943; UsrFunc[void __Tango_SetStartMarker(int, int)] Call
PEEK D4
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004
PUSHR D4; if() #526 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params End
CALLFUNC 0.8997; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 7511 ==; Test 'if'
SETV D2 1; return Start AND if() #526 Body Start
GOTO 7583; return End AND if() #526 Body End
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0005
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0004
PUSHR D4
LOAD D2 0.0004; UsrFunc[int __Tango_SetEndMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[int __Tango_SetEndMarker(int, int)] Params End
CALLFUNC 0.9226; UsrFunc[int __Tango_SetEndMarker(int, int)] Call
POP D4
STORE D2 0.0004
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_AddPadding(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2; UsrFunc[int __Tango_AddPadding(int, int, int)] Params End
CALLFUNC 0.3259; UsrFunc[int __Tango_AddPadding(int, int, int)] Call
POP D4
STORE D2 0.0004
GOTO 7557; if() #204 Body End
PUSHR D4; if() #204 Else Start
PUSHV 104; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7583; return End AND if() #204 Else End
GOTO 7557; if() #203 Body End
PUSHR D4; if() #203 Else Start
PUSHV 104; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7583; return End AND if() #203 Else End
LOAD D2 0.0004; if() #201 Else End AND if() #200 Else End AND if() #527 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 7570 ==; Test 'if'
SETV D2 1; return Start AND if() #527 Body Start
GOTO 7583; return End AND if() #527 Body End
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
REF_REMOVE 0.0003; return End
REF_REMOVE 0.0006
POPARGS D5 0.0007
RETURNFUNC; Func[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Body End
PUSHARGSV 0 0.0004; Func[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0004
REF_INC 0.0004
MARK_TYPE_STACK 0.0001 0.0007
REF_INC 0.0007
LOAD D2 0.0007
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
LOAD D2 0.0003
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0006
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params End
CALLFUNC 0.6781; UsrFunc[int __Tango_GetNumSCCArgs(int)] Call
POP D4
STORE D2 0.0002
STOREV 0 0.0001
LOAD D2 0.0002; for() #141 LoopTest
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 7738 ==; for() #141 TestFail?
LOAD D2 0.0007; for() #141 Body Start
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
SUBV D2 1
STORE D2 0.0001
LOAD D2 0.0001; if() #187 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7647 ==; Test 'if'
PUSHR D4; if() #187 Body Start
PUSHV 107; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0006
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7751; return End
GOTO 7655; if() #187 Body End
LOAD D2 0.0001; if() #504 Test AND if() #187 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 7655 ==; Test 'if'
LOAD D2 0.0001; if() #504 Body Start
ADDV D2 256
STORE D2 0.0001; if() #504 Body End
LOAD D2 0.0006; if() #187 Else End
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0007; if() #505 Test
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -1
GOTOCMP 7674 ==
LOAD D2 0.0007
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
COMPAREV D2 255
GOTOCMP 7674 ==
SETV D2 0
GOTO 7675
SETV D2 1
COMPAREV D2 0
GOTOCMP 7722 ==; Test 'if'
LOAD D2 0.0007; if() #505 Body Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #188 Test
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7699 ==; Test 'if'
PUSHR D4; if() #188 Body Start
PUSHV 107; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0006
ADDV D2 1
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7751; return End
GOTO 7707; if() #188 Body End
LOAD D2 0; if() #506 Test AND if() #188 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 7707 ==; Test 'if'
LOAD D2 0; if() #506 Body Start
ADDV D2 256
STORE D2 0; if() #506 Body End
LOAD D2 0.0001; if() #188 Else End
PUSHR D2
LOAD D2 0
MULTV D2 254
SETV D2 254
PUSHR D2
LOAD D2 0
POP D3
MULTR D2 D3
POP D3
ADDR D2 D3
STORE D2 0.0001
LOAD D2 0.0006
ADDV D2 2
STORE D2 0.0006; if() #505 Body End
LOAD D2 0.0001
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; for() #141 Body End
LOAD D2 0.0002; for() #141 LoopIncrement
SUBV D2 1
STORE D2 0.0002
GOTO 7621; for() #141 End
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0004
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
REF_REMOVE 0.0004; return End
REF_REMOVE 0.0007
POPARGS D5 0.0008
RETURNFUNC; Func[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Body End
SETR D4 SP2; Func[bool __Tango_ValidateMessage(int)] Body Start
LOAD D2 0; if() #625 Test
COMPAREV D2 0
GOTOCMP 7768 <=
LOAD D2 0
PUSHR D2
LOAD D2 0
LSHIFTV D2 0
POP D3
COMPARER D3 D2
GOTOCMP 7768 !=
SETV D2 0
GOTO 7769
SETV D2 1
COMPAREV D2 0
GOTOCMP 7773 ==; Test 'if'
SETV D2 0; return Start AND if() #625 Body Start
GOTO 7774; return End AND if() #625 Body End
SETV D2 1; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_ValidateMessage(int)] Body End
PUSHV 0; Func[void __Tango_MenuSelect(int)] Body Start
SETR D4 SP2
SETR D2 GD2; if() #513 Test
PUSHR D2
POP D0
READPODARRAYV D2 33
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 7794 ==; Test 'if'
PUSHR D4; if() #513 Body Start
SETR D2 GD2; UsrFunc[void Tango_SaveMenuState(int[])] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 33
PUSHR D2; UsrFunc[void Tango_SaveMenuState(int[])] Params End
CALLFUNC 0.1466; UsrFunc[void Tango_SaveMenuState(int[])] Call
POP D4; if() #513 Body End
LOAD D2 0.0001
MULTV D2 3
ADDV D2 34
STORE D2 0
SETR D2 GD2
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETR D2 GD2; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 21; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 8
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
SETR D2 GD2; if() #514 Test
PUSHR D2
POP D0
READPODARRAYV D2 14
ANDV D2 2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7836 ==; Test 'if'
PUSHR D4; if() #514 Body Start
CALLFUNC 0.1120; UsrFunc[void Tango_DeactivateMenu()] Call
POP D4; if() #514 Body End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_MenuSelect(int)] Body End
PUSHARGSV 0 0.0010; Func[bool __Tango_NeedsNewLine(int, int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0010
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0008
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0.0007
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0006
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 6
STORE_OBJECT D2 0.0005
SETR D2 GD5
PUSHR D2
LOAD D2 0.0008
ADDV D2 4
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0007
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0006
ADDV D2 8
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0003
LOAD D2 0.0009; if() #189 Test
COMPAREV D2 -10000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7957 ==; Test 'if'
SETR D2 GD4; if() #189 Body Start
PUSHR D2
LOAD D2 0.0010
ADDV D2 2
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
LOAD D2 0.0004
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0006
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0004
LOAD D2 0.0009; if() #515 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7931 ==; Test 'if'
PUSHR D4; if() #515 Body Start
LOAD D2 0.0010; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
PUSHV 1; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.8055; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
SETR D2 GD4
PUSHR D2
LOAD D2 0.0010
ADDV D2 2
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009; if() #515 Body End
LOAD D2 0.0009; if() #190 Test
COMPAREV D2 33
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 7953 ==; Test 'if'
PUSHR D4; return Start AND if() #190 Body Start
LOAD D2 0.0010; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params End
CALLFUNC 0.8681; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I==
REF_REMOVE 0.0005
GOTO 8053; return End
GOTO 7965; if() #190 Body End
SETV D2 1; return Start AND if() #190 Else Start
REF_REMOVE 0.0005
GOTO 8053; return End AND if() #190 Else End
GOTO 7965; if() #189 Body End
LOAD D2 0.0009; if() #516 Test AND if() #189 Else Start
COMPAREV D2 32
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 7965 ==; Test 'if'
SETV D2 0; return Start AND if() #516 Body Start
REF_REMOVE 0.0005
GOTO 8053; return End AND if() #516 Body End
PUSHR D4; if() #189 Else End AND unless() #517 Test
LOAD D2 0.0009; UsrFunc[bool __Tango_CharacterWillFit(char32, int[], int, int)] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_CharacterWillFit(char32, int[], int, int)] Params End
CALLFUNC 0.3842; UsrFunc[bool __Tango_CharacterWillFit(char32, int[], int, int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 7981 !=; Test 'unless'
SETV D2 1; return Start AND unless() #517 Body Start
REF_REMOVE 0.0005
GOTO 8053; return End AND unless() #517 Body End
STOREV 0 0.0002
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0001
LOAD D2 0.0010; for() #145 setup
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #145 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 8031 ==; for() #145 TestFail?
SETR D2 GD4; for() #145 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
LOAD D2 0.0009; if() #191 Test
COMPAREV D2 32
GOTOCMP 8012 ==
LOAD D2 0.0009
COMPAREV D2 -10000
GOTOCMP 8012 ==
SETV D2 0
GOTO 8013
SETV D2 1
COMPAREV D2 0
GOTOCMP 8019 ==; Test 'if'
SETV D2 1; if() #191 Body Start
STORE D2 0.0002
GOTO 8031; break 1;
GOTO 8027; if() #191 Body End
LOAD D2 0.0009; if() #518 Test AND if() #191 Else Start
COMPAREV D2 33
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 8027 ==; Test 'if'
SETV D2 0; if() #518 Body Start
STORE D2 0.0002
GOTO 8031; break 1; AND if() #518 Body End
LOAD D2 0; if() #191 Else End AND for() #145 Body End AND for() #145 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 7990; for() #145 End
LOAD D2 0.0002; if() #519 Test
COMPAREV D2 0
GOTOCMP 8049 ==; Test 'if'
PUSHR D4; return Start AND if() #519 Body Start
LOAD D2 0.0010; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params End
CALLFUNC 0.8681; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I==
REF_REMOVE 0.0005
GOTO 8053; return End AND if() #519 Body End
SETV D2 0; return Start
REF_REMOVE 0.0005
GOTO 8053; return End
REF_REMOVE 0.0005
POPARGS D5 0.0012
RETURNFUNC; Func[bool __Tango_NeedsNewLine(int, int)] Body End
PUSHARGSV 0 0.0008; Func[int __Tango_RunFunction(int, bool)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0009
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0007
STOREV 2 0.0006
STOREV 0 0.0005
ALLOCATEMEMV D2 4 0
PUSHR D2
WRITEPODARRAY D2 {0,0,0,0}
POP D2
STORE_OBJECT D2 0.0004
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0007; if() #564 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 8084 ==; Test 'if'
SETV D2 1; if() #564 Body Start
STORE D2 0.0001
LOAD D2 0.0007
SUBV2 0 D2
STORE D2 0.0007; if() #564 Body End
STOREV 0 0; for() #149 setup
SETV D2 1; for() #149 LoopTest
COMPAREV D2 0
GOTOCMP 8145 ==; for() #149 TestFail?
PUSHR D4; for() #149 Body Start
LOAD D2 0.0009; UsrFunc[int __Tango_ReadArgLength(int)] Params Start
PUSHR D2
LOAD D2 0.0006
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[int __Tango_ReadArgLength(int)] Params End
CALLFUNC 1.1541; UsrFunc[int __Tango_ReadArgLength(int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0005; if() #565 Test
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8145 !=; Test 'if' AND break 1; AND if() #565 Body
LOAD D2 0; if() #566 Test
COMPAREV D2 4
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 8118 ==; Test 'if'
LOAD D2 0; if() #567 Test AND if() #566 Body Start
COMPAREV D2 4
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8141 ==; Test 'if'
PUSHR D4; if() #567 Body Start
PUSHV 204; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0147; UsrFunc[void __Tango_LogError(int)] Call
POP D4; if() #567 Body End
GOTO 8141; continue 1; AND if() #566 Body End
PUSHR D4
LOAD D2 0.0009; UsrFunc[int __Tango_ReadArg(int)] Params Start
PUSHR D2
LOAD D2 0.0006
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[int __Tango_ReadArg(int)] Params End
CALLFUNC 1.1497; UsrFunc[int __Tango_ReadArg(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D3
ADDR D2 D3
STORE D2 0.0006; for() #149 Body End
LOAD D2 0; for() #149 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 8085; for() #149 End
LOAD D2 0.0008; if() #568 Test
COMPAREV D2 0
GOTOCMP 8159 ==; Test 'if'
PUSHR D4; if() #568 Body Start
LOAD D2 0.0009; UsrFunc[void __Tango_Delete(int, int)] Params Start
PUSHR D2
LOAD D2 0.0009
PUSHR D2
LOAD D2 0.0006
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[void __Tango_Delete(int, int)] Params End
CALLFUNC 0.4008; UsrFunc[void __Tango_Delete(int, int)] Call
POP D4; if() #568 Body End
SETV D2 1
STORE D2 0.0002
LOAD D2 0.0007; if() #243 Test
COMPAREV D2 0.4513
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 8304 ==; Test 'if'
LOAD D2 0.0007; if() #244 Test AND if() #243 Body Start
COMPAREV D2 0.0081
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8184 ==; Test 'if'
LOAD D2 0.0004; if() #244 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
ADDR D2 D3
STORE D2 0.0003
GOTO 8658; if() #244 Body End
LOAD D2 0.0007; if() #245 Test AND if() #244 Else Start
COMPAREV D2 0.0123
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8210 ==; Test 'if'
PUSHR D4; if() #245 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
GOTOCMP 8204 !=
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
GOTOCMP 8204 !=
SETV D2 0
GOTO 8205
SETV D2 1
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3833; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8658; if() #245 Body End
LOAD D2 0.0007; if() #246 Test AND if() #245 Else Start
COMPAREV D2 0.0151
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8236 ==; Test 'if'
PUSHR D4; if() #246 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
GOTOCMP 8230 ==
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
GOTOCMP 8230 ==
SETV D2 1
GOTO 8231
SETV D2 0
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3833; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8658; if() #246 Body End
LOAD D2 0.0007; if() #247 Test AND if() #246 Else Start
COMPAREV D2 0.0811
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8253 ==; Test 'if'
PUSHR D4; if() #247 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
SETCMP D2 I==
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3833; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8658; if() #247 Body End
LOAD D2 0.0007; if() #248 Test AND if() #247 Else Start
COMPAREV D2 0.0989
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8267 ==; Test 'if'
PUSHR D4; if() #248 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncTab(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_FuncTab(int)] Params End
CALLFUNC 0.6141; UsrFunc[void __Tango_FuncTab(int)] Call
POP D4
GOTO 8658; if() #248 Body End
LOAD D2 0.0007; if() #249 Test AND if() #248 Else Start
COMPAREV D2 0.1446
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8285 ==; Test 'if'
LOAD D2 0.0004; if() #249 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0009
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 8658; if() #249 Body End
LOAD D2 0.0007; if() #250 Test AND if() #249 Else Start
COMPAREV D2 0.3291
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8301 ==; Test 'if'
PUSHR D4; if() #250 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5675; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8658; if() #250 Body End
SETV D2 0; if() #250 Else Start
STORE D2 0.0002; if() #250 Else End
GOTO 8658; if() #249 Else End AND if() #248 Else End AND if() #247 Else End AND if() #246 Else End AND if() #245 Else End AND if() #244 Else End AND if() #243 Body End
LOAD D2 0.0007; if() #251 Test AND if() #243 Else Start
COMPAREV D2 6.1058
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 8433 ==; Test 'if'
LOAD D2 0.0007; if() #252 Test AND if() #251 Body Start
COMPAREV D2 0.4513
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8332 ==; Test 'if'
PUSHR D4; if() #252 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I<
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3833; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8658; if() #252 Body End
LOAD D2 0.0007; if() #253 Test AND if() #252 Else Start
COMPAREV D2 0.5235
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8347 ==; Test 'if'
PUSHR D4; if() #253 Body Start
PUSHV 0.5235; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1622; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
GOTO 8658; if() #253 Body End
LOAD D2 0.0007; if() #254 Test AND if() #253 Else Start
COMPAREV D2 0.6325
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8367 ==; Test 'if'
PUSHR D4; if() #254 Body Start
LOAD D2 0.0004; UsrFunc[int Rand(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[int Rand(int, int)] Params End
CALLFUNC 0.0051; UsrFunc[int Rand(int, int)] Call
POP D4
STORE D2 0.0003
GOTO 8658; if() #254 Body End
LOAD D2 0.0007; if() #255 Test AND if() #254 Else Start
COMPAREV D2 0.7843
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8379 ==; Test 'if'
PUSHR D4; if() #255 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_FuncSync(int[])] Params Start
PUSHR D2; UsrFunc[int __Tango_FuncSync(int[])] Params End
CALLFUNC 0.6072; UsrFunc[int __Tango_FuncSync(int[])] Call
POP D4
STORE D2 0.0003
GOTO 8658; if() #255 Body End
LOAD D2 0.0007; if() #256 Test AND if() #255 Else Start
COMPAREV D2 1.1939
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8396 ==; Test 'if'
PUSHR D4; if() #256 Body Start
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8658; if() #256 Body End
LOAD D2 0.0007; if() #257 Test AND if() #256 Else Start
COMPAREV D2 1.2192
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8407 ==; Test 'if'
PUSHR D4; if() #257 Body Start
CALLFUNC 0.5654; UsrFunc[void __Tango_FuncClose()] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8658; if() #257 Body End
LOAD D2 0.0007; if() #258 Test AND if() #257 Else Start
COMPAREV D2 1.8884
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8430 ==; Test 'if'
PUSHR D4; if() #258 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I==
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3833; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8658; if() #258 Body End
SETV D2 0; if() #258 Else Start
STORE D2 0.0002; if() #258 Else End
GOTO 8658; if() #257 Else End AND if() #256 Else End AND if() #255 Else End AND if() #254 Else End AND if() #253 Else End AND if() #252 Else End AND if() #251 Body End
LOAD D2 0.0007; if() #259 Test AND if() #251 Else Start
COMPAREV D2 208.0657
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 8566 ==; Test 'if'
LOAD D2 0.0007; if() #260 Test AND if() #259 Body Start
COMPAREV D2 6.1058
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8458 ==; Test 'if'
PUSHR D4; if() #260 Body Start
LOAD D2 0.0009; UsrFunc[void __Tango_AppendMessage(int, int)] Params Start
PUSHR D2
LOAD D2 0.0006
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_AppendMessage(int, int)] Params End
CALLFUNC 0.3354; UsrFunc[void __Tango_AppendMessage(int, int)] Call
POP D4
GOTO 8658; if() #260 Body End
LOAD D2 0.0007; if() #261 Test AND if() #260 Else Start
COMPAREV D2 7.5241
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8474 ==; Test 'if'
PUSHR D4; if() #261 Body Start
LOAD D2 0.0009; UsrFunc[void __Tango_FuncAddMenuItem(int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_FuncAddMenuItem(int, int)] Params End
CALLFUNC 0.5632; UsrFunc[void __Tango_FuncAddMenuItem(int, int)] Call
POP D4
GOTO 8658; if() #261 Body End
LOAD D2 0.0007; if() #262 Test AND if() #261 Else Start
COMPAREV D2 10.8066
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8497 ==; Test 'if'
PUSHR D4; if() #262 Body Start
LOAD D2 0.0009; UsrFunc[void __Tango_FuncActivateMenu(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncActivateMenu(int, int, int)] Params End
CALLFUNC 0.5604; UsrFunc[void __Tango_FuncActivateMenu(int, int, int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8658; if() #262 Body End
LOAD D2 0.0007; if() #263 Test AND if() #262 Else Start
COMPAREV D2 29.0329
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8513 ==; Test 'if'
PUSHR D4; if() #263 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncNumber(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0009
PUSHR D2; UsrFunc[void __Tango_FuncNumber(int, int)] Params End
CALLFUNC 0.5686; UsrFunc[void __Tango_FuncNumber(int, int)] Call
POP D4
GOTO 8658; if() #263 Body End
LOAD D2 0.0007; if() #264 Test AND if() #263 Else Start
COMPAREV D2 31.4910
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8524 ==; Test 'if'
PUSHR D4; if() #264 Body Start
CALLFUNC 0.5932; UsrFunc[void __Tango_FuncPressA()] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8658; if() #264 Body End
LOAD D2 0.0007; if() #265 Test AND if() #264 Else Start
COMPAREV D2 37.4073
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8540 ==; Test 'if'
PUSHR D4; if() #265 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncString(char32[], int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0009
PUSHR D2; UsrFunc[void __Tango_FuncString(char32[], int)] Params End
CALLFUNC 0.5983; UsrFunc[void __Tango_FuncString(char32[], int)] Call
POP D4
GOTO 8658; if() #265 Body End
LOAD D2 0.0007; if() #266 Test AND if() #265 Else Start
COMPAREV D2 113.9450
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8563 ==; Test 'if'
PUSHR D4; if() #266 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3833; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8658; if() #266 Body End
SETV D2 0; if() #266 Else Start
STORE D2 0.0002; if() #266 Else End
GOTO 8658; if() #265 Else End AND if() #264 Else End AND if() #263 Else End AND if() #262 Else End AND if() #261 Else End AND if() #260 Else End AND if() #259 Body End
LOAD D2 0.0007; if() #267 Test AND if() #259 Else Start
COMPAREV D2 208.0657
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8582 ==; Test 'if'
PUSHR D4; if() #267 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncOrdinal(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0009
PUSHR D2; UsrFunc[void __Tango_FuncOrdinal(int, int)] Params End
CALLFUNC 0.5749; UsrFunc[void __Tango_FuncOrdinal(int, int)] Call
POP D4
GOTO 8658; if() #267 Body End
LOAD D2 0.0007; if() #268 Test AND if() #267 Else Start
COMPAREV D2 209.6041
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8593 ==; Test 'if'
LOAD D2 0.0004; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #268 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
GOTO 8658; if() #268 Body End
LOAD D2 0.0007; if() #269 Test AND if() #268 Else Start
COMPAREV D2 263.9732
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8609 ==; Test 'if'
PUSHR D4; if() #269 Body Start
SETR D2 GD2; UsrFunc[void Tango_SuspendSlot(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void Tango_SuspendSlot(int)] Params End
CALLFUNC 0.1888; UsrFunc[void Tango_SuspendSlot(int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8658; if() #269 Body End
LOAD D2 0.0007; if() #270 Test AND if() #269 Else Start
COMPAREV D2 1158.8044
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8622 ==; Test 'if'
PUSHR D4; if() #270 Body Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 5; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8658; if() #270 Body End
LOAD D2 0.0007; if() #271 Test AND if() #270 Else Start
COMPAREV D2 1364.9361
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8645 ==; Test 'if'
PUSHR D4; if() #271 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I!=
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3833; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8658; if() #271 Body End
LOAD D2 0.0007; if() #272 Test AND if() #271 Else Start
COMPAREV D2 1615.1672
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8656 ==; Test 'if'
PUSHR D4; if() #272 Body Start
LOAD D2 0.0009; UsrFunc[void __Tango_FuncSaveName(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_FuncSaveName(int)] Params End
CALLFUNC 0.5944; UsrFunc[void __Tango_FuncSaveName(int)] Call
POP D4
GOTO 8658; if() #272 Body End
SETV D2 0; if() #272 Else Start
STORE D2 0.0002; if() #272 Else End
LOAD D2 0.0002; if() #271 Else End AND if() #270 Else End AND if() #269 Else End AND if() #268 Else End AND if() #267 Else End AND if() #259 Else End AND if() #251 Else End AND if() #243 Else End AND unless() #569 Test
COMPAREV D2 0
GOTOCMP 8669 !=; Test 'unless'
PUSHR D4; unless() #569 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunCustomFunction(int, int[])] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2; UsrFunc[int __Tango_RunCustomFunction(int, int[])] Params End
CALLFUNC 1.1610; UsrFunc[int __Tango_RunCustomFunction(int, int[])] Call
POP D4
STORE D2 0.0003; unless() #569 Body End
LOAD D2 0.0001; if() #570 Test
COMPAREV D2 0
GOTOCMP 8675 ==; Test 'if'
LOAD D2 0.0003; if() #570 Body Start
SUBV2 0 D2
STORE D2 0.0003; if() #570 Body End
LOAD D2 0.0003; return Start
REF_REMOVE 0.0004
GOTO 8679; return End
REF_REMOVE 0.0004
POPARGS D5 0.0010
RETURNFUNC; Func[int __Tango_RunFunction(int, bool)] Body End
SETR D4 SP2; Func[bool __Tango_WordWillFit(int, int[], int, int)] Body Start
MARK_TYPE_STACK 0.0001 0.0002
REF_INC 0.0002
LOAD D2 0; return Start
PUSHR D2
LOAD D2 0.0001
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_GetWordWidth(int, int[])] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_GetWordWidth(int, int[])] Params End
CALLFUNC 0.7058; UsrFunc[int __Tango_GetWordWidth(int, int[])] Call
POP D4
POP D3
COMPARER D3 D2
SETCMP D2 I>=
REF_REMOVE 0.0002; return End
POPARGS D5 0.0004
RETURNFUNC; Func[bool __Tango_WordWillFit(int, int[], int, int)] Body End
PUSHARGSV 0 0.0002; Func[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0002
REF_INC 0.0002
MARK_TYPE_STACK 0.0001 0.0006
REF_INC 0.0006
LOAD D2 0.0004
STORE D2 0.0001
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params End
CALLFUNC 0.8865; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5324; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006; if() #192 Test
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8818 ==; Test 'if'
PUSHR D4; if() #192 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetStartMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetStartMarker(int, int)] Params End
CALLFUNC 0.8943; UsrFunc[void __Tango_SetStartMarker(int, int)] Call
POP D4
LOAD D2 0.0003; if() #193 Test
COMPAREV D2 0
GOTOCMP 8762 ==; Test 'if'
PUSHR D4; if() #193 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8770; if() #193 Body End
PUSHR D4; if() #193 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #193 Else End
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004
PUSHR D4; if() #520 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params End
CALLFUNC 0.8997; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 8789 ==; Test 'if'
SETV D2 1; return Start AND if() #520 Body Start
GOTO 8861; return End AND if() #520 Body End
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0005
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0004
PUSHR D4
LOAD D2 0.0004; UsrFunc[int __Tango_SetEndMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[int __Tango_SetEndMarker(int, int)] Params End
CALLFUNC 0.9226; UsrFunc[int __Tango_SetEndMarker(int, int)] Call
POP D4
STORE D2 0.0004
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_AddPadding(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0.0004
PUSHR D2; UsrFunc[int __Tango_AddPadding(int, int, int)] Params End
CALLFUNC 0.3259; UsrFunc[int __Tango_AddPadding(int, int, int)] Call
POP D4
STORE D2 0.0004
GOTO 8848; if() #192 Body End
PUSHR D4; if() #192 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -200; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0003; if() #194 Test
COMPAREV D2 0
GOTOCMP 8837 ==; Test 'if'
PUSHR D4; if() #194 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8845; if() #194 Body End
PUSHR D4; if() #194 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #194 Else End
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004; if() #192 Else End
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
REF_REMOVE 0.0002; return End
REF_REMOVE 0.0006
POPARGS D5 0.0007
RETURNFUNC; Func[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_ReadIdentifier(char32[], int, int[])] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0002
REF_INC 0.0002
MARK_TYPE_STACK 0.0001 0.0004
REF_INC 0.0004
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0004; while(true) #13 Body [Opt:AlwaysOn] Start
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #226 Test
COMPAREV D2 97
GOTOCMP 8887 <
LOAD D2 0
COMPAREV D2 122
GOTOCMP 8887 >
SETV D2 1
GOTO 8888
SETV D2 0
COMPAREV D2 0
GOTOCMP 8903 ==; Test 'if'
LOAD D2 0.0001; if() #226 Body Start
MULTV D2 7
STORE D2 0.0001
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
ADDV D2 1
SUBV D2 97
DIVV D2 10000
POP D3
ADDR D2 D3
STORE D2 0.0001
GOTO 8928; if() #226 Body End
LOAD D2 0; if() #227 Test AND if() #226 Else Start
COMPAREV D2 48
GOTOCMP 8911 <
LOAD D2 0
COMPAREV D2 57
GOTOCMP 8911 >
SETV D2 1
GOTO 8912
SETV D2 0
COMPAREV D2 0
GOTOCMP 8932 ==; Test 'if'
LOAD D2 0.0001; if() #227 Body Start
MULTV D2 7
STORE D2 0.0001
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
ADDV D2 27
SUBV D2 48
DIVV D2 10000
POP D3
ADDR D2 D3
STORE D2 0.0001
GOTO 8928; if() #227 Body End
GOTO 8932; break 1; AND if() #227 Else
LOAD D2 0.0003; if() #226 Else End
ADDV D2 1
STORE D2 0.0003; while(true) #13 Body [Opt:AlwaysOn] End
GOTO 8873; while() #13 End
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0001; return Start
REF_REMOVE 0.0002; return End
REF_REMOVE 0.0004
POPARGS D5 0.0005
RETURNFUNC; Func[int __Tango_ReadIdentifier(char32[], int, int[])] Body End
SETR D4 SP2; Func[void __Tango_SetStartMarker(int, int)] Body Start
LOAD D2 0; if() #299 Test
COMPAREV D2 0.0069
GOTOCMP 8961 ==
LOAD D2 0
COMPAREV D2 0.2441
GOTOCMP 8961 ==
LOAD D2 0
COMPAREV D2 11.9678
GOTOCMP 8961 ==
LOAD D2 0
COMPAREV D2 5.8497
GOTOCMP 8961 ==
LOAD D2 0
COMPAREV D2 13486.5225
GOTOCMP 8961 ==
SETV D2 0
GOTO 8962
SETV D2 1
COMPAREV D2 0
GOTOCMP 8971 ==; Test 'if'
PUSHR D4; if() #299 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -600; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8995; if() #299 Body End
LOAD D2 0; if() #300 Test AND if() #299 Else Start
COMPAREV D2 0.0986
GOTOCMP 8979 ==
LOAD D2 0
COMPAREV D2 0.0542
GOTOCMP 8979 ==
SETV D2 0
GOTO 8980
SETV D2 1
COMPAREV D2 0
GOTOCMP 8989 ==; Test 'if'
PUSHR D4; if() #300 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -300; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8995; if() #300 Body End
PUSHR D4; if() #300 Else Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -400; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #300 Else End
POPARGS D5 0.0002; if() #299 Else End
RETURNFUNC; Func[void __Tango_SetStartMarker(int, int)] Body End
PUSHARGSV 0 0.0003; Func[bool __Tango_ParseArguments(char32[], int, int, int[])] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0003
REF_INC 0.0003
MARK_TYPE_STACK 0.0001 0.0006
REF_INC 0.0006
STOREV 0 0.0002
STOREV 0 0.0001
PUSHR D4; while(true) #11 Body [Opt:AlwaysOn] Start
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5324; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; if() #195 Test
COMPAREV D2 41
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9040 ==; Test 'if'
LOAD D2 0.0005; if() #195 Body Start
ADDV D2 1
STORE D2 0.0005
LOAD D2 0.0001; if() #521 Test
COMPAREV D2 0
GOTOCMP 9209 ==; Test 'if'
PUSHR D4; if() #521 Body Start
PUSHV 105; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9222; return End AND if() #521 Body End
GOTO 9209; break 1;
GOTO 9005; if() #195 Body End
LOAD D2 0.0002; if() #196 Test AND if() #195 Else Start
COMPAREV D2 64
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9109 ==; Test 'if'
LOAD D2 0.0005; if() #196 Body Start
ADDV D2 1
STORE D2 0.0005
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; unless() #522 Test
COMPAREV D2 97
GOTOCMP 9062 <
LOAD D2 0.0002
COMPAREV D2 122
GOTOCMP 9062 >
SETV D2 1
GOTO 9063
SETV D2 0
COMPAREV D2 0
GOTOCMP 9073 !=; Test 'unless'
PUSHR D4; unless() #522 Body Start
PUSHV 105; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9222; return End AND unless() #522 Body End
PUSHR D4; if() #523 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Params End
CALLFUNC 0.8704; UsrFunc[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 9090 ==; Test 'if'
SETV D2 1; return Start AND if() #523 Body Start
GOTO 9222; return End AND if() #523 Body End
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5324; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0004
SETV D2 0
STORE D2 0.0001
GOTO 9005; if() #196 Body End
LOAD D2 0.0002; if() #197 Test AND if() #196 Else Start
COMPAREV D2 48
GOTOCMP 9115 <
LOAD D2 0.0002
COMPAREV D2 57
GOTOCMP 9120 <=
LOAD D2 0.0002
COMPAREV D2 46
GOTOCMP 9120 ==
SETV D2 0
GOTO 9121
SETV D2 1
COMPAREV D2 0
GOTOCMP 9178 ==; Test 'if'
PUSHR D4; if() #197 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
PUSHV 0
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params End
CALLFUNC 0.9279; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5324; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
PUSHR D4
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -100; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001; if() #198 Test
COMPAREV D2 0
GOTOCMP 9166 ==; Test 'if'
PUSHR D4; if() #198 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
SETV D2 0
STORE D2 0.0001
GOTO 9174; if() #198 Body End
PUSHR D4; if() #198 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #198 Else End
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004
GOTO 9005; if() #197 Body End
LOAD D2 0.0002; if() #199 Test AND if() #197 Else Start
COMPAREV D2 45
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9200 ==; Test 'if'
LOAD D2 0.0001; if() #524 Test AND if() #199 Body Start
COMPAREV D2 0
GOTOCMP 9194 ==; Test 'if'
PUSHR D4; if() #524 Body Start
PUSHV 105; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9222; return End AND if() #524 Body End
SETV D2 1
STORE D2 0.0001
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
GOTO 9005; if() #199 Body End
PUSHR D4; if() #199 Else Start
PUSHV 104; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9222; return End AND if() #199 Else End
GOTO 9005; if() #197 Else End AND if() #196 Else End AND if() #195 Else End AND while(true) #11 Body [Opt:AlwaysOn] End AND while() #11 End
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
REF_REMOVE 0.0003; return End
REF_REMOVE 0.0006
POPARGS D5 0.0007
RETURNFUNC; Func[bool __Tango_ParseArguments(char32[], int, int, int[])] Body End
SETR D4 SP2; Func[int __Tango_SetEndMarker(int, int)] Body Start
LOAD D2 0; if() #297 Test
COMPAREV D2 0.0069
GOTOCMP 9244 ==
LOAD D2 0
COMPAREV D2 0.2441
GOTOCMP 9244 ==
LOAD D2 0
COMPAREV D2 11.9678
GOTOCMP 9244 ==
LOAD D2 0
COMPAREV D2 5.8497
GOTOCMP 9244 ==
LOAD D2 0
COMPAREV D2 13486.5225
GOTOCMP 9244 ==
SETV D2 0
GOTO 9245
SETV D2 1
COMPAREV D2 0
GOTOCMP 9256 ==; Test 'if'
PUSHR D4; if() #297 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -700; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001; return Start
ADDV D2 1
GOTO 9277; return End AND if() #297 Body End
LOAD D2 0; if() #298 Test AND if() #297 Else Start
COMPAREV D2 0.0986
GOTOCMP 9264 ==
LOAD D2 0
COMPAREV D2 0.0542
GOTOCMP 9264 ==
SETV D2 0
GOTO 9265
SETV D2 1
COMPAREV D2 0
GOTOCMP 9269 ==; Test 'if'
LOAD D2 0.0001; return Start AND if() #298 Body Start
GOTO 9277; return End AND if() #298 Body End
PUSHR D4; if() #298 Else Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -500; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3326; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001; return Start
ADDV D2 1
POPARGS D5 0.0002; return End AND if() #298 Else End AND if() #297 Else End
RETURNFUNC; Func[int __Tango_SetEndMarker(int, int)] Body End
PUSHARGSV 0 0.0004; Func[int __Tango_ReadNumber(char32[], int, bool, int[])] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0004
REF_INC 0.0004
MARK_TYPE_STACK 0.0001 0.0007
REF_INC 0.0007
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0.1000 0
LOAD D2 0.0007; while(true) #14 Body [Opt:AlwaysOn] Start
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; if() #228 Test
COMPAREV D2 48
GOTOCMP 9303 <
LOAD D2 0.0002
COMPAREV D2 57
GOTOCMP 9303 >
SETV D2 1
GOTO 9304
SETV D2 0
COMPAREV D2 0
GOTOCMP 9342 ==; Test 'if'
LOAD D2 0.0001; unless() #229 Test AND if() #228 Body Start
COMPAREV D2 0
GOTOCMP 9320 !=; Test 'unless'
LOAD D2 0.0003; unless() #229 Body Start
MULTV D2 10
STORE D2 0.0003
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SUBV D2 48
POP D3
ADDR D2 D3
STORE D2 0.0003
GOTO 9364; unless() #229 Body End
LOAD D2 0.0003; unless() #229 Else Start
PUSHR D2
LOAD D2 0.0002
SUBV D2 48
PUSHR D2
LOAD D2 0
POP D3
MULTR D2 D3
POP D3
ADDR D2 D3
STORE D2 0.0003
LOAD D2 0; if() #230 Test
COMPAREV D2 0.0001
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9338 ==; Test 'if'
GOTO 9368; break 1; AND if() #230 Body Start
GOTO 9364; if() #230 Body End
LOAD D2 0; if() #230 Else Start
DIVV D2 10
STORE D2 0; if() #230 Else End
GOTO 9364; unless() #229 Else End AND if() #228 Body End
LOAD D2 0.0002; if() #231 Test AND if() #228 Else Start
COMPAREV D2 46
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9368 ==; Test 'if'
LOAD D2 0.0005; if() #232 Test AND if() #231 Body Start
COMPAREV D2 0
GOTOCMP 9355 !=
LOAD D2 0.0001
COMPAREV D2 0
GOTOCMP 9355 !=
SETV D2 0
GOTO 9356
SETV D2 1
COMPAREV D2 0
GOTOCMP 9360 ==; Test 'if'
GOTO 9368; break 1; AND if() #232 Body Start
GOTO 9364; if() #232 Body End
SETV D2 1; if() #232 Else Start
STORE D2 0.0001; if() #232 Else End
GOTO 9364; if() #231 Body End
GOTO 9368; break 1; AND if() #231 Else
LOAD D2 0.0006; if() #228 Else End
ADDV D2 1
STORE D2 0.0006; while(true) #14 Body [Opt:AlwaysOn] End
GOTO 9289; while() #14 End
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0004
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0003; return Start
REF_REMOVE 0.0004; return End
REF_REMOVE 0.0007
POPARGS D5 0.0008
RETURNFUNC; Func[int __Tango_ReadNumber(char32[], int, bool, int[])] Body End
SETR D4 SP2; Func[bool __Tango_PressAdvance(int)] Body Start
LOAD D2 0; if() #205 Test
COMPAREV D2 90
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 9387 ==; Test 'if'
SETR D2 INPUTA; return Start AND if() #205 Body Start
GOTO 9388; return End AND if() #205 Body End
SETR D2 INPUTPRESSA; return Start AND if() #205 Else Start
POP D5; return End AND if() #205 Else End
RETURNFUNC; Func[bool __Tango_PressAdvance(int)] Body End
SETR D4 SP2; Func[bool __Tango_PressMenuCancel()] Body Start
SETR D2 INPUTPRESSB; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressMenuCancel()] Body End
SETR D4 SP2; Func[bool __Tango_PressMenuSelect()] Body Start
SETR D2 INPUTPRESSA; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressMenuSelect()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_PrintNextChar(int, char32, int[])] Body Start
SETR D4 SP2
MARK_TYPE_STACK 0.0001 0.0002
REF_INC 0.0002
PUSHR D4
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0001
STOREV 0 0
LOAD D2 0.0001; if() #206 Test
ANDV D2 256
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 9426 ==; Test 'if'
PUSHR D4; if() #206 Body Start
PUSHV 4; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6191; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
PUSHR D2
PUSHR D4
PUSHV 6; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6191; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
POP D3
ADDR D2 D3
SUBV D2 16
STORE D2 0
GOTO 9433; if() #206 Body End
SETR D2 GD5; if() #206 Else Start
PUSHR D2
LOAD D2 0.0004
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0; if() #206 Else End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
PUSHR D4
CALLFUNC 0.6206; UsrFunc[int __Tango_GetCurrentCSet()] Call
POP D4
PUSHR D2
PUSHR D4
CALLFUNC 0.6238; UsrFunc[int __Tango_GetCurrentColor()] Call
POP D4
PUSHR D2
PUSHR D4
CALLFUNC 0.6318; UsrFunc[int __Tango_GetCurrentTileOffset()] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params End
CALLFUNC 0.4609; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
REF_REMOVE 0.0002
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_PrintNextChar(int, char32, int[])] Body End
PUSHARGSV 0 0.0018; Func[void __Tango_Process(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0017
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0016
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0015
STOREV 0 0.0014
PUSHR D4
LOAD D2 0.0017; UsrFunc[int Tango_GetSlotVar(int, int)] Params Start
PUSHR D2
PUSHV 3; UsrFunc[int Tango_GetSlotVar(int, int)] Params End
CALLFUNC 0.1235; UsrFunc[int Tango_GetSlotVar(int, int)] Call
POP D4
STORE D2 0.0013
SETR D2 GD4
PUSHR D2
LOAD D2 0.0013
POP D0
READPODARRAYR D2 D2
STORE D2 0.0012
LOAD D2 0.0017
MULTV D2 7
STORE D2 0.0011
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE_OBJECT D2 0.0010
STOREV 0 0.0009
STOREV 0 0.0008
STOREV 0 0.0007
STOREV 0 0.0006
STOREV 0 0.0005
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 32
COMPAREV D2 0
SETCMP D2 I!=
STORE D2 0.0004
STOREV 0 0.0003
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 12 D2
LOAD D2 0.0014; until() #12 Test
COMPAREV D2 0
GOTOCMP 10165 !=; Test 'until'
SETV D2 0; until() #12 Body Start
STORE D2 0.0009
SETV D2 0
STORE D2 0.0008
SETV D2 0
STORE D2 0.0003
LOAD D2 0.0012; if() #207 Test
COMPAREV D2 32
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 9633 ==; Test 'if'
SETR D2 GD5; if() #529 Test AND if() #207 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 21
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9595 ==; Test 'if'
SETV D2 0; if() #529 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 21
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #529 Body End
LOAD D2 0.0012
COMPAREV D2 32
SETCMP D2 I==
STORE D2 0.0003
PUSHR D4
LOAD D2 0.0016; UsrFunc[void __Tango_PrintNextChar(int, char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0012
PUSHR D2
LOAD D2 0.0010
PUSHR D2; UsrFunc[void __Tango_PrintNextChar(int, char32, int[])] Params End
CALLFUNC 0.9396; UsrFunc[void __Tango_PrintNextChar(int, char32, int[])] Call
POP D4
LOAD D2 0.0012; if() #530 Test
COMPAREV D2 32
GOTOCMP 9622 <=
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9622 !=
LOAD D2 0.0018
COMPAREV D2 2
GOTOCMP 9622 ==
LOAD D2 0.0004
COMPAREV D2 0
GOTOCMP 9622 !=
SETV D2 1
GOTO 9623
SETV D2 0
COMPAREV D2 0
GOTOCMP 9629 ==; Test 'if'
PUSHR D4; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #530 Body Start
CALLFUNC 0.6270; UsrFunc[int __Tango_GetCurrentSFX()] Call
POP D4; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body AND if() #530 Body End
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
GOTO 9949; if() #207 Body End
LOAD D2 0.0012; if() #208 Test AND if() #207 Else Start
COMPAREV D2 26
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9644 ==; Test 'if'
SETV D2 1; if() #208 Body Start
STORE D2 0.0009
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
GOTO 9949; if() #208 Body End
LOAD D2 0.0012; if() #209 Test AND if() #208 Else Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 9660 ==; Test 'if'
LOAD D2 0.0013; if() #209 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0013; UsrFunc[int __Tango_RunStringControlCode(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_RunStringControlCode(int)] Params End
CALLFUNC 1.0185; UsrFunc[int __Tango_RunStringControlCode(int)] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0.0013
GOTO 9949; if() #209 Body End
LOAD D2 0.0012; if() #210 Test AND if() #209 Else Start
COMPAREV D2 -300
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9711 ==; Test 'if'
PUSHR D4; if() #210 Body Start
LOAD D2 0.0013; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
PUSHR D2
PUSHV 1; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0784; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4
LOAD D2 0.0013
ADDV D2 6
STORE D2 0.0013
SETR D2 GD2; if() #531 Test
PUSHR D2
POP D0
READPODARRAYV D2 12
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 9949 ==; Test 'if'
SETR D2 GD2; if() #531 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0015
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE_OBJECT D2 0.0010
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 32
COMPAREV D2 0
SETCMP D2 I!=
STORE D2 0.0004
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 12 D2; if() #531 Body End
GOTO 9949; if() #210 Body End
LOAD D2 0.0012; if() #211 Test AND if() #210 Else Start
COMPAREV D2 -1000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9730 ==; Test 'if'
PUSHR D4; if() #211 Body Start
SETR D2 GD4; UsrFunc[void __Tango_SetAlternateColor(int)] Params Start
PUSHR D2
LOAD D2 0.0013
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[void __Tango_SetAlternateColor(int)] Params End
CALLFUNC 1.0853; UsrFunc[void __Tango_SetAlternateColor(int)] Call
POP D4
LOAD D2 0.0013
ADDV D2 2
STORE D2 0.0013
GOTO 9949; if() #211 Body End
LOAD D2 0.0012; if() #212 Test AND if() #211 Else Start
COMPAREV D2 -1100
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9742 ==; Test 'if'
PUSHR D4; if() #212 Body Start
CALLFUNC 0.3934; UsrFunc[void __Tango_ClearAlternateColor()] Call
POP D4
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
GOTO 9949; if() #212 Body End
LOAD D2 0.0012; if() #213 Test AND if() #212 Else Start
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9768 ==; Test 'if'
PUSHR D4; if() #213 Body Start
LOAD D2 0.0013; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
PUSHR D2
PUSHV 1; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.8055; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #532 Test
COMPAREV D2 0
GOTOCMP 9762 <=
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9762 !=
SETV D2 1
GOTO 9763
SETV D2 0
COMPAREV D2 0
GOTOCMP 9949 ==; Test 'if'
SETV D2 1; if() #532 Body Start
STORE D2 0.0014; if() #532 Body End
GOTO 9949; if() #213 Body End
LOAD D2 0.0012; if() #214 Test AND if() #213 Else Start
COMPAREV D2 -600
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9793 ==; Test 'if'
PUSHR D4; if() #214 Body Start
LOAD D2 0.0013; UsrFunc[int __Tango_RunFlowControl(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_RunFlowControl(int)] Params End
CALLFUNC 1.0887; UsrFunc[int __Tango_RunFlowControl(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #533 Test
COMPAREV D2 0
GOTOCMP 9787 <=
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9787 !=
SETV D2 1
GOTO 9788
SETV D2 0
COMPAREV D2 0
GOTOCMP 9949 ==; Test 'if'
SETV D2 1; if() #533 Body Start
STORE D2 0.0014; if() #533 Body End
GOTO 9949; if() #214 Body End
LOAD D2 0.0012; if() #215 Test AND if() #214 Else Start
COMPAREV D2 -10000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9850 ==; Test 'if'
LOAD D2 0.0007; unless() #534 Test AND if() #215 Body Start
COMPAREV D2 0
GOTOCMP 9808 !=; Test 'unless'
PUSHR D4; unless() #534 Body Start
LOAD D2 0.0015; UsrFunc[void __Tango_InitializeMenu(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_InitializeMenu(int)] Params End
CALLFUNC 0.7119; UsrFunc[void __Tango_InitializeMenu(int)] Call
POP D4
SETV D2 1
STORE D2 0.0007; unless() #534 Body End
PUSHR D4
LOAD D2 0.0013; UsrFunc[void __Tango_ReadChoice(int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0011
PUSHR D2
LOAD D2 0.0016
PUSHR D2
LOAD D2 0.0015
PUSHR D2; UsrFunc[void __Tango_ReadChoice(int, int, int, int)] Params End
CALLFUNC 1.1168; UsrFunc[void __Tango_ReadChoice(int, int, int, int)] Call
POP D4
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0006
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0013
ADDV D2 2
STORE D2 0.0013
GOTO 9949; if() #215 Body End
LOAD D2 0.0012; if() #216 Test AND if() #215 Else Start
COMPAREV D2 -20000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9877 ==; Test 'if'
PUSHR D4; if() #216 Body Start
LOAD D2 0.0016; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params Start
PUSHR D2
LOAD D2 0.0007
PUSHR D2; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params End
CALLFUNC 1.1268; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Call
POP D4
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
SETV D2 1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 21
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 10165; break 1;
GOTO 9949; if() #216 Body End
LOAD D2 0.0012; if() #217 Test AND if() #216 Else Start
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9935 ==; Test 'if'
PUSHR D4; if() #217 Body Start
LOAD D2 0.0016; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params Start
PUSHR D2
LOAD D2 0.0007
PUSHR D2; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params End
CALLFUNC 1.1268; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Call
POP D4
SETV D2 2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD3; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
LOAD D2 0.0015
ADDV D2 14
POP D0
READPODARRAYR D2 D2; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
SETR D2 GD3; if() #535 Test
PUSHR D2
LOAD D2 0.0015
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 4
COMPAREV D2 0
GOTOCMP 9920 ==
LOAD D2 0.0018
COMPAREV D2 2
GOTOCMP 9920 ==
SETV D2 1
GOTO 9921
SETV D2 0
COMPAREV D2 0
GOTOCMP 10165 ==; Test 'if'
SETV D2 90; if() #535 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #535 Body End
GOTO 10165; break 1;
GOTO 9949; if() #217 Body End
LOAD D2 0.0012; if() #536 Test AND if() #217 Else Start
COMPAREV D2 -1
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 9946 ==; Test 'if'
PUSHR D4; if() #536 Body Start
PUSHV 201; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0012
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1458; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4; if() #536 Body End
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013; if() #217 Else End
SETR D2 GD4; if() #216 Else End AND if() #215 Else End AND if() #214 Else End AND if() #213 Else End AND if() #212 Else End AND if() #211 Else End AND if() #210 Else End AND if() #209 Else End AND if() #208 Else End AND if() #207 Else End
PUSHR D2
LOAD D2 0.0013
POP D0
READPODARRAYR D2 D2
STORE D2 0.0012
LOAD D2 0.0012; if() #537 Test
COMPAREV D2 33
GOTOCMP 9963 >=
LOAD D2 0.0012
COMPAREV D2 32
GOTOCMP 9963 ==
SETV D2 0
GOTO 9964
SETV D2 1
COMPAREV D2 0
GOTOCMP 9982 ==; Test 'if'
LOAD D2 0.0018; if() #538 Test AND if() #537 Body Start
COMPAREV D2 2
GOTOCMP 9977 ==
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9977 !=
LOAD D2 0.0004
COMPAREV D2 0
GOTOCMP 9977 !=
SETV D2 1
GOTO 9978
SETV D2 0
COMPAREV D2 0
GOTOCMP 9982 ==; Test 'if'
SETV D2 1; if() #538 Body Start
STORE D2 0.0008; if() #538 Body End
LOAD D2 0.0009; if() #537 Body End AND unless() #539 Test
COMPAREV D2 0
GOTOCMP 9993 !=; Test 'unless'
PUSHR D4; unless() #539 Body Start
LOAD D2 0.0017; UsrFunc[bool __Tango_NeedsNewLine(int, int)] Params Start
PUSHR D2
LOAD D2 0.0013
PUSHR D2; UsrFunc[bool __Tango_NeedsNewLine(int, int)] Params End
CALLFUNC 0.7838; UsrFunc[bool __Tango_NeedsNewLine(int, int)] Call
POP D4
STORE D2 0.0009; unless() #539 Body End
LOAD D2 0.0009; if() #540 Test
COMPAREV D2 0
GOTOCMP 10128 ==; Test 'if'
LOAD D2 0.0003; if() #541 Test AND if() #540 Body Start
COMPAREV D2 0
GOTOCMP 10024 ==; Test 'if'
SETR D2 GD5; if() #541 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
PUSHV 32; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
LOAD D2 0.0010
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3865; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #541 Body End
PUSHR D4
LOAD D2 0.0007; UsrFunc[int __Tango_StartNewLine(bool)] Params Start
PUSHR D2; UsrFunc[int __Tango_StartNewLine(bool)] Params End
CALLFUNC 1.1393; UsrFunc[int __Tango_StartNewLine(bool)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0005; if() #542 Test
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 10123 ==; Test 'if'
LOAD D2 0.0007; if() #218 Test AND if() #542 Body Start
COMPAREV D2 0
GOTOCMP 10043 !=
LOAD D2 0.0018
COMPAREV D2 2
GOTOCMP 10043 ==
SETV D2 0
GOTO 10044
SETV D2 1
COMPAREV D2 0
GOTOCMP 10111 ==; Test 'if'
SETR D2 GD5; if() #543 Test AND if() #218 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10083 ==; Test 'if'
SETR D2 GD5; if() #543 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0005
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #543 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0005
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0007; if() #544 Test
COMPAREV D2 0
GOTOCMP 10123 ==; Test 'if'
PUSHR D4; if() #544 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_ShiftMenuUp(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ShiftMenuUp(int)] Params End
CALLFUNC 1.1455; UsrFunc[void __Tango_ShiftMenuUp(int)] Call
POP D4; if() #544 Body End
GOTO 10123; if() #218 Body End
LOAD D2 0.0005; if() #218 Else Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1
STORE D2 0.0014; if() #218 Else End
LOAD D2 0.0004; if() #542 Body End AND if() #545 Test
COMPAREV D2 0
GOTOCMP 10128 ==; Test 'if'
SETV D2 1; if() #545 Body Start
STORE D2 0.0008; if() #545 Body End
LOAD D2 0.0008; if() #540 Body End AND if() #546 Test
COMPAREV D2 0
GOTOCMP 9546 ==; Test 'if'
SETR D2 GD5; if() #546 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
CALLFUNC 0.6290; UsrFunc[int __Tango_GetCurrentSpeed()] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD5; if() #547 Test
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 9546 ==; Test 'if'
SETV D2 1; if() #547 Body Start
STORE D2 0.0014; if() #547 Body End
GOTO 9546; if() #546 Body End AND until() #12 Body End AND until() #12 End
LOAD D2 0.0004; if() #548 Test
COMPAREV D2 0
GOTOCMP 10172 ==; Test 'if'
PUSHR D4; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #548 Body Start
CALLFUNC 0.6270; UsrFunc[int __Tango_GetCurrentSFX()] Call
POP D4; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body AND if() #548 Body End
LOAD D2 0.0013
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
REF_REMOVE 0.0010
POPARGS D5 0.0019
RETURNFUNC; Func[void __Tango_Process(int)] Body End
PUSHARGSV 0 0.0004; Func[int __Tango_RunStringControlCode(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0004
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params End
CALLFUNC 0.6781; UsrFunc[int __Tango_GetNumSCCArgs(int)] Call
POP D4
STORE D2 0.0002
ALLOCATEMEMV D2 3 0
PUSHR D2
WRITEPODARRAY D2 {0,0,0}
POP D2
STORE_OBJECT D2 0.0001
LOAD D2 0.0004
ADDV D2 1
STORE D2 0.0004
STOREV 0 0; for() #150 setup
LOAD D2 0; for() #150 LoopTest
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 10236 ==; for() #150 TestFail?
SETR D2 GD4; for() #150 Body Start
PUSHR D2
LOAD D2 0.0004
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0004
ADDV D2 1
STORE D2 0.0004; for() #150 Body End
LOAD D2 0; for() #150 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 10208; for() #150 End
LOAD D2 0.0003; if() #273 Test
COMPAREV D2 11
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 10480 ==; Test 'if'
LOAD D2 0.0003; if() #274 Test AND if() #273 Body Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10264 ==; Test 'if'
PUSHR D4; if() #274 Body Start
PUSHV 0.2015; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1622; UsrFunc[void __Tango_SetVar(int, int)] Call
PEEK D4
PUSHV 1.3059; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1622; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
GOTO 10777; if() #274 Body End
LOAD D2 0.0003; if() #275 Test AND if() #274 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10279 ==; Test 'if'
PUSHR D4; if() #275 Body Start
PUSHV 5.1391; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1622; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
GOTO 10777; if() #275 Body End
LOAD D2 0.0003; if() #276 Test AND if() #275 Else Start
COMPAREV D2 4
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10310 ==; Test 'if'
LOAD D2 0.0001; if() #573 Test AND if() #276 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 SDD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10777 ==; Test 'if'
PUSHR D4; if() #573 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5675; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #573 Body End
GOTO 10777; if() #276 Body End
LOAD D2 0.0003; if() #277 Test AND if() #276 Else Start
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10334 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[int Rand(int)] Params Start AND if() #574 Test AND if() #277 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
SETR D3 D2; InlineFunc[int Rand(int)] Params End
RNDR D2 D3; InlineFunc[int Rand(int)] Body
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10777 ==; Test 'if'
PUSHR D4; if() #574 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5675; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #574 Body End
GOTO 10777; if() #277 Body End
LOAD D2 0.0003; if() #278 Test AND if() #277 Else Start
COMPAREV D2 6
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10357 ==; Test 'if'
LOAD D2 0.0001; if() #575 Test AND if() #278 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 LINKITEMD
COMPAREV D2 0
GOTOCMP 10777 ==; Test 'if'
PUSHR D4; if() #575 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5675; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #575 Body End
GOTO 10777; if() #278 Body End
LOAD D2 0.0003; if() #279 Test AND if() #278 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10388 ==; Test 'if'
LOAD D2 0.0001; if() #576 Test AND if() #279 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10777 ==; Test 'if'
PUSHR D4; if() #576 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5675; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #576 Body End
GOTO 10777; if() #279 Body End
LOAD D2 0.0003; if() #280 Test AND if() #279 Else Start
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10431 ==; Test 'if'
LOAD D2 0.0001; if() #577 Test AND if() #280 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
POP D3
DIVR D3 D2
SETR D2 D3
MULTV D2 100
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10777 ==; Test 'if'
PUSHR D4; if() #577 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5675; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #577 Body End
GOTO 10777; if() #280 Body End
LOAD D2 0.0003; if() #281 Test AND if() #280 Else Start
COMPAREV D2 9
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10457 ==; Test 'if'
LOAD D2 0.0001; if() #578 Test AND if() #281 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMELITEMSD
ANDV D2 1
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 10777 ==; Test 'if'
PUSHR D4; if() #578 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5675; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #578 Body End
GOTO 10777; if() #281 Body End
PUSHR D4; if() #579 Test AND if() #281 Else Start
PUSHV 8; UsrFunc[int NumTriforcePieces(int)] Params
CALLFUNC 0.0088; UsrFunc[int NumTriforcePieces(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10777 ==; Test 'if'
PUSHR D4; if() #579 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5675; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #579 Body End
GOTO 10777; if() #281 Else End AND if() #280 Else End AND if() #279 Else End AND if() #278 Else End AND if() #277 Else End AND if() #276 Else End AND if() #275 Else End AND if() #274 Else End AND if() #273 Body End
LOAD D2 0.0003; if() #282 Test AND if() #273 Else Start
COMPAREV D2 11
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10518 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[int Min(int, int)] Params Start AND if() #282 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
ADDR D2 D3
PUSHVARGR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHVARGR GAMEMCOUNTERD; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10777; if() #282 Body End
LOAD D2 0.0003; if() #283 Test AND if() #282 Else Start
COMPAREV D2 12
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10550 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[int Max(int, int)] Params Start AND if() #283 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
SUBR D3 D2
PUSHVARGR D3
PUSHVARGV 0; InlineFunc[int Max(int, int)] Params End
MAXVARG; InlineFunc[int Max(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10777; if() #283 Body End
LOAD D2 0.0003; if() #284 Test AND if() #283 Else Start
COMPAREV D2 13
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10581 ==; Test 'if'
PUSHR D4; if() #284 Body Start
LOAD D2 0.0001; UsrFunc[int Clamp(int, int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2
PUSHV 0
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHR GAMEMCOUNTERD; UsrFunc[int Clamp(int, int, int)] Params End
CALLFUNC 0.0063; UsrFunc[int Clamp(int, int, int)] Call
POP D4
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10777; if() #284 Body End
LOAD D2 0.0003; if() #285 Test AND if() #284 Else Start
COMPAREV D2 14
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10633 ==; Test 'if'
LOAD D2 0.0001; if() #285 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
MULTR D2 D3
DIVV D2 100
LSHIFTV D2 0
STORE D2 0
LOAD D2 0.0001; InlineFunc[int Min(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHVARGR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHVARGR GAMEMCOUNTERD; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10777; if() #285 Body End
LOAD D2 0.0003; if() #286 Test AND if() #285 Else Start
COMPAREV D2 15
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10679 ==; Test 'if'
LOAD D2 0.0001; if() #286 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
MULTR D2 D3
DIVV D2 100
LSHIFTV D2 0
STORE D2 0
LOAD D2 0.0001; InlineFunc[int Max(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0
POP D3
SUBR D3 D2
PUSHVARGR D3
PUSHVARGV 0; InlineFunc[int Max(int, int)] Params End
MAXVARG; InlineFunc[int Max(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10777; if() #286 Body End
LOAD D2 0.0003; if() #287 Test AND if() #286 Else Start
COMPAREV D2 16
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10724 ==; Test 'if'
LOAD D2 0.0001; if() #287 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
MULTR D2 D3
DIVV D2 100
LSHIFTV D2 0
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[int Clamp(int, int, int)] Params Start
PUSHR D2
PUSHV 0
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHR GAMEMCOUNTERD; UsrFunc[int Clamp(int, int, int)] Params End
CALLFUNC 0.0063; UsrFunc[int Clamp(int, int, int)] Call
POP D4
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10777; if() #287 Body End
LOAD D2 0.0003; if() #288 Test AND if() #287 Else Start
COMPAREV D2 17
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10740 ==; Test 'if'
SETV D2 1; if() #288 Body Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR LINKITEMD D2
GOTO 10777; if() #288 Body End
LOAD D2 0.0003; if() #289 Test AND if() #288 Else Start
COMPAREV D2 18
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10756 ==; Test 'if'
SETV D2 0; if() #289 Body Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR LINKITEMD D2
GOTO 10777; if() #289 Body End
LOAD D2 0.0003; if() #290 Test AND if() #289 Else Start
COMPAREV D2 21
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10767 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #290 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
GOTO 10777; if() #290 Body End
LOAD D2 0.0003; if() #580 Test AND if() #290 Else Start
COMPAREV D2 22
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10777 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[void Audio::PlayMIDI(int)] Params Start AND if() #580 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0; InlineFunc[void Audio::PlayMIDI(int)] Params End
PLAYMIDIR D2; InlineFunc[void Audio::PlayMIDI(int)] Body AND if() #580 Body End
LOAD D2 0.0002; if() #290 Else End AND if() #289 Else End AND if() #288 Else End AND if() #287 Else End AND if() #286 Else End AND if() #285 Else End AND if() #284 Else End AND if() #283 Else End AND if() #282 Else End AND if() #273 Else End AND return Start
ADDV D2 1
REF_REMOVE 0.0001
GOTO 10782; return End
REF_REMOVE 0.0001
POPARGS D5 0.0005
RETURNFUNC; Func[int __Tango_RunStringControlCode(int)] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_RunSetter(int, bool)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
PUSHR D4
LOAD D2 0.0005; UsrFunc[int __Tango_ReadArgLength(int)] Params Start
ADDV D2 4
PUSHR D2; UsrFunc[int __Tango_ReadArgLength(int)] Params End
CALLFUNC 1.1541; UsrFunc[int __Tango_ReadArgLength(int)] Call
POP D4
STORE D2 0.0001
PUSHR D4
LOAD D2 0.0005; UsrFunc[int __Tango_ReadArg(int)] Params Start
ADDV D2 4
PUSHR D2; UsrFunc[int __Tango_ReadArg(int)] Params End
CALLFUNC 1.1497; UsrFunc[int __Tango_ReadArg(int)] Call
POP D4
STORE D2 0
LOAD D2 0.0003; if() #571 Test
COMPAREV D2 0.0542
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10829 ==; Test 'if'
LOAD D2 0; if() #571 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0002; UsrFunc[int __Tango_GetVar(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetVar(int)] Params End
CALLFUNC 0.6904; UsrFunc[int __Tango_GetVar(int)] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0; if() #571 Body End
PUSHR D4
LOAD D2 0.0002; UsrFunc[void __Tango_SetVar(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1622; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
LOAD D2 0.0004; if() #572 Test
COMPAREV D2 0
GOTOCMP 10851 ==; Test 'if'
PUSHR D4; if() #572 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_Delete(int, int)] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 3
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[void __Tango_Delete(int, int)] Params End
CALLFUNC 0.4008; UsrFunc[void __Tango_Delete(int, int)] Call
POP D4; if() #572 Body End
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_RunSetter(int, bool)] Body End
SETR D4 SP2; Func[void __Tango_SetAlternateColor(int)] Body Start
PUSHR D4
PUSHV 10; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCurrStyleData(int)] Params Start
ADDV D2 35
PUSHR D2; UsrFunc[int __Tango_GetCurrStyleData(int)] Params End
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 11; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCurrStyleData(int)] Params Start
ADDV D2 39
PUSHR D2; UsrFunc[int __Tango_GetCurrStyleData(int)] Params End
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 12; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCurrStyleData(int)] Params Start
ADDV D2 43
PUSHR D2; UsrFunc[int __Tango_GetCurrStyleData(int)] Params End
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
POP D5
RETURNFUNC; Func[void __Tango_SetAlternateColor(int)] Body End
PUSHARGSV 0 0.0007; Func[int __Tango_RunFlowControl(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0007
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0006
STOREV 0 0.0005
STOREV 1 0.0004
STOREV 0 0.0003
STOREV 0 0.0002
LOAD D2 0.0006; if() #558 Test
COMPAREV D2 0.2441
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 10921 ==; Test 'if'
PUSHR D4; if() #558 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_ReadArgLength(int)] Params Start
ADDV D2 2
PUSHR D2; UsrFunc[int __Tango_ReadArgLength(int)] Params End
CALLFUNC 1.1541; UsrFunc[int __Tango_ReadArgLength(int)] Call
POP D4
STORE D2 0.0003
PUSHR D4
LOAD D2 0.0007; UsrFunc[int __Tango_ReadArg(int)] Params Start
ADDV D2 2
PUSHR D2; UsrFunc[int __Tango_ReadArg(int)] Params End
CALLFUNC 1.1497; UsrFunc[int __Tango_ReadArg(int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I!=
STORE D2 0.0002; if() #558 Body End
LOAD D2 0.0006; if() #234 Test
COMPAREV D2 0.0069
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10979 ==; Test 'if'
LOAD D2 0.0002; if() #235 Test AND if() #234 Body Start
COMPAREV D2 0
GOTOCMP 10973 ==; Test 'if'
PUSHR D4; if() #235 Body Start
PUSHV 20; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETR D2 GD4; if() #236 Test
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10961 ==; Test 'if'
PUSHR D4; if() #236 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.8055; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0.0005
GOTO 11139; if() #236 Body End
PUSHR D4; if() #236 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0784; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #236 Else End
GOTO 11139; if() #235 Body End
PUSHR D4; if() #235 Else Start
PUSHV 20; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4; if() #235 Else End
GOTO 11139; if() #234 Body End
LOAD D2 0.0006; if() #237 Test AND if() #234 Else Start
COMPAREV D2 11.9678
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11042 ==; Test 'if'
LOAD D2 0.0002; if() #559 Test AND if() #237 Body Start
COMPAREV D2 0
GOTOCMP 10995 ==
PUSHR D4
PUSHV 20; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 10995 !=
SETV D2 1
GOTO 10996
SETV D2 0
COMPAREV D2 0
GOTOCMP 11139 ==; Test 'if'
PUSHR D4; if() #559 Body Start
PUSHV 20; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETR D2 GD4; if() #238 Test
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11030 ==; Test 'if'
PUSHR D4; if() #238 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.8055; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0.0005
GOTO 11139; if() #238 Body End
PUSHR D4; if() #238 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0784; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #238 Else End
GOTO 11139; if() #559 Body End AND if() #237 Body End
LOAD D2 0.0006; if() #239 Test AND if() #237 Else Start
COMPAREV D2 0.2441
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11082 ==; Test 'if'
PUSHR D4; if() #560 Test AND if() #239 Body Start
PUSHV 20; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3033; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11139 ==; Test 'if'
SETR D2 GD4; if() #240 Test AND if() #560 Body Start
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11074 ==; Test 'if'
PUSHR D4; if() #240 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.8055; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0.0005
GOTO 11139; if() #240 Body End
PUSHR D4; if() #240 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0784; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #240 Else End
GOTO 11139; if() #560 Body End AND if() #239 Body End
LOAD D2 0.0006; if() #241 Test AND if() #239 Else Start
COMPAREV D2 5.8497
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11132 ==; Test 'if'
LOAD D2 0.0002; if() #561 Test AND if() #241 Body Start
COMPAREV D2 0
GOTOCMP 11139 ==; Test 'if'
SETR D2 GD4; if() #242 Test AND if() #561 Body Start
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11116 ==; Test 'if'
PUSHR D4; if() #242 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.8055; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
GOTO 11127; if() #242 Body End
PUSHR D4; if() #242 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0784; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #242 Else End
SETV D2 1
STORE D2 0.0005
SETV D2 0
STORE D2 0.0004; if() #561 Body End
GOTO 11139; if() #241 Body End
LOAD D2 0.0002; unless() #562 Test AND if() #241 Else Start
COMPAREV D2 0
GOTOCMP 11139 !=; Test 'unless'
SETV D2 1; unless() #562 Body Start
STORE D2 0.0005
SETV D2 0
STORE D2 0.0004; unless() #562 Body End
LOAD D2 0.0004; if() #241 Else End AND if() #239 Else End AND if() #237 Else End AND if() #234 Else End AND if() #563 Test
COMPAREV D2 0
GOTOCMP 11165 ==; Test 'if'
LOAD D2 0.0007; if() #563 Body Start
ADDV D2 4
STORE D2 0
SETR D2 GD4; while() #15 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -700
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 11158 ==; Test 'while'
LOAD D2 0; while() #15 Body Start
ADDV D2 1
STORE D2 0; while() #15 Body End
GOTO 11145; while() #15 End
PUSHR D4
LOAD D2 0.0007; UsrFunc[void __Tango_Delete(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_Delete(int, int)] Params End
CALLFUNC 0.4008; UsrFunc[void __Tango_Delete(int, int)] Call
POP D4; if() #563 Body End
LOAD D2 0.0005; return Start
POPARGS D5 0.0008; return End
RETURNFUNC; Func[int __Tango_RunFlowControl(int)] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_ReadChoice(int, int, int, int)] Body Start
SETR D4 SP2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0005
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 7
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 7
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 5
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0005
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0001
SETR D2 GD4
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[void Tango_AddMenuChoice(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void Tango_AddMenuChoice(int, int, int)] Params End
CALLFUNC 0.0547; UsrFunc[void Tango_AddMenuChoice(int, int, int)] Call
POP D4
POPARGS D5 0.0007
RETURNFUNC; Func[void __Tango_ReadChoice(int, int, int, int)] Body End
PUSHARGSV 0 0.0006; Func[void __Tango_TransferCenteredLine(int, bool)] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0005; if() #594 Test
ANDV D2 256
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11391 !=; Test 'if' AND return (Void) AND if() #594 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 16
STORE D2 0.0002
PUSHR D4
PUSHV 8; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0001
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0003
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
SUBR D3 D2
SETR D2 D3
DIVV D2 2
STORE D2 0
PUSHV 0; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params Start
PUSHV 6
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
LOAD D2 0.0003
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
PUSHV 0
PUSHV 1; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params End
BITMAPR; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body End
PUSHV 0; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
ADDV D2 16
PUSHR D2
PUSHV 0
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
PUSHV 128; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
LOAD D2 0.0006; if() #595 Test
COMPAREV D2 0
GOTOCMP 11391 ==; Test 'if'
PUSHR D4; if() #595 Body Start
LOAD D2 0; UsrFunc[void __Tango_ShiftMenuRight(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ShiftMenuRight(int)] Params End
CALLFUNC 1.2122; UsrFunc[void __Tango_ShiftMenuRight(int)] Call
POP D4; if() #595 Body End
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_TransferCenteredLine(int, bool)] Body End
PUSHV 0; Func[int __Tango_StartNewLine(bool)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params End
CALLFUNC 1.1268; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Call
PEEK D4
PUSHV 3; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6191; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
CALLFUNC 0.6324; UsrFunc[int __Tango_GetLineHeight()] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 5
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4; return Start
CALLFUNC 0.6875; UsrFunc[int __Tango_GetTargetOffset()] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_StartNewLine(bool)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ShiftMenuUp(int)] Body Start
SETR D4 SP2
STOREV 35 0.0001
STOREV 0 0; for() #155 setup
LOAD D2 0; for() #155 LoopTest
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 11495 ==; for() #155 TestFail?
SETR D2 GD2; for() #155 Body Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
ADDV D2 3
STORE D2 0.0001; for() #155 Body End
LOAD D2 0; for() #155 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 11459; for() #155 End
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_ShiftMenuUp(int)] Body End
PUSHV 0; Func[int __Tango_ReadArg(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #221 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11517 ==; Test 'if'
PUSHR D4; return Start AND if() #221 Body Start
LOAD D2 0.0001; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.8055; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
GOTO 11539; return End AND if() #221 Body End
LOAD D2 0; if() #222 Test AND if() #221 Else Start
COMPAREV D2 -200
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11533 ==; Test 'if'
PUSHR D4; return Start AND if() #222 Body Start
SETR D2 GD4; UsrFunc[int __Tango_GetVar(int)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[int __Tango_GetVar(int)] Params End
CALLFUNC 0.6904; UsrFunc[int __Tango_GetVar(int)] Call
POP D4
GOTO 11539; return End AND if() #222 Body End
SETR D2 GD4; return Start AND if() #222 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End AND if() #222 Else End AND if() #221 Else End
RETURNFUNC; Func[int __Tango_ReadArg(int)] Body End
PUSHARGSV 0 0.0004; Func[int __Tango_ReadArgLength(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0004
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
LOAD D2 0.0003; if() #223 Test
COMPAREV D2 -100
GOTOCMP 11557 ==
LOAD D2 0.0003
COMPAREV D2 -200
GOTOCMP 11557 ==
SETV D2 0
GOTO 11558
SETV D2 1
COMPAREV D2 0
GOTOCMP 11562 ==; Test 'if'
SETV D2 2; return Start AND if() #223 Body Start
GOTO 11608; return End AND if() #223 Body End
LOAD D2 0.0003; if() #224 Test AND if() #223 Else Start
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11607 ==; Test 'if'
STOREV 0 0.0002; if() #224 Body Start
STOREV 0 0.0001
STOREV 0 0
SETR D2 GD4; do-while() #1 Body Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; if() #225 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11589 ==; Test 'if'
LOAD D2 0.0002; if() #225 Body Start
ADDV D2 1
STORE D2 0.0002
GOTO 11597; if() #225 Body End
LOAD D2 0.0001; if() #551 Test AND if() #225 Else Start
COMPAREV D2 -500
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11597 ==; Test 'if'
LOAD D2 0.0002; if() #551 Body Start
SUBV D2 1
STORE D2 0.0002; if() #551 Body End
LOAD D2 0; if() #225 Else End
ADDV D2 1
STORE D2 0; do-while() #1 Body End
LOAD D2 0.0002; do-while() #1 Test
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 11570 !=; Test 'while'
LOAD D2 0; return Start
GOTO 11608; return End AND if() #224 Body End
SETV D2 0; return Start AND if() #224 Else Start
POPARGS D5 0.0005; return End AND if() #224 Else End AND if() #223 Else End
RETURNFUNC; Func[int __Tango_ReadArgLength(int)] Body End
SETR D4 SP2; Func[int __Tango_RunCustomFunction(int, int[])] Body Start
MARK_TYPE_STACK 0.0001 0
REF_INC 0
PUSHR D4
LOAD D2 0.0001; UsrFunc[void Tango_LogUndefinedFunction(int)] Params Start
PUSHR D2; UsrFunc[void Tango_LogUndefinedFunction(int)] Params End
CALLFUNC 0.1449; UsrFunc[void Tango_LogUndefinedFunction(int)] Call
POP D4
SETV D2 0; return Start
REF_REMOVE 0; return End
POPARGS D5 0.0002
RETURNFUNC; Func[int __Tango_RunCustomFunction(int, int[])] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_SetVar(int, int)] Body Start
SETR D4 SP2
LOAD D2 0.0003; if() #301 Test
COMPAREV D2 0.0034
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11636 ==; Test 'if'
PUSHR D4; if() #301 Body Start
PUSHV 22; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11790; if() #301 Body End
LOAD D2 0.0003; if() #302 Test AND if() #301 Else Start
COMPAREV D2 0.0035
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11648 ==; Test 'if'
PUSHR D4; if() #302 Body Start
PUSHV 23; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11790; if() #302 Body End
LOAD D2 0.0003; if() #303 Test AND if() #302 Else Start
COMPAREV D2 0.2015
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11660 ==; Test 'if'
PUSHR D4; if() #303 Body Start
PUSHV 8; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11790; if() #303 Body End
LOAD D2 0.0003; if() #304 Test AND if() #303 Else Start
COMPAREV D2 1.3059
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11672 ==; Test 'if'
PUSHR D4; if() #304 Body Start
PUSHV 9; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11790; if() #304 Body End
LOAD D2 0.0003; if() #305 Test AND if() #304 Else Start
COMPAREV D2 5.1391
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11684 ==; Test 'if'
PUSHR D4; if() #305 Body Start
PUSHV 13; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11790; if() #305 Body End
LOAD D2 0.0003; if() #306 Test AND if() #305 Else Start
COMPAREV D2 0.0997
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11696 ==; Test 'if'
PUSHR D4; if() #306 Body Start
PUSHV 14; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11790; if() #306 Body End
LOAD D2 0.0003; if() #307 Test AND if() #306 Else Start
COMPAREV D2 5.3793
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11747 ==; Test 'if'
PUSHR D4; if() #307 Body Start
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #592 Test
ANDV D2 512
COMPAREV D2 0
GOTOCMP 11713 ==; Test 'if'
PUSHR D4; if() #592 Body Start
CALLFUNC 0.1006; UsrFunc[void __Tango_DecScreenFreeze()] Call
POP D4; if() #592 Body End
PUSHR D4
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
LOAD D2 0.0002
MULTV D2 48
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 5 D2
SETV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 12 D2
PUSHR D4
LOAD D2 0.0002; UsrFunc[int Tango_GetStyleAttribute(int, int)] Params Start
PUSHR D2
PUSHV 35; UsrFunc[int Tango_GetStyleAttribute(int, int)] Params End
CALLFUNC 0.1324; UsrFunc[int Tango_GetStyleAttribute(int, int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #593 Test
ANDV D2 512
COMPAREV D2 0
GOTOCMP 11790 ==; Test 'if'
PUSHR D4; if() #593 Body Start
CALLFUNC 0.0522; UsrFunc[void __Tango_IncScreenFreeze()] Call
POP D4; if() #593 Body End
GOTO 11790; if() #307 Body End
LOAD D2 0.0003; if() #308 Test AND if() #307 Else Start
COMPAREV D2 0.0024
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11759 ==; Test 'if'
PUSHR D4; if() #308 Body Start
PUSHV 6; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11790; if() #308 Body End
LOAD D2 0.0003; if() #309 Test AND if() #308 Else Start
COMPAREV D2 0.0025
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11771 ==; Test 'if'
PUSHR D4; if() #309 Body Start
PUSHV 7; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11790; if() #309 Body End
LOAD D2 0.0003; if() #310 Test AND if() #309 Else Start
COMPAREV D2 0.5235
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11783 ==; Test 'if'
PUSHR D4; if() #310 Body Start
PUSHV 18; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3949; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11790; if() #310 Body End
PUSHR D4; if() #310 Else Start
LOAD D2 0.0003; UsrFunc[void Tango_SetCustomVar(int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void Tango_SetCustomVar(int, int)] Params End
CALLFUNC 0.1756; UsrFunc[void Tango_SetCustomVar(int, int)] Call
POP D4; if() #310 Else End
POPARGS D5 0.0004; if() #309 Else End AND if() #308 Else End AND if() #307 Else End AND if() #306 Else End AND if() #305 Else End AND if() #304 Else End AND if() #303 Else End AND if() #302 Else End AND if() #301 Else End
RETURNFUNC; Func[void __Tango_SetVar(int, int)] Body End
PUSHARGSV 0 0.0002; Func[bool __Tango_Scroll(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
LOAD D2 0.0002; if() #291 Test
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11879 ==; Test 'if'
SETR D2 GD5; if() #291 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD5; if() #583 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11848 ==; Test 'if'
SETR D2 GD5; if() #583 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #583 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1; return Start
GOTO 12120; return End AND if() #291 Body End
STOREV 4 0; if() #291 Else Start
LOAD D2 0.0002; if() #584 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11888 ==; Test 'if'
LOAD D2 0; if() #584 Body Start
MULTV D2 5
STORE D2 0; if() #584 Body End
SETR D2 GD5; if() #292 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 11976 ==; Test 'if'
SETR D2 GD5; if() #292 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD5; if() #585 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 11945 ==; Test 'if'
SETR D2 GD5; if() #585 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #585 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1; return Start
GOTO 12120; return End AND if() #292 Body End
SETR D2 GD5; if() #293 Test AND if() #292 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 12043 ==; Test 'if'
SETR D2 GD5; if() #586 Test AND if() #293 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 12023 ==; Test 'if'
SETR D2 GD5; if() #586 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #586 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 12099; if() #293 Body End
SETR D2 GD5; if() #587 Test AND if() #293 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 12080 ==; Test 'if'
SETR D2 GD5; if() #587 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #587 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #293 Else End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0; return Start
POPARGS D5 0.0003; return End AND if() #292 Else End AND if() #291 Else End
RETURNFUNC; Func[bool __Tango_Scroll(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ShiftMenuRight(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 32
MULTV D2 3
ADDV D2 34
STORE D2 0.0001
SETR D2 GD2; for() #154 setup
PUSHR D2
POP D0
READPODARRAYV D2 32
STORE D2 0
LOAD D2 0; for() #154 LoopTest
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 12171 ==; for() #154 TestFail?
SETR D2 GD2; for() #154 Body Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
ADDV D2 3
STORE D2 0.0001; for() #154 Body End
LOAD D2 0; for() #154 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 12136; for() #154 End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 32 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_ShiftMenuRight(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_UpdateActiveSlot(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
STOREV 1 0
SETR D2 GD5; if() #598 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12217 ==; Test 'if'
PUSHR D4; if() #598 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_CountDown(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_CountDown(int)] Params End
CALLFUNC 0.3968; UsrFunc[void __Tango_CountDown(int)] Call
POP D4
SETR D2 GD5; if() #599 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12217 ==; Test 'if'
SETV D2 0; if() #599 Body Start
STORE D2 0; if() #599 Body End
SETR D2 GD5; if() #598 Body End AND if() #600 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12244 ==; Test 'if'
PUSHR D4; if() #600 Body Start
LOAD D2 0.0002; UsrFunc[bool __Tango_Scroll(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_Scroll(int)] Params End
CALLFUNC 1.1792; UsrFunc[bool __Tango_Scroll(int)] Call
POP D4
SETR D2 GD5; if() #601 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12244 ==; Test 'if'
SETV D2 0; if() #601 Body Start
STORE D2 0; if() #601 Body End
LOAD D2 0; if() #600 Body End AND if() #602 Test
COMPAREV D2 0
GOTOCMP 12252 ==; Test 'if'
PUSHR D4; if() #602 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_Process(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_Process(int)] Params End
CALLFUNC 0.9483; UsrFunc[void __Tango_Process(int)] Call
POP D4; if() #602 Body End
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_UpdateActiveSlot(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_UpdateAdvancing(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #604 Test AND if(true) #603 [Opt:AlwaysOn]
LOAD D2 0.0002; UsrFunc[bool __Tango_Scroll(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_Scroll(int)] Params End
CALLFUNC 1.1792; UsrFunc[bool __Tango_Scroll(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 12389 ==; Test 'unless' AND return (Void) AND unless() #604 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0
PUSHR D4
SETR D2 GD2; UsrFunc[void Tango_LoadMessage(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[void Tango_LoadMessage(int, int)] Params End
CALLFUNC 0.1438; UsrFunc[void Tango_LoadMessage(int, int)] Call
POP D4
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
PUSHV 1; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6191; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 5
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
SETR D2 GD2; UsrFunc[void __Tango_ClearSlotBitmap(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_ClearSlotBitmap(int)] Params End
CALLFUNC 0.0456; UsrFunc[void __Tango_ClearSlotBitmap(int)] Call
POP D4
SETV D2 1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_UpdateAdvancing(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_UpdateFinishedSlot(int, int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
STOREV 0 0
LOAD D2 0.0003; if() #319 Test
ANDV D2 4
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 12436 ==; Test 'if'
SETR D2 GD5; if() #320 Test AND if() #319 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12433 ==; Test 'if'
PUSHR D4; if() #320 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_CountDown(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_CountDown(int)] Params End
CALLFUNC 0.3968; UsrFunc[void __Tango_CountDown(int)] Call
POP D4
SETR D2 GD5; if() #618 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 12508 ==; Test 'if'
SETV D2 1; if() #618 Body Start
STORE D2 0; if() #618 Body End
GOTO 12508; if() #320 Body End
SETV D2 1; if() #320 Else Start
STORE D2 0; if() #320 Else End
GOTO 12508; if() #319 Body End
PUSHR D4; if() #321 Test AND if() #319 Else Start
SETR D2 GD5; UsrFunc[bool __Tango_PressAdvance(int)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[bool __Tango_PressAdvance(int)] Params End
CALLFUNC 0.9379; UsrFunc[bool __Tango_PressAdvance(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 12492 ==; Test 'if'
SETV D2 1; if() #321 Body Start
STORE D2 0
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
PUSHR D4; if() #322 Test AND if(true) #619 [Opt:AlwaysOn]
CALLFUNC 0.0541; UsrFunc[bool __Tango_PressSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 12476 ==; Test 'if'
SETV D2 1; if() #322 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 19
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 12508; if() #322 Body End
PUSHR D4; if() #620 Test AND if() #322 Else Start
CALLFUNC 0.0544; UsrFunc[bool __Tango_PressSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 12508 ==; Test 'if'
SETV D2 2; if() #620 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 19
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #620 Body End
GOTO 12508; if() #322 Else End AND if() #321 Body End
SETR D2 GD5; if() #321 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
ADDV D2 1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #321 Else End
LOAD D2 0; if() #319 Else End AND if() #621 Test
COMPAREV D2 0
GOTOCMP 12539 ==; Test 'if'
SETR D2 GD5; if() #323 Test AND if() #621 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 12536 ==; Test 'if'
LOAD D2 0.0003; if() #622 Test AND if() #323 Body Start
ANDV D2 128
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 12539 ==; Test 'if'
PUSHR D4; if() #622 Body Start
SETR D2 GD2; UsrFunc[void Tango_ClearSlot(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void Tango_ClearSlot(int)] Params End
CALLFUNC 0.0682; UsrFunc[void Tango_ClearSlot(int)] Call
POP D4; if() #622 Body End
GOTO 12539; if() #323 Body End
PUSHR D4; if() #323 Else Start
CALLFUNC 0.3757; UsrFunc[void __Tango_BeginAdvancing()] Call
POP D4; if() #323 Else End
POPARGS D5 0.0004; if() #621 Body End
RETURNFUNC; Func[void __Tango_UpdateFinishedSlot(int, int)] Body End
SETR D4 SP2; Func[void __Tango_UpdateCursorMovement()] Body Start
SETR D2 GD2; if() #617 Test
PUSHR D2
POP D0
READPODARRAYV D2 31
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 12627 !=; Test 'if' AND return (Void) AND if() #617 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 31
SUBV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 31 D2
SETR D2 GD2; if() #318 Test
PUSHR D2
POP D0
READPODARRAYV D2 31
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 12595 ==; Test 'if'
PUSHR D4; if() #318 Body Start
SETR D2 GD2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 15
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1554; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 27 D2
PUSHR D4
SETR D2 GD2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 15
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1564; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 28 D2
GOTO 12627; if() #318 Body End
SETR D2 GD2; if() #318 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 27
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 29
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 27 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 28
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 30
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 28 D2; if() #318 Else End
RETURNFUNC; Func[void __Tango_UpdateCursorMovement()] Body End
