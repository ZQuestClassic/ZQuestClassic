stderr:

Compiling 'std.zs'
Pass 1: Parsing
Pass 2: Preprocessing
Pass 3: Registration
Pass 4: Analyzing Code
Pass 5: Checking code paths
Pass 6: Generating object code
Pass 7: Assembling
Success!
Compile finished with exit code '0' (success)

stdout:

{
  "success": true,
  "diagnostics": [],
  "metadata": {
    "currentFileSymbols": 0,
    "symbols": 5,
    "identifiers": 5,
    "elided": true
  }
}

zasm:

PUSHV 0; void run() Body Start
SETR D4 SP2
PUSHR D4
CALLFUNC 0.1763; UsrFunc[void Tango_Start()] Call
POP D4
PUSHR D4; while(true) #16 Body [Opt:AlwaysOn] Start
CALLFUNC 0.1947; UsrFunc[void Tango_Update1()] Call
POP D4
WAITDRAW; InlineFunc[void Waitdraw()] Body
PUSHR D4
CALLFUNC 0.2898; UsrFunc[void Tango_Update2()] Call
POP D4
WAITFRAME; InlineFunc[void Waitframe()] Body AND while(true) #16 Body [Opt:AlwaysOn] End
GOTO 6; while() #16 End AND [Opt:NeverRet] AND void run() Body End
SETR D4 SP2; Func[int Rand(int, int)] Body Start
SETV D2 0; InlineFunc[int randgen::Rand(int, int)] Params Start AND return Start
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0001
SETR D3 D2; InlineFunc[int randgen::Rand(int, int)] Params End
POP D2; InlineFunc[int randgen::Rand(int, int)] Body Start
POP REFRNG
RNGRAND3 D2 D3; InlineFunc[int randgen::Rand(int, int)] Body End
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int Rand(int, int)] Body End
SETR D4 SP2; Func[int Clamp(int, int, int)] Body Start
LOAD D2 0.0002; if() #18 Test
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 39 ==; Test 'if'
LOAD D2 0.0001; if() #18 Body Start
STORE D2 0.0002
GOTO 49; if() #18 Body End
LOAD D2 0.0002; if() #54 Test AND if() #18 Else Start
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 49 ==; Test 'if'
LOAD D2 0; if() #54 Body Start
STORE D2 0.0002; if() #54 Body End
LOAD D2 0.0002; if() #18 Else End AND return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int Clamp(int, int, int)] Body End
PUSHARGSV 0 0.0002; Func[int NumTriforcePieces(int)] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 1 0; for() #85 setup
LOAD D2 0; for() #85 LoopTest
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 78 ==; for() #85 TestFail?
LOAD D2 0; if() #259 Test AND for() #85 Body Start
PUSHR D2
POP D0
SETR D2 GAMELITEMSD
ANDV D2 1
COMPAREV D2 0
GOTOCMP 74 ==; Test 'if'
LOAD D2 0.0001; if() #259 Body Start
ADDV D2 1
STORE D2 0.0001; if() #259 Body End
LOAD D2 0; for() #85 Body End AND for() #85 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 56; for() #85 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int NumTriforcePieces(int)] Body End
SETR D4 SP2; Func[void Tango_ActivateMenu()] Body Start
SETR D2 GD2; if() #356 Test
PUSHR D2
POP D0
READPODARRAYV D2 23
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 95 ==; Test 'if'
PUSHR D4; if() #356 Body Start
PUSHV 301; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0111; UsrFunc[void __Tango_LogError(int)] Call
POP D4
GOTO 110; return (Void) AND if() #356 Body End
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
PUSHR D4
CALLFUNC 0.0135; UsrFunc[void __Tango_UnpressMenu()] Call
PEEK D4
PUSHV 0; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params
CALLFUNC 0.0157; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Call
PEEK D4
PUSHARGSV 0 0.0002; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start AND UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0248; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4
RETURNFUNC; Func[void Tango_ActivateMenu()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_LogError(int)] Body Start
SETR D4 SP2
SETV D2 300; if(true) #510 [Opt:AlwaysOn]
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
ALLOCATEMEMV D2 16 0
WRITEPODSTRING D2 "tango.zh error "
STORE D2 0
LOAD D2 0; InlineFunc[void TraceS(char32[])] Params Start
SETR D3 D2; InlineFunc[void TraceS(char32[])] Params End
TRACE6 D3; InlineFunc[void TraceS(char32[])] Body
LOAD D2 0.0002; InlineFunc[void TraceToBase(int, int, int)] Params Start
PUSHR D2
PUSHV 10
PUSHV 0; InlineFunc[void TraceToBase(int, int, int)] Params End
TRACE5; InlineFunc[void TraceToBase(int, int, int)] Body Start
POPARGS D5 0.0003; InlineFunc[void TraceToBase(int, int, int)] Body End
LOAD D3 0
DEALLOCATEMEMR D3
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_LogError(int)] Body End
SETR D4 SP2; Func[void __Tango_UnpressMenu()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSB D2
RETURNFUNC; Func[void __Tango_UnpressMenu()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ScrollToMenuCursor(int)] Body Start
SETR D4 SP2
LOAD D2 0.0002; if() #590 Test
COMPAREV D2 0
GOTOCMP 173 <
LOAD D2 0.0002
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
GOTOCMP 173 >=
SETV D2 0
GOTO 174
SETV D2 1
COMPAREV D2 0
GOTOCMP 246 !=; Test 'if' AND return (Void) AND if() #590 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
STORE D2 0.0001
LOAD D2 0.0001; if() #591 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 246 !=; Test 'if' AND return (Void) AND if() #591 Body
SETR D2 GD2
PUSHR D2
LOAD D2 0.0002
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #297 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 221 ==; Test 'if'
PUSHR D4; if() #297 Body Start
LOAD D2 0.0001; UsrFunc[void Tango_ScrollSlot(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
POP D3
SUBR D3 D2
PUSHR D3; UsrFunc[void Tango_ScrollSlot(int, int)] Params End
CALLFUNC 0.1529; UsrFunc[void Tango_ScrollSlot(int, int)] Call
POP D4
GOTO 246; if() #297 Body End
LOAD D2 0; if() #592 Test AND if() #297 Else Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 26
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 246 ==; Test 'if'
PUSHR D4; if() #592 Body Start
LOAD D2 0.0001; UsrFunc[void Tango_ScrollSlot(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 26
POP D3
SUBR D3 D2
PUSHR D3; UsrFunc[void Tango_ScrollSlot(int, int)] Params End
CALLFUNC 0.1529; UsrFunc[void Tango_ScrollSlot(int, int)] Call
POP D4; if() #592 Body End
POPARGS D5 0.0003; if() #297 Else End
RETURNFUNC; Func[void __Tango_ScrollToMenuCursor(int)] Body End
SETR D4 SP2; Func[void __Tango_SetCursorMovement(int, int)] Body Start
LOAD D2 0; if() #299 Test
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 281 ==; Test 'if'
SETV D2 0; if() #299 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 31 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1508; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 27 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1518; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 28 D2
GOTO 333; if() #299 Body End
LOAD D2 0; if() #299 Else Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 31 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1508; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 27
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
LOAD D2 0
POP D3
DIVR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 29 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1518; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 28
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
LOAD D2 0
POP D3
DIVR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 30 D2; if() #299 Else End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_SetCursorMovement(int, int)] Body End
SETR D4 SP2; Func[void Tango_SetMenuFlags(int)] Body Start
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 14 D2
POP D5
RETURNFUNC; Func[void Tango_SetMenuFlags(int)] Body End
PUSHV 0; Func[bool __Tango_ValidateSlot(int)] Body Start
SETR D4 SP2
STOREV 1 0
LOAD D2 0.0001; if() #629 Test
COMPAREV D2 0
GOTOCMP 355 <
LOAD D2 0.0001
COMPAREV D2 1
GOTOCMP 355 >
SETV D2 0
GOTO 356
SETV D2 1
COMPAREV D2 0
GOTOCMP 360 ==; Test 'if'
SETV D2 0; if() #629 Body Start
STORE D2 0; if() #629 Body End
LOAD D2 0.0001; if() #630 Test
PUSHR D2
LOAD D2 0.0001
LSHIFTV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 371 ==; Test 'if'
SETV D2 0; if() #630 Body Start
STORE D2 0; if() #630 Body End
LOAD D2 0; unless() #631 Test
COMPAREV D2 0
GOTOCMP 380 !=; Test 'unless'
PUSHR D4; unless() #631 Body Start
PUSHV 403; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4; unless() #631 Body End
LOAD D2 0; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[bool __Tango_ValidateSlot(int)] Body End
PUSHV 0; Func[int Tango_GetSlotStyleAttribute(int, int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #375 Test
LOAD D2 0.0002; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0344; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 394 !=; Test 'unless'
SETV D2 -10; return Start AND unless() #375 Body Start
GOTO 411; return End AND unless() #375 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
MULTV D2 24
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD3; return Start
PUSHR D2
LOAD D2 0
MULTV D2 48
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int Tango_GetSlotStyleAttribute(int, int)] Body End
SETR D4 SP2; Func[void __Tango_LogError(int, untyped, untyped)] Body Start
PUSHR D4
LOAD D2 0.0002; UsrFunc[void __Tango_LogError(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_LogError(int)] Params End
CALLFUNC 0.0111; UsrFunc[void __Tango_LogError(int)] Call
POP D4
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_LogError(int, untyped, untyped)] Body End
PUSHARGSV 0 0.0005; Func[void __Tango_ClearSlotBitmap(int)] Body Start
SETR D4 SP2
LOAD D2 0.0005
MULTV D2 7
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 6
POP D0
READPODARRAYR D2 D2
STORE D2 0
PUSHV 6; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
PUSHV 0; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0003
ADDV D2 1
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
PUSHV 0
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
PUSHV 128; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_ClearSlotBitmap(int)] Body End
SETR D4 SP2; Func[void __Tango_IncScreenFreeze()] Body Start
SETR D2 GD2; if() #487 Test
PUSHR D2
POP D0
READPODARRAYV D2 11
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
SETR D2 GD2; Test 'if'
PUSHR D2
POP D0
READPODARRAYV D2 11
ADDV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 11 D2
RETURNFUNC; Func[void __Tango_IncScreenFreeze()] Body End
SETR D4 SP2; Func[bool __Tango_PressSpeedup()] Body Start
SETR D2 INPUTPRESSA; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressSpeedup()] Body End
SETR D4 SP2; Func[bool __Tango_PressSuperSpeed()] Body Start
SETR D2 INPUTPRESSB; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressSuperSpeed()] Body End
PUSHV 0; Func[void Tango_AddMenuChoice(int, int, int)] Body Start
SETR D4 SP2
SETR D2 GD2; if() #363 Test
PUSHR D2
POP D0
READPODARRAYV D2 23
COMPAREV D2 20
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 527 ==; Test 'if'
PUSHR D4; if() #363 Body Start
PUSHV 302; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0111; UsrFunc[void __Tango_LogError(int)] Call
POP D4
GOTO 573; return (Void) AND if() #363 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
MULTV D2 3
ADDV D2 34
STORE D2 0
LOAD D2 0.0003
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0002
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
ADDV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 23 D2
POPARGS D5 0.0004
RETURNFUNC; Func[void Tango_AddMenuChoice(int, int, int)] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_LoadMessage(int, int, bool, int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #501 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0344; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 643 ==; Test 'unless' AND return (Void) AND unless() #501 Body
PUSHR D4
LOAD D2 0.0006; UsrFunc[void __Tango_SetCurrentSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_SetCurrentSlot(int)] Params End
CALLFUNC 0.2330; UsrFunc[void __Tango_SetCurrentSlot(int)] Call
PEEK D4
LOAD D2 0.0004; UsrFunc[int __Tango_FindDestStart(bool)] Params Start
PUSHR D2; UsrFunc[int __Tango_FindDestStart(bool)] Params End
CALLFUNC 0.5279; UsrFunc[int __Tango_FindDestStart(bool)] Call
POP D4
STORE D2 0.0002
PUSHR D4; unless() #502 Test
LOAD D2 0.0005; UsrFunc[bool __Tango_ValidateMessage(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateMessage(int)] Params End
CALLFUNC 0.7653; UsrFunc[bool __Tango_ValidateMessage(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 617 !=; Test 'unless'
PUSHR D4; unless() #502 Body Start
PUSHV 101; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 643; return (Void) AND unless() #502 Body End
ALLOCATEMEMV D2 256 0
STORE D2 0.0001
LOAD D2 0.0005; InlineFunc[void Game::GetMessage(int, char32[])] Params Start
PUSHR D2
LOAD D2 0.0001; InlineFunc[void Game::GetMessage(int, char32[])] Params End
POP D3; InlineFunc[void Game::GetMessage(int, char32[])] Body Start
GETMESSAGE D3 D2; InlineFunc[void Game::GetMessage(int, char32[])] Body End
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_FindSrcStart(char32[], char32)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_FindSrcStart(char32[], char32)] Params End
CALLFUNC 0.5322; UsrFunc[int __Tango_FindSrcStart(char32[], char32)] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0001; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params End
CALLFUNC 0.3399; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Call
POP D4
LOAD D3 0.0001
DEALLOCATEMEMR D3
POPARGS D5 0.0007
RETURNFUNC; Func[void __Tango_LoadMessage(int, int, bool, int)] Body End
PUSHARGSV 0 0.0003; Func[void Tango_ClearSlot(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #365 Test
LOAD D2 0.0003; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0344; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 930 ==; Test 'unless' AND return (Void) AND unless() #365 Body
PUSHR D4; if() #366 Test
LOAD D2 0.0003; UsrFunc[bool Tango_SlotIsActive(int)] Params Start
PUSHR D2; UsrFunc[bool Tango_SlotIsActive(int)] Params End
CALLFUNC 0.0932; UsrFunc[bool Tango_SlotIsActive(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 677 ==; Test 'if'
PUSHR D4; if() #366 Body Start
LOAD D2 0.0003; UsrFunc[int Tango_GetSlotStyleAttribute(int, int)] Params Start
PUSHR D2
PUSHV 35; UsrFunc[int Tango_GetSlotStyleAttribute(int, int)] Params End
CALLFUNC 0.0383; UsrFunc[int Tango_GetSlotStyleAttribute(int, int)] Call
POP D4
STORE D2 0.0002
LOAD D2 0.0002; if() #367 Test
ANDV D2 512
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 677 ==; Test 'if'
PUSHR D4; if() #367 Body Start
CALLFUNC 0.0969; UsrFunc[void __Tango_DecScreenFreeze()] Call
POP D4; if() #367 Body End
LOAD D2 0.0003; if() #366 Body End
MULTV D2 24
STORE D2 0.0002
LOAD D2 0.0003
MULTV D2 7
STORE D2 0.0001
SETR D2 GD16
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -10
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0001
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0001
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 5
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 6
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 7
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 8
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 9
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 13
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 14
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 18
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 19
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 21
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 22
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 23
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4; if() #368 Test
CALLFUNC 0.0988; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 924 ==
LOAD D2 0.0003
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
POP D3
COMPARER D3 D2
GOTOCMP 924 !=
SETV D2 1
GOTO 925
SETV D2 0
COMPAREV D2 0
GOTOCMP 930 ==; Test 'if'
PUSHR D4; if() #368 Body Start
CALLFUNC 0.0996; UsrFunc[void __Tango_MenuCancel()] Call
POP D4; if() #368 Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void Tango_ClearSlot(int)] Body End
PUSHARGSV 0 0.0002; Func[bool Tango_SlotIsActive(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #398 Test
LOAD D2 0.0002; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0344; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 943 !=; Test 'unless'
SETV D2 0; return Start AND unless() #398 Body Start
GOTO 967; return End AND unless() #398 Body End
LOAD D2 0.0002
MULTV D2 24
STORE D2 0.0001
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #399 Test
COMPAREV D2 0
GOTOCMP 961 ==
LOAD D2 0
COMPAREV D2 4
GOTOCMP 961 ==
SETV D2 0
GOTO 962
SETV D2 1
COMPAREV D2 0
GOTOCMP 966 ==; Test 'if'
SETV D2 0; return Start AND if() #399 Body Start
GOTO 967; return End AND if() #399 Body End
SETV D2 1; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[bool Tango_SlotIsActive(int)] Body End
SETR D4 SP2; Func[void __Tango_DecScreenFreeze()] Body Start
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 11
SUBV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 11 D2
SETR D2 GD2; if() #436 Test
PUSHR D2
POP D0
READPODARRAYV D2 11
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
RETURNFUNC; Test 'if' AND Func[void __Tango_DecScreenFreeze()] Body End
SETR D4 SP2; Func[bool Tango_MenuIsActive()] Body Start
SETR D2 GD2; return Start
PUSHR D2
POP D0
READPODARRAYV D2 15
COMPAREV D2 -214747.9999
SETCMP D2 I>
RETURNFUNC; return End AND Func[bool Tango_MenuIsActive()] Body End
SETR D4 SP2; Func[void __Tango_MenuCancel()] Body Start
SETR D2 GD2; if() #513 Test
PUSHR D2
POP D0
READPODARRAYV D2 33
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 1013 ==; Test 'if'
PUSHR D4; if() #513 Body Start
SETR D2 GD2; UsrFunc[void Tango_SaveMenuState(int[])] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 33
PUSHR D2; UsrFunc[void Tango_SaveMenuState(int[])] Params End
CALLFUNC 0.1423; UsrFunc[void Tango_SaveMenuState(int[])] Call
POP D4; if() #513 Body End
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
SETR D2 GD2; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 22; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
PUSHR D4
CALLFUNC 0.1094; UsrFunc[void __Tango_MenuNotify()] Call
POP D4
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 8
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
RETURNFUNC; Func[void __Tango_MenuCancel()] Body End
PUSHV 0; Func[bool __Tango_ValidateStyle(int)] Body Start
SETR D4 SP2
STOREV 1 0
LOAD D2 0.0001; if() #638 Test
COMPAREV D2 0
GOTOCMP 1055 <
LOAD D2 0.0001
COMPAREV D2 9
GOTOCMP 1055 >
SETV D2 0
GOTO 1056
SETV D2 1
COMPAREV D2 0
GOTOCMP 1060 ==; Test 'if'
SETV D2 0; if() #638 Body Start
STORE D2 0; if() #638 Body End
LOAD D2 0.0001; if() #639 Test
PUSHR D2
LOAD D2 0.0001
LSHIFTV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1071 ==; Test 'if'
SETV D2 0; if() #639 Body Start
STORE D2 0; if() #639 Body End
LOAD D2 0; unless() #640 Test
COMPAREV D2 0
GOTOCMP 1080 !=; Test 'unless'
PUSHR D4; unless() #640 Body Start
PUSHV 401; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4; unless() #640 Body End
LOAD D2 0; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[bool __Tango_ValidateStyle(int)] Body End
SETR D4 SP2; Func[void Tango_DeactivateMenu()] Body Start
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
PUSHR D4
CALLFUNC 0.1094; UsrFunc[void __Tango_MenuNotify()] Call
POP D4
RETURNFUNC; Func[void Tango_DeactivateMenu()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_MenuNotify()] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0; for() #144 setup
LOAD D2 0; for() #144 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1129 ==; for() #144 TestFail?
LOAD D2 0; for() #144 Body Start
MULTV D2 24
ADDV D2 1
STORE D2 0.0001
SETR D2 GD5; if() #514 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 5
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1125 !=; Test 'if' AND continue 1; AND if() #514 Body
SETV D2 7
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #144 Body End
LOAD D2 0; for() #144 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1098; for() #144 End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_MenuNotify()] Body End
PUSHV 0; Func[bool __Tango_CursorPosIsValid()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0
LOAD D2 0; if() #434 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1145 ==; Test 'if'
SETV D2 0; return Start AND if() #434 Body Start
GOTO 1159; return End AND if() #434 Body End
LOAD D2 0; if() #435 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 1158 ==; Test 'if'
SETV D2 0; return Start AND if() #435 Body Start
GOTO 1159; return End AND if() #435 Body End
SETV D2 1; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_CursorPosIsValid()] Body End
SETR D4 SP2; Func[int Tango_GetCustomVar(int)] Body Start
LOAD D2 0; if() #97 Test
COMPAREV D2 0.0055
GOTOCMP 1170 <
LOAD D2 0
COMPAREV D2 0.0062
GOTOCMP 1170 >
SETV D2 1
GOTO 1171
SETV D2 0
COMPAREV D2 0
GOTOCMP 1181 ==; Test 'if'
SETR D2 GD1; return Start AND if() #97 Body Start
PUSHR D2
LOAD D2 0
SUBV D2 0.0055
MULTV D2 10000
POP D0
READPODARRAYR D2 D2
GOTO 1187; return End AND if() #97 Body End
PUSHR D4; if() #97 Else Start
LOAD D2 0; UsrFunc[void Tango_LogUndefinedVariable(int)] Params Start
PUSHR D2; UsrFunc[void Tango_LogUndefinedVariable(int)] Params End
CALLFUNC 0.1189; UsrFunc[void Tango_LogUndefinedVariable(int)] Call
POP D4
SETV D2 0; return Start
POP D5; return End AND if() #97 Else End
RETURNFUNC; Func[int Tango_GetCustomVar(int)] Body End
SETR D4 SP2; Func[void Tango_LogUndefinedVariable(int)] Body Start
PUSHR D4
PUSHV 203; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
POP D5
RETURNFUNC; Func[void Tango_LogUndefinedVariable(int)] Body End
SETR D4 SP2; Func[int Tango_GetSlotVar(int, int)] Body Start
PUSHR D4; if() #376 Test
LOAD D2 0.0001; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0344; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 1217 ==; Test 'if'
SETR D2 GD5; return Start AND if() #376 Body Start
PUSHR D2
LOAD D2 0.0001
MULTV D2 24
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
GOTO 1218; return End AND if() #376 Body End
SETV D2 -10; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int Tango_GetSlotVar(int, int)] Body End
PUSHARGSV 0 0.0003; Func[int Tango_GetStringWidth(char32[], int[])] Body Start
SETR D4 SP2
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0 0; for() #111 setup
LOAD D2 0.0004; for() #111 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1278 ==; for() #111 TestFail?
LOAD D2 0.0004; for() #111 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; if() #379 Test
COMPAREV D2 32
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1274 !=; Test 'if' AND continue 1; AND if() #379 Body
LOAD D2 0.0003; if() #98 Test
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1263 ==; Test 'if'
LOAD D2 0.0002; if() #98 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 6
POP D3
ADDR D2 D3
STORE D2 0.0002
GOTO 1274; if() #98 Body End
LOAD D2 0.0002; if() #98 Else Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0001
ADDV D2 -26
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0002; if() #98 Else End
LOAD D2 0; for() #111 Body End AND for() #111 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1225; for() #111 End
LOAD D2 0.0002; return Start
POPARGS D5 0.0005; return End
RETURNFUNC; Func[int Tango_GetStringWidth(char32[], int[])] Body End
SETR D4 SP2; Func[int Tango_GetStyleAttribute(int, int)] Body Start
PUSHR D4; unless() #380 Test
LOAD D2 0.0001; UsrFunc[bool __Tango_ValidateStyle(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateStyle(int)] Params End
CALLFUNC 0.1044; UsrFunc[bool __Tango_ValidateStyle(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 1291 !=; Test 'unless'
SETV D2 -10; return Start AND unless() #380 Body Start
GOTO 1301; return End AND unless() #380 Body End
SETR D2 GD3; return Start
PUSHR D2
LOAD D2 0.0001
MULTV D2 48
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int Tango_GetStyleAttribute(int, int)] Body End
SETR D4 SP2; Func[void Tango_InitializeMenu()] Body Start
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 14 D2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 16 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 17 D2
SETV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 18 D2
SETV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 19 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 20 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 21 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 23 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 32 D2
SETV D2 -1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 24 D2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 25 D2
SETV D2 214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 26 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 33 D2
RETURNFUNC; Func[void Tango_InitializeMenu()] Body End
SETR D4 SP2; Func[void Tango_LoadMessage(int, int)] Body Start
PUSHR D4
LOAD D2 0.0001; UsrFunc[void __Tango_LoadMessage(int, int, bool, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
PUSHARGSV 0 0.0002; UsrFunc[void __Tango_LoadMessage(int, int, bool, int)] Params End
CALLFUNC 0.0575; UsrFunc[void __Tango_LoadMessage(int, int, bool, int)] Call
POP D4
POPARGS D5 0.0002
RETURNFUNC; Func[void Tango_LoadMessage(int, int)] Body End
SETR D4 SP2; Func[void Tango_LogUndefinedFunction(int)] Body Start
PUSHR D4
PUSHV 202; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
POP D5
RETURNFUNC; Func[void Tango_LogUndefinedFunction(int)] Body End
SETR D4 SP2; Func[void __Tango_LogError(int, untyped)] Body Start
PUSHR D4
LOAD D2 0.0001; UsrFunc[void __Tango_LogError(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_LogError(int)] Params End
CALLFUNC 0.0111; UsrFunc[void __Tango_LogError(int)] Call
POP D4
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_LogError(int, untyped)] Body End
PUSHARGSV 0 0.0002; Func[void Tango_SaveMenuState(int[])] Body Start
SETR D4 SP2
SETR D2 GD2; InlineFunc[int SizeOfArray(untyped[])] Params
ARRAYSIZE D2; InlineFunc[int SizeOfArray(untyped[])] Body
SUBV D2 14
STORE D2 0.0001
LOAD D2 0.0002; InlineFunc[int SizeOfArray(int[])] Params AND if() #387 Test
ARRAYSIZE D2; InlineFunc[int SizeOfArray(int[])] Body
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1448 ==; Test 'if'
PUSHR D4; if() #387 Body Start
PUSHV 405; UsrFunc[void __Tango_LogError(int, untyped, untyped)] Params Start
LOAD D2 0.0002; InlineFunc[int SizeOfArray(int[])] Params
ARRAYSIZE D2; InlineFunc[int SizeOfArray(int[])] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped, untyped)] Params End
CALLFUNC 0.0413; UsrFunc[void __Tango_LogError(int, untyped, untyped)] Call
POP D4
GOTO 1506; return (Void) AND if() #387 Body End
STOREV 0 0; for() #113 setup
LOAD D2 0; for() #113 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1475 ==; for() #113 TestFail?
SETR D2 GD2; for() #113 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 14
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #113 Body End
LOAD D2 0; for() #113 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1449; for() #113 End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1508; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1518; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 14 D2
SETV D2 0
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 17 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void Tango_SaveMenuState(int[])] Body End
SETR D4 SP2; Func[int __Tango_GetMenuChoiceX(int)] Body Start
SETR D2 GD2; return Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetMenuChoiceX(int)] Body End
SETR D4 SP2; Func[int __Tango_GetMenuChoiceY(int)] Body Start
SETR D2 GD2; return Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetMenuChoiceY(int)] Body End
PUSHV 0; Func[void Tango_ScrollSlot(int, int)] Body Start
SETR D4 SP2
LOAD D2 0.0002
MULTV D2 24
STORE D2 0
SETR D2 GD5; if() #389 Test
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1648 !=; Test 'if' AND return (Void) AND if() #389 Body
LOAD D2 0.0001; if() #99 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1572 ==; Test 'if'
LOAD D2 0.0001; if() #390 Test AND if() #99 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1611 ==; Test 'if'
SETR D2 GD5; if() #390 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
SUBV2 0 D2
STORE D2 0.0001; if() #390 Body End
GOTO 1611; if() #99 Body End
LOAD D2 0.0001; if() #391 Test AND if() #99 Else Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 1611 ==; Test 'if'
SETR D2 GD5; if() #391 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0001; if() #391 Body End
SETR D2 GD5; if() #99 Else End
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD2; if() #392 Test
PUSHR D2
POP D0
READPODARRAYV D2 24
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1648 ==; Test 'if'
PUSHR D4; if() #392 Body Start
PUSHV 0; UsrFunc[void __Tango_ShiftMenu(int, int)] Params Start
LOAD D2 0.0001
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_ShiftMenu(int, int)] Params End
CALLFUNC 0.1650; UsrFunc[void __Tango_ShiftMenu(int, int)] Call
POP D4; if() #392 Body End
POPARGS D5 0.0003
RETURNFUNC; Func[void Tango_ScrollSlot(int, int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ShiftMenu(int, int)] Body Start
SETR D4 SP2
STOREV 34 0.0001
STOREV 0 0; for() #153 setup
LOAD D2 0; for() #153 LoopTest
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1708 ==; for() #153 TestFail?
SETR D2 GD2; for() #153 Body Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
ADDV D2 3
STORE D2 0.0001; for() #153 Body End
LOAD D2 0; for() #153 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1654; for() #153 End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_ShiftMenu(int, int)] Body End
SETR D4 SP2; Func[void Tango_SetCustomVar(int, int)] Body Start
LOAD D2 0.0001; if() #100 Test
COMPAREV D2 0.0055
GOTOCMP 1719 <
LOAD D2 0.0001
COMPAREV D2 0.0062
GOTOCMP 1719 >
SETV D2 1
GOTO 1720
SETV D2 0
COMPAREV D2 0
GOTOCMP 1734 ==; Test 'if'
LOAD D2 0; if() #100 Body Start
PUSHR D2
SETR D2 GD1
PUSHR D2
LOAD D2 0.0001
SUBV D2 0.0055
MULTV D2 10000
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 1739; if() #100 Body End
PUSHR D4; if() #100 Else Start
LOAD D2 0.0001; UsrFunc[void Tango_LogUndefinedVariable(int)] Params Start
PUSHR D2; UsrFunc[void Tango_LogUndefinedVariable(int)] Params End
CALLFUNC 0.1189; UsrFunc[void Tango_LogUndefinedVariable(int)] Call
POP D4; if() #100 Else End
POPARGS D5 0.0002
RETURNFUNC; Func[void Tango_SetCustomVar(int, int)] Body End
SETR D4 SP2; Func[void Tango_SetMenuCursorPosition(int)] Body Start
LOAD D2 0
LSHIFTV D2 0
STORE D2 0
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
PUSHR D4
LOAD D2 0; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params End
CALLFUNC 0.0157; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Call
PEEK D4
LOAD D2 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0248; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4
POP D5
RETURNFUNC; Func[void Tango_SetMenuCursorPosition(int)] Body End
PUSHV 0; Func[void Tango_Start()] Body Start
SETR D4 SP2
PUSHR D4
CALLFUNC 0.1793; UsrFunc[void __Tango_ValidateSavedVersion()] Call
PEEK D4
CALLFUNC 0.1303; UsrFunc[void Tango_InitializeMenu()] Call
POP D4
STOREV 0 0; for() #114 setup
LOAD D2 0; for() #114 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1785 ==; for() #114 TestFail?
PUSHR D4; for() #114 Body Start
LOAD D2 0; UsrFunc[void Tango_ClearSlot(int)] Params Start
PUSHR D2; UsrFunc[void Tango_ClearSlot(int)] Params End
CALLFUNC 0.0645; UsrFunc[void Tango_ClearSlot(int)] Call
POP D4; for() #114 Body End
LOAD D2 0; for() #114 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1771; for() #114 End
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 11 D2
POP D5
RETURNFUNC; Func[void Tango_Start()] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_ValidateSavedVersion()] Body Start
SETR D4 SP2
SETR D2 GD2; if() #336 Test
PUSHR D2
POP D0
READPODARRAYV D2 7
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1810 ==; Test 'if'
SETV D2 3; if() #336 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 7 D2
GOTO 1842; if() #336 Body End
SETR D2 GD2; if() #628 Test AND if() #336 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 7
COMPAREV D2 3
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1842 ==; Test 'if'
ALLOCATEMEMV D2 81 0; if() #628 Body Start
WRITEPODSTRING D2 "tango.zh error: The saved data is invalid for the current version of this quest."
STORE D2 0.0002
ALLOCATEMEMV D2 70 0
WRITEPODSTRING D2 "Serious errors are likely to occur. Begin a new game to correct this."
STORE D2 0
LOAD D2 0.0002; InlineFunc[void TraceS(char32[])] Params Start
SETR D3 D2; InlineFunc[void TraceS(char32[])] Params End
TRACE6 D3; InlineFunc[void TraceS(char32[])] Body
TRACE3; InlineFunc[void TraceNL()] Body
LOAD D2 0; InlineFunc[void TraceS(char32[])] Params Start
SETR D3 D2; InlineFunc[void TraceS(char32[])] Params End
TRACE6 D3; InlineFunc[void TraceS(char32[])] Body
TRACE3; InlineFunc[void TraceNL()] Body
SETV D2 1800
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
LOAD D3 0
DEALLOCATEMEMR D3
LOAD D3 0.0002
DEALLOCATEMEMR D3; if() #628 Body End
POPARGS D5 0.0004; if() #336 Else End
RETURNFUNC; Func[void __Tango_ValidateSavedVersion()] Body End
PUSHARGSV 0 0.0002; Func[void Tango_SuspendSlot(int)] Body Start
SETR D4 SP2
LOAD D2 0.0002
MULTV D2 24
ADDV D2 1
STORE D2 0.0001
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #401 Test
COMPAREV D2 0
GOTOCMP 1864 ==
LOAD D2 0
COMPAREV D2 4
GOTOCMP 1864 ==
SETV D2 0
GOTO 1865
SETV D2 1
COMPAREV D2 0
GOTOCMP 1878 !=; Test 'if' AND return (Void) AND if() #401 Body
LOAD D2 0
MODV D2 100
ADDV D2 100
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void Tango_SuspendSlot(int)] Body End
PUSHARGSV 0 0.0004; Func[bool __Tango_FindSyncingStrings(int)] Body Start
SETR D4 SP2
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0 0; for() #132 setup
LOAD D2 0; for() #132 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1944 ==; for() #132 TestFail?
LOAD D2 0; for() #132 Body Start
MULTV D2 24
ADDV D2 1
STORE D2 0.0003
SETR D2 GD5; if() #451 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 6
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1940 ==; Test 'if'
LOAD D2 0; if() #451 Body Start
MULTV D2 24
ADDV D2 2
STORE D2 0.0002
SETR D2 GD5; if() #452 Test
PUSHR D2
LOAD D2 0.0002
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1940 ==; Test 'if'
SETV D2 1; if() #452 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0003
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1
STORE D2 0.0001; if() #452 Body End
LOAD D2 0; if() #451 Body End AND for() #132 Body End AND for() #132 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1886; for() #132 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0005; return End
RETURNFUNC; Func[bool __Tango_FindSyncingStrings(int)] Body End
PUSHARGSV 0 0.0002; Func[void Tango_Update1()] Body Start
SETR D4 SP2
STOREV 0 0.0001
PUSHV 6; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
PUSHR D4
CALLFUNC 0.2098; UsrFunc[void __Tango_CheckScreenChange()] Call
PEEK D4
CALLFUNC 0.0988; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 1965 ==; Test 'if'
PUSHR D4; if() #403 Body Start
CALLFUNC 0.2167; UsrFunc[void __Tango_UpdateMenu()] Call
POP D4
SETV D2 1
STORE D2 0.0001; if() #403 Body End
SETR D2 GD2; if() #404 Test
PUSHR D2
POP D0
READPODARRAYV D2 8
ANDV D2 8
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1993 ==; Test 'if'
PUSHR D4; if() #101 Test AND if() #404 Body Start
CALLFUNC 0.2319; UsrFunc[bool __Tango_InputMenu()] Call
POP D4
COMPAREV D2 0
GOTOCMP 1983 ==; Test 'if'
PUSHR D4; if() #101 Body Start
CALLFUNC 0.0135; UsrFunc[void __Tango_UnpressMenu()] Call
POP D4
GOTO 1993; if() #101 Body End
SETR D2 GD2; if() #101 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ANDV D2 -9
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2; if() #101 Else End
STOREV 0 0; if() #404 Body End AND for() #115 setup
LOAD D2 0; for() #115 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 2010 ==; for() #115 TestFail?
PUSHR D4; for() #115 Body Start
LOAD D2 0; UsrFunc[void __Tango_SetCurrentSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_SetCurrentSlot(int)] Params End
CALLFUNC 0.2330; UsrFunc[void __Tango_SetCurrentSlot(int)] Call
PEEK D4
CALLFUNC 0.2427; UsrFunc[void __Tango_UpdateCurrentSlot()] Call
POP D4; for() #115 Body End
LOAD D2 0; for() #115 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1994; for() #115 End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
STORE D2 0
LOAD D2 0; if() #405 Test
ANDV D2 1
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2033 ==; Test 'if'
PUSHR D4; if() #102 Test AND if() #405 Body Start
CALLFUNC 0.2711; UsrFunc[bool __Tango_InputSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2030 ==; Test 'if'
PUSHR D4; if() #102 Body Start
CALLFUNC 0.2714; UsrFunc[void __Tango_UnpressSpeedup()] Call
POP D4
GOTO 2033; if() #102 Body End
LOAD D2 0; if() #102 Else Start
ANDV D2 -2
STORE D2 0; if() #102 Else End
LOAD D2 0; if() #405 Body End AND if() #406 Test
ANDV D2 2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2051 ==; Test 'if'
PUSHR D4; if() #103 Test AND if() #406 Body Start
CALLFUNC 0.2726; UsrFunc[bool __Tango_InputSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2048 ==; Test 'if'
PUSHR D4; if() #103 Body Start
CALLFUNC 0.2729; UsrFunc[void __Tango_UnpressSuperSpeed()] Call
POP D4
GOTO 2051; if() #103 Body End
LOAD D2 0; if() #103 Else Start
ANDV D2 -3
STORE D2 0; if() #103 Else End
LOAD D2 0; if() #406 Body End AND if() #407 Test
ANDV D2 4
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2069 ==; Test 'if'
PUSHR D4; if() #104 Test AND if() #407 Body Start
CALLFUNC 0.2741; UsrFunc[bool __Tango_InputAdvance()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2066 ==; Test 'if'
PUSHR D4; if() #104 Body Start
CALLFUNC 0.2744; UsrFunc[void __Tango_UnpressAdvance()] Call
POP D4
GOTO 2069; if() #104 Body End
LOAD D2 0; if() #104 Else Start
ANDV D2 -5
STORE D2 0; if() #104 Else End
LOAD D2 0; if() #407 Body End AND if() #408 Test
ANDV D2 16
COMPAREV D2 0
GOTOCMP 2078 !=
LOAD D2 0.0001
COMPAREV D2 0
GOTOCMP 2078 !=
SETV D2 0
GOTO 2079
SETV D2 1
COMPAREV D2 0
GOTOCMP 2087 ==; Test 'if'
PUSHR D4; if() #408 Body Start
CALLFUNC 0.2756; UsrFunc[void __Tango_UnpressAll()] Call
POP D4
LOAD D2 0
ANDV D2 -17
STORE D2 0; if() #408 Body End
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
PUSHV -1; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
POPARGS D5 0.0002
RETURNFUNC; Func[void Tango_Update1()] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_CheckScreenChange()] Body Start
SETR D4 SP2
SETR D2 CURDMAP
LSHIFTV D2 8
PUSHR D2
SETR D2 CURDSCR
POP D3
ADDR D2 D3
STORE D2 0.0003
SETR D2 GD2; if() #431 Test
PUSHR D2
POP D0
READPODARRAYV D2 9
PUSHR D2
LOAD D2 0.0003
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2165 ==; Test 'if'
LOAD D2 0.0003; if() #431 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 9 D2
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0 0; for() #127 setup
LOAD D2 0; for() #127 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 2165 ==; for() #127 TestFail?
PUSHR D4; for() #127 Body Start
LOAD D2 0; UsrFunc[int __Tango_GetSlotState(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetSlotState(int)] Params End
CALLFUNC 0.3840; UsrFunc[int __Tango_GetSlotState(int)] Call
POP D4
STORE D2 0.0002
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetSlotFlags(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetSlotFlags(int)] Params End
CALLFUNC 0.3853; UsrFunc[int __Tango_GetSlotFlags(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0001; if() #432 Test
ANDV D2 8
COMPAREV D2 0
GOTOCMP 2153 ==
LOAD D2 0.0002
COMPAREV D2 4
GOTOCMP 2153 ==
SETV D2 0
GOTO 2154
SETV D2 1
COMPAREV D2 0
GOTOCMP 2161 ==; Test 'if'
PUSHR D4; if() #432 Body Start
LOAD D2 0; UsrFunc[void Tango_ClearSlot(int)] Params Start
PUSHR D2; UsrFunc[void Tango_ClearSlot(int)] Params End
CALLFUNC 0.0645; UsrFunc[void Tango_ClearSlot(int)] Call
POP D4; if() #432 Body End
LOAD D2 0; for() #127 Body End AND for() #127 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 2127; for() #127 End
POPARGS D5 0.0004; if() #431 Body End
RETURNFUNC; Func[void __Tango_CheckScreenChange()] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_UpdateMenu()] Body Start
SETR D4 SP2
SETR D2 GD2; if() #625 Test
PUSHR D2
POP D0
READPODARRAYV D2 10
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2183 ==; Test 'if'
SETV D2 0; if() #625 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2; if() #625 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0.0002
STOREV 0 0.0001
PUSHR D4
CALLFUNC 0.1131; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
STORE D2 0
SETR D2 INPUTPRESSUP; if() #327 Test
COMPAREV D2 0
GOTOCMP 2202 ==; Test 'if'
PUSHR D4; if() #327 Body Start
PUSHV 0; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6264; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2231; if() #327 Body End
SETR D2 INPUTPRESSDOWN; if() #328 Test AND if() #327 Else Start
COMPAREV D2 0
GOTOCMP 2211 ==; Test 'if'
PUSHR D4; if() #328 Body Start
PUSHV 1; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6264; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2231; if() #328 Body End
SETR D2 INPUTPRESSLEFT; if() #329 Test AND if() #328 Else Start
COMPAREV D2 0
GOTOCMP 2220 ==; Test 'if'
PUSHR D4; if() #329 Body Start
PUSHV 2; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6264; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2231; if() #329 Body End
SETR D2 INPUTPRESSRIGHT; if() #330 Test AND if() #329 Else Start
COMPAREV D2 0
GOTOCMP 2229 ==; Test 'if'
PUSHR D4; if() #330 Body Start
PUSHV 3; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6264; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2231; if() #330 Body End
LOAD D2 0.0002; if() #330 Else Start
STORE D2 0.0001; if() #330 Else End
PUSHR D4; if() #329 Else End AND if() #328 Else End AND if() #327 Else End AND if() #331 Test
CALLFUNC 0.9258; UsrFunc[bool __Tango_PressMenuSelect()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2243 ==
PUSHR D4
CALLFUNC 0.1131; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2243 ==
SETV D2 1
GOTO 2244
SETV D2 0
COMPAREV D2 0
GOTOCMP 2252 ==; Test 'if'
PUSHR D4; if() #331 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_MenuSelect(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_MenuSelect(int)] Params End
CALLFUNC 0.7674; UsrFunc[void __Tango_MenuSelect(int)] Call
POP D4
GOTO 2317; if() #331 Body End
SETR D2 GD2; if() #332 Test AND if() #331 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 14
ANDV D2 1
COMPAREV D2 0
GOTOCMP 2266 ==
PUSHR D4
CALLFUNC 0.9255; UsrFunc[bool __Tango_PressMenuCancel()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2266 ==
SETV D2 1
GOTO 2267
SETV D2 0
COMPAREV D2 0
GOTOCMP 2273 ==; Test 'if'
PUSHR D4; if() #332 Body Start
CALLFUNC 0.0996; UsrFunc[void __Tango_MenuCancel()] Call
POP D4
GOTO 2317; if() #332 Body End
LOAD D2 0.0001; if() #333 Test AND if() #332 Else Start
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2314 ==; Test 'if'
PUSHR D4; if() #333 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params End
CALLFUNC 0.0157; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Call
POP D4
SETR D2 GD2; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 20; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
LOAD D2 0.0001
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
LOAD D2 0; if() #334 Test
COMPAREV D2 0
GOTOCMP 2307 ==; Test 'if'
PUSHR D4; if() #334 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0248; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4
GOTO 2317; if() #334 Body End
PUSHR D4; if() #334 Else Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0248; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4; if() #334 Else End
GOTO 2317; if() #333 Body End
PUSHR D4; if() #333 Else Start
CALLFUNC 1.2401; UsrFunc[void __Tango_UpdateCursorMovement()] Call
POP D4; if() #333 Else End
POPARGS D5 0.0003; if() #332 Else End AND if() #331 Else End
RETURNFUNC; Func[void __Tango_UpdateMenu()] Body End
SETR D4 SP2; Func[bool __Tango_InputMenu()] Body Start
SETR D2 INPUTA; return Start
COMPAREV D2 0
GOTOCMP 2328 !=
SETR D2 INPUTB
COMPAREV D2 0
GOTOCMP 2328 !=
SETV D2 0
GOTO 2329
SETV D2 1
RETURNFUNC; return End AND Func[bool __Tango_InputMenu()] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_SetCurrentSlot(int)] Body Start
SETR D4 SP2
LOAD D2 0.0004
MULTV D2 7
STORE D2 0.0003
LOAD D2 0.0004
MULTV D2 24
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001
MULTV D2 48
STORE D2 0
LOAD D2 0.0004
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 2 D2
LOAD D2 0.0003
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 3 D2
LOAD D2 0.0002
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 4 D2
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 5 D2
LOAD D2 0.0001; if() #298 Test
COMPAREV D2 -10
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2419 ==; Test 'if'
SETR D2 GD3; if() #298 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 6 D2
GOTO 2425; if() #298 Body End
SETV D2 -10; if() #298 Else Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 6 D2; if() #298 Else End
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_SetCurrentSlot(int)] Body End
PUSHARGSV 0 0.0005; Func[void __Tango_UpdateCurrentSlot()] Body Start
SETR D4 SP2
SETR D2 GD5
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
LOAD D2 0.0004; if() #314 Test
COMPAREV D2 0
GOTOCMP 2447 ==
LOAD D2 0.0004
COMPAREV D2 4
GOTOCMP 2447 ==
SETV D2 0
GOTO 2448
SETV D2 1
COMPAREV D2 0
GOTOCMP 2452 ==; Test 'if'
GOTO 2709; return (Void) AND if() #314 Body Start
GOTO 2471; if() #314 Body End
LOAD D2 0.0004; if() #607 Test AND if() #314 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2471 ==; Test 'if'
SETV D2 1; if() #607 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 2709; return (Void) AND if() #607 Body End
PUSHR D4; if() #314 Else End
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0003
STOREV 0 0.0002
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
ADDV D2 19
STORE D2 0.0001
LOAD D2 0.0003; if() #608 Test
ANDV D2 1
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2530 ==; Test 'if'
SETR D2 GD2; if() #608 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
SETR D2 GD5; if() #315 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2523 ==; Test 'if'
PUSHR D4; unless() #609 Test AND if() #315 Body Start
CALLFUNC 0.2711; UsrFunc[bool __Tango_InputSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2530 !=; Test 'unless'
SETV D2 0; unless() #609 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; unless() #609 Body End
GOTO 2530; if() #315 Body End
PUSHR D4; if() #610 Test AND if() #315 Else Start
CALLFUNC 0.2711; UsrFunc[bool __Tango_InputSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2530 ==; Test 'if'
SETV D2 1; if() #610 Body Start
STORE D2 0.0002; if() #610 Body End
LOAD D2 0.0003; if() #315 Else End AND if() #608 Body End AND if() #611 Test
ANDV D2 2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2577 ==; Test 'if'
SETR D2 GD2; if() #611 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
SETR D2 GD5; if() #316 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2570 ==; Test 'if'
PUSHR D4; unless() #612 Test AND if() #316 Body Start
CALLFUNC 0.2726; UsrFunc[bool __Tango_InputSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2577 !=; Test 'unless'
SETV D2 0; unless() #612 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; unless() #612 Body End
GOTO 2577; if() #316 Body End
PUSHR D4; if() #613 Test AND if() #316 Else Start
CALLFUNC 0.2726; UsrFunc[bool __Tango_InputSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2577 ==; Test 'if'
SETV D2 2; if() #613 Body Start
STORE D2 0.0002; if() #613 Body End
LOAD D2 0.0003; if() #316 Else End AND if() #611 Body End AND if() #614 Test
ANDV D2 64
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2585 ==; Test 'if'
SETV D2 2; if() #614 Body Start
STORE D2 0.0002; if() #614 Body End
LOAD D2 0.0003; if() #615 Test
ANDV D2 16
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2601 ==; Test 'if'
SETR D2 GD2; if() #615 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 16
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2; if() #615 Body End
LOAD D2 0.0004; if() #616 Test
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2675 ==; Test 'if'
PUSHR D4; if() #616 Body Start
PUSHV 2; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
PUSHR D4; if() #317 Test
LOAD D2 0; UsrFunc[bool __Tango_PressAdvance(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_PressAdvance(int)] Params End
CALLFUNC 0.9244; UsrFunc[bool __Tango_PressAdvance(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 2668 ==; Test 'if'
SETV D2 1; if() #317 Body Start
STORE D2 0.0004
PUSHR D4
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHARGSV 1 0.0002; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start AND UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
PUSHR D4; if() #318 Test
CALLFUNC 0.0506; UsrFunc[bool __Tango_PressSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2653 ==; Test 'if'
SETV D2 1; if() #318 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 2675; if() #318 Body End
PUSHR D4; if() #617 Test AND if() #318 Else Start
CALLFUNC 0.0509; UsrFunc[bool __Tango_PressSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2675 ==; Test 'if'
SETV D2 2; if() #617 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #617 Body End
GOTO 2675; if() #318 Else End AND if() #317 Body End
PUSHR D4; if() #317 Else Start
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0
ADDV D2 1
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4; if() #317 Else End
LOAD D2 0.0004; if() #616 Body End AND if() #319 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2686 ==; Test 'if'
PUSHR D4; if() #319 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_UpdateActiveSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_UpdateActiveSlot(int)] Params End
CALLFUNC 1.2042; UsrFunc[void __Tango_UpdateActiveSlot(int)] Call
POP D4
GOTO 2709; if() #319 Body End
LOAD D2 0.0004; if() #320 Test AND if() #319 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2697 ==; Test 'if'
PUSHR D4; if() #320 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_UpdateAdvancing(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_UpdateAdvancing(int)] Params End
CALLFUNC 1.2114; UsrFunc[void __Tango_UpdateAdvancing(int)] Call
POP D4
GOTO 2709; if() #320 Body End
LOAD D2 0.0004; if() #618 Test AND if() #320 Else Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2709 ==; Test 'if'
PUSHR D4; if() #618 Body Start
LOAD D2 0.0003; UsrFunc[void __Tango_UpdateFinishedSlot(int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_UpdateFinishedSlot(int, int)] Params End
CALLFUNC 1.2251; UsrFunc[void __Tango_UpdateFinishedSlot(int, int)] Call
POP D4; if() #618 Body End
POPARGS D5 0.0005; if() #320 Else End AND if() #319 Else End
RETURNFUNC; Func[void __Tango_UpdateCurrentSlot()] Body End
SETR D4 SP2; Func[bool __Tango_InputSpeedup()] Body Start
SETR D2 INPUTA; return Start
RETURNFUNC; return End AND Func[bool __Tango_InputSpeedup()] Body End
SETR D4 SP2; Func[void __Tango_UnpressSpeedup()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
RETURNFUNC; Func[void __Tango_UnpressSpeedup()] Body End
SETR D4 SP2; Func[bool __Tango_InputSuperSpeed()] Body Start
SETR D2 INPUTB; return Start
RETURNFUNC; return End AND Func[bool __Tango_InputSuperSpeed()] Body End
SETR D4 SP2; Func[void __Tango_UnpressSuperSpeed()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSB D2
RETURNFUNC; Func[void __Tango_UnpressSuperSpeed()] Body End
SETR D4 SP2; Func[bool __Tango_InputAdvance()] Body Start
SETR D2 INPUTA; return Start
RETURNFUNC; return End AND Func[bool __Tango_InputAdvance()] Body End
SETR D4 SP2; Func[void __Tango_UnpressAdvance()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
RETURNFUNC; Func[void __Tango_UnpressAdvance()] Body End
SETR D4 SP2; Func[void __Tango_UnpressAll()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTUP D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSUP D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTDOWN D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSDOWN D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTLEFT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSLEFT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTRIGHT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSRIGHT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTL D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSL D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTR D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSR D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX1 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX1 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX2 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX2 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX3 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX3 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX4 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX4 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTSTART D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSSTART D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTMAP D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSMAP D2
RETURNFUNC; Func[void __Tango_UnpressAll()] Body End
PUSHARGSV 0 0.0004; Func[void Tango_Update2()] Body Start
SETR D4 SP2
PUSHV -1; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
STOREV 0 0.0003
STOREV 0 0.0002; for() #116 setup
LOAD D2 0.0002; for() #116 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 2937 ==; for() #116 TestFail?
PUSHR D4; for() #116 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_SetCurrentSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_SetCurrentSlot(int)] Params End
CALLFUNC 0.2330; UsrFunc[void __Tango_SetCurrentSlot(int)] Call
PEEK D4
PUSHV 1; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0003
LOAD D2 0.0003; if() #409 Test
COMPAREV D2 0
GOTOCMP 2927 ==
LOAD D2 0.0003
COMPAREV D2 4
GOTOCMP 2927 ==
SETV D2 1
GOTO 2928
SETV D2 0
COMPAREV D2 0
GOTOCMP 2933 ==; Test 'if'
PUSHR D4; if() #409 Body Start
CALLFUNC 0.3005; UsrFunc[void __Tango_DrawToScreen()] Call
POP D4; if() #409 Body End
LOAD D2 0.0002; for() #116 Body End AND for() #116 LoopIncrement
ADDV D2 1
STORE D2 0.0002
GOTO 2905; for() #116 End
PUSHR D4; if() #410 Test
CALLFUNC 0.0988; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2950 ==
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
COMPAREV D2 0
GOTOCMP 2950 >=
SETV D2 1
GOTO 2951
SETV D2 0
COMPAREV D2 0
GOTOCMP 2956 ==; Test 'if'
PUSHR D4; if() #410 Body Start
CALLFUNC 0.3172; UsrFunc[void __Tango_DrawMenuCursor()] Call
POP D4; if() #410 Body End
SETR D2 GD2; if() #411 Test
PUSHR D2
POP D0
READPODARRAYV D2 13
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 2988 ==; Test 'if'
ALLOCATEMEMV D2 22 0; if() #411 Body Start
WRITEPODSTRING D2 "tango.zh error logged"
STORE D2 0
PUSHV 6; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Params Start
PUSHARGSV 0 0.0003
PUSHV 1
PUSHARGSV 0 0.0002
LOAD D2 0
PUSHR D2
PUSHV 128; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Params End
DRAWSTRINGR; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Body Start
POPARGS D5 0.0009; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 13
SUBV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
LOAD D3 0
DEALLOCATEMEMR D3; if() #411 Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void Tango_Update2()] Body End
SETR D4 SP2; Func[int __Tango_GetCurrSlotData(int)] Body Start
SETR D2 GD5; return Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrSlotData(int)] Body End
PUSHARGSV 0 0.0006; Func[void __Tango_DrawToScreen()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0005
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0004
SETR D2 GD3
PUSHR D2
LOAD D2 0.0004
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD5
PUSHR D2
LOAD D2 0.0005
ADDV D2 6
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0005
ADDV D2 7
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
PUSHR D4
CALLFUNC 0.0988; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 3056 ==
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
POP D3
COMPARER D3 D2
GOTOCMP 3056 !=
SETV D2 1
GOTO 3057
SETV D2 0
STORE D2 0
LOAD D2 0.0003; if() #133 Test
COMPAREV D2 1
GOTOCMP 3066 ==
LOAD D2 0.0003
COMPAREV D2 2
GOTOCMP 3066 ==
SETV D2 0
GOTO 3067
SETV D2 1
COMPAREV D2 0
GOTOCMP 3079 ==; Test 'if'
PUSHR D4; if() #133 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawColorBackdrop(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawColorBackdrop(int, int, int)] Params End
CALLFUNC 0.3982; UsrFunc[void __Tango_DrawColorBackdrop(int, int, int)] Call
POP D4
GOTO 3140; if() #133 Body End
LOAD D2 0.0003; if() #134 Test AND if() #133 Else Start
COMPAREV D2 3
GOTOCMP 3087 ==
LOAD D2 0.0003
COMPAREV D2 4
GOTOCMP 3087 ==
SETV D2 0
GOTO 3088
SETV D2 1
COMPAREV D2 0
GOTOCMP 3100 ==; Test 'if'
PUSHR D4; if() #134 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawTileBackdrop(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawTileBackdrop(int, int, int)] Params End
CALLFUNC 0.4983; UsrFunc[void __Tango_DrawTileBackdrop(int, int, int)] Call
POP D4
GOTO 3140; if() #134 Body End
LOAD D2 0.0003; if() #135 Test AND if() #134 Else Start
COMPAREV D2 5
GOTOCMP 3108 ==
LOAD D2 0.0003
COMPAREV D2 6
GOTOCMP 3108 ==
SETV D2 0
GOTO 3109
SETV D2 1
COMPAREV D2 0
GOTOCMP 3121 ==; Test 'if'
PUSHR D4; if() #135 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawComboBackdrop(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawComboBackdrop(int, int, int)] Params End
CALLFUNC 0.4056; UsrFunc[void __Tango_DrawComboBackdrop(int, int, int)] Call
POP D4
GOTO 3140; if() #135 Body End
LOAD D2 0.0003; if() #445 Test AND if() #135 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3140 ==; Test 'if'
PUSHR D4; if() #445 Body Start
SETR D2 GD3; UsrFunc[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Params End
CALLFUNC 0.4115; UsrFunc[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Call
POP D4; if() #445 Body End
LOAD D2 0; if() #135 Else End AND if() #134 Else End AND if() #133 Else End AND if() #446 Test
COMPAREV D2 0
GOTOCMP 3146 ==; Test 'if'
PUSHR D4; if() #446 Body Start
CALLFUNC 0.3172; UsrFunc[void __Tango_DrawMenuCursor()] Call
POP D4; if() #446 Body End
PUSHR D4
LOAD D2 0.0005; UsrFunc[void __Tango_TransferText(int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_TransferText(int, int, int, int)] Params End
CALLFUNC 0.5042; UsrFunc[void __Tango_TransferText(int, int, int, int)] Call
POP D4
LOAD D2 0; if() #447 Test
COMPAREV D2 0
GOTOCMP 3167 ==; Test 'if'
PUSHR D4; if() #447 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_DrawMenuScrollIndicators(int, int)] Params Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawMenuScrollIndicators(int, int)] Params End
CALLFUNC 0.4674; UsrFunc[void __Tango_DrawMenuScrollIndicators(int, int)] Call
POP D4; if() #447 Body End
PUSHR D4
CALLFUNC 0.4853; UsrFunc[void __Tango_DrawMoreIcon()] Call
POP D4
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_DrawToScreen()] Body End
SETR D4 SP2; Func[void __Tango_DrawMenuCursor()] Body Start
PUSHR D4; unless() #438 Test
CALLFUNC 0.1131; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
COMPAREV D2 0
GOTOCMP 3215 ==; Test 'unless' AND return (Void) AND unless() #438 Body
PUSHV 6; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 27
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 28
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 16
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 18
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 19
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 17
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0005
PUSHV 1
PUSHV 128; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBOR; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0016; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
RETURNFUNC; Func[void __Tango_DrawMenuCursor()] Body End
PUSHV 0; Func[int __Tango_AddPadding(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
LOAD D2 0.0003; if() #117 Test
COMPAREV D2 29.0329
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3227 ==; Test 'if'
SETV D2 12; if() #117 Body Start
STORE D2 0
GOTO 3250; if() #117 Body End
LOAD D2 0.0003; if() #118 Test AND if() #117 Else Start
COMPAREV D2 1615.1672
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3235 ==; Test 'if'
SETV D2 8; if() #118 Body Start
STORE D2 0
GOTO 3250; if() #118 Body End
LOAD D2 0.0003; if() #119 Test AND if() #118 Else Start
COMPAREV D2 208.0657
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3243 ==; Test 'if'
SETV D2 9; if() #119 Body Start
STORE D2 0
GOTO 3250; if() #119 Body End
LOAD D2 0.0003; if() #428 Test AND if() #119 Else Start
COMPAREV D2 37.4073
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3250 ==; Test 'if'
SETV D2 16; if() #428 Body Start
STORE D2 0; if() #428 Body End
LOAD D2 0; if() #119 Else End AND if() #118 Else End AND if() #117 Else End
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0.0002
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0
LOAD D2 0; for() #124 LoopTest
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 3280 ==; for() #124 TestFail?
PUSHR D4; for() #124 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -1; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001
ADDV D2 1
STORE D2 0.0001; for() #124 Body End
LOAD D2 0; for() #124 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 3262; for() #124 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0004; return End
RETURNFUNC; Func[int __Tango_AddPadding(int, int, int)] Body End
SETR D4 SP2; Func[void __Tango_SetChar(int, int)] Body Start
LOAD D2 0.0001; if() #593 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 3300 ==; Test 'if'
PUSHR D4; if() #593 Body Start
PUSHV 103; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0111; UsrFunc[void __Tango_LogError(int)] Call
POP D4
GOTO 3309; return (Void) AND if() #593 Body End
LOAD D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_SetChar(int, int)] Body End
PUSHV 0; Func[void __Tango_AppendMessage(int, int)] Body Start
SETR D4 SP2
SETR D2 GD4; until() #5 Test
PUSHR D2
LOAD D2 0.0002
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
GOTOCMP 3334 !=
PUSHR D4
SETR D2 GD4; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params Start
PUSHR D2
LOAD D2 0.0002
SUBV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params End
CALLFUNC 0.3360; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 3334 !=
SETV D2 1
GOTO 3335
SETV D2 0
COMPAREV D2 0
GOTOCMP 3341 !=; Test 'until'
LOAD D2 0.0002; until() #5 Body Start
ADDV D2 1
STORE D2 0.0002; until() #5 Body End
GOTO 3313; until() #5 End
ALLOCATEMEMV D2 256 0
STORE D2 0
LOAD D2 0.0001; InlineFunc[void Game::GetMessage(int, char32[])] Params Start
PUSHR D2
LOAD D2 0; InlineFunc[void Game::GetMessage(int, char32[])] Params End
POP D3; InlineFunc[void Game::GetMessage(int, char32[])] Body Start
GETMESSAGE D3 D2; InlineFunc[void Game::GetMessage(int, char32[])] Body End
PUSHR D4
LOAD D2 0; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params Start
PUSHR D2
PUSHV 0
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params End
CALLFUNC 0.3399; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Call
POP D4
LOAD D3 0
DEALLOCATEMEMR D3
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_AppendMessage(int, int)] Body End
SETR D4 SP2; Func[bool __Tango_IsSpecialDataMarker(int)] Body Start
LOAD D2 0; if() #488 Test
COMPAREV D2 -300
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3368 ==; Test 'if'
SETV D2 1; return Start AND if() #488 Body Start
GOTO 3397; return End AND if() #488 Body End
LOAD D2 0; if() #489 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3375 ==; Test 'if'
SETV D2 1; return Start AND if() #489 Body Start
GOTO 3397; return End AND if() #489 Body End
LOAD D2 0; if() #490 Test
COMPAREV D2 -100
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3382 ==; Test 'if'
SETV D2 1; return Start AND if() #490 Body Start
GOTO 3397; return End AND if() #490 Body End
LOAD D2 0; if() #491 Test
COMPAREV D2 -200
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3389 ==; Test 'if'
SETV D2 1; return Start AND if() #491 Body Start
GOTO 3397; return End AND if() #491 Body End
LOAD D2 0; if() #492 Test
COMPAREV D2 -600
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3396 ==; Test 'if'
SETV D2 1; return Start AND if() #492 Body Start
GOTO 3397; return End AND if() #492 Body End
SETV D2 0; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_IsSpecialDataMarker(int)] Body End
PUSHARGSV 0 0.0005; Func[void __Tango_LoadIntoBuffer(char32[], int, int)] Body Start
SETR D4 SP2
PUSHR D4
LOAD D2 0.0007; UsrFunc[int __Tango_GetStringEnd(char32[])] Params Start
PUSHR D2; UsrFunc[int __Tango_GetStringEnd(char32[])] Params End
CALLFUNC 0.6758; UsrFunc[int __Tango_GetStringEnd(char32[])] Call
POP D4
STORE D2 0.0004
ALLOCATEMEMV D2 2 0
STORE D2 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0006; while() #10 Test
PUSHR D2
LOAD D2 0.0004
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 3690 ==; Test 'while'
LOAD D2 0.0007; while() #10 Body Start
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; if() #180 Test
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 3443 ==; Test 'if'
LOAD D2 0.0007; if() #180 Body Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I==
STORE D2 0.0001
GOTO 3445; if() #180 Body End
SETV D2 0; if() #180 Else Start
STORE D2 0.0001; if() #180 Else End
LOAD D2 0.0002; if() #181 Test
COMPAREV D2 64
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3526 ==; Test 'if'
LOAD D2 0.0001; if() #182 Test AND if() #181 Body Start
COMPAREV D2 0
GOTOCMP 3466 ==; Test 'if'
PUSHR D4; if() #182 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV 64; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0006
ADDV D2 2
STORE D2 0.0006
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
GOTO 3411; if() #182 Body End
PUSHR D4; if() #493 Test AND if() #182 Else Start
LOAD D2 0.0007; UsrFunc[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Params End
CALLFUNC 0.7202; UsrFunc[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 3487 ==; Test 'if'
PUSHR D4; if() #493 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 3690; break 1; AND if() #493 Body End
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0006
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0005
SETR D2 GD4; if() #494 Test
PUSHR D2
LOAD D2 0.0005
SUBV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3411 ==; Test 'if'
LOAD D2 0.0005; if() #183 Test AND if() #494 Body Start
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 3514 ==; Test 'if'
GOTO 3690; break 1; AND if() #183 Body Start
GOTO 3411; if() #183 Body End
SETR D2 GD4; if() #495 Test AND if() #183 Else Start
PUSHR D2
LOAD D2 0.0005
SUBV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -100
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 3411 ==; Test 'if'
GOTO 3690; break 1; AND if() #495 Body
GOTO 3411; if() #183 Else End AND if() #494 Body End AND if() #182 Else End AND if() #181 Body End
LOAD D2 0.0002; if() #184 Test AND if() #181 Else Start
COMPAREV D2 0
GOTOCMP 3537 <=
LOAD D2 0.0002
COMPAREV D2 32
GOTOCMP 3537 >=
LOAD D2 0.0002
COMPAREV D2 26
GOTOCMP 3537 ==
SETV D2 1
GOTO 3538
SETV D2 0
COMPAREV D2 0
GOTOCMP 3571 ==; Test 'if'
PUSHR D4; if() #496 Test AND if() #184 Body Start
LOAD D2 0.0007; UsrFunc[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Params End
CALLFUNC 0.7491; UsrFunc[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 3560 ==; Test 'if'
PUSHR D4; if() #496 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 3690; break 1; AND if() #496 Body End
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0006
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0005
GOTO 3411; if() #184 Body End
LOAD D2 0.0001; if() #497 Test AND if() #184 Else Start
COMPAREV D2 0
GOTOCMP 3576 ==
SETV D2 1
GOTO 3577
SETV D2 0
COMPAREV D2 0
GOTOCMP 3671 ==; Test 'if'
STOREV 0 0; if() #497 Body Start
LOAD D2 0.0002; if() #185 Test
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3588 ==; Test 'if'
SETV D2 1; if() #185 Body Start
STORE D2 0
GOTO 3631; if() #185 Body End
LOAD D2 0.0002; if() #186 Test AND if() #185 Else Start
COMPAREV D2 91
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3596 ==; Test 'if'
SETV D2 2; if() #186 Body Start
STORE D2 0
GOTO 3631; if() #186 Body End
LOAD D2 0.0002; if() #187 Test AND if() #186 Else Start
COMPAREV D2 123
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3604 ==; Test 'if'
SETV D2 3; if() #187 Body Start
STORE D2 0
GOTO 3631; if() #187 Body End
LOAD D2 0.0002; if() #188 Test AND if() #187 Else Start
COMPAREV D2 60
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3612 ==; Test 'if'
SETV D2 4; if() #188 Body Start
STORE D2 0
GOTO 3631; if() #188 Body End
LOAD D2 0.0002; if() #498 Test AND if() #188 Else Start
COMPAREV D2 41
GOTOCMP 3626 ==
LOAD D2 0.0002
COMPAREV D2 93
GOTOCMP 3626 ==
LOAD D2 0.0002
COMPAREV D2 125
GOTOCMP 3626 ==
LOAD D2 0.0002
COMPAREV D2 62
GOTOCMP 3626 ==
SETV D2 0
GOTO 3627
SETV D2 1
COMPAREV D2 0
GOTOCMP 3631 ==; Test 'if'
SETV D2 -1; if() #498 Body Start
STORE D2 0; if() #498 Body End
LOAD D2 0; if() #188 Else End AND if() #187 Else End AND if() #186 Else End AND if() #185 Else End AND if() #499 Test
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 3671 ==; Test 'if'
LOAD D2 0; if() #189 Test AND if() #499 Body Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 3658 ==; Test 'if'
PUSHR D4; if() #189 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -1000; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
PEEK D4
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0005
ADDV D2 2
STORE D2 0.0005
GOTO 3667; if() #189 Body End
PUSHR D4; if() #189 Else Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -1100; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #189 Else End
LOAD D2 0.0006
ADDV D2 2
STORE D2 0.0006
GOTO 3411; continue 1; AND if() #499 Body End
PUSHR D4; if() #497 Body End
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0002; if() #500 Test
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3690 !=; Test 'if' AND break 1; AND if() #500 Body
LOAD D2 0.0006
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #184 Else End
GOTO 3411; if() #181 Else End AND while() #10 Body End AND while() #10 End
LOAD D2 0.0005; InlineFunc[int Min(int, int)] Params Start
PUSHVARGR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
SUBV D2 1
PUSHVARGR D2; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
STORE D2 0.0005
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D3 0.0003
DEALLOCATEMEMR D3
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_LoadIntoBuffer(char32[], int, int)] Body End
PUSHV 0; Func[void __Tango_BeginAdvancing()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0
SETV D2 3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
PUSHV 9; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POP D5
RETURNFUNC; Func[void __Tango_BeginAdvancing()] Body End
SETR D4 SP2; Func[int __Tango_GetCurrStyleData(int)] Body Start
SETR D2 GD3; return Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrStyleData(int)] Body End
SETR D4 SP2; Func[int __Tango_BoolToInt(bool)] Body Start
LOAD D2 0; if() #120 Test
COMPAREV D2 0
GOTOCMP 3795 ==; Test 'if'
SETV D2 1; return Start AND if() #120 Body Start
GOTO 3796; return End AND if() #120 Body End
SETV D2 0; return Start AND if() #120 Else Start
POP D5; return End AND if() #120 Else End
RETURNFUNC; Func[int __Tango_BoolToInt(bool)] Body End
SETR D4 SP2; Func[bool __Tango_CharacterWillFit(char32, int[], int, int)] Body Start
LOAD D2 0; return Start
PUSHR D2
LOAD D2 0.0001
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
POP D3
COMPARER D3 D2
SETCMP D2 I>=
POPARGS D5 0.0004; return End
RETURNFUNC; Func[bool __Tango_CharacterWillFit(char32, int[], int, int)] Body End
SETR D4 SP2; Func[int __Tango_GetCharacterWidth(char32, int[])] Body Start
LOAD D2 0; if() #145 Test
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3832 ==; Test 'if'
LOAD D2 0; return Start AND if() #145 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 6
GOTO 3838; return End AND if() #145 Body End
LOAD D2 0; return Start AND if() #145 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 -26
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End AND if() #145 Else End
RETURNFUNC; Func[int __Tango_GetCharacterWidth(char32, int[])] Body End
PUSHV 0; Func[int __Tango_GetSlotState(int)] Body Start
SETR D4 SP2
LOAD D2 0.0001
MULTV D2 24
STORE D2 0
SETR D2 GD5; return Start
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_GetSlotState(int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetSlotFlags(int)] Body Start
SETR D4 SP2
LOAD D2 0.0002
MULTV D2 24
STORE D2 0.0001
SETR D2 GD5; if() #480 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -10
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3869 ==; Test 'if'
SETV D2 0; return Start AND if() #480 Body Start
GOTO 3882; return End AND if() #480 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
MULTV D2 48
STORE D2 0
SETR D2 GD3; return Start
PUSHR D2
LOAD D2 0
ADDV D2 35
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_GetSlotFlags(int)] Body End
SETR D4 SP2; Func[void __Tango_ClearAlternateColor()] Body Start
PUSHR D4
PUSHV 10; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV -1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 11; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV -1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 12; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
RETURNFUNC; Func[void __Tango_ClearAlternateColor()] Body End
SETR D4 SP2; Func[void __Tango_SetCurrSlotData(int, int)] Body Start
LOAD D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_SetCurrSlotData(int, int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_CountDown(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
STOREV 1 0
LOAD D2 0.0002; if() #433 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3934 ==; Test 'if'
LOAD D2 0; if() #433 Body Start
MULTV D2 5
STORE D2 0; if() #433 Body End
PUSHVARGV 0; InlineFunc[int Max(int, int)] Params Start
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
SUBR D3 D2
PUSHVARGR D3; InlineFunc[int Max(int, int)] Params End
MAXVARG; InlineFunc[int Max(int, int)] Body
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_CountDown(int)] Body End
SETR D4 SP2; Func[void __Tango_Delete(int, int)] Body Start
LOAD D2 0.0001; for() #128 LoopTest
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 3980 ==; for() #128 TestFail?
SETV D2 -1; for() #128 Body Start
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #128 Body End
LOAD D2 0.0001; for() #128 LoopIncrement
ADDV D2 1
STORE D2 0.0001
GOTO 3959; for() #128 End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_Delete(int, int)] Body End
PUSHV 0; Func[void __Tango_DrawColorBackdrop(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
SETR D2 GD3; if() #123 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3997 ==; Test 'if'
SETV D2 128; if() #123 Body Start
STORE D2 0
GOTO 3999; if() #123 Body End
SETV D2 64; if() #123 Else Start
STORE D2 0; if() #123 Else End
PUSHV 6; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0002
ADDV D2 1
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
PUSHR D2
LOAD D2 0.0002
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
MULTV D2 16
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
LOAD D2 0
PUSHR D2; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_DrawColorBackdrop(int, int, int)] Body End
PUSHV 0; Func[void __Tango_DrawComboBackdrop(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
SETR D2 GD3; if() #124 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4071 ==; Test 'if'
SETV D2 128; if() #124 Body Start
STORE D2 0
GOTO 4073; if() #124 Body End
SETV D2 64; if() #124 Else Start
STORE D2 0; if() #124 Else End
PUSHV 6; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0005
PUSHV 1
LOAD D2 0
PUSHR D2; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBOR; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0016; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_DrawComboBackdrop(int, int, int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0; for() #129 setup
LOAD D2 0.0004; for() #129 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 4466 ==; for() #129 TestFail?
LOAD D2 0.0004; if() #125 Test AND for() #129 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 4
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4288 ==; Test 'if'
LOAD D2 0.0004; if() #126 Test AND if() #125 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
GOTOCMP 4153 ==
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
GOTOCMP 4153 ==
SETV D2 0
GOTO 4154
SETV D2 1
COMPAREV D2 0
GOTOCMP 4159 ==; Test 'if'
SETV D2 128; if() #126 Body Start
STORE D2 0.0001
GOTO 4161; if() #126 Body End
SETV D2 64; if() #126 Else Start
STORE D2 0.0001; if() #126 Else End
LOAD D2 0.0004; if() #127 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4229 ==; Test 'if'
PUSHV 6; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start AND if() #127 Body Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0004
PUSHV 1
LOAD D2 0.0001
PUSHR D2; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWTILER; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0015; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
GOTO 4462; if() #127 Body End
PUSHV 6; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start AND if() #127 Else Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0005
PUSHV 1
LOAD D2 0.0001
PUSHR D2; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBOR; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0016; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End AND if() #127 Else End
GOTO 4462; if() #125 Body End
LOAD D2 0.0004; if() #128 Test AND if() #125 Else Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 6
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4403 ==; Test 'if'
LOAD D2 0.0004; if() #129 Test AND if() #128 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4309 ==; Test 'if'
SETV D2 128; if() #129 Body Start
STORE D2 0.0001
GOTO 4311; if() #129 Body End
SETV D2 64; if() #129 Else Start
STORE D2 0.0001; if() #129 Else End
PUSHV 6; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
ADDV D2 1
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
ADDV D2 1
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
MULTV D2 16
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
LOAD D2 0.0001
PUSHR D2; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
GOTO 4462; if() #128 Body End
PUSHR D4; if() #128 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Params End
CALLFUNC 0.4468; UsrFunc[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Call
POP D4; if() #128 Else End
LOAD D2 0; if() #125 Else End AND for() #129 Body End AND for() #129 LoopIncrement
ADDV D2 7
STORE D2 0
GOTO 4119; for() #129 End
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Body End
PUSHV 0; Func[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Body Start
SETR D4 SP2
LOAD D2 0.0007; if() #130 Test
COMPAREV D2 9
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4489 ==; Test 'if'
LOAD D2 0.0002; if() #130 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0006; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params End
CALLFUNC 0.1220; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002
GOTO 4508; if() #130 Body End
LOAD D2 0.0007; if() #437 Test AND if() #130 Else Start
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4508 ==; Test 'if'
LOAD D2 0.0002; if() #437 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0006; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params End
CALLFUNC 0.1220; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Call
POP D4
MULTV D2 0.5000
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002; if() #437 Body End
STOREV 0 0; if() #130 Else End AND for() #130 setup
LOAD D2 0.0006; for() #130 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 4548 ==; for() #130 TestFail?
LOAD D2 0.0002; for() #130 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2
PUSHV 0
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 6; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params End
CALLFUNC 0.4550; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0.0002; for() #130 Body End
LOAD D2 0; for() #130 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 4509; for() #130 End
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Body End
PUSHV 0; Func[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Body Start
SETR D4 SP2
LOAD D2 0.0008; if() #551 Test
COMPAREV D2 32
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 4665 ==; Test 'if'
LOAD D2 0.0007; if() #222 Test AND if() #551 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
GOTOCMP 4571 ==
LOAD D2 0.0007
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 1
GOTOCMP 4571 ==
SETV D2 0
GOTO 4572
SETV D2 1
COMPAREV D2 0
GOTOCMP 4640 ==; Test 'if'
LOAD D2 0.0008; if() #223 Test AND if() #222 Body Start
COMPAREV D2 255
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4604 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, char32, int)] Params Start AND if() #223 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0007
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2
LOAD D2 0.0006
MULTV D2 16
PUSHR D2
LOAD D2 0.0005
POP D3
ADDR D2 D3
PUSHR D2
PUSHARGSV -1 0.0003
LOAD D2 0.0008
PUSHR D2
PUSHV 128; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, char32, int)] Params End
DRAWCHARR; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, char32, int)] Body Start
POPARGS D5 0.0010; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, char32, int)] Body End
GOTO 4665; if() #223 Body End
LOAD D2 0.0007; if() #552 Test AND if() #223 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4665 ==; Test 'if'
LOAD D2 0.0007; if() #552 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 3
PUSHR D2
LOAD D2 0.0004
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0008
POP D3
ADDR D2 D3
SUBV D2 256
STORE D2 0
LOAD D2 0.0001; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0006
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params End
FASTTILER; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body End AND if() #552 Body End
GOTO 4665; if() #223 Else End AND if() #222 Body End
LOAD D2 0.0001; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params Start AND if() #222 Else Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0007
PUSHR D2
POP D0
READPODARRAYV D2 3
PUSHR D2
LOAD D2 0.0004
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0008
POP D3
ADDR D2 D3
ADDV D2 -33
PUSHR D2
LOAD D2 0.0006
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params End
FASTTILER; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body End AND if() #222 Else End
PUSHR D4; if() #551 Body End AND return Start
LOAD D2 0.0008; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0007
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
POPARGS D5 0.0009; return End
RETURNFUNC; Func[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Body End
PUSHV 0; Func[void __Tango_DrawMenuScrollIndicators(int, int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0
PUSHR D4; if() #439 Test
CALLFUNC 0.4773; UsrFunc[bool __Tango_MenuCanScrollUp()] Call
POP D4
COMPAREV D2 0
GOTOCMP 4726 ==; Test 'if'
PUSHV 6; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params Start AND if() #439 Body Start
LOAD D2 0.0002
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 25
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 26
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 23
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 24
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params End
FASTCOMBOR; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body End AND if() #439 Body End
PUSHR D4; if() #440 Test
CALLFUNC 0.4813; UsrFunc[bool __Tango_MenuCanScrollDown()] Call
POP D4
COMPAREV D2 0
GOTOCMP 4771 ==; Test 'if'
PUSHV 6; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params Start AND if() #440 Body Start
LOAD D2 0.0002
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 29
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 30
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 27
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 28
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params End
FASTCOMBOR; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body End AND if() #440 Body End
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_DrawMenuScrollIndicators(int, int)] Body End
PUSHV 0; Func[bool __Tango_MenuCanScrollUp()] Body Start
SETR D4 SP2
SETR D2 GD2; for() #143 setup
PUSHR D2
POP D0
READPODARRAYV D2 23
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #143 LoopTest
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 4810 ==; for() #143 TestFail?
SETR D2 GD2; if() #512 Test AND for() #143 Body Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 4806 ==; Test 'if'
SETV D2 1; return Start AND if() #512 Body Start
GOTO 4811; return End AND if() #512 Body End
LOAD D2 0; for() #143 Body End AND for() #143 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 4781; for() #143 End
SETV D2 0; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_MenuCanScrollUp()] Body End
PUSHV 0; Func[bool __Tango_MenuCanScrollDown()] Body Start
SETR D4 SP2
SETR D2 GD2; for() #142 setup
PUSHR D2
POP D0
READPODARRAYV D2 23
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #142 LoopTest
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 4850 ==; for() #142 TestFail?
SETR D2 GD2; if() #511 Test AND for() #142 Body Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 26
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 4846 ==; Test 'if'
SETV D2 1; return Start AND if() #511 Body Start
GOTO 4851; return End AND if() #511 Body End
LOAD D2 0; for() #142 Body End AND for() #142 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 4821; for() #142 End
SETV D2 0; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_MenuCanScrollDown()] Body End
PUSHARGSV 0 0.0008; Func[void __Tango_DrawMoreIcon()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0007
STOREV 0 0.0006
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0005
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 35
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
SETR D2 GD5; if() #131 Test
PUSHR D2
LOAD D2 0.0007
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4886 ==; Test 'if'
SETV D2 1; if() #131 Body Start
STORE D2 0.0006
GOTO 4915; if() #131 Body End
SETR D2 GD5; if() #441 Test AND if() #131 Else Start
PUSHR D2
LOAD D2 0.0007
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4915 ==; Test 'if'
LOAD D2 0.0004; if() #442 Test AND if() #441 Body Start
ANDV D2 128
COMPAREV D2 0
GOTOCMP 4910 ==
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 18
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
GOTOCMP 4910 !=
SETV D2 0
GOTO 4911
SETV D2 1
COMPAREV D2 0
GOTOCMP 4915 ==; Test 'if'
SETV D2 1; if() #442 Body Start
STORE D2 0.0006; if() #442 Body End
LOAD D2 0.0006; if() #441 Body End AND if() #131 Else End AND unless() #443 Test
COMPAREV D2 0
GOTOCMP 4981 ==; Test 'unless' AND return (Void) AND unless() #443 Body
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 31
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
LOAD D2 0.0003; if() #444 Test
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4981 !=; Test 'if' AND return (Void) AND if() #444 Body
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 32
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 33
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0001
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 7
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 34
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0
PUSHV 6; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params End
FASTCOMBOR; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body End
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_DrawMoreIcon()] Body End
PUSHV 0; Func[void __Tango_DrawTileBackdrop(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
SETR D2 GD3; if() #132 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4998 ==; Test 'if'
SETV D2 128; if() #132 Body Start
STORE D2 0
GOTO 5000; if() #132 Body End
SETV D2 64; if() #132 Else Start
STORE D2 0; if() #132 Else End
PUSHV 6; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0004
PUSHV 1
LOAD D2 0
PUSHR D2; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWTILER; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0015; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_DrawTileBackdrop(int, int, int)] Body End
PUSHARGSV 0 0.0007; Func[void __Tango_TransferText(int, int, int, int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0.0006
LOAD D2 0.0008
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0005
LOAD D2 0.0007
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 7
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0002
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 8
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 9
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD5; if() #598 Test
PUSHR D2
LOAD D2 0.0010
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5130 ==; Test 'if'
LOAD D2 0; if() #598 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 2
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0; if() #598 Body End
PUSHARGSV 6 0.0002; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
PUSHR D2
PUSHV 0
PUSHV 1; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params End
BITMAPR; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body End
SETR D2 GD3; if() #599 Test
PUSHR D2
LOAD D2 0.0009
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 256
COMPAREV D2 0
GOTOCMP 5170 ==
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
GOTOCMP 5170 ==
SETV D2 1
GOTO 5171
SETV D2 0
COMPAREV D2 0
GOTOCMP 5260 ==; Test 'if'
SETR D2 GD16; if() #599 Body Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 16
STORE D2 0.0002
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHR D4
PUSHV 4; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0003
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
SUBR D3 D2
SETR D2 D3
DIVV D2 2
POP D3
ADDR D2 D3
STORE D2 0.0005
LOAD D2 0.0004
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
ADDR D2 D3
STORE D2 0.0004
PUSHARGSV 6 0.0002; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
PUSHV 0
PUSHV 1; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params End
BITMAPR; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body End AND if() #599 Body End
POPARGS D5 0.0011
RETURNFUNC; Func[void __Tango_TransferText(int, int, int, int)] Body End
SETR D4 SP2; Func[int __Tango_EatSpaces(char32[], int)] Body Start
LOAD D2 0.0001; while() #6 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 32
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5276 ==; Test 'while'
LOAD D2 0; while() #6 Body Start
ADDV D2 1
STORE D2 0; while() #6 Body End
GOTO 5263; while() #6 End
LOAD D2 0; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_EatSpaces(char32[], int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_FindDestStart(bool)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0001
LOAD D2 0.0002; unless() #448 Test
COMPAREV D2 0
GOTOCMP 5291 !=; Test 'unless'
LOAD D2 0.0001; return Start AND unless() #448 Body Start
GOTO 5320; return End AND unless() #448 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
SUBV D2 1
STORE D2 0
LOAD D2 0.0001; while() #7 Test
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
GOTOCMP 5312 >=
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
GOTOCMP 5312 ==
SETV D2 1
GOTO 5313
SETV D2 0
COMPAREV D2 0
GOTOCMP 5319 ==; Test 'while'
LOAD D2 0.0001; while() #7 Body Start
ADDV D2 1
STORE D2 0.0001; while() #7 Body End
GOTO 5297; while() #7 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_FindDestStart(bool)] Body End
PUSHV 0; Func[int __Tango_FindSrcStart(char32[], char32)] Body Start
SETR D4 SP2
LOAD D2 0.0001; if() #449 Test
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 5331 ==; Test 'if'
SETV D2 0; return Start AND if() #449 Body Start
GOTO 5361; return End AND if() #449 Body End
STOREV 1 0; for() #131 setup
LOAD D2 0.0002; for() #131 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 5360 ==; for() #131 TestFail?
LOAD D2 0.0002; if() #450 Test AND for() #131 Body Start
PUSHR D2
LOAD D2 0
SUBV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5356 ==; Test 'if'
LOAD D2 0; return Start AND if() #450 Body Start
GOTO 5361; return End AND if() #450 Body End
LOAD D2 0; for() #131 Body End AND for() #131 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5332; for() #131 End
SETV D2 0; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_FindSrcStart(char32[], char32)] Body End
PUSHARGSV 0 0.0006; Func[int __Tango_FloatToASCII(char32[], int, bool)] Body Start
SETR D4 SP2
STOREV 0 0.0005
STOREV 100000 0.0004
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0007; if() #453 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5386 ==; Test 'if'
SETV D2 45; if() #453 Body Start
PUSHR D2
LOAD D2 0.0008
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
SETV D2 1
STORE D2 0.0005
LOAD D2 0.0007
SUBV2 0 D2
STORE D2 0.0007; if() #453 Body End
STOREV 0 0; for() #133 setup
LOAD D2 0; for() #133 LoopTest
COMPAREV D2 10
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5521 ==; for() #133 TestFail?
LOAD D2 0.0007; for() #133 Body Start
PUSHR D2
LOAD D2 0.0004
POP D3
DIVR D3 D2
SETR D2 D3
LSHIFTV D2 0
MODV D2 10
STORE D2 0.0003
LOAD D2 0.0004; if() #136 Test
COMPAREV D2 1
GOTOCMP 5409 >=
LOAD D2 0.0006
COMPAREV D2 0
GOTOCMP 5409 !=
SETV D2 0
GOTO 5410
SETV D2 1
COMPAREV D2 0
GOTOCMP 5439 ==; Test 'if'
LOAD D2 0.0003; if() #454 Test AND if() #136 Body Start
COMPAREV D2 0
GOTOCMP 5420 >
LOAD D2 0.0002
COMPAREV D2 0
GOTOCMP 5420 !=
SETV D2 0
GOTO 5421
SETV D2 1
COMPAREV D2 0
GOTOCMP 5482 ==; Test 'if'
LOAD D2 0.0003; if() #454 Body Start
ADDV D2 48
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
SETV D2 1
STORE D2 0.0002; if() #454 Body End
GOTO 5482; if() #136 Body End
LOAD D2 0.0003; if() #137 Test AND if() #136 Else Start
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5448 ==; Test 'if'
LOAD D2 0.0001; if() #137 Body Start
ADDV D2 1
STORE D2 0.0001
GOTO 5482; if() #137 Body End
LOAD D2 0.0001; for() #134 LoopTest AND if() #137 Else Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 5469 ==; for() #134 TestFail?
SETV D2 48; for() #134 Body Start
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; for() #134 Body End
LOAD D2 0.0001; for() #134 LoopIncrement
SUBV D2 1
STORE D2 0.0001
GOTO 5448; for() #134 End
LOAD D2 0.0003
ADDV D2 48
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #137 Else End
LOAD D2 0.0007; if() #136 Else End
PUSHR D2
LOAD D2 0.0004
POP D3
MODR D3 D2
SETR D2 D3
STORE D2 0.0007
LOAD D2 0.0004
DIVV D2 10
STORE D2 0.0004
LOAD D2 0.0004; if() #138 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5500 ==; Test 'if'
SETV D2 1; if() #138 Body Start
STORE D2 0.0002
GOTO 5517; if() #138 Body End
LOAD D2 0.0004; if() #455 Test AND if() #138 Else Start
COMPAREV D2 0.1000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5517 ==; Test 'if'
SETV D2 46; if() #455 Body Start
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #455 Body End
LOAD D2 0; if() #138 Else End AND for() #133 Body End AND for() #133 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5387; for() #133 End
SETV D2 0
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005; return Start
POPARGS D5 0.0009; return End
RETURNFUNC; Func[int __Tango_FloatToASCII(char32[], int, bool)] Body End
SETR D4 SP2; Func[void __Tango_FuncActivateMenu(int, int, int)] Body Start
PUSHR D4
LOAD D2 0.0001; UsrFunc[void Tango_SetMenuFlags(int)] Params Start
PUSHR D2; UsrFunc[void Tango_SetMenuFlags(int)] Params End
CALLFUNC 0.0335; UsrFunc[void Tango_SetMenuFlags(int)] Call
PEEK D4
CALLFUNC 0.0081; UsrFunc[void Tango_ActivateMenu()] Call
PEEK D4
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 5; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 -20000
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
LOAD D2 0; UsrFunc[void Tango_SetMenuCursorPosition(int)] Params Start
PUSHR D2; UsrFunc[void Tango_SetMenuCursorPosition(int)] Params End
CALLFUNC 0.1741; UsrFunc[void Tango_SetMenuCursorPosition(int)] Call
POP D4
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_FuncActivateMenu(int, int, int)] Body End
SETR D4 SP2; Func[void __Tango_FuncAddMenuItem(int, int)] Body Start
SETV D2 -10000
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_FuncAddMenuItem(int, int)] Body End
PUSHV 0; Func[void __Tango_FuncClose()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #456 Test
ANDV D2 512
COMPAREV D2 0
GOTOCMP 5597 ==; Test 'if'
PUSHR D4; if() #456 Body Start
CALLFUNC 0.0969; UsrFunc[void __Tango_DecScreenFreeze()] Call
POP D4; if() #456 Body End
PUSHR D4
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
POP D5
RETURNFUNC; Func[void __Tango_FuncClose()] Body End
SETR D4 SP2; Func[void __Tango_FuncGoto(int)] Body Start
PUSHR D4
PUSHV 18; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
CALLFUNC 0.3713; UsrFunc[void __Tango_BeginAdvancing()] Call
POP D4
POP D5
RETURNFUNC; Func[void __Tango_FuncGoto(int)] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_FuncNumber(int, int)] Body Start
SETR D4 SP2
ALLOCATEMEMV D2 13 0
STORE D2 0.0002
STOREV 0 0.0001
LOAD D2 0.0004; if() #139 Test
PUSHR D2
LOAD D2 0.0004
LSHIFTV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5637 ==; Test 'if'
LOAD D2 0.0002; InlineFunc[int itoa(char32[], int)] Params Start AND if() #139 Body Start
PUSHR D2
LOAD D2 0.0004
SETR D3 D2; InlineFunc[int itoa(char32[], int)] Params End
POP D2; InlineFunc[int itoa(char32[], int)] Body Start
ITOA D2 D3; InlineFunc[int itoa(char32[], int)] Body End
STORE D2 0.0001
GOTO 5646; if() #139 Body End
PUSHR D4; if() #139 Else Start
LOAD D2 0.0002; UsrFunc[int __Tango_FloatToASCII(char32[], int, bool)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_FloatToASCII(char32[], int, bool)] Params End
CALLFUNC 0.5363; UsrFunc[int __Tango_FloatToASCII(char32[], int, bool)] Call
POP D4
STORE D2 0.0001; if() #139 Else End
STOREV 0 0; for() #135 setup
LOAD D2 0; for() #135 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5675 ==; for() #135 TestFail?
LOAD D2 0.0002; for() #135 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0003
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0003
ADDV D2 1
STORE D2 0.0003; for() #135 Body End
LOAD D2 0; for() #135 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5647; for() #135 End
LOAD D3 0.0002
DEALLOCATEMEMR D3
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_FuncNumber(int, int)] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_FuncOrdinal(int, int)] Body Start
SETR D4 SP2
ALLOCATEMEMV D2 9 0
STORE D2 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0005
LSHIFTV D2 0
STORE D2 0.0005
LOAD D2 0.0003; InlineFunc[int itoa(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0005
SETR D3 D2; InlineFunc[int itoa(char32[], int)] Params End
POP D2; InlineFunc[int itoa(char32[], int)] Body Start
ITOA D2 D3; InlineFunc[int itoa(char32[], int)] Body End
STORE D2 0.0002
PUSHR D4
LOAD D2 0.0005; UsrFunc[int __Tango_GetOrdinal(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetOrdinal(int)] Params End
CALLFUNC 0.5831; UsrFunc[int __Tango_GetOrdinal(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0001; if() #140 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5726 ==; Test 'if'
SETV D2 115; if() #140 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 116
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 5795; if() #140 Body End
LOAD D2 0.0001; if() #141 Test AND if() #140 Else Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5751 ==; Test 'if'
SETV D2 110; if() #141 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 100
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 5795; if() #141 Body End
LOAD D2 0.0001; if() #142 Test AND if() #141 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5776 ==; Test 'if'
SETV D2 114; if() #142 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 100
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 5795; if() #142 Body End
SETV D2 116; if() #142 Else Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 104
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #142 Else End
LOAD D2 0.0002; if() #141 Else End AND if() #140 Else End
ADDV D2 2
STORE D2 0.0002
STOREV 0 0; for() #136 setup
LOAD D2 0; for() #136 LoopTest
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5827 ==; for() #136 TestFail?
LOAD D2 0.0003; for() #136 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0004
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0004
ADDV D2 1
STORE D2 0.0004; for() #136 Body End
LOAD D2 0; for() #136 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5799; for() #136 End
LOAD D3 0.0003
DEALLOCATEMEMR D3
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_FuncOrdinal(int, int)] Body End
SETR D4 SP2; Func[int __Tango_GetOrdinal(int)] Body Start
LOAD D2 0; if() #478 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5840 ==; Test 'if'
LOAD D2 0; if() #478 Body Start
SUBV2 0 D2
STORE D2 0; if() #478 Body End
LOAD D2 0
MODV D2 100
STORE D2 0
LOAD D2 0; if() #479 Test
COMPAREV D2 11
GOTOCMP 5854 ==
LOAD D2 0
COMPAREV D2 12
GOTOCMP 5854 ==
LOAD D2 0
COMPAREV D2 13
GOTOCMP 5854 ==
SETV D2 0
GOTO 5855
SETV D2 1
COMPAREV D2 0
GOTOCMP 5859 ==; Test 'if'
SETV D2 0; return Start AND if() #479 Body Start
GOTO 5861; return End AND if() #479 Body End
LOAD D2 0; return Start
MODV D2 10
POP D5; return End
RETURNFUNC; Func[int __Tango_GetOrdinal(int)] Body End
SETR D4 SP2; Func[void __Tango_FuncPressA()] Body Start
PUSHR D4; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHV 14; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
PUSHR D4
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 8; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
RETURNFUNC; Func[void __Tango_FuncPressA()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_FuncSaveName(int)] Body Start
SETR D4 SP2
ALLOCATEMEMV D2 9 0
STORE D2 0.0001
LOAD D2 0.0001; InlineFunc[void Game::GetSaveName(char32[])] Params
GETSAVENAME D2; InlineFunc[void Game::GetSaveName(char32[])] Body
STOREV 0 0; for() #137 setup
LOAD D2 0.0001; for() #137 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 5911 ==; for() #137 TestFail?
LOAD D2 0.0001; for() #137 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0002
ADDV D2 1
STORE D2 0.0002; for() #137 Body End
LOAD D2 0; for() #137 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5882; for() #137 End
LOAD D3 0.0001
DEALLOCATEMEMR D3
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_FuncSaveName(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_FuncString(char32[], int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #457 Test
LOAD D2 0.0003; UsrFunc[bool __Tango_ValidateString(char32[])] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateString(char32[])] Params End
CALLFUNC 0.5979; UsrFunc[bool __Tango_ValidateString(char32[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 5940 !=; Test 'unless'
PUSHR D4; unless() #457 Body Start
PUSHV 205; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0003
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 5977; return (Void) AND unless() #457 Body End
LOAD D2 0.0003; InlineFunc[int strlen(char32[])] Params Start AND InlineFunc[int Min(int, int)] Params Start
SETR D3 D2; InlineFunc[int strlen(char32[])] Params End
STRINGLENGTH D2 D3; InlineFunc[int strlen(char32[])] Body
PUSHVARGR D2
PUSHVARGV 16; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
STORE D2 0.0001
STOREV 0 0; for() #138 setup
LOAD D2 0; for() #138 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5977 ==; for() #138 TestFail?
LOAD D2 0.0003; for() #138 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #138 Body End
LOAD D2 0; for() #138 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5948; for() #138 End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_FuncString(char32[], int)] Body End
SETR D4 SP2; Func[bool __Tango_ValidateString(char32[])] Body Start
LOAD D2 0; InlineFunc[bool IsValidArray(char32[])] Params AND unless() #339 Test
ISVALIDARRAY D2; InlineFunc[bool IsValidArray(char32[])] Body
COMPAREV D2 0
GOTOCMP 5987 !=; Test 'unless'
SETV D2 0; return Start AND unless() #339 Body Start
GOTO 5996; return End
GOTO 5995; unless() #339 Body End
LOAD D2 0; InlineFunc[int SizeOfArray(char32[])] Params AND if() #637 Test AND unless() #339 Else Start
ARRAYSIZE D2; InlineFunc[int SizeOfArray(char32[])] Body
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 5995 ==; Test 'if'
SETV D2 0; return Start AND if() #637 Body Start
GOTO 5996; return End AND if() #637 Body End
SETV D2 1; unless() #339 Else End AND return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_ValidateString(char32[])] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_FuncSync(int[])] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0002; if() #143 Test
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6025 ==; Test 'if'
PUSHR D4; if() #143 Body Start
LOAD D2 0.0002; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params End
CALLFUNC 0.1880; UsrFunc[bool __Tango_FindSyncingStrings(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0
GOTO 6046; if() #143 Body End
PUSHR D4; if() #143 Else Start
LOAD D2 0.0002; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params End
CALLFUNC 0.1880; UsrFunc[bool __Tango_FindSyncingStrings(int)] Call
PEEK D4
LOAD D2 0.0002; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params End
CALLFUNC 0.1880; UsrFunc[bool __Tango_FindSyncingStrings(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0; if() #143 Else End
LOAD D2 0.0001; if() #144 Test
COMPAREV D2 0
GOTOCMP 6051 ==; Test 'if'
SETV D2 0; return Start AND if() #144 Body Start
GOTO 6062; return End AND if() #144 Body End
PUSHR D4; if() #144 Else Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 6; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 1; return Start
POPARGS D5 0.0003; return End AND if() #144 Else End
RETURNFUNC; Func[int __Tango_FuncSync(int[])] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_FuncTab(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0
SETR D2 GD16
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_FuncTab(int)] Body End
PUSHV 0; Func[int __Tango_GetCurrFontData(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 6
STORE D2 0
LOAD D2 0; return Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_GetCurrFontData(int)] Body End
SETR D4 SP2; Func[int __Tango_GetCurrSlotDefData(int)] Body Start
SETR D2 GD16; return Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrSlotDefData(int)] Body End
PUSHV 0; Func[int __Tango_GetCurrentCSet()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 10; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #459 Test
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 6140 ==; Test 'if'
LOAD D2 0; return Start AND if() #459 Body Start
GOTO 6156; return End AND if() #459 Body End
PUSHR D4
PUSHV 8; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #460 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6155 ==; Test 'if'
PUSHR D4; if() #460 Body Start
PUSHV 10; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0; if() #460 Body End
LOAD D2 0; return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentCSet()] Body End
PUSHV 0; Func[int __Tango_GetCurrentColor()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 11; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #461 Test
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 6172 ==; Test 'if'
LOAD D2 0; return Start AND if() #461 Body Start
GOTO 6188; return End AND if() #461 Body End
PUSHR D4
PUSHV 9; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #462 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6187 ==; Test 'if'
PUSHR D4; if() #462 Body Start
PUSHV 11; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0; if() #462 Body End
LOAD D2 0; return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentColor()] Body End
PUSHV 0; Func[int __Tango_GetCurrentSFX()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 14; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #463 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6207 ==; Test 'if'
PUSHR D4; if() #463 Body Start
PUSHV 13; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0; if() #463 Body End
LOAD D2 0; return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentSFX()] Body End
PUSHV 0; Func[int __Tango_GetCurrentSpeed()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 13; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #149 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6228 ==; Test 'if'
PUSHR D4; return Start AND if() #149 Body Start
PUSHV 12; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
GOTO 6236; return End
GOTO 6235; if() #149 Body End
LOAD D2 0; if() #464 Test AND if() #149 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6235 ==; Test 'if'
SETV D2 0; return Start AND if() #464 Body Start
GOTO 6236; return End AND if() #464 Body End
LOAD D2 0; if() #149 Else End AND return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentSpeed()] Body End
SETR D4 SP2; Func[int __Tango_GetCurrentTileOffset()] Body Start
PUSHR D4; return Start
PUSHV 12; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
RETURNFUNC; return End AND Func[int __Tango_GetCurrentTileOffset()] Body End
PUSHV 0; Func[int __Tango_GetLineHeight()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 6
STORE D2 0
LOAD D2 0; return Start
PUSHR D2
POP D0
READPODARRAYV D2 4
PUSHR D2
LOAD D2 0
PUSHR D2
POP D0
READPODARRAYV D2 5
POP D3
ADDR D2 D3
POP D5; return End
RETURNFUNC; Func[int __Tango_GetLineHeight()] Body End
PUSHARGSV 0 0.0012; Func[int __Tango_GetNextMenuPos(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #465 Test
CALLFUNC 0.1131; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
COMPAREV D2 0
GOTOCMP 6273 !=; Test 'unless'
SETV D2 0; return Start AND unless() #465 Body Start
GOTO 6696; return End AND unless() #465 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0.0011
SETR D2 GD2
PUSHR D2
LOAD D2 0.0011
MULTV D2 3
ADDV D2 34
POP D0
READPODARRAYR D2 D2
STORE D2 0.0010
SETR D2 GD2
PUSHR D2
LOAD D2 0.0011
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
STOREV -1 0.0008
STOREV 0 0.0007
STOREV 0 0.0006
STOREV 0 0.0005
STOREV 0 0.0004
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
SETR D2 GD2; for() #140 setup
PUSHR D2
POP D0
READPODARRAYV D2 23
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #140 LoopTest
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 6688 ==; for() #140 TestFail?
LOAD D2 0; if() #466 Test AND for() #140 Body Start
PUSHR D2
LOAD D2 0.0011
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6684 !=; Test 'if' AND continue 1; AND if() #466 Body
SETV D2 0
STORE D2 0.0001
SETR D2 GD2
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
POP D0
READPODARRAYR D2 D2
STORE D2 0.0005
SETR D2 GD2
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
LOAD D2 0.0012; if() #150 Test
COMPAREV D2 0
GOTOCMP 6349 ==
LOAD D2 0.0012
COMPAREV D2 1
GOTOCMP 6349 ==
SETV D2 0
GOTO 6350
SETV D2 1
COMPAREV D2 0
GOTOCMP 6514 ==; Test 'if'
LOAD D2 0.0004; if() #467 Test AND if() #150 Body Start
PUSHR D2
LOAD D2 0.0009
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6684 !=; Test 'if' AND continue 1; AND if() #467 Body
LOAD D2 0.0005; InlineFunc[int Abs(int)] Params Start
PUSHR D2
LOAD D2 0.0010
POP D3
SUBR D3 D2
SETR D2 D3; InlineFunc[int Abs(int)] Params End
ABS D2; InlineFunc[int Abs(int)] Body
STORE D2 0.0003
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0009
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002
LOAD D2 0.0008; if() #151 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6383 ==; Test 'if'
SETV D2 1; if() #151 Body Start
STORE D2 0.0001
GOTO 6675; if() #151 Body End
LOAD D2 0.0012; if() #152 Test AND if() #151 Else Start
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6451 ==; Test 'if'
LOAD D2 0.0006; if() #153 Test AND if() #152 Body Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 6422 ==; Test 'if'
LOAD D2 0.0002; if() #468 Test AND if() #153 Body Start
COMPAREV D2 0
GOTOCMP 6416 <
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6416 >
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6414 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6416 <
SETV D2 0
GOTO 6417
SETV D2 1
COMPAREV D2 0
GOTOCMP 6675 ==; Test 'if'
SETV D2 1; if() #468 Body Start
STORE D2 0.0001; if() #468 Body End
GOTO 6675; if() #153 Body End
LOAD D2 0.0002; if() #469 Test AND if() #153 Else Start
COMPAREV D2 0
GOTOCMP 6431 >=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6445 >
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6443 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6445 <
SETV D2 0
GOTO 6446
SETV D2 1
COMPAREV D2 0
GOTOCMP 6675 ==; Test 'if'
SETV D2 1; if() #469 Body Start
STORE D2 0.0001; if() #469 Body End
GOTO 6675; if() #153 Else End AND if() #152 Body End
LOAD D2 0.0006; if() #154 Test AND if() #152 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6485 ==; Test 'if'
LOAD D2 0.0002; if() #470 Test AND if() #154 Body Start
COMPAREV D2 0
GOTOCMP 6479 >
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6479 <
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6477 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6479 <
SETV D2 0
GOTO 6480
SETV D2 1
COMPAREV D2 0
GOTOCMP 6675 ==; Test 'if'
SETV D2 1; if() #470 Body Start
STORE D2 0.0001; if() #470 Body End
GOTO 6675; if() #154 Body End
LOAD D2 0.0002; if() #471 Test AND if() #154 Else Start
COMPAREV D2 0
GOTOCMP 6494 <=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6508 <
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6506 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6508 <
SETV D2 0
GOTO 6509
SETV D2 1
COMPAREV D2 0
GOTOCMP 6675 ==; Test 'if'
SETV D2 1; if() #471 Body Start
STORE D2 0.0001; if() #471 Body End
GOTO 6675; if() #154 Else End AND if() #152 Else End AND if() #151 Else End AND if() #150 Body End
LOAD D2 0.0005; if() #472 Test AND if() #150 Else Start
PUSHR D2
LOAD D2 0.0010
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6684 !=; Test 'if' AND continue 1; AND if() #472 Body
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0010
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0003
LOAD D2 0.0004; InlineFunc[int Abs(int)] Params Start
PUSHR D2
LOAD D2 0.0009
POP D3
SUBR D3 D2
SETR D2 D3; InlineFunc[int Abs(int)] Params End
ABS D2; InlineFunc[int Abs(int)] Body
STORE D2 0.0002
LOAD D2 0.0008; if() #155 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6545 ==; Test 'if'
SETV D2 1; if() #155 Body Start
STORE D2 0.0001
GOTO 6675; if() #155 Body End
LOAD D2 0.0012; if() #156 Test AND if() #155 Else Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6613 ==; Test 'if'
LOAD D2 0.0007; if() #157 Test AND if() #156 Body Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 6584 ==; Test 'if'
LOAD D2 0.0003; if() #473 Test AND if() #157 Body Start
COMPAREV D2 0
GOTOCMP 6578 <
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6578 >
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6576 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6578 <
SETV D2 0
GOTO 6579
SETV D2 1
COMPAREV D2 0
GOTOCMP 6675 ==; Test 'if'
SETV D2 1; if() #473 Body Start
STORE D2 0.0001; if() #473 Body End
GOTO 6675; if() #157 Body End
LOAD D2 0.0003; if() #474 Test AND if() #157 Else Start
COMPAREV D2 0
GOTOCMP 6593 >=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6607 >
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6605 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6607 <
SETV D2 0
GOTO 6608
SETV D2 1
COMPAREV D2 0
GOTOCMP 6675 ==; Test 'if'
SETV D2 1; if() #474 Body Start
STORE D2 0.0001; if() #474 Body End
GOTO 6675; if() #157 Else End AND if() #156 Body End
LOAD D2 0.0007; if() #158 Test AND if() #156 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6647 ==; Test 'if'
LOAD D2 0.0003; if() #475 Test AND if() #158 Body Start
COMPAREV D2 0
GOTOCMP 6641 >
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6641 <
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6639 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6641 <
SETV D2 0
GOTO 6642
SETV D2 1
COMPAREV D2 0
GOTOCMP 6675 ==; Test 'if'
SETV D2 1; if() #475 Body Start
STORE D2 0.0001; if() #475 Body End
GOTO 6675; if() #158 Body End
LOAD D2 0.0003; if() #476 Test AND if() #158 Else Start
COMPAREV D2 0
GOTOCMP 6656 <=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6670 <
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6668 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6670 <
SETV D2 0
GOTO 6671
SETV D2 1
COMPAREV D2 0
GOTOCMP 6675 ==; Test 'if'
SETV D2 1; if() #476 Body Start
STORE D2 0.0001; if() #476 Body End
LOAD D2 0.0001; if() #158 Else End AND if() #156 Else End AND if() #155 Else End AND if() #150 Else End AND if() #477 Test
COMPAREV D2 0
GOTOCMP 6684 ==; Test 'if'
LOAD D2 0; if() #477 Body Start
STORE D2 0.0008
LOAD D2 0.0003
STORE D2 0.0007
LOAD D2 0.0002
STORE D2 0.0006; if() #477 Body End
LOAD D2 0; for() #140 Body End AND for() #140 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 6309; for() #140 End
LOAD D2 0.0008; if() #159 Test
COMPAREV D2 -1
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 6695 ==; Test 'if'
LOAD D2 0.0008; return Start AND if() #159 Body Start
GOTO 6696; return End AND if() #159 Body End
LOAD D2 0.0011; return Start AND if() #159 Else Start
POPARGS D5 0.0013; return End AND if() #159 Else End
RETURNFUNC; Func[int __Tango_GetNextMenuPos(int)] Body End
SETR D4 SP2; Func[int __Tango_GetNumSCCArgs(int)] Body Start
LOAD D2 0; if() #160 Test
COMPAREV D2 9
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6748 ==; Test 'if'
LOAD D2 0; if() #161 Test AND if() #160 Body Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6711 ==; Test 'if'
SETV D2 2; return Start AND if() #161 Body Start
GOTO 6756; return End AND if() #161 Body End
LOAD D2 0; if() #162 Test AND if() #161 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6718 ==; Test 'if'
SETV D2 1; return Start AND if() #162 Body Start
GOTO 6756; return End AND if() #162 Body End
LOAD D2 0; if() #163 Test AND if() #162 Else Start
COMPAREV D2 4
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6725 ==; Test 'if'
SETV D2 3; return Start AND if() #163 Body Start
GOTO 6756; return End AND if() #163 Body End
LOAD D2 0; if() #164 Test AND if() #163 Else Start
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6732 ==; Test 'if'
SETV D2 2; return Start AND if() #164 Body Start
GOTO 6756; return End AND if() #164 Body End
LOAD D2 0; if() #165 Test AND if() #164 Else Start
COMPAREV D2 6
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6739 ==; Test 'if'
SETV D2 2; return Start AND if() #165 Body Start
GOTO 6756; return End AND if() #165 Body End
LOAD D2 0; if() #166 Test AND if() #165 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6746 ==; Test 'if'
SETV D2 3; return Start AND if() #166 Body Start
GOTO 6756; return End AND if() #166 Body End
SETV D2 3; return Start AND if() #166 Else Start
GOTO 6756; return End AND if() #166 Else End AND if() #165 Else End AND if() #164 Else End AND if() #163 Else End AND if() #162 Else End AND if() #161 Else End AND if() #160 Body End
LOAD D2 0; if() #167 Test AND if() #160 Else Start
COMPAREV D2 17
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6755 ==; Test 'if'
SETV D2 2; return Start AND if() #167 Body Start
GOTO 6756; return End AND if() #167 Body End
SETV D2 1; return Start AND if() #167 Else Start
POP D5; return End AND if() #167 Else End AND if() #160 Else End
RETURNFUNC; Func[int __Tango_GetNumSCCArgs(int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetStringEnd(char32[])] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0002; while() #8 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 6786 ==; Test 'while'
LOAD D2 0.0002; if() #481 Test AND while() #8 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 32
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 6782 ==; Test 'if'
LOAD D2 0; if() #481 Body Start
STORE D2 0.0001; if() #481 Body End
LOAD D2 0
ADDV D2 1
STORE D2 0; while() #8 Body End
GOTO 6762; while() #8 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_GetStringEnd(char32[])] Body End
SETR D4 SP2; Func[int __Tango_GetTargetOffset()] Body Start
PUSHR D4; return Start
PUSHV 5; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
PUSHR D2
PUSHR D4
PUSHV 4; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6111; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
PUSHR D4
PUSHV 4; UsrFunc[int __Tango_GetCurrFontData(int)] Params
CALLFUNC 0.6097; UsrFunc[int __Tango_GetCurrFontData(int)] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
PUSHR D4
PUSHV 9; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
RETURNFUNC; return End AND Func[int __Tango_GetTargetOffset()] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetVar(int)] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0002; if() #482 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6832 ==; Test 'if'
SETV D2 1; if() #482 Body Start
STORE D2 0
LOAD D2 0.0002
SUBV2 0 D2
STORE D2 0.0002; if() #482 Body End
LOAD D2 0.0002; if() #168 Test
COMPAREV D2 0.0034
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6843 ==; Test 'if'
PUSHR D4; if() #168 Body Start
PUSHV 22; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 6963; if() #168 Body End
LOAD D2 0.0002; if() #169 Test AND if() #168 Else Start
COMPAREV D2 0.0035
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6854 ==; Test 'if'
PUSHR D4; if() #169 Body Start
PUSHV 23; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 6963; if() #169 Body End
LOAD D2 0.0002; if() #170 Test AND if() #169 Else Start
COMPAREV D2 0.2015
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6864 ==; Test 'if'
PUSHR D4; if() #170 Body Start
CALLFUNC 0.6126; UsrFunc[int __Tango_GetCurrentCSet()] Call
POP D4
STORE D2 0.0001
GOTO 6963; if() #170 Body End
LOAD D2 0.0002; if() #171 Test AND if() #170 Else Start
COMPAREV D2 1.3059
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6874 ==; Test 'if'
PUSHR D4; if() #171 Body Start
CALLFUNC 0.6158; UsrFunc[int __Tango_GetCurrentColor()] Call
POP D4
STORE D2 0.0001
GOTO 6963; if() #171 Body End
LOAD D2 0.0002; if() #172 Test AND if() #171 Else Start
COMPAREV D2 5.1391
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6884 ==; Test 'if'
PUSHR D4; if() #172 Body Start
CALLFUNC 0.6210; UsrFunc[int __Tango_GetCurrentSpeed()] Call
POP D4
STORE D2 0.0001
GOTO 6963; if() #172 Body End
LOAD D2 0.0002; if() #173 Test AND if() #172 Else Start
COMPAREV D2 0.0997
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6894 ==; Test 'if'
PUSHR D4; if() #173 Body Start
CALLFUNC 0.6190; UsrFunc[int __Tango_GetCurrentSFX()] Call
POP D4
STORE D2 0.0001
GOTO 6963; if() #173 Body End
LOAD D2 0.0002; if() #174 Test AND if() #173 Else Start
COMPAREV D2 5.3793
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6905 ==; Test 'if'
PUSHR D4; if() #174 Body Start
PUSHV 0; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 6963; if() #174 Body End
LOAD D2 0.0002; if() #175 Test AND if() #174 Else Start
COMPAREV D2 0.0024
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6916 ==; Test 'if'
PUSHR D4; if() #175 Body Start
PUSHV 6; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 6963; if() #175 Body End
LOAD D2 0.0002; if() #176 Test AND if() #175 Else Start
COMPAREV D2 0.0025
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6927 ==; Test 'if'
PUSHR D4; return Start AND if() #176 Body Start
PUSHV 7; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
GOTO 6970; return End
GOTO 6963; if() #176 Body End
LOAD D2 0.0002; if() #177 Test AND if() #176 Else Start
COMPAREV D2 0.0024
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6938 ==; Test 'if'
PUSHR D4; if() #177 Body Start
PUSHV 18; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 6963; if() #177 Body End
LOAD D2 0.0002; if() #178 Test AND if() #177 Else Start
COMPAREV D2 57.0513
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6946 ==; Test 'if'
SETV D2 -1; if() #178 Body Start
STORE D2 0.0001
GOTO 6963; if() #178 Body End
LOAD D2 0.0002; if() #179 Test AND if() #178 Else Start
COMPAREV D2 7.5754
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6957 ==; Test 'if'
SETR D2 GD2; if() #179 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 10
STORE D2 0.0001
GOTO 6963; if() #179 Body End
PUSHR D4; if() #179 Else Start
LOAD D2 0.0002; UsrFunc[int Tango_GetCustomVar(int)] Params Start
PUSHR D2; UsrFunc[int Tango_GetCustomVar(int)] Params End
CALLFUNC 0.1161; UsrFunc[int Tango_GetCustomVar(int)] Call
POP D4
STORE D2 0.0001; if() #179 Else End
LOAD D2 0; if() #178 Else End AND if() #177 Else End AND if() #176 Else End AND if() #175 Else End AND if() #174 Else End AND if() #173 Else End AND if() #172 Else End AND if() #171 Else End AND if() #170 Else End AND if() #169 Else End AND if() #168 Else End AND if() #483 Test
COMPAREV D2 0
GOTOCMP 6969 ==; Test 'if'
LOAD D2 0.0001; if() #483 Body Start
SUBV2 0 D2
STORE D2 0.0001; if() #483 Body End
LOAD D2 0.0001; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_GetVar(int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetWordWidth(int, int[])] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
SETR D2 GD4; while(true) #9 Body [Opt:AlwaysOn] Start
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #484 Test
COMPAREV D2 0
GOTOCMP 6993 ==
LOAD D2 0
COMPAREV D2 32
GOTOCMP 6993 ==
LOAD D2 0
COMPAREV D2 26
GOTOCMP 6993 ==
SETV D2 0
GOTO 6994
SETV D2 1
COMPAREV D2 0
GOTOCMP 7027 !=; Test 'if' AND break 1; AND if() #484 Body
LOAD D2 0; if() #485 Test
COMPAREV D2 32
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 7013 ==; Test 'if'
LOAD D2 0.0001; if() #485 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0.0001; if() #485 Body End
PUSHR D4; if() #486 Test
LOAD D2 0; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params End
CALLFUNC 0.3360; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 7023 ==; Test 'if'
LOAD D2 0.0003; if() #486 Body Start
ADDV D2 1
STORE D2 0.0003; if() #486 Body End
LOAD D2 0.0003
ADDV D2 1
STORE D2 0.0003; while(true) #9 Body [Opt:AlwaysOn] End
GOTO 6976; while() #9 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0004; return End
RETURNFUNC; Func[int __Tango_GetWordWidth(int, int[])] Body End
PUSHV 0; Func[void __Tango_InitializeMenu(int)] Body Start
SETR D4 SP2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 23 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 32 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 16 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 17 D2
PUSHR D4
SETR D2 GD3; UsrFunc[int Clamp(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 1
PUSHV 20; UsrFunc[int Clamp(int, int, int)] Params End
CALLFUNC 0.0027; UsrFunc[int Clamp(int, int, int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 18 D2
PUSHR D4
SETR D2 GD3; UsrFunc[int Clamp(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 19
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 1
PUSHV 20; UsrFunc[int Clamp(int, int, int)] Params End
CALLFUNC 0.0027; UsrFunc[int Clamp(int, int, int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 19 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 20
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 20 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 21
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 21 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 24 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0
PUSHR D4
PUSHV 7; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 7
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 25 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 9
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0
PUSHR D2
POP D0
READPODARRAYV D2 4
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 26 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 33 D2
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_InitializeMenu(int)] Body End
PUSHARGSV 0 0.0003; Func[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Body Start
SETR D4 SP2
LOAD D2 0.0004
STORE D2 0.0002
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; if() #203 Test
COMPAREV D2 48
GOTOCMP 7220 <
LOAD D2 0.0001
COMPAREV D2 57
GOTOCMP 7220 >
SETV D2 1
GOTO 7221
SETV D2 0
COMPAREV D2 0
GOTOCMP 7250 ==; Test 'if'
PUSHR D4; if() #203 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
PUSHV 1
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params End
CALLFUNC 0.9150; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Call
POP D4
STORE D2 0
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0005
PUSHR D4
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0004
ADDV D2 1
STORE D2 0.0004
GOTO 7463; if() #203 Body End
LOAD D2 0.0001; if() #204 Test AND if() #203 Else Start
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7343 ==; Test 'if'
PUSHR D4; if() #204 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5262; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; unless() #527 Test
COMPAREV D2 48
GOTOCMP 7278 <
LOAD D2 0.0001
COMPAREV D2 57
GOTOCMP 7278 >
SETV D2 1
GOTO 7279
SETV D2 0
COMPAREV D2 0
GOTOCMP 7289 !=; Test 'unless'
PUSHR D4; unless() #527 Body Start
PUSHV 106; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7489; return End AND unless() #527 Body End
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
PUSHV 1
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params End
CALLFUNC 0.9150; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5262; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006; if() #205 Test
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
COMPAREV D2 41
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7334 ==; Test 'if'
PUSHR D4; if() #205 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
LOAD D2 0.0004
ADDV D2 1
STORE D2 0.0004
GOTO 7463; if() #205 Body End
PUSHR D4; if() #205 Else Start
PUSHV 106; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7489; return End AND if() #205 Else End
GOTO 7463; if() #204 Body End
LOAD D2 0.0001; if() #206 Test AND if() #204 Else Start
COMPAREV D2 97
GOTOCMP 7351 <
LOAD D2 0.0001
COMPAREV D2 122
GOTOCMP 7351 >
SETV D2 1
GOTO 7352
SETV D2 0
COMPAREV D2 0
GOTOCMP 7455 ==; Test 'if'
PUSHR D4; if() #206 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params End
CALLFUNC 0.8748; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5262; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006; if() #207 Test
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7446 ==; Test 'if'
PUSHR D4; if() #207 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetStartMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetStartMarker(int, int)] Params End
CALLFUNC 0.8820; UsrFunc[void __Tango_SetStartMarker(int, int)] Call
PEEK D4
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004
PUSHR D4; if() #528 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params End
CALLFUNC 0.8874; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 7417 ==; Test 'if'
SETV D2 1; return Start AND if() #528 Body Start
GOTO 7489; return End AND if() #528 Body End
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0005
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0004
PUSHR D4
LOAD D2 0.0004; UsrFunc[int __Tango_SetEndMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[int __Tango_SetEndMarker(int, int)] Params End
CALLFUNC 0.9097; UsrFunc[int __Tango_SetEndMarker(int, int)] Call
POP D4
STORE D2 0.0004
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_AddPadding(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2; UsrFunc[int __Tango_AddPadding(int, int, int)] Params End
CALLFUNC 0.3216; UsrFunc[int __Tango_AddPadding(int, int, int)] Call
POP D4
STORE D2 0.0004
GOTO 7463; if() #207 Body End
PUSHR D4; if() #207 Else Start
PUSHV 104; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7489; return End AND if() #207 Else End
GOTO 7463; if() #206 Body End
PUSHR D4; if() #206 Else Start
PUSHV 104; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7489; return End AND if() #206 Else End
LOAD D2 0.0004; if() #204 Else End AND if() #203 Else End AND if() #529 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 7476 ==; Test 'if'
SETV D2 1; return Start AND if() #529 Body Start
GOTO 7489; return End AND if() #529 Body End
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
POPARGS D5 0.0007; return End
RETURNFUNC; Func[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Body End
PUSHARGSV 0 0.0004; Func[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Body Start
SETR D4 SP2
LOAD D2 0.0007
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
LOAD D2 0.0003
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0006
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params End
CALLFUNC 0.6698; UsrFunc[int __Tango_GetNumSCCArgs(int)] Call
POP D4
STORE D2 0.0002
STOREV 0 0.0001
LOAD D2 0.0002; for() #141 LoopTest
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 7638 ==; for() #141 TestFail?
LOAD D2 0.0007; for() #141 Body Start
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
SUBV D2 1
STORE D2 0.0001
LOAD D2 0.0001; if() #190 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7547 ==; Test 'if'
PUSHR D4; if() #190 Body Start
PUSHV 107; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0006
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7651; return End
GOTO 7555; if() #190 Body End
LOAD D2 0.0001; if() #506 Test AND if() #190 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 7555 ==; Test 'if'
LOAD D2 0.0001; if() #506 Body Start
ADDV D2 256
STORE D2 0.0001; if() #506 Body End
LOAD D2 0.0006; if() #190 Else End
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0007; if() #507 Test
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -1
GOTOCMP 7574 ==
LOAD D2 0.0007
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
COMPAREV D2 255
GOTOCMP 7574 ==
SETV D2 0
GOTO 7575
SETV D2 1
COMPAREV D2 0
GOTOCMP 7622 ==; Test 'if'
LOAD D2 0.0007; if() #507 Body Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #191 Test
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7599 ==; Test 'if'
PUSHR D4; if() #191 Body Start
PUSHV 107; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0006
ADDV D2 1
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7651; return End
GOTO 7607; if() #191 Body End
LOAD D2 0; if() #508 Test AND if() #191 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 7607 ==; Test 'if'
LOAD D2 0; if() #508 Body Start
ADDV D2 256
STORE D2 0; if() #508 Body End
LOAD D2 0.0001; if() #191 Else End
PUSHR D2
LOAD D2 0
MULTV D2 254
SETV D2 254
PUSHR D2
LOAD D2 0
POP D3
MULTR D2 D3
POP D3
ADDR D2 D3
STORE D2 0.0001
LOAD D2 0.0006
ADDV D2 2
STORE D2 0.0006; if() #507 Body End
LOAD D2 0.0001
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; for() #141 Body End
LOAD D2 0.0002; for() #141 LoopIncrement
SUBV D2 1
STORE D2 0.0002
GOTO 7521; for() #141 End
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0004
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
POPARGS D5 0.0008; return End
RETURNFUNC; Func[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Body End
SETR D4 SP2; Func[bool __Tango_ValidateMessage(int)] Body Start
LOAD D2 0; if() #627 Test
COMPAREV D2 0
GOTOCMP 7666 <=
LOAD D2 0
PUSHR D2
LOAD D2 0
LSHIFTV D2 0
POP D3
COMPARER D3 D2
GOTOCMP 7666 !=
SETV D2 0
GOTO 7667
SETV D2 1
COMPAREV D2 0
GOTOCMP 7671 ==; Test 'if'
SETV D2 0; return Start AND if() #627 Body Start
GOTO 7672; return End AND if() #627 Body End
SETV D2 1; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_ValidateMessage(int)] Body End
PUSHV 0; Func[void __Tango_MenuSelect(int)] Body Start
SETR D4 SP2
SETR D2 GD2; if() #515 Test
PUSHR D2
POP D0
READPODARRAYV D2 33
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 7692 ==; Test 'if'
PUSHR D4; if() #515 Body Start
SETR D2 GD2; UsrFunc[void Tango_SaveMenuState(int[])] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 33
PUSHR D2; UsrFunc[void Tango_SaveMenuState(int[])] Params End
CALLFUNC 0.1423; UsrFunc[void Tango_SaveMenuState(int[])] Call
POP D4; if() #515 Body End
LOAD D2 0.0001
MULTV D2 3
ADDV D2 34
STORE D2 0
SETR D2 GD2
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETR D2 GD2; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 21; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 8
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
SETR D2 GD2; if() #516 Test
PUSHR D2
POP D0
READPODARRAYV D2 14
ANDV D2 2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7734 ==; Test 'if'
PUSHR D4; if() #516 Body Start
CALLFUNC 0.1083; UsrFunc[void Tango_DeactivateMenu()] Call
POP D4; if() #516 Body End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_MenuSelect(int)] Body End
PUSHARGSV 0 0.0010; Func[bool __Tango_NeedsNewLine(int, int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0010
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0008
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0.0007
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0006
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 6
STORE D2 0.0005
SETR D2 GD5
PUSHR D2
LOAD D2 0.0008
ADDV D2 4
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0007
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0006
ADDV D2 8
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0003
LOAD D2 0.0009; if() #192 Test
COMPAREV D2 -10000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7853 ==; Test 'if'
SETR D2 GD4; if() #192 Body Start
PUSHR D2
LOAD D2 0.0010
ADDV D2 2
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
LOAD D2 0.0004
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0006
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0004
LOAD D2 0.0009; if() #517 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7829 ==; Test 'if'
PUSHR D4; if() #517 Body Start
LOAD D2 0.0010; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
PUSHV 1; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7945; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
SETR D2 GD4
PUSHR D2
LOAD D2 0.0010
ADDV D2 2
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009; if() #517 Body End
LOAD D2 0.0009; if() #193 Test
COMPAREV D2 33
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 7850 ==; Test 'if'
PUSHR D4; return Start AND if() #193 Body Start
LOAD D2 0.0010; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params End
CALLFUNC 0.8573; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I==
GOTO 7943; return End
GOTO 7860; if() #193 Body End
SETV D2 1; return Start AND if() #193 Else Start
GOTO 7943; return End AND if() #193 Else End
GOTO 7860; if() #192 Body End
LOAD D2 0.0009; if() #518 Test AND if() #192 Else Start
COMPAREV D2 32
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 7860 ==; Test 'if'
SETV D2 0; return Start AND if() #518 Body Start
GOTO 7943; return End AND if() #518 Body End
PUSHR D4; if() #192 Else End AND unless() #519 Test
LOAD D2 0.0009; UsrFunc[bool __Tango_CharacterWillFit(char32, int[], int, int)] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_CharacterWillFit(char32, int[], int, int)] Params End
CALLFUNC 0.3798; UsrFunc[bool __Tango_CharacterWillFit(char32, int[], int, int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 7875 !=; Test 'unless'
SETV D2 1; return Start AND unless() #519 Body Start
GOTO 7943; return End AND unless() #519 Body End
STOREV 0 0.0002
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0001
LOAD D2 0.0010; for() #145 setup
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #145 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 7925 ==; for() #145 TestFail?
SETR D2 GD4; for() #145 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
LOAD D2 0.0009; if() #194 Test
COMPAREV D2 32
GOTOCMP 7906 ==
LOAD D2 0.0009
COMPAREV D2 -10000
GOTOCMP 7906 ==
SETV D2 0
GOTO 7907
SETV D2 1
COMPAREV D2 0
GOTOCMP 7913 ==; Test 'if'
SETV D2 1; if() #194 Body Start
STORE D2 0.0002
GOTO 7925; break 1;
GOTO 7921; if() #194 Body End
LOAD D2 0.0009; if() #520 Test AND if() #194 Else Start
COMPAREV D2 33
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 7921 ==; Test 'if'
SETV D2 0; if() #520 Body Start
STORE D2 0.0002
GOTO 7925; break 1; AND if() #520 Body End
LOAD D2 0; if() #194 Else End AND for() #145 Body End AND for() #145 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 7884; for() #145 End
LOAD D2 0.0002; if() #521 Test
COMPAREV D2 0
GOTOCMP 7942 ==; Test 'if'
PUSHR D4; return Start AND if() #521 Body Start
LOAD D2 0.0010; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params End
CALLFUNC 0.8573; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I==
GOTO 7943; return End AND if() #521 Body End
SETV D2 0; return Start
POPARGS D5 0.0012; return End
RETURNFUNC; Func[bool __Tango_NeedsNewLine(int, int)] Body End
PUSHARGSV 0 0.0009; Func[int __Tango_RunFunction(int, bool)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0010
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0008
STOREV 2 0.0007
STOREV 0 0.0006
ALLOCATEMEMV D2 4 0
PUSHR D2
WRITEPODARRAY D2 {0,0,0,0}
POP D2
STORE D2 0.0004
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0008; if() #566 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 7974 ==; Test 'if'
SETV D2 1; if() #566 Body Start
STORE D2 0.0001
LOAD D2 0.0008
SUBV2 0 D2
STORE D2 0.0008; if() #566 Body End
STOREV 0 0; for() #149 setup
SETV D2 1; for() #149 LoopTest
COMPAREV D2 0
GOTOCMP 8035 ==; for() #149 TestFail?
PUSHR D4; for() #149 Body Start
LOAD D2 0.0010; UsrFunc[int __Tango_ReadArgLength(int)] Params Start
PUSHR D2
LOAD D2 0.0007
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[int __Tango_ReadArgLength(int)] Params End
CALLFUNC 1.1404; UsrFunc[int __Tango_ReadArgLength(int)] Call
POP D4
STORE D2 0.0006
LOAD D2 0.0006; if() #567 Test
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8035 !=; Test 'if' AND break 1; AND if() #567 Body
LOAD D2 0; if() #568 Test
COMPAREV D2 4
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 8008 ==; Test 'if'
LOAD D2 0; if() #569 Test AND if() #568 Body Start
COMPAREV D2 4
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8031 ==; Test 'if'
PUSHR D4; if() #569 Body Start
PUSHV 204; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0111; UsrFunc[void __Tango_LogError(int)] Call
POP D4; if() #569 Body End
GOTO 8031; continue 1; AND if() #568 Body End
PUSHR D4
LOAD D2 0.0010; UsrFunc[int __Tango_ReadArg(int)] Params Start
PUSHR D2
LOAD D2 0.0007
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[int __Tango_ReadArg(int)] Params End
CALLFUNC 1.1360; UsrFunc[int __Tango_ReadArg(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0007
PUSHR D2
LOAD D2 0.0006
POP D3
ADDR D2 D3
STORE D2 0.0007; for() #149 Body End
LOAD D2 0; for() #149 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 7975; for() #149 End
LOAD D2 0.0009; if() #570 Test
COMPAREV D2 0
GOTOCMP 8049 ==; Test 'if'
PUSHR D4; if() #570 Body Start
LOAD D2 0.0010; UsrFunc[void __Tango_Delete(int, int)] Params Start
PUSHR D2
LOAD D2 0.0010
PUSHR D2
LOAD D2 0.0007
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[void __Tango_Delete(int, int)] Params End
CALLFUNC 0.3958; UsrFunc[void __Tango_Delete(int, int)] Call
POP D4; if() #570 Body End
SETV D2 1
STORE D2 0.0002
LOAD D2 0.0008; if() #246 Test
COMPAREV D2 0.4513
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 8194 ==; Test 'if'
LOAD D2 0.0008; if() #247 Test AND if() #246 Body Start
COMPAREV D2 0.0081
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8074 ==; Test 'if'
LOAD D2 0.0004; if() #247 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
ADDR D2 D3
STORE D2 0.0003
GOTO 8548; if() #247 Body End
LOAD D2 0.0008; if() #248 Test AND if() #247 Else Start
COMPAREV D2 0.0123
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8100 ==; Test 'if'
PUSHR D4; if() #248 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
GOTOCMP 8094 !=
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
GOTOCMP 8094 !=
SETV D2 0
GOTO 8095
SETV D2 1
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3789; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #248 Body End
LOAD D2 0.0008; if() #249 Test AND if() #248 Else Start
COMPAREV D2 0.0151
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8126 ==; Test 'if'
PUSHR D4; if() #249 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
GOTOCMP 8120 ==
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
GOTOCMP 8120 ==
SETV D2 1
GOTO 8121
SETV D2 0
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3789; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #249 Body End
LOAD D2 0.0008; if() #250 Test AND if() #249 Else Start
COMPAREV D2 0.0811
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8143 ==; Test 'if'
PUSHR D4; if() #250 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
SETCMP D2 I==
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3789; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #250 Body End
LOAD D2 0.0008; if() #251 Test AND if() #250 Else Start
COMPAREV D2 0.0989
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8157 ==; Test 'if'
PUSHR D4; if() #251 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncTab(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_FuncTab(int)] Params End
CALLFUNC 0.6064; UsrFunc[void __Tango_FuncTab(int)] Call
POP D4
GOTO 8548; if() #251 Body End
LOAD D2 0.0008; if() #252 Test AND if() #251 Else Start
COMPAREV D2 0.1446
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8175 ==; Test 'if'
LOAD D2 0.0004; if() #252 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0010
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 8548; if() #252 Body End
LOAD D2 0.0008; if() #253 Test AND if() #252 Else Start
COMPAREV D2 0.3291
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8191 ==; Test 'if'
PUSHR D4; if() #253 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5604; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8548; if() #253 Body End
SETV D2 0; if() #253 Else Start
STORE D2 0.0002; if() #253 Else End
GOTO 8548; if() #252 Else End AND if() #251 Else End AND if() #250 Else End AND if() #249 Else End AND if() #248 Else End AND if() #247 Else End AND if() #246 Body End
LOAD D2 0.0008; if() #254 Test AND if() #246 Else Start
COMPAREV D2 6.1058
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 8323 ==; Test 'if'
LOAD D2 0.0008; if() #255 Test AND if() #254 Body Start
COMPAREV D2 0.4513
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8222 ==; Test 'if'
PUSHR D4; if() #255 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I<
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3789; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #255 Body End
LOAD D2 0.0008; if() #256 Test AND if() #255 Else Start
COMPAREV D2 0.5235
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8237 ==; Test 'if'
PUSHR D4; if() #256 Body Start
PUSHV 0.5235; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1482; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
GOTO 8548; if() #256 Body End
LOAD D2 0.0008; if() #257 Test AND if() #256 Else Start
COMPAREV D2 0.6325
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8257 ==; Test 'if'
PUSHR D4; if() #257 Body Start
LOAD D2 0.0004; UsrFunc[int Rand(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[int Rand(int, int)] Params End
CALLFUNC 0.0015; UsrFunc[int Rand(int, int)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #257 Body End
LOAD D2 0.0008; if() #258 Test AND if() #257 Else Start
COMPAREV D2 0.7843
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8269 ==; Test 'if'
PUSHR D4; if() #258 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_FuncSync(int[])] Params Start
PUSHR D2; UsrFunc[int __Tango_FuncSync(int[])] Params End
CALLFUNC 0.5998; UsrFunc[int __Tango_FuncSync(int[])] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #258 Body End
LOAD D2 0.0008; if() #259 Test AND if() #258 Else Start
COMPAREV D2 1.1939
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8286 ==; Test 'if'
PUSHR D4; if() #259 Body Start
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8548; if() #259 Body End
LOAD D2 0.0008; if() #260 Test AND if() #259 Else Start
COMPAREV D2 1.2192
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8297 ==; Test 'if'
PUSHR D4; if() #260 Body Start
CALLFUNC 0.5583; UsrFunc[void __Tango_FuncClose()] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8548; if() #260 Body End
LOAD D2 0.0008; if() #261 Test AND if() #260 Else Start
COMPAREV D2 1.8884
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8320 ==; Test 'if'
PUSHR D4; if() #261 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I==
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3789; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #261 Body End
SETV D2 0; if() #261 Else Start
STORE D2 0.0002; if() #261 Else End
GOTO 8548; if() #260 Else End AND if() #259 Else End AND if() #258 Else End AND if() #257 Else End AND if() #256 Else End AND if() #255 Else End AND if() #254 Body End
LOAD D2 0.0008; if() #262 Test AND if() #254 Else Start
COMPAREV D2 208.0657
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 8456 ==; Test 'if'
LOAD D2 0.0008; if() #263 Test AND if() #262 Body Start
COMPAREV D2 6.1058
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8348 ==; Test 'if'
PUSHR D4; if() #263 Body Start
LOAD D2 0.0010; UsrFunc[void __Tango_AppendMessage(int, int)] Params Start
PUSHR D2
LOAD D2 0.0007
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_AppendMessage(int, int)] Params End
CALLFUNC 0.3311; UsrFunc[void __Tango_AppendMessage(int, int)] Call
POP D4
GOTO 8548; if() #263 Body End
LOAD D2 0.0008; if() #264 Test AND if() #263 Else Start
COMPAREV D2 7.5241
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8364 ==; Test 'if'
PUSHR D4; if() #264 Body Start
LOAD D2 0.0010; UsrFunc[void __Tango_FuncAddMenuItem(int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_FuncAddMenuItem(int, int)] Params End
CALLFUNC 0.5561; UsrFunc[void __Tango_FuncAddMenuItem(int, int)] Call
POP D4
GOTO 8548; if() #264 Body End
LOAD D2 0.0008; if() #265 Test AND if() #264 Else Start
COMPAREV D2 10.8066
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8387 ==; Test 'if'
PUSHR D4; if() #265 Body Start
LOAD D2 0.0010; UsrFunc[void __Tango_FuncActivateMenu(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncActivateMenu(int, int, int)] Params End
CALLFUNC 0.5533; UsrFunc[void __Tango_FuncActivateMenu(int, int, int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8548; if() #265 Body End
LOAD D2 0.0008; if() #266 Test AND if() #265 Else Start
COMPAREV D2 29.0329
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8403 ==; Test 'if'
PUSHR D4; if() #266 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncNumber(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0010
PUSHR D2; UsrFunc[void __Tango_FuncNumber(int, int)] Params End
CALLFUNC 0.5615; UsrFunc[void __Tango_FuncNumber(int, int)] Call
POP D4
GOTO 8548; if() #266 Body End
LOAD D2 0.0008; if() #267 Test AND if() #266 Else Start
COMPAREV D2 31.4910
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8414 ==; Test 'if'
PUSHR D4; if() #267 Body Start
CALLFUNC 0.5863; UsrFunc[void __Tango_FuncPressA()] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8548; if() #267 Body End
LOAD D2 0.0008; if() #268 Test AND if() #267 Else Start
COMPAREV D2 37.4073
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8430 ==; Test 'if'
PUSHR D4; if() #268 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncString(char32[], int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0010
PUSHR D2; UsrFunc[void __Tango_FuncString(char32[], int)] Params End
CALLFUNC 0.5915; UsrFunc[void __Tango_FuncString(char32[], int)] Call
POP D4
GOTO 8548; if() #268 Body End
LOAD D2 0.0008; if() #269 Test AND if() #268 Else Start
COMPAREV D2 113.9450
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8453 ==; Test 'if'
PUSHR D4; if() #269 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3789; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #269 Body End
SETV D2 0; if() #269 Else Start
STORE D2 0.0002; if() #269 Else End
GOTO 8548; if() #268 Else End AND if() #267 Else End AND if() #266 Else End AND if() #265 Else End AND if() #264 Else End AND if() #263 Else End AND if() #262 Body End
LOAD D2 0.0008; if() #270 Test AND if() #262 Else Start
COMPAREV D2 208.0657
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8472 ==; Test 'if'
PUSHR D4; if() #270 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncOrdinal(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0010
PUSHR D2; UsrFunc[void __Tango_FuncOrdinal(int, int)] Params End
CALLFUNC 0.5679; UsrFunc[void __Tango_FuncOrdinal(int, int)] Call
POP D4
GOTO 8548; if() #270 Body End
LOAD D2 0.0008; if() #271 Test AND if() #270 Else Start
COMPAREV D2 209.6041
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8483 ==; Test 'if'
LOAD D2 0.0004; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #271 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
GOTO 8548; if() #271 Body End
LOAD D2 0.0008; if() #272 Test AND if() #271 Else Start
COMPAREV D2 263.9732
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8499 ==; Test 'if'
PUSHR D4; if() #272 Body Start
SETR D2 GD2; UsrFunc[void Tango_SuspendSlot(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void Tango_SuspendSlot(int)] Params End
CALLFUNC 0.1844; UsrFunc[void Tango_SuspendSlot(int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8548; if() #272 Body End
LOAD D2 0.0008; if() #273 Test AND if() #272 Else Start
COMPAREV D2 1158.8044
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8512 ==; Test 'if'
PUSHR D4; if() #273 Body Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 5; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8548; if() #273 Body End
LOAD D2 0.0008; if() #274 Test AND if() #273 Else Start
COMPAREV D2 1364.9361
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8535 ==; Test 'if'
PUSHR D4; if() #274 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I!=
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3789; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #274 Body End
LOAD D2 0.0008; if() #275 Test AND if() #274 Else Start
COMPAREV D2 1615.1672
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8546 ==; Test 'if'
PUSHR D4; if() #275 Body Start
LOAD D2 0.0010; UsrFunc[void __Tango_FuncSaveName(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_FuncSaveName(int)] Params End
CALLFUNC 0.5875; UsrFunc[void __Tango_FuncSaveName(int)] Call
POP D4
GOTO 8548; if() #275 Body End
SETV D2 0; if() #275 Else Start
STORE D2 0.0002; if() #275 Else End
LOAD D2 0.0002; if() #274 Else End AND if() #273 Else End AND if() #272 Else End AND if() #271 Else End AND if() #270 Else End AND if() #262 Else End AND if() #254 Else End AND if() #246 Else End AND unless() #571 Test
COMPAREV D2 0
GOTOCMP 8559 !=; Test 'unless'
PUSHR D4; unless() #571 Body Start
LOAD D2 0.0008; UsrFunc[int __Tango_RunCustomFunction(int, int[])] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2; UsrFunc[int __Tango_RunCustomFunction(int, int[])] Params End
CALLFUNC 1.1473; UsrFunc[int __Tango_RunCustomFunction(int, int[])] Call
POP D4
STORE D2 0.0003; unless() #571 Body End
LOAD D2 0.0001; if() #572 Test
COMPAREV D2 0
GOTOCMP 8565 ==; Test 'if'
LOAD D2 0.0003; if() #572 Body Start
SUBV2 0 D2
STORE D2 0.0003; if() #572 Body End
LOAD D2 0.0003; return Start
LOAD D3 0.0004
DEALLOCATEMEMR D3
GOTO 8571; return End
LOAD D3 0.0004
DEALLOCATEMEMR D3
POPARGS D5 0.0011
RETURNFUNC; Func[int __Tango_RunFunction(int, bool)] Body End
SETR D4 SP2; Func[bool __Tango_WordWillFit(int, int[], int, int)] Body Start
LOAD D2 0; return Start
PUSHR D2
LOAD D2 0.0001
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_GetWordWidth(int, int[])] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_GetWordWidth(int, int[])] Params End
CALLFUNC 0.6972; UsrFunc[int __Tango_GetWordWidth(int, int[])] Call
POP D4
POP D3
COMPARER D3 D2
SETCMP D2 I>=
POPARGS D5 0.0004; return End
RETURNFUNC; Func[bool __Tango_WordWillFit(int, int[], int, int)] Body End
PUSHARGSV 0 0.0002; Func[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Body Start
SETR D4 SP2
LOAD D2 0.0004
STORE D2 0.0001
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params End
CALLFUNC 0.8748; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5262; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006; if() #195 Test
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8703 ==; Test 'if'
PUSHR D4; if() #195 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetStartMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetStartMarker(int, int)] Params End
CALLFUNC 0.8820; UsrFunc[void __Tango_SetStartMarker(int, int)] Call
POP D4
LOAD D2 0.0003; if() #196 Test
COMPAREV D2 0
GOTOCMP 8647 ==; Test 'if'
PUSHR D4; if() #196 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8655; if() #196 Body End
PUSHR D4; if() #196 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #196 Else End
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004
PUSHR D4; if() #522 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params End
CALLFUNC 0.8874; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 8674 ==; Test 'if'
SETV D2 1; return Start AND if() #522 Body Start
GOTO 8746; return End AND if() #522 Body End
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0005
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0004
PUSHR D4
LOAD D2 0.0004; UsrFunc[int __Tango_SetEndMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[int __Tango_SetEndMarker(int, int)] Params End
CALLFUNC 0.9097; UsrFunc[int __Tango_SetEndMarker(int, int)] Call
POP D4
STORE D2 0.0004
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_AddPadding(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0.0004
PUSHR D2; UsrFunc[int __Tango_AddPadding(int, int, int)] Params End
CALLFUNC 0.3216; UsrFunc[int __Tango_AddPadding(int, int, int)] Call
POP D4
STORE D2 0.0004
GOTO 8733; if() #195 Body End
PUSHR D4; if() #195 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -200; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0003; if() #197 Test
COMPAREV D2 0
GOTOCMP 8722 ==; Test 'if'
PUSHR D4; if() #197 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8730; if() #197 Body End
PUSHR D4; if() #197 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #197 Else End
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004; if() #195 Else End
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
POPARGS D5 0.0007; return End
RETURNFUNC; Func[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_ReadIdentifier(char32[], int, int[])] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0004; while(true) #13 Body [Opt:AlwaysOn] Start
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #229 Test
COMPAREV D2 97
GOTOCMP 8766 <
LOAD D2 0
COMPAREV D2 122
GOTOCMP 8766 >
SETV D2 1
GOTO 8767
SETV D2 0
COMPAREV D2 0
GOTOCMP 8782 ==; Test 'if'
LOAD D2 0.0001; if() #229 Body Start
MULTV D2 7
STORE D2 0.0001
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
ADDV D2 1
SUBV D2 97
DIVV D2 10000
POP D3
ADDR D2 D3
STORE D2 0.0001
GOTO 8807; if() #229 Body End
LOAD D2 0; if() #230 Test AND if() #229 Else Start
COMPAREV D2 48
GOTOCMP 8790 <
LOAD D2 0
COMPAREV D2 57
GOTOCMP 8790 >
SETV D2 1
GOTO 8791
SETV D2 0
COMPAREV D2 0
GOTOCMP 8811 ==; Test 'if'
LOAD D2 0.0001; if() #230 Body Start
MULTV D2 7
STORE D2 0.0001
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
ADDV D2 27
SUBV D2 48
DIVV D2 10000
POP D3
ADDR D2 D3
STORE D2 0.0001
GOTO 8807; if() #230 Body End
GOTO 8811; break 1; AND if() #230 Else
LOAD D2 0.0003; if() #229 Else End
ADDV D2 1
STORE D2 0.0003; while(true) #13 Body [Opt:AlwaysOn] End
GOTO 8752; while() #13 End
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0001; return Start
POPARGS D5 0.0005; return End
RETURNFUNC; Func[int __Tango_ReadIdentifier(char32[], int, int[])] Body End
SETR D4 SP2; Func[void __Tango_SetStartMarker(int, int)] Body Start
LOAD D2 0; if() #302 Test
COMPAREV D2 0.0069
GOTOCMP 8838 ==
LOAD D2 0
COMPAREV D2 0.2441
GOTOCMP 8838 ==
LOAD D2 0
COMPAREV D2 11.9678
GOTOCMP 8838 ==
LOAD D2 0
COMPAREV D2 5.8497
GOTOCMP 8838 ==
LOAD D2 0
COMPAREV D2 13486.5225
GOTOCMP 8838 ==
SETV D2 0
GOTO 8839
SETV D2 1
COMPAREV D2 0
GOTOCMP 8848 ==; Test 'if'
PUSHR D4; if() #302 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -600; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8872; if() #302 Body End
LOAD D2 0; if() #303 Test AND if() #302 Else Start
COMPAREV D2 0.0986
GOTOCMP 8856 ==
LOAD D2 0
COMPAREV D2 0.0542
GOTOCMP 8856 ==
SETV D2 0
GOTO 8857
SETV D2 1
COMPAREV D2 0
GOTOCMP 8866 ==; Test 'if'
PUSHR D4; if() #303 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -300; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8872; if() #303 Body End
PUSHR D4; if() #303 Else Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -400; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #303 Else End
POPARGS D5 0.0002; if() #302 Else End
RETURNFUNC; Func[void __Tango_SetStartMarker(int, int)] Body End
PUSHARGSV 0 0.0003; Func[bool __Tango_ParseArguments(char32[], int, int, int[])] Body Start
SETR D4 SP2
STOREV 0 0.0002
STOREV 0 0.0001
PUSHR D4; while(true) #11 Body [Opt:AlwaysOn] Start
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5262; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; if() #198 Test
COMPAREV D2 41
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8913 ==; Test 'if'
LOAD D2 0.0005; if() #198 Body Start
ADDV D2 1
STORE D2 0.0005
LOAD D2 0.0001; if() #523 Test
COMPAREV D2 0
GOTOCMP 9082 ==; Test 'if'
PUSHR D4; if() #523 Body Start
PUSHV 105; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9095; return End AND if() #523 Body End
GOTO 9082; break 1;
GOTO 8878; if() #198 Body End
LOAD D2 0.0002; if() #199 Test AND if() #198 Else Start
COMPAREV D2 64
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8982 ==; Test 'if'
LOAD D2 0.0005; if() #199 Body Start
ADDV D2 1
STORE D2 0.0005
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; unless() #524 Test
COMPAREV D2 97
GOTOCMP 8935 <
LOAD D2 0.0002
COMPAREV D2 122
GOTOCMP 8935 >
SETV D2 1
GOTO 8936
SETV D2 0
COMPAREV D2 0
GOTOCMP 8946 !=; Test 'unless'
PUSHR D4; unless() #524 Body Start
PUSHV 105; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9095; return End AND unless() #524 Body End
PUSHR D4; if() #525 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Params End
CALLFUNC 0.8593; UsrFunc[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 8963 ==; Test 'if'
SETV D2 1; return Start AND if() #525 Body Start
GOTO 9095; return End AND if() #525 Body End
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5262; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0004
SETV D2 0
STORE D2 0.0001
GOTO 8878; if() #199 Body End
LOAD D2 0.0002; if() #200 Test AND if() #199 Else Start
COMPAREV D2 48
GOTOCMP 8988 <
LOAD D2 0.0002
COMPAREV D2 57
GOTOCMP 8993 <=
LOAD D2 0.0002
COMPAREV D2 46
GOTOCMP 8993 ==
SETV D2 0
GOTO 8994
SETV D2 1
COMPAREV D2 0
GOTOCMP 9051 ==; Test 'if'
PUSHR D4; if() #200 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
PUSHV 0
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params End
CALLFUNC 0.9150; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5262; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
PUSHR D4
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -100; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001; if() #201 Test
COMPAREV D2 0
GOTOCMP 9039 ==; Test 'if'
PUSHR D4; if() #201 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
SETV D2 0
STORE D2 0.0001
GOTO 9047; if() #201 Body End
PUSHR D4; if() #201 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #201 Else End
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004
GOTO 8878; if() #200 Body End
LOAD D2 0.0002; if() #202 Test AND if() #200 Else Start
COMPAREV D2 45
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9073 ==; Test 'if'
LOAD D2 0.0001; if() #526 Test AND if() #202 Body Start
COMPAREV D2 0
GOTOCMP 9067 ==; Test 'if'
PUSHR D4; if() #526 Body Start
PUSHV 105; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9095; return End AND if() #526 Body End
SETV D2 1
STORE D2 0.0001
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
GOTO 8878; if() #202 Body End
PUSHR D4; if() #202 Else Start
PUSHV 104; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9095; return End AND if() #202 Else End
GOTO 8878; if() #200 Else End AND if() #199 Else End AND if() #198 Else End AND while(true) #11 Body [Opt:AlwaysOn] End AND while() #11 End
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
POPARGS D5 0.0007; return End
RETURNFUNC; Func[bool __Tango_ParseArguments(char32[], int, int, int[])] Body End
SETR D4 SP2; Func[int __Tango_SetEndMarker(int, int)] Body Start
LOAD D2 0; if() #300 Test
COMPAREV D2 0.0069
GOTOCMP 9115 ==
LOAD D2 0
COMPAREV D2 0.2441
GOTOCMP 9115 ==
LOAD D2 0
COMPAREV D2 11.9678
GOTOCMP 9115 ==
LOAD D2 0
COMPAREV D2 5.8497
GOTOCMP 9115 ==
LOAD D2 0
COMPAREV D2 13486.5225
GOTOCMP 9115 ==
SETV D2 0
GOTO 9116
SETV D2 1
COMPAREV D2 0
GOTOCMP 9127 ==; Test 'if'
PUSHR D4; if() #300 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -700; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001; return Start
ADDV D2 1
GOTO 9148; return End AND if() #300 Body End
LOAD D2 0; if() #301 Test AND if() #300 Else Start
COMPAREV D2 0.0986
GOTOCMP 9135 ==
LOAD D2 0
COMPAREV D2 0.0542
GOTOCMP 9135 ==
SETV D2 0
GOTO 9136
SETV D2 1
COMPAREV D2 0
GOTOCMP 9140 ==; Test 'if'
LOAD D2 0.0001; return Start AND if() #301 Body Start
GOTO 9148; return End AND if() #301 Body End
PUSHR D4; if() #301 Else Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -500; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3283; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001; return Start
ADDV D2 1
POPARGS D5 0.0002; return End AND if() #301 Else End AND if() #300 Else End
RETURNFUNC; Func[int __Tango_SetEndMarker(int, int)] Body End
PUSHARGSV 0 0.0004; Func[int __Tango_ReadNumber(char32[], int, bool, int[])] Body Start
SETR D4 SP2
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0.1000 0
LOAD D2 0.0007; while(true) #14 Body [Opt:AlwaysOn] Start
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; if() #231 Test
COMPAREV D2 48
GOTOCMP 9170 <
LOAD D2 0.0002
COMPAREV D2 57
GOTOCMP 9170 >
SETV D2 1
GOTO 9171
SETV D2 0
COMPAREV D2 0
GOTOCMP 9209 ==; Test 'if'
LOAD D2 0.0001; unless() #232 Test AND if() #231 Body Start
COMPAREV D2 0
GOTOCMP 9187 !=; Test 'unless'
LOAD D2 0.0003; unless() #232 Body Start
MULTV D2 10
STORE D2 0.0003
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SUBV D2 48
POP D3
ADDR D2 D3
STORE D2 0.0003
GOTO 9231; unless() #232 Body End
LOAD D2 0.0003; unless() #232 Else Start
PUSHR D2
LOAD D2 0.0002
SUBV D2 48
PUSHR D2
LOAD D2 0
POP D3
MULTR D2 D3
POP D3
ADDR D2 D3
STORE D2 0.0003
LOAD D2 0; if() #233 Test
COMPAREV D2 0.0001
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9205 ==; Test 'if'
GOTO 9235; break 1; AND if() #233 Body Start
GOTO 9231; if() #233 Body End
LOAD D2 0; if() #233 Else Start
DIVV D2 10
STORE D2 0; if() #233 Else End
GOTO 9231; unless() #232 Else End AND if() #231 Body End
LOAD D2 0.0002; if() #234 Test AND if() #231 Else Start
COMPAREV D2 46
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9235 ==; Test 'if'
LOAD D2 0.0005; if() #235 Test AND if() #234 Body Start
COMPAREV D2 0
GOTOCMP 9222 !=
LOAD D2 0.0001
COMPAREV D2 0
GOTOCMP 9222 !=
SETV D2 0
GOTO 9223
SETV D2 1
COMPAREV D2 0
GOTOCMP 9227 ==; Test 'if'
GOTO 9235; break 1; AND if() #235 Body Start
GOTO 9231; if() #235 Body End
SETV D2 1; if() #235 Else Start
STORE D2 0.0001; if() #235 Else End
GOTO 9231; if() #234 Body End
GOTO 9235; break 1; AND if() #234 Else
LOAD D2 0.0006; if() #231 Else End
ADDV D2 1
STORE D2 0.0006; while(true) #14 Body [Opt:AlwaysOn] End
GOTO 9156; while() #14 End
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0004
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0003; return Start
POPARGS D5 0.0008; return End
RETURNFUNC; Func[int __Tango_ReadNumber(char32[], int, bool, int[])] Body End
SETR D4 SP2; Func[bool __Tango_PressAdvance(int)] Body Start
LOAD D2 0; if() #208 Test
COMPAREV D2 90
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 9252 ==; Test 'if'
SETR D2 INPUTA; return Start AND if() #208 Body Start
GOTO 9253; return End AND if() #208 Body End
SETR D2 INPUTPRESSA; return Start AND if() #208 Else Start
POP D5; return End AND if() #208 Else End
RETURNFUNC; Func[bool __Tango_PressAdvance(int)] Body End
SETR D4 SP2; Func[bool __Tango_PressMenuCancel()] Body Start
SETR D2 INPUTPRESSB; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressMenuCancel()] Body End
SETR D4 SP2; Func[bool __Tango_PressMenuSelect()] Body Start
SETR D2 INPUTPRESSA; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressMenuSelect()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_PrintNextChar(int, char32, int[])] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0001
STOREV 0 0
LOAD D2 0.0001; if() #209 Test
ANDV D2 256
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 9289 ==; Test 'if'
PUSHR D4; if() #209 Body Start
PUSHV 4; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6111; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
PUSHR D2
PUSHR D4
PUSHV 6; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6111; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
POP D3
ADDR D2 D3
SUBV D2 16
STORE D2 0
GOTO 9296; if() #209 Body End
SETR D2 GD5; if() #209 Else Start
PUSHR D2
LOAD D2 0.0004
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0; if() #209 Else End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
PUSHR D4
CALLFUNC 0.6126; UsrFunc[int __Tango_GetCurrentCSet()] Call
POP D4
PUSHR D2
PUSHR D4
CALLFUNC 0.6158; UsrFunc[int __Tango_GetCurrentColor()] Call
POP D4
PUSHR D2
PUSHR D4
CALLFUNC 0.6238; UsrFunc[int __Tango_GetCurrentTileOffset()] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params End
CALLFUNC 0.4550; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_PrintNextChar(int, char32, int[])] Body End
PUSHARGSV 0 0.0018; Func[void __Tango_Process(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0017
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0016
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0015
STOREV 0 0.0014
PUSHR D4
LOAD D2 0.0017; UsrFunc[int Tango_GetSlotVar(int, int)] Params Start
PUSHR D2
PUSHV 3; UsrFunc[int Tango_GetSlotVar(int, int)] Params End
CALLFUNC 0.1198; UsrFunc[int Tango_GetSlotVar(int, int)] Call
POP D4
STORE D2 0.0013
SETR D2 GD4
PUSHR D2
LOAD D2 0.0013
POP D0
READPODARRAYR D2 D2
STORE D2 0.0012
LOAD D2 0.0017
MULTV D2 7
STORE D2 0.0011
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0.0010
STOREV 0 0.0009
STOREV 0 0.0008
STOREV 0 0.0007
STOREV 0 0.0006
STOREV 0 0.0005
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 32
COMPAREV D2 0
SETCMP D2 I!=
STORE D2 0.0004
STOREV 0 0.0003
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 12 D2
LOAD D2 0.0014; until() #12 Test
COMPAREV D2 0
GOTOCMP 10027 !=; Test 'until'
SETV D2 0; until() #12 Body Start
STORE D2 0.0009
SETV D2 0
STORE D2 0.0008
SETV D2 0
STORE D2 0.0003
LOAD D2 0.0012; if() #210 Test
COMPAREV D2 32
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 9495 ==; Test 'if'
SETR D2 GD5; if() #531 Test AND if() #210 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 21
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9457 ==; Test 'if'
SETV D2 0; if() #531 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 21
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #531 Body End
LOAD D2 0.0012
COMPAREV D2 32
SETCMP D2 I==
STORE D2 0.0003
PUSHR D4
LOAD D2 0.0016; UsrFunc[void __Tango_PrintNextChar(int, char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0012
PUSHR D2
LOAD D2 0.0010
PUSHR D2; UsrFunc[void __Tango_PrintNextChar(int, char32, int[])] Params End
CALLFUNC 0.9261; UsrFunc[void __Tango_PrintNextChar(int, char32, int[])] Call
POP D4
LOAD D2 0.0012; if() #532 Test
COMPAREV D2 32
GOTOCMP 9484 <=
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9484 !=
LOAD D2 0.0018
COMPAREV D2 2
GOTOCMP 9484 ==
LOAD D2 0.0004
COMPAREV D2 0
GOTOCMP 9484 !=
SETV D2 1
GOTO 9485
SETV D2 0
COMPAREV D2 0
GOTOCMP 9491 ==; Test 'if'
PUSHR D4; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #532 Body Start
CALLFUNC 0.6190; UsrFunc[int __Tango_GetCurrentSFX()] Call
POP D4; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body AND if() #532 Body End
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
GOTO 9811; if() #210 Body End
LOAD D2 0.0012; if() #211 Test AND if() #210 Else Start
COMPAREV D2 26
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9506 ==; Test 'if'
SETV D2 1; if() #211 Body Start
STORE D2 0.0009
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
GOTO 9811; if() #211 Body End
LOAD D2 0.0012; if() #212 Test AND if() #211 Else Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 9522 ==; Test 'if'
LOAD D2 0.0013; if() #212 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0013; UsrFunc[int __Tango_RunStringControlCode(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_RunStringControlCode(int)] Params End
CALLFUNC 1.0046; UsrFunc[int __Tango_RunStringControlCode(int)] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0.0013
GOTO 9811; if() #212 Body End
LOAD D2 0.0012; if() #213 Test AND if() #212 Else Start
COMPAREV D2 -300
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9573 ==; Test 'if'
PUSHR D4; if() #213 Body Start
LOAD D2 0.0013; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
PUSHR D2
PUSHV 1; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0647; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4
LOAD D2 0.0013
ADDV D2 6
STORE D2 0.0013
SETR D2 GD2; if() #533 Test
PUSHR D2
POP D0
READPODARRAYV D2 12
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 9811 ==; Test 'if'
SETR D2 GD2; if() #533 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0015
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0.0010
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 32
COMPAREV D2 0
SETCMP D2 I!=
STORE D2 0.0004
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 12 D2; if() #533 Body End
GOTO 9811; if() #213 Body End
LOAD D2 0.0012; if() #214 Test AND if() #213 Else Start
COMPAREV D2 -1000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9592 ==; Test 'if'
PUSHR D4; if() #214 Body Start
SETR D2 GD4; UsrFunc[void __Tango_SetAlternateColor(int)] Params Start
PUSHR D2
LOAD D2 0.0013
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[void __Tango_SetAlternateColor(int)] Params End
CALLFUNC 1.0716; UsrFunc[void __Tango_SetAlternateColor(int)] Call
POP D4
LOAD D2 0.0013
ADDV D2 2
STORE D2 0.0013
GOTO 9811; if() #214 Body End
LOAD D2 0.0012; if() #215 Test AND if() #214 Else Start
COMPAREV D2 -1100
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9604 ==; Test 'if'
PUSHR D4; if() #215 Body Start
CALLFUNC 0.3884; UsrFunc[void __Tango_ClearAlternateColor()] Call
POP D4
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
GOTO 9811; if() #215 Body End
LOAD D2 0.0012; if() #216 Test AND if() #215 Else Start
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9630 ==; Test 'if'
PUSHR D4; if() #216 Body Start
LOAD D2 0.0013; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
PUSHR D2
PUSHV 1; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7945; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #534 Test
COMPAREV D2 0
GOTOCMP 9624 <=
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9624 !=
SETV D2 1
GOTO 9625
SETV D2 0
COMPAREV D2 0
GOTOCMP 9811 ==; Test 'if'
SETV D2 1; if() #534 Body Start
STORE D2 0.0014; if() #534 Body End
GOTO 9811; if() #216 Body End
LOAD D2 0.0012; if() #217 Test AND if() #216 Else Start
COMPAREV D2 -600
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9655 ==; Test 'if'
PUSHR D4; if() #217 Body Start
LOAD D2 0.0013; UsrFunc[int __Tango_RunFlowControl(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_RunFlowControl(int)] Params End
CALLFUNC 1.0750; UsrFunc[int __Tango_RunFlowControl(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #535 Test
COMPAREV D2 0
GOTOCMP 9649 <=
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9649 !=
SETV D2 1
GOTO 9650
SETV D2 0
COMPAREV D2 0
GOTOCMP 9811 ==; Test 'if'
SETV D2 1; if() #535 Body Start
STORE D2 0.0014; if() #535 Body End
GOTO 9811; if() #217 Body End
LOAD D2 0.0012; if() #218 Test AND if() #217 Else Start
COMPAREV D2 -10000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9712 ==; Test 'if'
LOAD D2 0.0007; unless() #536 Test AND if() #218 Body Start
COMPAREV D2 0
GOTOCMP 9670 !=; Test 'unless'
PUSHR D4; unless() #536 Body Start
LOAD D2 0.0015; UsrFunc[void __Tango_InitializeMenu(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_InitializeMenu(int)] Params End
CALLFUNC 0.7030; UsrFunc[void __Tango_InitializeMenu(int)] Call
POP D4
SETV D2 1
STORE D2 0.0007; unless() #536 Body End
PUSHR D4
LOAD D2 0.0013; UsrFunc[void __Tango_ReadChoice(int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0011
PUSHR D2
LOAD D2 0.0016
PUSHR D2
LOAD D2 0.0015
PUSHR D2; UsrFunc[void __Tango_ReadChoice(int, int, int, int)] Params End
CALLFUNC 1.1031; UsrFunc[void __Tango_ReadChoice(int, int, int, int)] Call
POP D4
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0006
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0013
ADDV D2 2
STORE D2 0.0013
GOTO 9811; if() #218 Body End
LOAD D2 0.0012; if() #219 Test AND if() #218 Else Start
COMPAREV D2 -20000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9739 ==; Test 'if'
PUSHR D4; if() #219 Body Start
LOAD D2 0.0016; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params Start
PUSHR D2
LOAD D2 0.0007
PUSHR D2; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params End
CALLFUNC 1.1131; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Call
POP D4
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
SETV D2 1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 21
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 10027; break 1;
GOTO 9811; if() #219 Body End
LOAD D2 0.0012; if() #220 Test AND if() #219 Else Start
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9797 ==; Test 'if'
PUSHR D4; if() #220 Body Start
LOAD D2 0.0016; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params Start
PUSHR D2
LOAD D2 0.0007
PUSHR D2; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params End
CALLFUNC 1.1131; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Call
POP D4
SETV D2 2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD3; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
LOAD D2 0.0015
ADDV D2 14
POP D0
READPODARRAYR D2 D2; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
SETR D2 GD3; if() #537 Test
PUSHR D2
LOAD D2 0.0015
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 4
COMPAREV D2 0
GOTOCMP 9782 ==
LOAD D2 0.0018
COMPAREV D2 2
GOTOCMP 9782 ==
SETV D2 1
GOTO 9783
SETV D2 0
COMPAREV D2 0
GOTOCMP 10027 ==; Test 'if'
SETV D2 90; if() #537 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #537 Body End
GOTO 10027; break 1;
GOTO 9811; if() #220 Body End
LOAD D2 0.0012; if() #538 Test AND if() #220 Else Start
COMPAREV D2 -1
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 9808 ==; Test 'if'
PUSHR D4; if() #538 Body Start
PUSHV 201; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0012
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1415; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4; if() #538 Body End
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013; if() #220 Else End
SETR D2 GD4; if() #219 Else End AND if() #218 Else End AND if() #217 Else End AND if() #216 Else End AND if() #215 Else End AND if() #214 Else End AND if() #213 Else End AND if() #212 Else End AND if() #211 Else End AND if() #210 Else End
PUSHR D2
LOAD D2 0.0013
POP D0
READPODARRAYR D2 D2
STORE D2 0.0012
LOAD D2 0.0012; if() #539 Test
COMPAREV D2 33
GOTOCMP 9825 >=
LOAD D2 0.0012
COMPAREV D2 32
GOTOCMP 9825 ==
SETV D2 0
GOTO 9826
SETV D2 1
COMPAREV D2 0
GOTOCMP 9844 ==; Test 'if'
LOAD D2 0.0018; if() #540 Test AND if() #539 Body Start
COMPAREV D2 2
GOTOCMP 9839 ==
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9839 !=
LOAD D2 0.0004
COMPAREV D2 0
GOTOCMP 9839 !=
SETV D2 1
GOTO 9840
SETV D2 0
COMPAREV D2 0
GOTOCMP 9844 ==; Test 'if'
SETV D2 1; if() #540 Body Start
STORE D2 0.0008; if() #540 Body End
LOAD D2 0.0009; if() #539 Body End AND unless() #541 Test
COMPAREV D2 0
GOTOCMP 9855 !=; Test 'unless'
PUSHR D4; unless() #541 Body Start
LOAD D2 0.0017; UsrFunc[bool __Tango_NeedsNewLine(int, int)] Params Start
PUSHR D2
LOAD D2 0.0013
PUSHR D2; UsrFunc[bool __Tango_NeedsNewLine(int, int)] Params End
CALLFUNC 0.7736; UsrFunc[bool __Tango_NeedsNewLine(int, int)] Call
POP D4
STORE D2 0.0009; unless() #541 Body End
LOAD D2 0.0009; if() #542 Test
COMPAREV D2 0
GOTOCMP 9990 ==; Test 'if'
LOAD D2 0.0003; if() #543 Test AND if() #542 Body Start
COMPAREV D2 0
GOTOCMP 9886 ==; Test 'if'
SETR D2 GD5; if() #543 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
PUSHV 32; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
LOAD D2 0.0010
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3818; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #543 Body End
PUSHR D4
LOAD D2 0.0007; UsrFunc[int __Tango_StartNewLine(bool)] Params Start
PUSHR D2; UsrFunc[int __Tango_StartNewLine(bool)] Params End
CALLFUNC 1.1256; UsrFunc[int __Tango_StartNewLine(bool)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0005; if() #544 Test
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 9985 ==; Test 'if'
LOAD D2 0.0007; if() #221 Test AND if() #544 Body Start
COMPAREV D2 0
GOTOCMP 9905 !=
LOAD D2 0.0018
COMPAREV D2 2
GOTOCMP 9905 ==
SETV D2 0
GOTO 9906
SETV D2 1
COMPAREV D2 0
GOTOCMP 9973 ==; Test 'if'
SETR D2 GD5; if() #545 Test AND if() #221 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9945 ==; Test 'if'
SETR D2 GD5; if() #545 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0005
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #545 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0005
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0007; if() #546 Test
COMPAREV D2 0
GOTOCMP 9985 ==; Test 'if'
PUSHR D4; if() #546 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_ShiftMenuUp(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ShiftMenuUp(int)] Params End
CALLFUNC 1.1318; UsrFunc[void __Tango_ShiftMenuUp(int)] Call
POP D4; if() #546 Body End
GOTO 9985; if() #221 Body End
LOAD D2 0.0005; if() #221 Else Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1
STORE D2 0.0014; if() #221 Else End
LOAD D2 0.0004; if() #544 Body End AND if() #547 Test
COMPAREV D2 0
GOTOCMP 9990 ==; Test 'if'
SETV D2 1; if() #547 Body Start
STORE D2 0.0008; if() #547 Body End
LOAD D2 0.0008; if() #542 Body End AND if() #548 Test
COMPAREV D2 0
GOTOCMP 9408 ==; Test 'if'
SETR D2 GD5; if() #548 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
CALLFUNC 0.6210; UsrFunc[int __Tango_GetCurrentSpeed()] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD5; if() #549 Test
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 9408 ==; Test 'if'
SETV D2 1; if() #549 Body Start
STORE D2 0.0014; if() #549 Body End
GOTO 9408; if() #548 Body End AND until() #12 Body End AND until() #12 End
LOAD D2 0.0004; if() #550 Test
COMPAREV D2 0
GOTOCMP 10034 ==; Test 'if'
PUSHR D4; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #550 Body Start
CALLFUNC 0.6190; UsrFunc[int __Tango_GetCurrentSFX()] Call
POP D4; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body AND if() #550 Body End
LOAD D2 0.0013
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0019
RETURNFUNC; Func[void __Tango_Process(int)] Body End
PUSHARGSV 0 0.0005; Func[int __Tango_RunStringControlCode(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
PUSHR D4
LOAD D2 0.0004; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params End
CALLFUNC 0.6698; UsrFunc[int __Tango_GetNumSCCArgs(int)] Call
POP D4
STORE D2 0.0003
ALLOCATEMEMV D2 3 0
PUSHR D2
WRITEPODARRAY D2 {0,0,0}
POP D2
STORE D2 0.0001
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
STOREV 0 0; for() #150 setup
LOAD D2 0; for() #150 LoopTest
PUSHR D2
LOAD D2 0.0003
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 10097 ==; for() #150 TestFail?
SETR D2 GD4; for() #150 Body Start
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; for() #150 Body End
LOAD D2 0; for() #150 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 10069; for() #150 End
LOAD D2 0.0004; if() #276 Test
COMPAREV D2 11
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 10341 ==; Test 'if'
LOAD D2 0.0004; if() #277 Test AND if() #276 Body Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10125 ==; Test 'if'
PUSHR D4; if() #277 Body Start
PUSHV 0.2015; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1482; UsrFunc[void __Tango_SetVar(int, int)] Call
PEEK D4
PUSHV 1.3059; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1482; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
GOTO 10638; if() #277 Body End
LOAD D2 0.0004; if() #278 Test AND if() #277 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10140 ==; Test 'if'
PUSHR D4; if() #278 Body Start
PUSHV 5.1391; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1482; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
GOTO 10638; if() #278 Body End
LOAD D2 0.0004; if() #279 Test AND if() #278 Else Start
COMPAREV D2 4
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10171 ==; Test 'if'
LOAD D2 0.0001; if() #575 Test AND if() #279 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 SDD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10638 ==; Test 'if'
PUSHR D4; if() #575 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5604; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #575 Body End
GOTO 10638; if() #279 Body End
LOAD D2 0.0004; if() #280 Test AND if() #279 Else Start
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10195 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[int Rand(int)] Params Start AND if() #576 Test AND if() #280 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
SETR D3 D2; InlineFunc[int Rand(int)] Params End
RNDR D2 D3; InlineFunc[int Rand(int)] Body
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10638 ==; Test 'if'
PUSHR D4; if() #576 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5604; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #576 Body End
GOTO 10638; if() #280 Body End
LOAD D2 0.0004; if() #281 Test AND if() #280 Else Start
COMPAREV D2 6
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10218 ==; Test 'if'
LOAD D2 0.0001; if() #577 Test AND if() #281 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 LINKITEMD
COMPAREV D2 0
GOTOCMP 10638 ==; Test 'if'
PUSHR D4; if() #577 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5604; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #577 Body End
GOTO 10638; if() #281 Body End
LOAD D2 0.0004; if() #282 Test AND if() #281 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10249 ==; Test 'if'
LOAD D2 0.0001; if() #578 Test AND if() #282 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10638 ==; Test 'if'
PUSHR D4; if() #578 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5604; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #578 Body End
GOTO 10638; if() #282 Body End
LOAD D2 0.0004; if() #283 Test AND if() #282 Else Start
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10292 ==; Test 'if'
LOAD D2 0.0001; if() #579 Test AND if() #283 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
POP D3
DIVR D3 D2
SETR D2 D3
MULTV D2 100
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10638 ==; Test 'if'
PUSHR D4; if() #579 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5604; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #579 Body End
GOTO 10638; if() #283 Body End
LOAD D2 0.0004; if() #284 Test AND if() #283 Else Start
COMPAREV D2 9
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10318 ==; Test 'if'
LOAD D2 0.0001; if() #580 Test AND if() #284 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMELITEMSD
ANDV D2 1
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 10638 ==; Test 'if'
PUSHR D4; if() #580 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5604; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #580 Body End
GOTO 10638; if() #284 Body End
PUSHR D4; if() #581 Test AND if() #284 Else Start
PUSHV 8; UsrFunc[int NumTriforcePieces(int)] Params
CALLFUNC 0.0052; UsrFunc[int NumTriforcePieces(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10638 ==; Test 'if'
PUSHR D4; if() #581 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5604; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #581 Body End
GOTO 10638; if() #284 Else End AND if() #283 Else End AND if() #282 Else End AND if() #281 Else End AND if() #280 Else End AND if() #279 Else End AND if() #278 Else End AND if() #277 Else End AND if() #276 Body End
LOAD D2 0.0004; if() #285 Test AND if() #276 Else Start
COMPAREV D2 11
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10379 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[int Min(int, int)] Params Start AND if() #285 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
ADDR D2 D3
PUSHVARGR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHVARGR GAMEMCOUNTERD; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10638; if() #285 Body End
LOAD D2 0.0004; if() #286 Test AND if() #285 Else Start
COMPAREV D2 12
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10411 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[int Max(int, int)] Params Start AND if() #286 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
SUBR D3 D2
PUSHVARGR D3
PUSHVARGV 0; InlineFunc[int Max(int, int)] Params End
MAXVARG; InlineFunc[int Max(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10638; if() #286 Body End
LOAD D2 0.0004; if() #287 Test AND if() #286 Else Start
COMPAREV D2 13
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10442 ==; Test 'if'
PUSHR D4; if() #287 Body Start
LOAD D2 0.0001; UsrFunc[int Clamp(int, int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2
PUSHV 0
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHR GAMEMCOUNTERD; UsrFunc[int Clamp(int, int, int)] Params End
CALLFUNC 0.0027; UsrFunc[int Clamp(int, int, int)] Call
POP D4
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10638; if() #287 Body End
LOAD D2 0.0004; if() #288 Test AND if() #287 Else Start
COMPAREV D2 14
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10494 ==; Test 'if'
LOAD D2 0.0001; if() #288 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
MULTR D2 D3
DIVV D2 100
LSHIFTV D2 0
STORE D2 0
LOAD D2 0.0001; InlineFunc[int Min(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHVARGR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHVARGR GAMEMCOUNTERD; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10638; if() #288 Body End
LOAD D2 0.0004; if() #289 Test AND if() #288 Else Start
COMPAREV D2 15
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10540 ==; Test 'if'
LOAD D2 0.0001; if() #289 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
MULTR D2 D3
DIVV D2 100
LSHIFTV D2 0
STORE D2 0
LOAD D2 0.0001; InlineFunc[int Max(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0
POP D3
SUBR D3 D2
PUSHVARGR D3
PUSHVARGV 0; InlineFunc[int Max(int, int)] Params End
MAXVARG; InlineFunc[int Max(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10638; if() #289 Body End
LOAD D2 0.0004; if() #290 Test AND if() #289 Else Start
COMPAREV D2 16
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10585 ==; Test 'if'
LOAD D2 0.0001; if() #290 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
MULTR D2 D3
DIVV D2 100
LSHIFTV D2 0
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[int Clamp(int, int, int)] Params Start
PUSHR D2
PUSHV 0
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHR GAMEMCOUNTERD; UsrFunc[int Clamp(int, int, int)] Params End
CALLFUNC 0.0027; UsrFunc[int Clamp(int, int, int)] Call
POP D4
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10638; if() #290 Body End
LOAD D2 0.0004; if() #291 Test AND if() #290 Else Start
COMPAREV D2 17
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10601 ==; Test 'if'
SETV D2 1; if() #291 Body Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR LINKITEMD D2
GOTO 10638; if() #291 Body End
LOAD D2 0.0004; if() #292 Test AND if() #291 Else Start
COMPAREV D2 18
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10617 ==; Test 'if'
SETV D2 0; if() #292 Body Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR LINKITEMD D2
GOTO 10638; if() #292 Body End
LOAD D2 0.0004; if() #293 Test AND if() #292 Else Start
COMPAREV D2 21
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10628 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #293 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
GOTO 10638; if() #293 Body End
LOAD D2 0.0004; if() #582 Test AND if() #293 Else Start
COMPAREV D2 22
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10638 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[void Audio::PlayMIDI(int)] Params Start AND if() #582 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0; InlineFunc[void Audio::PlayMIDI(int)] Params End
PLAYMIDIR D2; InlineFunc[void Audio::PlayMIDI(int)] Body AND if() #582 Body End
LOAD D2 0.0003; if() #293 Else End AND if() #292 Else End AND if() #291 Else End AND if() #290 Else End AND if() #289 Else End AND if() #288 Else End AND if() #287 Else End AND if() #286 Else End AND if() #285 Else End AND if() #276 Else End AND return Start
ADDV D2 1
LOAD D3 0.0001
DEALLOCATEMEMR D3
GOTO 10645; return End
LOAD D3 0.0001
DEALLOCATEMEMR D3
POPARGS D5 0.0006
RETURNFUNC; Func[int __Tango_RunStringControlCode(int)] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_RunSetter(int, bool)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
PUSHR D4
LOAD D2 0.0005; UsrFunc[int __Tango_ReadArgLength(int)] Params Start
ADDV D2 4
PUSHR D2; UsrFunc[int __Tango_ReadArgLength(int)] Params End
CALLFUNC 1.1404; UsrFunc[int __Tango_ReadArgLength(int)] Call
POP D4
STORE D2 0.0001
PUSHR D4
LOAD D2 0.0005; UsrFunc[int __Tango_ReadArg(int)] Params Start
ADDV D2 4
PUSHR D2; UsrFunc[int __Tango_ReadArg(int)] Params End
CALLFUNC 1.1360; UsrFunc[int __Tango_ReadArg(int)] Call
POP D4
STORE D2 0
LOAD D2 0.0003; if() #573 Test
COMPAREV D2 0.0542
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10692 ==; Test 'if'
LOAD D2 0; if() #573 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0002; UsrFunc[int __Tango_GetVar(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetVar(int)] Params End
CALLFUNC 0.6818; UsrFunc[int __Tango_GetVar(int)] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0; if() #573 Body End
PUSHR D4
LOAD D2 0.0002; UsrFunc[void __Tango_SetVar(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1482; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
LOAD D2 0.0004; if() #574 Test
COMPAREV D2 0
GOTOCMP 10714 ==; Test 'if'
PUSHR D4; if() #574 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_Delete(int, int)] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 3
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[void __Tango_Delete(int, int)] Params End
CALLFUNC 0.3958; UsrFunc[void __Tango_Delete(int, int)] Call
POP D4; if() #574 Body End
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_RunSetter(int, bool)] Body End
SETR D4 SP2; Func[void __Tango_SetAlternateColor(int)] Body Start
PUSHR D4
PUSHV 10; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCurrStyleData(int)] Params Start
ADDV D2 35
PUSHR D2; UsrFunc[int __Tango_GetCurrStyleData(int)] Params End
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 11; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCurrStyleData(int)] Params Start
ADDV D2 39
PUSHR D2; UsrFunc[int __Tango_GetCurrStyleData(int)] Params End
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 12; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCurrStyleData(int)] Params Start
ADDV D2 43
PUSHR D2; UsrFunc[int __Tango_GetCurrStyleData(int)] Params End
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
POP D5
RETURNFUNC; Func[void __Tango_SetAlternateColor(int)] Body End
PUSHARGSV 0 0.0007; Func[int __Tango_RunFlowControl(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0007
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0006
STOREV 0 0.0005
STOREV 1 0.0004
STOREV 0 0.0003
STOREV 0 0.0002
LOAD D2 0.0006; if() #560 Test
COMPAREV D2 0.2441
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 10784 ==; Test 'if'
PUSHR D4; if() #560 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_ReadArgLength(int)] Params Start
ADDV D2 2
PUSHR D2; UsrFunc[int __Tango_ReadArgLength(int)] Params End
CALLFUNC 1.1404; UsrFunc[int __Tango_ReadArgLength(int)] Call
POP D4
STORE D2 0.0003
PUSHR D4
LOAD D2 0.0007; UsrFunc[int __Tango_ReadArg(int)] Params Start
ADDV D2 2
PUSHR D2; UsrFunc[int __Tango_ReadArg(int)] Params End
CALLFUNC 1.1360; UsrFunc[int __Tango_ReadArg(int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I!=
STORE D2 0.0002; if() #560 Body End
LOAD D2 0.0006; if() #237 Test
COMPAREV D2 0.0069
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10842 ==; Test 'if'
LOAD D2 0.0002; if() #238 Test AND if() #237 Body Start
COMPAREV D2 0
GOTOCMP 10836 ==; Test 'if'
PUSHR D4; if() #238 Body Start
PUSHV 20; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETR D2 GD4; if() #239 Test
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10824 ==; Test 'if'
PUSHR D4; if() #239 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7945; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0.0005
GOTO 11002; if() #239 Body End
PUSHR D4; if() #239 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0647; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #239 Else End
GOTO 11002; if() #238 Body End
PUSHR D4; if() #238 Else Start
PUSHV 20; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4; if() #238 Else End
GOTO 11002; if() #237 Body End
LOAD D2 0.0006; if() #240 Test AND if() #237 Else Start
COMPAREV D2 11.9678
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10905 ==; Test 'if'
LOAD D2 0.0002; if() #561 Test AND if() #240 Body Start
COMPAREV D2 0
GOTOCMP 10858 ==
PUSHR D4
PUSHV 20; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 10858 !=
SETV D2 1
GOTO 10859
SETV D2 0
COMPAREV D2 0
GOTOCMP 11002 ==; Test 'if'
PUSHR D4; if() #561 Body Start
PUSHV 20; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETR D2 GD4; if() #241 Test
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10893 ==; Test 'if'
PUSHR D4; if() #241 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7945; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0.0005
GOTO 11002; if() #241 Body End
PUSHR D4; if() #241 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0647; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #241 Else End
GOTO 11002; if() #561 Body End AND if() #240 Body End
LOAD D2 0.0006; if() #242 Test AND if() #240 Else Start
COMPAREV D2 0.2441
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10945 ==; Test 'if'
PUSHR D4; if() #562 Test AND if() #242 Body Start
PUSHV 20; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2990; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11002 ==; Test 'if'
SETR D2 GD4; if() #243 Test AND if() #562 Body Start
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10937 ==; Test 'if'
PUSHR D4; if() #243 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7945; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0.0005
GOTO 11002; if() #243 Body End
PUSHR D4; if() #243 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0647; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #243 Else End
GOTO 11002; if() #562 Body End AND if() #242 Body End
LOAD D2 0.0006; if() #244 Test AND if() #242 Else Start
COMPAREV D2 5.8497
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10995 ==; Test 'if'
LOAD D2 0.0002; if() #563 Test AND if() #244 Body Start
COMPAREV D2 0
GOTOCMP 11002 ==; Test 'if'
SETR D2 GD4; if() #245 Test AND if() #563 Body Start
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10979 ==; Test 'if'
PUSHR D4; if() #245 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7945; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
GOTO 10990; if() #245 Body End
PUSHR D4; if() #245 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0647; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #245 Else End
SETV D2 1
STORE D2 0.0005
SETV D2 0
STORE D2 0.0004; if() #563 Body End
GOTO 11002; if() #244 Body End
LOAD D2 0.0002; unless() #564 Test AND if() #244 Else Start
COMPAREV D2 0
GOTOCMP 11002 !=; Test 'unless'
SETV D2 1; unless() #564 Body Start
STORE D2 0.0005
SETV D2 0
STORE D2 0.0004; unless() #564 Body End
LOAD D2 0.0004; if() #244 Else End AND if() #242 Else End AND if() #240 Else End AND if() #237 Else End AND if() #565 Test
COMPAREV D2 0
GOTOCMP 11028 ==; Test 'if'
LOAD D2 0.0007; if() #565 Body Start
ADDV D2 4
STORE D2 0
SETR D2 GD4; while() #15 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -700
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 11021 ==; Test 'while'
LOAD D2 0; while() #15 Body Start
ADDV D2 1
STORE D2 0; while() #15 Body End
GOTO 11008; while() #15 End
PUSHR D4
LOAD D2 0.0007; UsrFunc[void __Tango_Delete(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_Delete(int, int)] Params End
CALLFUNC 0.3958; UsrFunc[void __Tango_Delete(int, int)] Call
POP D4; if() #565 Body End
LOAD D2 0.0005; return Start
POPARGS D5 0.0008; return End
RETURNFUNC; Func[int __Tango_RunFlowControl(int)] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_ReadChoice(int, int, int, int)] Body Start
SETR D4 SP2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0005
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 7
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 7
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 5
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0005
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0001
SETR D2 GD4
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[void Tango_AddMenuChoice(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void Tango_AddMenuChoice(int, int, int)] Params End
CALLFUNC 0.0512; UsrFunc[void Tango_AddMenuChoice(int, int, int)] Call
POP D4
POPARGS D5 0.0007
RETURNFUNC; Func[void __Tango_ReadChoice(int, int, int, int)] Body End
PUSHARGSV 0 0.0006; Func[void __Tango_TransferCenteredLine(int, bool)] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0005; if() #596 Test
ANDV D2 256
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11254 !=; Test 'if' AND return (Void) AND if() #596 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 16
STORE D2 0.0002
PUSHR D4
PUSHV 8; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0001
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0003
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
SUBR D3 D2
SETR D2 D3
DIVV D2 2
STORE D2 0
PUSHV 0; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params Start
PUSHV 6
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
LOAD D2 0.0003
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
PUSHV 0
PUSHV 1; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params End
BITMAPR; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body End
PUSHV 0; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
ADDV D2 16
PUSHR D2
PUSHV 0
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
PUSHV 128; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
LOAD D2 0.0006; if() #597 Test
COMPAREV D2 0
GOTOCMP 11254 ==; Test 'if'
PUSHR D4; if() #597 Body Start
LOAD D2 0; UsrFunc[void __Tango_ShiftMenuRight(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ShiftMenuRight(int)] Params End
CALLFUNC 1.1982; UsrFunc[void __Tango_ShiftMenuRight(int)] Call
POP D4; if() #597 Body End
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_TransferCenteredLine(int, bool)] Body End
PUSHV 0; Func[int __Tango_StartNewLine(bool)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params End
CALLFUNC 1.1131; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Call
PEEK D4
PUSHV 3; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6111; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
CALLFUNC 0.6244; UsrFunc[int __Tango_GetLineHeight()] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 5
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4; return Start
CALLFUNC 0.6789; UsrFunc[int __Tango_GetTargetOffset()] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_StartNewLine(bool)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ShiftMenuUp(int)] Body Start
SETR D4 SP2
STOREV 35 0.0001
STOREV 0 0; for() #155 setup
LOAD D2 0; for() #155 LoopTest
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 11358 ==; for() #155 TestFail?
SETR D2 GD2; for() #155 Body Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
ADDV D2 3
STORE D2 0.0001; for() #155 Body End
LOAD D2 0; for() #155 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 11322; for() #155 End
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_ShiftMenuUp(int)] Body End
PUSHV 0; Func[int __Tango_ReadArg(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #224 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11380 ==; Test 'if'
PUSHR D4; return Start AND if() #224 Body Start
LOAD D2 0.0001; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7945; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
GOTO 11402; return End AND if() #224 Body End
LOAD D2 0; if() #225 Test AND if() #224 Else Start
COMPAREV D2 -200
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11396 ==; Test 'if'
PUSHR D4; return Start AND if() #225 Body Start
SETR D2 GD4; UsrFunc[int __Tango_GetVar(int)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[int __Tango_GetVar(int)] Params End
CALLFUNC 0.6818; UsrFunc[int __Tango_GetVar(int)] Call
POP D4
GOTO 11402; return End AND if() #225 Body End
SETR D2 GD4; return Start AND if() #225 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End AND if() #225 Else End AND if() #224 Else End
RETURNFUNC; Func[int __Tango_ReadArg(int)] Body End
PUSHARGSV 0 0.0004; Func[int __Tango_ReadArgLength(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0004
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
LOAD D2 0.0003; if() #226 Test
COMPAREV D2 -100
GOTOCMP 11420 ==
LOAD D2 0.0003
COMPAREV D2 -200
GOTOCMP 11420 ==
SETV D2 0
GOTO 11421
SETV D2 1
COMPAREV D2 0
GOTOCMP 11425 ==; Test 'if'
SETV D2 2; return Start AND if() #226 Body Start
GOTO 11471; return End AND if() #226 Body End
LOAD D2 0.0003; if() #227 Test AND if() #226 Else Start
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11470 ==; Test 'if'
STOREV 0 0.0002; if() #227 Body Start
STOREV 0 0.0001
STOREV 0 0
SETR D2 GD4; do-while() #1 Body Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; if() #228 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11452 ==; Test 'if'
LOAD D2 0.0002; if() #228 Body Start
ADDV D2 1
STORE D2 0.0002
GOTO 11460; if() #228 Body End
LOAD D2 0.0001; if() #553 Test AND if() #228 Else Start
COMPAREV D2 -500
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11460 ==; Test 'if'
LOAD D2 0.0002; if() #553 Body Start
SUBV D2 1
STORE D2 0.0002; if() #553 Body End
LOAD D2 0; if() #228 Else End
ADDV D2 1
STORE D2 0; do-while() #1 Body End
LOAD D2 0.0002; do-while() #1 Test
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 11433 !=; Test 'while'
LOAD D2 0; return Start
GOTO 11471; return End AND if() #227 Body End
SETV D2 0; return Start AND if() #227 Else Start
POPARGS D5 0.0005; return End AND if() #227 Else End AND if() #226 Else End
RETURNFUNC; Func[int __Tango_ReadArgLength(int)] Body End
SETR D4 SP2; Func[int __Tango_RunCustomFunction(int, int[])] Body Start
PUSHR D4
LOAD D2 0.0001; UsrFunc[void Tango_LogUndefinedFunction(int)] Params Start
PUSHR D2; UsrFunc[void Tango_LogUndefinedFunction(int)] Params End
CALLFUNC 0.1406; UsrFunc[void Tango_LogUndefinedFunction(int)] Call
POP D4
SETV D2 0; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_RunCustomFunction(int, int[])] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_SetVar(int, int)] Body Start
SETR D4 SP2
LOAD D2 0.0003; if() #304 Test
COMPAREV D2 0.0034
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11496 ==; Test 'if'
PUSHR D4; if() #304 Body Start
PUSHV 22; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11650; if() #304 Body End
LOAD D2 0.0003; if() #305 Test AND if() #304 Else Start
COMPAREV D2 0.0035
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11508 ==; Test 'if'
PUSHR D4; if() #305 Body Start
PUSHV 23; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11650; if() #305 Body End
LOAD D2 0.0003; if() #306 Test AND if() #305 Else Start
COMPAREV D2 0.2015
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11520 ==; Test 'if'
PUSHR D4; if() #306 Body Start
PUSHV 8; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11650; if() #306 Body End
LOAD D2 0.0003; if() #307 Test AND if() #306 Else Start
COMPAREV D2 1.3059
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11532 ==; Test 'if'
PUSHR D4; if() #307 Body Start
PUSHV 9; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11650; if() #307 Body End
LOAD D2 0.0003; if() #308 Test AND if() #307 Else Start
COMPAREV D2 5.1391
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11544 ==; Test 'if'
PUSHR D4; if() #308 Body Start
PUSHV 13; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11650; if() #308 Body End
LOAD D2 0.0003; if() #309 Test AND if() #308 Else Start
COMPAREV D2 0.0997
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11556 ==; Test 'if'
PUSHR D4; if() #309 Body Start
PUSHV 14; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11650; if() #309 Body End
LOAD D2 0.0003; if() #310 Test AND if() #309 Else Start
COMPAREV D2 5.3793
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11607 ==; Test 'if'
PUSHR D4; if() #310 Body Start
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3774; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #594 Test
ANDV D2 512
COMPAREV D2 0
GOTOCMP 11573 ==; Test 'if'
PUSHR D4; if() #594 Body Start
CALLFUNC 0.0969; UsrFunc[void __Tango_DecScreenFreeze()] Call
POP D4; if() #594 Body End
PUSHR D4
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
LOAD D2 0.0002
MULTV D2 48
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 5 D2
SETV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 12 D2
PUSHR D4
LOAD D2 0.0002; UsrFunc[int Tango_GetStyleAttribute(int, int)] Params Start
PUSHR D2
PUSHV 35; UsrFunc[int Tango_GetStyleAttribute(int, int)] Params End
CALLFUNC 0.1281; UsrFunc[int Tango_GetStyleAttribute(int, int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #595 Test
ANDV D2 512
COMPAREV D2 0
GOTOCMP 11650 ==; Test 'if'
PUSHR D4; if() #595 Body Start
CALLFUNC 0.0487; UsrFunc[void __Tango_IncScreenFreeze()] Call
POP D4; if() #595 Body End
GOTO 11650; if() #310 Body End
LOAD D2 0.0003; if() #311 Test AND if() #310 Else Start
COMPAREV D2 0.0024
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11619 ==; Test 'if'
PUSHR D4; if() #311 Body Start
PUSHV 6; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11650; if() #311 Body End
LOAD D2 0.0003; if() #312 Test AND if() #311 Else Start
COMPAREV D2 0.0025
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11631 ==; Test 'if'
PUSHR D4; if() #312 Body Start
PUSHV 7; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11650; if() #312 Body End
LOAD D2 0.0003; if() #313 Test AND if() #312 Else Start
COMPAREV D2 0.5235
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11643 ==; Test 'if'
PUSHR D4; if() #313 Body Start
PUSHV 18; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3899; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11650; if() #313 Body End
PUSHR D4; if() #313 Else Start
LOAD D2 0.0003; UsrFunc[void Tango_SetCustomVar(int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void Tango_SetCustomVar(int, int)] Params End
CALLFUNC 0.1710; UsrFunc[void Tango_SetCustomVar(int, int)] Call
POP D4; if() #313 Else End
POPARGS D5 0.0004; if() #312 Else End AND if() #311 Else End AND if() #310 Else End AND if() #309 Else End AND if() #308 Else End AND if() #307 Else End AND if() #306 Else End AND if() #305 Else End AND if() #304 Else End
RETURNFUNC; Func[void __Tango_SetVar(int, int)] Body End
PUSHARGSV 0 0.0002; Func[bool __Tango_Scroll(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
LOAD D2 0.0002; if() #294 Test
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11739 ==; Test 'if'
SETR D2 GD5; if() #294 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD5; if() #585 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11708 ==; Test 'if'
SETR D2 GD5; if() #585 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #585 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1; return Start
GOTO 11980; return End AND if() #294 Body End
STOREV 4 0; if() #294 Else Start
LOAD D2 0.0002; if() #586 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11748 ==; Test 'if'
LOAD D2 0; if() #586 Body Start
MULTV D2 5
STORE D2 0; if() #586 Body End
SETR D2 GD5; if() #295 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 11836 ==; Test 'if'
SETR D2 GD5; if() #295 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD5; if() #587 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 11805 ==; Test 'if'
SETR D2 GD5; if() #587 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #587 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1; return Start
GOTO 11980; return End AND if() #295 Body End
SETR D2 GD5; if() #296 Test AND if() #295 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11903 ==; Test 'if'
SETR D2 GD5; if() #588 Test AND if() #296 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 11883 ==; Test 'if'
SETR D2 GD5; if() #588 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #588 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 11959; if() #296 Body End
SETR D2 GD5; if() #589 Test AND if() #296 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11940 ==; Test 'if'
SETR D2 GD5; if() #589 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #589 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #296 Else End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0; return Start
POPARGS D5 0.0003; return End AND if() #295 Else End AND if() #294 Else End
RETURNFUNC; Func[bool __Tango_Scroll(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ShiftMenuRight(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 32
MULTV D2 3
ADDV D2 34
STORE D2 0.0001
SETR D2 GD2; for() #154 setup
PUSHR D2
POP D0
READPODARRAYV D2 32
STORE D2 0
LOAD D2 0; for() #154 LoopTest
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 12031 ==; for() #154 TestFail?
SETR D2 GD2; for() #154 Body Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
ADDV D2 3
STORE D2 0.0001; for() #154 Body End
LOAD D2 0; for() #154 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 11996; for() #154 End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 32 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_ShiftMenuRight(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_UpdateActiveSlot(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
STOREV 1 0
SETR D2 GD5; if() #600 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12077 ==; Test 'if'
PUSHR D4; if() #600 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_CountDown(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_CountDown(int)] Params End
CALLFUNC 0.3918; UsrFunc[void __Tango_CountDown(int)] Call
POP D4
SETR D2 GD5; if() #601 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12077 ==; Test 'if'
SETV D2 0; if() #601 Body Start
STORE D2 0; if() #601 Body End
SETR D2 GD5; if() #600 Body End AND if() #602 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12104 ==; Test 'if'
PUSHR D4; if() #602 Body Start
LOAD D2 0.0002; UsrFunc[bool __Tango_Scroll(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_Scroll(int)] Params End
CALLFUNC 1.1652; UsrFunc[bool __Tango_Scroll(int)] Call
POP D4
SETR D2 GD5; if() #603 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12104 ==; Test 'if'
SETV D2 0; if() #603 Body Start
STORE D2 0; if() #603 Body End
LOAD D2 0; if() #602 Body End AND if() #604 Test
COMPAREV D2 0
GOTOCMP 12112 ==; Test 'if'
PUSHR D4; if() #604 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_Process(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_Process(int)] Params End
CALLFUNC 0.9345; UsrFunc[void __Tango_Process(int)] Call
POP D4; if() #604 Body End
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_UpdateActiveSlot(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_UpdateAdvancing(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #606 Test AND if(true) #605 [Opt:AlwaysOn]
LOAD D2 0.0002; UsrFunc[bool __Tango_Scroll(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_Scroll(int)] Params End
CALLFUNC 1.1652; UsrFunc[bool __Tango_Scroll(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 12249 ==; Test 'unless' AND return (Void) AND unless() #606 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0
PUSHR D4
SETR D2 GD2; UsrFunc[void Tango_LoadMessage(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[void Tango_LoadMessage(int, int)] Params End
CALLFUNC 0.1395; UsrFunc[void Tango_LoadMessage(int, int)] Call
POP D4
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
PUSHV 1; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6111; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 5
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
SETR D2 GD2; UsrFunc[void __Tango_ClearSlotBitmap(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_ClearSlotBitmap(int)] Params End
CALLFUNC 0.0421; UsrFunc[void __Tango_ClearSlotBitmap(int)] Call
POP D4
SETV D2 1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_UpdateAdvancing(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_UpdateFinishedSlot(int, int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
STOREV 0 0
LOAD D2 0.0003; if() #322 Test
ANDV D2 4
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 12296 ==; Test 'if'
SETR D2 GD5; if() #323 Test AND if() #322 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12293 ==; Test 'if'
PUSHR D4; if() #323 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_CountDown(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_CountDown(int)] Params End
CALLFUNC 0.3918; UsrFunc[void __Tango_CountDown(int)] Call
POP D4
SETR D2 GD5; if() #620 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 12368 ==; Test 'if'
SETV D2 1; if() #620 Body Start
STORE D2 0; if() #620 Body End
GOTO 12368; if() #323 Body End
SETV D2 1; if() #323 Else Start
STORE D2 0; if() #323 Else End
GOTO 12368; if() #322 Body End
PUSHR D4; if() #324 Test AND if() #322 Else Start
SETR D2 GD5; UsrFunc[bool __Tango_PressAdvance(int)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[bool __Tango_PressAdvance(int)] Params End
CALLFUNC 0.9244; UsrFunc[bool __Tango_PressAdvance(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 12352 ==; Test 'if'
SETV D2 1; if() #324 Body Start
STORE D2 0
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
PUSHR D4; if() #325 Test AND if(true) #621 [Opt:AlwaysOn]
CALLFUNC 0.0506; UsrFunc[bool __Tango_PressSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 12336 ==; Test 'if'
SETV D2 1; if() #325 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 19
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 12368; if() #325 Body End
PUSHR D4; if() #622 Test AND if() #325 Else Start
CALLFUNC 0.0509; UsrFunc[bool __Tango_PressSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 12368 ==; Test 'if'
SETV D2 2; if() #622 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 19
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #622 Body End
GOTO 12368; if() #325 Else End AND if() #324 Body End
SETR D2 GD5; if() #324 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
ADDV D2 1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #324 Else End
LOAD D2 0; if() #322 Else End AND if() #623 Test
COMPAREV D2 0
GOTOCMP 12399 ==; Test 'if'
SETR D2 GD5; if() #326 Test AND if() #623 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 12396 ==; Test 'if'
LOAD D2 0.0003; if() #624 Test AND if() #326 Body Start
ANDV D2 128
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 12399 ==; Test 'if'
PUSHR D4; if() #624 Body Start
SETR D2 GD2; UsrFunc[void Tango_ClearSlot(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void Tango_ClearSlot(int)] Params End
CALLFUNC 0.0645; UsrFunc[void Tango_ClearSlot(int)] Call
POP D4; if() #624 Body End
GOTO 12399; if() #326 Body End
PUSHR D4; if() #326 Else Start
CALLFUNC 0.3713; UsrFunc[void __Tango_BeginAdvancing()] Call
POP D4; if() #326 Else End
POPARGS D5 0.0004; if() #623 Body End
RETURNFUNC; Func[void __Tango_UpdateFinishedSlot(int, int)] Body End
SETR D4 SP2; Func[void __Tango_UpdateCursorMovement()] Body Start
SETR D2 GD2; if() #619 Test
PUSHR D2
POP D0
READPODARRAYV D2 31
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 12487 !=; Test 'if' AND return (Void) AND if() #619 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 31
SUBV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 31 D2
SETR D2 GD2; if() #321 Test
PUSHR D2
POP D0
READPODARRAYV D2 31
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 12455 ==; Test 'if'
PUSHR D4; if() #321 Body Start
SETR D2 GD2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 15
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1508; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 27 D2
PUSHR D4
SETR D2 GD2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 15
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1518; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 28 D2
GOTO 12487; if() #321 Body End
SETR D2 GD2; if() #321 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 27
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 29
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 27 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 28
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 30
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 28 D2; if() #321 Else End
RETURNFUNC; Func[void __Tango_UpdateCursorMovement()] Body End


SETV GD13 0; void run() Body Start
ALLOCATEGMEMV D2 18000 0
SETR GD15 D2
SETV GD8 0
SETV GD7 0
ALLOCATEGMEMV D2 90 0
SETR GD6 D2
SETV GD9 0
SETV GD10 0
SETV GD11 0
SETV GD12 0
SETV GD14 0
ALLOCATEGMEMV D2 8 0
SETR GD1 D2
ALLOCATEGMEMV D2 2048 0
SETR GD4 D2
ALLOCATEGMEMV D2 94 0
SETR GD2 D2
ALLOCATEGMEMV D2 48 0
SETR GD5 D2
ALLOCATEGMEMV D2 14 0
PUSHR D2
WRITEPODARRAY D2 {0,0,1024,0,0,256,512,0,1024,1024,256,0,256,512}
POP D2
SETR GD16 D2
ALLOCATEGMEMV D2 480 0
SETR GD3 D2
QUIT; void run() Body End
