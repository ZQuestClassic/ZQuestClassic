Compiling 'std.zs'
Pass 1: Parsing
Pass 2: Preprocessing
Pass 3: Registration
Pass 4: Analyzing Code
Pass 5: Checking code paths
Pass 6: Generating object code
Pass 7: Assembling
Success!
Compile finished with exit code '0' (success)
=== METADATA (elided)
{
  "currentFileSymbols": 0,
  "symbols": 0,
  "identifiers": 0
}
PUSHV 0; void run() Body Start
SETR D4 SP2
PUSHR D4
CALLFUNC 0.1764; UsrFunc[void Tango_Start()] Call
POP D4
PUSHR D4; while(true) #16 Body [Opt:AlwaysOn] Start
CALLFUNC 0.1948; UsrFunc[void Tango_Update1()] Call
POP D4
WAITDRAW; InlineFunc[void Waitdraw()] Body
PUSHR D4
CALLFUNC 0.2899; UsrFunc[void Tango_Update2()] Call
POP D4
WAITFRAME; InlineFunc[void Waitframe()] Body AND while(true) #16 Body [Opt:AlwaysOn] End
GOTO 6; while() #16 End AND [Opt:NeverRet] AND void run() Body End
SETR D4 SP2; Func[int Rand(int, int)] Body Start
SETV D2 0; InlineFunc[int randgen::Rand(int, int)] Params Start AND return Start
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0001
SETR D3 D2; InlineFunc[int randgen::Rand(int, int)] Params End
POP D2; InlineFunc[int randgen::Rand(int, int)] Body Start
POP REFRNG
RNGRAND3 D2 D3; InlineFunc[int randgen::Rand(int, int)] Body End
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int Rand(int, int)] Body End
SETR D4 SP2; Func[int Clamp(int, int, int)] Body Start
LOAD D2 0.0002; if() #21 Test
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 39 ==; Test 'if'
LOAD D2 0.0001; if() #21 Body Start
STORE D2 0.0002
GOTO 49; if() #21 Body End
LOAD D2 0.0002; if() #74 Test AND if() #21 Else Start
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 49 ==; Test 'if'
LOAD D2 0; if() #74 Body Start
STORE D2 0.0002; if() #74 Body End
LOAD D2 0.0002; if() #21 Else End AND return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int Clamp(int, int, int)] Body End
PUSHARGSV 0 0.0002; Func[int NumTriforcePieces(int)] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 1 0; for() #93 setup
LOAD D2 0; for() #93 LoopTest
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 78 ==; for() #93 TestFail?
LOAD D2 0; if() #286 Test AND for() #93 Body Start
PUSHR D2
POP D0
SETR D2 GAMELITEMSD
ANDV D2 1
COMPAREV D2 0
GOTOCMP 74 ==; Test 'if'
LOAD D2 0.0001; if() #286 Body Start
ADDV D2 1
STORE D2 0.0001; if() #286 Body End
LOAD D2 0; for() #93 Body End AND for() #93 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 56; for() #93 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int NumTriforcePieces(int)] Body End
SETR D4 SP2; Func[void Tango_ActivateMenu()] Body Start
SETR D2 GD2; if() #386 Test
PUSHR D2
POP D0
READPODARRAYV D2 23
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 95 ==; Test 'if'
PUSHR D4; if() #386 Body Start
PUSHV 301; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0111; UsrFunc[void __Tango_LogError(int)] Call
POP D4
GOTO 110; return (Void) AND if() #386 Body End
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
PUSHR D4
CALLFUNC 0.0135; UsrFunc[void __Tango_UnpressMenu()] Call
PEEK D4
PUSHV 0; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params
CALLFUNC 0.0157; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Call
PEEK D4
PUSHARGSV 0 0.0002; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start AND UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0248; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4
RETURNFUNC; Func[void Tango_ActivateMenu()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_LogError(int)] Body Start
SETR D4 SP2
SETV D2 300; if(true) #542 [Opt:AlwaysOn]
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
ALLOCATEMEMV D2 16 0
STORE D2 0
WRITEPODSTRING D2 "tango.zh error "
LOAD D2 0; InlineFunc[void TraceS(char32[])] Params Start
SETR D3 D2; InlineFunc[void TraceS(char32[])] Params End
TRACE6 D3; InlineFunc[void TraceS(char32[])] Body
LOAD D2 0.0002; InlineFunc[void TraceToBase(int, int, int)] Params Start
PUSHR D2
PUSHV 10
PUSHV 0; InlineFunc[void TraceToBase(int, int, int)] Params End
TRACE5; InlineFunc[void TraceToBase(int, int, int)] Body Start
POPARGS D5 0.0003; InlineFunc[void TraceToBase(int, int, int)] Body End
LOAD D3 0
DEALLOCATEMEMR D3
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_LogError(int)] Body End
SETR D4 SP2; Func[void __Tango_UnpressMenu()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSB D2
RETURNFUNC; Func[void __Tango_UnpressMenu()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ScrollToMenuCursor(int)] Body Start
SETR D4 SP2
LOAD D2 0.0002; if() #622 Test
COMPAREV D2 0
GOTOCMP 173 <
LOAD D2 0.0002
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
GOTOCMP 173 >=
SETV D2 0
GOTO 174
SETV D2 1
COMPAREV D2 0
GOTOCMP 246 !=; Test 'if' AND return (Void) AND if() #622 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
STORE D2 0.0001
LOAD D2 0.0001; if() #623 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 246 !=; Test 'if' AND return (Void) AND if() #623 Body
SETR D2 GD2
PUSHR D2
LOAD D2 0.0002
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #361 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 221 ==; Test 'if'
PUSHR D4; if() #361 Body Start
LOAD D2 0.0001; UsrFunc[void Tango_ScrollSlot(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
POP D3
SUBR D3 D2
PUSHR D3; UsrFunc[void Tango_ScrollSlot(int, int)] Params End
CALLFUNC 0.1530; UsrFunc[void Tango_ScrollSlot(int, int)] Call
POP D4
GOTO 246; if() #361 Body End
LOAD D2 0; if() #624 Test AND if() #361 Else Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 26
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 246 ==; Test 'if'
PUSHR D4; if() #624 Body Start
LOAD D2 0.0001; UsrFunc[void Tango_ScrollSlot(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 26
POP D3
SUBR D3 D2
PUSHR D3; UsrFunc[void Tango_ScrollSlot(int, int)] Params End
CALLFUNC 0.1530; UsrFunc[void Tango_ScrollSlot(int, int)] Call
POP D4; if() #624 Body End
POPARGS D5 0.0003; if() #361 Else End
RETURNFUNC; Func[void __Tango_ScrollToMenuCursor(int)] Body End
SETR D4 SP2; Func[void __Tango_SetCursorMovement(int, int)] Body Start
LOAD D2 0; if() #363 Test
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 281 ==; Test 'if'
SETV D2 0; if() #363 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 31 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1509; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 27 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1519; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 28 D2
GOTO 333; if() #363 Body End
LOAD D2 0; if() #363 Else Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 31 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1509; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 27
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
LOAD D2 0
POP D3
DIVR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 29 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1519; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 28
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
LOAD D2 0
POP D3
DIVR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 30 D2; if() #363 Else End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_SetCursorMovement(int, int)] Body End
SETR D4 SP2; Func[void Tango_SetMenuFlags(int)] Body Start
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 14 D2
POP D5
RETURNFUNC; Func[void Tango_SetMenuFlags(int)] Body End
PUSHV 0; Func[bool __Tango_ValidateSlot(int)] Body Start
SETR D4 SP2
STOREV 1 0
LOAD D2 0.0001; if() #661 Test
COMPAREV D2 0
GOTOCMP 355 <
LOAD D2 0.0001
COMPAREV D2 1
GOTOCMP 355 >
SETV D2 0
GOTO 356
SETV D2 1
COMPAREV D2 0
GOTOCMP 360 ==; Test 'if'
SETV D2 0; if() #661 Body Start
STORE D2 0; if() #661 Body End
LOAD D2 0.0001; if() #662 Test
PUSHR D2
LOAD D2 0.0001
LSHIFTV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 371 ==; Test 'if'
SETV D2 0; if() #662 Body Start
STORE D2 0; if() #662 Body End
LOAD D2 0; unless() #663 Test
COMPAREV D2 0
GOTOCMP 380 !=; Test 'unless'
PUSHR D4; unless() #663 Body Start
PUSHV 403; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4; unless() #663 Body End
LOAD D2 0; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[bool __Tango_ValidateSlot(int)] Body End
PUSHV 0; Func[int Tango_GetSlotStyleAttribute(int, int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #405 Test
LOAD D2 0.0002; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0344; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 394 !=; Test 'unless'
SETV D2 -10; return Start AND unless() #405 Body Start
GOTO 411; return End AND unless() #405 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
MULTV D2 24
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD3; return Start
PUSHR D2
LOAD D2 0
MULTV D2 48
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int Tango_GetSlotStyleAttribute(int, int)] Body End
SETR D4 SP2; Func[void __Tango_LogError(int, untyped, untyped)] Body Start
PUSHR D4
LOAD D2 0.0002; UsrFunc[void __Tango_LogError(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_LogError(int)] Params End
CALLFUNC 0.0111; UsrFunc[void __Tango_LogError(int)] Call
POP D4
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_LogError(int, untyped, untyped)] Body End
PUSHARGSV 0 0.0005; Func[void __Tango_ClearSlotBitmap(int)] Body Start
SETR D4 SP2
LOAD D2 0.0005
MULTV D2 7
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 6
POP D0
READPODARRAYR D2 D2
STORE D2 0
PUSHV 6; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
PUSHV 0; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0003
ADDV D2 1
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
PUSHV 0
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
PUSHV 128; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_ClearSlotBitmap(int)] Body End
SETR D4 SP2; Func[void __Tango_IncScreenFreeze()] Body Start
SETR D2 GD2; if() #519 Test
PUSHR D2
POP D0
READPODARRAYV D2 11
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
SETR D2 GD2; Test 'if'
PUSHR D2
POP D0
READPODARRAYV D2 11
ADDV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 11 D2
RETURNFUNC; Func[void __Tango_IncScreenFreeze()] Body End
SETR D4 SP2; Func[bool __Tango_PressSpeedup()] Body Start
SETR D2 INPUTPRESSA; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressSpeedup()] Body End
SETR D4 SP2; Func[bool __Tango_PressSuperSpeed()] Body Start
SETR D2 INPUTPRESSB; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressSuperSpeed()] Body End
PUSHV 0; Func[void Tango_AddMenuChoice(int, int, int)] Body Start
SETR D4 SP2
SETR D2 GD2; if() #393 Test
PUSHR D2
POP D0
READPODARRAYV D2 23
COMPAREV D2 20
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 527 ==; Test 'if'
PUSHR D4; if() #393 Body Start
PUSHV 302; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0111; UsrFunc[void __Tango_LogError(int)] Call
POP D4
GOTO 573; return (Void) AND if() #393 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
MULTV D2 3
ADDV D2 34
STORE D2 0
LOAD D2 0.0003
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0002
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
ADDV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 23 D2
POPARGS D5 0.0004
RETURNFUNC; Func[void Tango_AddMenuChoice(int, int, int)] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_LoadMessage(int, int, bool, int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #533 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0344; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 644 ==; Test 'unless' AND return (Void) AND unless() #533 Body
PUSHR D4
LOAD D2 0.0006; UsrFunc[void __Tango_SetCurrentSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_SetCurrentSlot(int)] Params End
CALLFUNC 0.2331; UsrFunc[void __Tango_SetCurrentSlot(int)] Call
PEEK D4
LOAD D2 0.0004; UsrFunc[int __Tango_FindDestStart(bool)] Params Start
PUSHR D2; UsrFunc[int __Tango_FindDestStart(bool)] Params End
CALLFUNC 0.5281; UsrFunc[int __Tango_FindDestStart(bool)] Call
POP D4
STORE D2 0.0002
PUSHR D4; unless() #534 Test
LOAD D2 0.0005; UsrFunc[bool __Tango_ValidateMessage(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateMessage(int)] Params End
CALLFUNC 0.7655; UsrFunc[bool __Tango_ValidateMessage(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 617 !=; Test 'unless'
PUSHR D4; unless() #534 Body Start
PUSHV 101; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 644; return (Void) AND unless() #534 Body End
ALLOCATEMEMV D2 256 0
STORE D2 0.0001
LOAD D2 0.0005; InlineFunc[void Game::GetMessage(int, char32[])] Params Start
PUSHR D2
LOAD D2 0.0001; InlineFunc[void Game::GetMessage(int, char32[])] Params End
POP D3; InlineFunc[void Game::GetMessage(int, char32[])] Body Start
POP D6
GETMESSAGE D3 D2; InlineFunc[void Game::GetMessage(int, char32[])] Body End
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_FindSrcStart(char32[], char32)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_FindSrcStart(char32[], char32)] Params End
CALLFUNC 0.5324; UsrFunc[int __Tango_FindSrcStart(char32[], char32)] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0001; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params End
CALLFUNC 0.3401; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Call
POP D4
LOAD D3 0.0001
DEALLOCATEMEMR D3
POPARGS D5 0.0007
RETURNFUNC; Func[void __Tango_LoadMessage(int, int, bool, int)] Body End
PUSHARGSV 0 0.0003; Func[void Tango_ClearSlot(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #395 Test
LOAD D2 0.0003; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0344; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 931 ==; Test 'unless' AND return (Void) AND unless() #395 Body
PUSHR D4; if() #396 Test
LOAD D2 0.0003; UsrFunc[bool Tango_SlotIsActive(int)] Params Start
PUSHR D2; UsrFunc[bool Tango_SlotIsActive(int)] Params End
CALLFUNC 0.0933; UsrFunc[bool Tango_SlotIsActive(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 678 ==; Test 'if'
PUSHR D4; if() #396 Body Start
LOAD D2 0.0003; UsrFunc[int Tango_GetSlotStyleAttribute(int, int)] Params Start
PUSHR D2
PUSHV 35; UsrFunc[int Tango_GetSlotStyleAttribute(int, int)] Params End
CALLFUNC 0.0383; UsrFunc[int Tango_GetSlotStyleAttribute(int, int)] Call
POP D4
STORE D2 0.0002
LOAD D2 0.0002; if() #397 Test
ANDV D2 512
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 678 ==; Test 'if'
PUSHR D4; if() #397 Body Start
CALLFUNC 0.0970; UsrFunc[void __Tango_DecScreenFreeze()] Call
POP D4; if() #397 Body End
LOAD D2 0.0003; if() #396 Body End
MULTV D2 24
STORE D2 0.0002
LOAD D2 0.0003
MULTV D2 7
STORE D2 0.0001
SETR D2 GD16
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -10
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0001
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0001
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 5
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 6
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 7
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 8
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 9
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 13
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 14
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 18
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 19
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 21
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 22
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 23
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4; if() #398 Test
CALLFUNC 0.0989; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 925 ==
LOAD D2 0.0003
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
POP D3
COMPARER D3 D2
GOTOCMP 925 !=
SETV D2 1
GOTO 926
SETV D2 0
COMPAREV D2 0
GOTOCMP 931 ==; Test 'if'
PUSHR D4; if() #398 Body Start
CALLFUNC 0.0997; UsrFunc[void __Tango_MenuCancel()] Call
POP D4; if() #398 Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void Tango_ClearSlot(int)] Body End
PUSHARGSV 0 0.0002; Func[bool Tango_SlotIsActive(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #428 Test
LOAD D2 0.0002; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0344; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 944 !=; Test 'unless'
SETV D2 0; return Start AND unless() #428 Body Start
GOTO 968; return End AND unless() #428 Body End
LOAD D2 0.0002
MULTV D2 24
STORE D2 0.0001
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #429 Test
COMPAREV D2 0
GOTOCMP 962 ==
LOAD D2 0
COMPAREV D2 4
GOTOCMP 962 ==
SETV D2 0
GOTO 963
SETV D2 1
COMPAREV D2 0
GOTOCMP 967 ==; Test 'if'
SETV D2 0; return Start AND if() #429 Body Start
GOTO 968; return End AND if() #429 Body End
SETV D2 1; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[bool Tango_SlotIsActive(int)] Body End
SETR D4 SP2; Func[void __Tango_DecScreenFreeze()] Body Start
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 11
SUBV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 11 D2
SETR D2 GD2; if() #468 Test
PUSHR D2
POP D0
READPODARRAYV D2 11
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
RETURNFUNC; Test 'if' AND Func[void __Tango_DecScreenFreeze()] Body End
SETR D4 SP2; Func[bool Tango_MenuIsActive()] Body Start
SETR D2 GD2; return Start
PUSHR D2
POP D0
READPODARRAYV D2 15
COMPAREV D2 -214747.9999
SETCMP D2 I>
RETURNFUNC; return End AND Func[bool Tango_MenuIsActive()] Body End
SETR D4 SP2; Func[void __Tango_MenuCancel()] Body Start
SETR D2 GD2; if() #545 Test
PUSHR D2
POP D0
READPODARRAYV D2 33
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 1014 ==; Test 'if'
PUSHR D4; if() #545 Body Start
SETR D2 GD2; UsrFunc[void Tango_SaveMenuState(int[])] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 33
PUSHR D2; UsrFunc[void Tango_SaveMenuState(int[])] Params End
CALLFUNC 0.1424; UsrFunc[void Tango_SaveMenuState(int[])] Call
POP D4; if() #545 Body End
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
SETR D2 GD2; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 22; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
PUSHR D4
CALLFUNC 0.1095; UsrFunc[void __Tango_MenuNotify()] Call
POP D4
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 8
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
RETURNFUNC; Func[void __Tango_MenuCancel()] Body End
PUSHV 0; Func[bool __Tango_ValidateStyle(int)] Body Start
SETR D4 SP2
STOREV 1 0
LOAD D2 0.0001; if() #670 Test
COMPAREV D2 0
GOTOCMP 1056 <
LOAD D2 0.0001
COMPAREV D2 9
GOTOCMP 1056 >
SETV D2 0
GOTO 1057
SETV D2 1
COMPAREV D2 0
GOTOCMP 1061 ==; Test 'if'
SETV D2 0; if() #670 Body Start
STORE D2 0; if() #670 Body End
LOAD D2 0.0001; if() #671 Test
PUSHR D2
LOAD D2 0.0001
LSHIFTV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1072 ==; Test 'if'
SETV D2 0; if() #671 Body Start
STORE D2 0; if() #671 Body End
LOAD D2 0; unless() #672 Test
COMPAREV D2 0
GOTOCMP 1081 !=; Test 'unless'
PUSHR D4; unless() #672 Body Start
PUSHV 401; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4; unless() #672 Body End
LOAD D2 0; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[bool __Tango_ValidateStyle(int)] Body End
SETR D4 SP2; Func[void Tango_DeactivateMenu()] Body Start
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
PUSHR D4
CALLFUNC 0.1095; UsrFunc[void __Tango_MenuNotify()] Call
POP D4
RETURNFUNC; Func[void Tango_DeactivateMenu()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_MenuNotify()] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0; for() #150 setup
LOAD D2 0; for() #150 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1130 ==; for() #150 TestFail?
LOAD D2 0; for() #150 Body Start
MULTV D2 24
ADDV D2 1
STORE D2 0.0001
SETR D2 GD5; if() #546 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 5
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1126 !=; Test 'if' AND continue 1; AND if() #546 Body
SETV D2 7
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #150 Body End
LOAD D2 0; for() #150 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1099; for() #150 End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_MenuNotify()] Body End
PUSHV 0; Func[bool __Tango_CursorPosIsValid()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0
LOAD D2 0; if() #466 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1146 ==; Test 'if'
SETV D2 0; return Start AND if() #466 Body Start
GOTO 1160; return End AND if() #466 Body End
LOAD D2 0; if() #467 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 1159 ==; Test 'if'
SETV D2 0; return Start AND if() #467 Body Start
GOTO 1160; return End AND if() #467 Body End
SETV D2 1; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_CursorPosIsValid()] Body End
SETR D4 SP2; Func[int Tango_GetCustomVar(int)] Body Start
LOAD D2 0; if() #161 Test
COMPAREV D2 0.0055
GOTOCMP 1171 <
LOAD D2 0
COMPAREV D2 0.0062
GOTOCMP 1171 >
SETV D2 1
GOTO 1172
SETV D2 0
COMPAREV D2 0
GOTOCMP 1182 ==; Test 'if'
SETR D2 GD1; return Start AND if() #161 Body Start
PUSHR D2
LOAD D2 0
SUBV D2 0.0055
MULTV D2 10000
POP D0
READPODARRAYR D2 D2
GOTO 1188; return End AND if() #161 Body End
PUSHR D4; if() #161 Else Start
LOAD D2 0; UsrFunc[void Tango_LogUndefinedVariable(int)] Params Start
PUSHR D2; UsrFunc[void Tango_LogUndefinedVariable(int)] Params End
CALLFUNC 0.1190; UsrFunc[void Tango_LogUndefinedVariable(int)] Call
POP D4
SETV D2 0; return Start
POP D5; return End AND if() #161 Else End
RETURNFUNC; Func[int Tango_GetCustomVar(int)] Body End
SETR D4 SP2; Func[void Tango_LogUndefinedVariable(int)] Body Start
PUSHR D4
PUSHV 203; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
POP D5
RETURNFUNC; Func[void Tango_LogUndefinedVariable(int)] Body End
SETR D4 SP2; Func[int Tango_GetSlotVar(int, int)] Body Start
PUSHR D4; if() #406 Test
LOAD D2 0.0001; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0344; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 1218 ==; Test 'if'
SETR D2 GD5; return Start AND if() #406 Body Start
PUSHR D2
LOAD D2 0.0001
MULTV D2 24
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
GOTO 1219; return End AND if() #406 Body End
SETV D2 -10; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int Tango_GetSlotVar(int, int)] Body End
PUSHARGSV 0 0.0003; Func[int Tango_GetStringWidth(char32[], int[])] Body Start
SETR D4 SP2
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0 0; for() #117 setup
LOAD D2 0.0004; for() #117 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1279 ==; for() #117 TestFail?
LOAD D2 0.0004; for() #117 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; if() #409 Test
COMPAREV D2 32
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1275 !=; Test 'if' AND continue 1; AND if() #409 Body
LOAD D2 0.0003; if() #162 Test
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1264 ==; Test 'if'
LOAD D2 0.0002; if() #162 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 6
POP D3
ADDR D2 D3
STORE D2 0.0002
GOTO 1275; if() #162 Body End
LOAD D2 0.0002; if() #162 Else Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0001
ADDV D2 -26
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0002; if() #162 Else End
LOAD D2 0; for() #117 Body End AND for() #117 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1226; for() #117 End
LOAD D2 0.0002; return Start
POPARGS D5 0.0005; return End
RETURNFUNC; Func[int Tango_GetStringWidth(char32[], int[])] Body End
SETR D4 SP2; Func[int Tango_GetStyleAttribute(int, int)] Body Start
PUSHR D4; unless() #410 Test
LOAD D2 0.0001; UsrFunc[bool __Tango_ValidateStyle(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateStyle(int)] Params End
CALLFUNC 0.1045; UsrFunc[bool __Tango_ValidateStyle(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 1292 !=; Test 'unless'
SETV D2 -10; return Start AND unless() #410 Body Start
GOTO 1302; return End AND unless() #410 Body End
SETR D2 GD3; return Start
PUSHR D2
LOAD D2 0.0001
MULTV D2 48
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int Tango_GetStyleAttribute(int, int)] Body End
SETR D4 SP2; Func[void Tango_InitializeMenu()] Body Start
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 14 D2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 16 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 17 D2
SETV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 18 D2
SETV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 19 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 20 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 21 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 23 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 32 D2
SETV D2 -1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 24 D2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 25 D2
SETV D2 214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 26 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 33 D2
RETURNFUNC; Func[void Tango_InitializeMenu()] Body End
SETR D4 SP2; Func[void Tango_LoadMessage(int, int)] Body Start
PUSHR D4
LOAD D2 0.0001; UsrFunc[void __Tango_LoadMessage(int, int, bool, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
PUSHARGSV 0 0.0002; UsrFunc[void __Tango_LoadMessage(int, int, bool, int)] Params End
CALLFUNC 0.0575; UsrFunc[void __Tango_LoadMessage(int, int, bool, int)] Call
POP D4
POPARGS D5 0.0002
RETURNFUNC; Func[void Tango_LoadMessage(int, int)] Body End
SETR D4 SP2; Func[void Tango_LogUndefinedFunction(int)] Body Start
PUSHR D4
PUSHV 202; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
POP D5
RETURNFUNC; Func[void Tango_LogUndefinedFunction(int)] Body End
SETR D4 SP2; Func[void __Tango_LogError(int, untyped)] Body Start
PUSHR D4
LOAD D2 0.0001; UsrFunc[void __Tango_LogError(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_LogError(int)] Params End
CALLFUNC 0.0111; UsrFunc[void __Tango_LogError(int)] Call
POP D4
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_LogError(int, untyped)] Body End
PUSHARGSV 0 0.0002; Func[void Tango_SaveMenuState(int[])] Body Start
SETR D4 SP2
SETR D2 GD2; InlineFunc[int SizeOfArray(untyped[])] Params
ARRAYSIZE D2; InlineFunc[int SizeOfArray(untyped[])] Body
SUBV D2 14
STORE D2 0.0001
LOAD D2 0.0002; InlineFunc[int SizeOfArray(int[])] Params AND if() #417 Test
ARRAYSIZE D2; InlineFunc[int SizeOfArray(int[])] Body
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1449 ==; Test 'if'
PUSHR D4; if() #417 Body Start
PUSHV 405; UsrFunc[void __Tango_LogError(int, untyped, untyped)] Params Start
LOAD D2 0.0002; InlineFunc[int SizeOfArray(int[])] Params
ARRAYSIZE D2; InlineFunc[int SizeOfArray(int[])] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped, untyped)] Params End
CALLFUNC 0.0413; UsrFunc[void __Tango_LogError(int, untyped, untyped)] Call
POP D4
GOTO 1507; return (Void) AND if() #417 Body End
STOREV 0 0; for() #119 setup
LOAD D2 0; for() #119 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1476 ==; for() #119 TestFail?
SETR D2 GD2; for() #119 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 14
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #119 Body End
LOAD D2 0; for() #119 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1450; for() #119 End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1509; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1519; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 14 D2
SETV D2 0
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 17 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void Tango_SaveMenuState(int[])] Body End
SETR D4 SP2; Func[int __Tango_GetMenuChoiceX(int)] Body Start
SETR D2 GD2; return Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetMenuChoiceX(int)] Body End
SETR D4 SP2; Func[int __Tango_GetMenuChoiceY(int)] Body Start
SETR D2 GD2; return Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetMenuChoiceY(int)] Body End
PUSHV 0; Func[void Tango_ScrollSlot(int, int)] Body Start
SETR D4 SP2
LOAD D2 0.0002
MULTV D2 24
STORE D2 0
SETR D2 GD5; if() #419 Test
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1649 !=; Test 'if' AND return (Void) AND if() #419 Body
LOAD D2 0.0001; if() #163 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1573 ==; Test 'if'
LOAD D2 0.0001; if() #420 Test AND if() #163 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1612 ==; Test 'if'
SETR D2 GD5; if() #420 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
SUBV2 0 D2
STORE D2 0.0001; if() #420 Body End
GOTO 1612; if() #163 Body End
LOAD D2 0.0001; if() #421 Test AND if() #163 Else Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 1612 ==; Test 'if'
SETR D2 GD5; if() #421 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0001; if() #421 Body End
SETR D2 GD5; if() #163 Else End
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD2; if() #422 Test
PUSHR D2
POP D0
READPODARRAYV D2 24
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1649 ==; Test 'if'
PUSHR D4; if() #422 Body Start
PUSHV 0; UsrFunc[void __Tango_ShiftMenu(int, int)] Params Start
LOAD D2 0.0001
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_ShiftMenu(int, int)] Params End
CALLFUNC 0.1651; UsrFunc[void __Tango_ShiftMenu(int, int)] Call
POP D4; if() #422 Body End
POPARGS D5 0.0003
RETURNFUNC; Func[void Tango_ScrollSlot(int, int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ShiftMenu(int, int)] Body Start
SETR D4 SP2
STOREV 34 0.0001
STOREV 0 0; for() #159 setup
LOAD D2 0; for() #159 LoopTest
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1709 ==; for() #159 TestFail?
SETR D2 GD2; for() #159 Body Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
ADDV D2 3
STORE D2 0.0001; for() #159 Body End
LOAD D2 0; for() #159 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1655; for() #159 End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_ShiftMenu(int, int)] Body End
SETR D4 SP2; Func[void Tango_SetCustomVar(int, int)] Body Start
LOAD D2 0.0001; if() #164 Test
COMPAREV D2 0.0055
GOTOCMP 1720 <
LOAD D2 0.0001
COMPAREV D2 0.0062
GOTOCMP 1720 >
SETV D2 1
GOTO 1721
SETV D2 0
COMPAREV D2 0
GOTOCMP 1735 ==; Test 'if'
LOAD D2 0; if() #164 Body Start
PUSHR D2
SETR D2 GD1
PUSHR D2
LOAD D2 0.0001
SUBV D2 0.0055
MULTV D2 10000
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 1740; if() #164 Body End
PUSHR D4; if() #164 Else Start
LOAD D2 0.0001; UsrFunc[void Tango_LogUndefinedVariable(int)] Params Start
PUSHR D2; UsrFunc[void Tango_LogUndefinedVariable(int)] Params End
CALLFUNC 0.1190; UsrFunc[void Tango_LogUndefinedVariable(int)] Call
POP D4; if() #164 Else End
POPARGS D5 0.0002
RETURNFUNC; Func[void Tango_SetCustomVar(int, int)] Body End
SETR D4 SP2; Func[void Tango_SetMenuCursorPosition(int)] Body Start
LOAD D2 0
LSHIFTV D2 0
STORE D2 0
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
PUSHR D4
LOAD D2 0; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params End
CALLFUNC 0.0157; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Call
PEEK D4
LOAD D2 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0248; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4
POP D5
RETURNFUNC; Func[void Tango_SetMenuCursorPosition(int)] Body End
PUSHV 0; Func[void Tango_Start()] Body Start
SETR D4 SP2
PUSHR D4
CALLFUNC 0.1794; UsrFunc[void __Tango_ValidateSavedVersion()] Call
PEEK D4
CALLFUNC 0.1304; UsrFunc[void Tango_InitializeMenu()] Call
POP D4
STOREV 0 0; for() #120 setup
LOAD D2 0; for() #120 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1786 ==; for() #120 TestFail?
PUSHR D4; for() #120 Body Start
LOAD D2 0; UsrFunc[void Tango_ClearSlot(int)] Params Start
PUSHR D2; UsrFunc[void Tango_ClearSlot(int)] Params End
CALLFUNC 0.0646; UsrFunc[void Tango_ClearSlot(int)] Call
POP D4; for() #120 Body End
LOAD D2 0; for() #120 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1772; for() #120 End
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 11 D2
POP D5
RETURNFUNC; Func[void Tango_Start()] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_ValidateSavedVersion()] Body Start
SETR D4 SP2
SETR D2 GD2; if() #400 Test
PUSHR D2
POP D0
READPODARRAYV D2 7
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1811 ==; Test 'if'
SETV D2 3; if() #400 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 7 D2
GOTO 1843; if() #400 Body End
SETR D2 GD2; if() #660 Test AND if() #400 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 7
COMPAREV D2 3
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1843 ==; Test 'if'
ALLOCATEMEMV D2 81 0; if() #660 Body Start
STORE D2 0.0002
WRITEPODSTRING D2 "tango.zh error: The saved data is invalid for the current version of this quest."
ALLOCATEMEMV D2 70 0
STORE D2 0
WRITEPODSTRING D2 "Serious errors are likely to occur. Begin a new game to correct this."
LOAD D2 0.0002; InlineFunc[void TraceS(char32[])] Params Start
SETR D3 D2; InlineFunc[void TraceS(char32[])] Params End
TRACE6 D3; InlineFunc[void TraceS(char32[])] Body
TRACE3; InlineFunc[void TraceNL()] Body
LOAD D2 0; InlineFunc[void TraceS(char32[])] Params Start
SETR D3 D2; InlineFunc[void TraceS(char32[])] Params End
TRACE6 D3; InlineFunc[void TraceS(char32[])] Body
TRACE3; InlineFunc[void TraceNL()] Body
SETV D2 1800
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
LOAD D3 0
DEALLOCATEMEMR D3
LOAD D3 0.0002
DEALLOCATEMEMR D3; if() #660 Body End
POPARGS D5 0.0004; if() #400 Else End
RETURNFUNC; Func[void __Tango_ValidateSavedVersion()] Body End
PUSHARGSV 0 0.0002; Func[void Tango_SuspendSlot(int)] Body Start
SETR D4 SP2
LOAD D2 0.0002
MULTV D2 24
ADDV D2 1
STORE D2 0.0001
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #431 Test
COMPAREV D2 0
GOTOCMP 1865 ==
LOAD D2 0
COMPAREV D2 4
GOTOCMP 1865 ==
SETV D2 0
GOTO 1866
SETV D2 1
COMPAREV D2 0
GOTOCMP 1879 !=; Test 'if' AND return (Void) AND if() #431 Body
LOAD D2 0
MODV D2 100
ADDV D2 100
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void Tango_SuspendSlot(int)] Body End
PUSHARGSV 0 0.0004; Func[bool __Tango_FindSyncingStrings(int)] Body Start
SETR D4 SP2
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0 0; for() #138 setup
LOAD D2 0; for() #138 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1945 ==; for() #138 TestFail?
LOAD D2 0; for() #138 Body Start
MULTV D2 24
ADDV D2 1
STORE D2 0.0003
SETR D2 GD5; if() #483 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 6
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1941 ==; Test 'if'
LOAD D2 0; if() #483 Body Start
MULTV D2 24
ADDV D2 2
STORE D2 0.0002
SETR D2 GD5; if() #484 Test
PUSHR D2
LOAD D2 0.0002
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1941 ==; Test 'if'
SETV D2 1; if() #484 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0003
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1
STORE D2 0.0001; if() #484 Body End
LOAD D2 0; if() #483 Body End AND for() #138 Body End AND for() #138 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1887; for() #138 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0005; return End
RETURNFUNC; Func[bool __Tango_FindSyncingStrings(int)] Body End
PUSHARGSV 0 0.0002; Func[void Tango_Update1()] Body Start
SETR D4 SP2
STOREV 0 0.0001
PUSHV 6; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
PUSHR D4
CALLFUNC 0.2099; UsrFunc[void __Tango_CheckScreenChange()] Call
PEEK D4
CALLFUNC 0.0989; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 1966 ==; Test 'if'
PUSHR D4; if() #433 Body Start
CALLFUNC 0.2168; UsrFunc[void __Tango_UpdateMenu()] Call
POP D4
SETV D2 1
STORE D2 0.0001; if() #433 Body End
SETR D2 GD2; if() #434 Test
PUSHR D2
POP D0
READPODARRAYV D2 8
ANDV D2 8
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1994 ==; Test 'if'
PUSHR D4; if() #165 Test AND if() #434 Body Start
CALLFUNC 0.2320; UsrFunc[bool __Tango_InputMenu()] Call
POP D4
COMPAREV D2 0
GOTOCMP 1984 ==; Test 'if'
PUSHR D4; if() #165 Body Start
CALLFUNC 0.0135; UsrFunc[void __Tango_UnpressMenu()] Call
POP D4
GOTO 1994; if() #165 Body End
SETR D2 GD2; if() #165 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ANDV D2 -9
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2; if() #165 Else End
STOREV 0 0; if() #434 Body End AND for() #121 setup
LOAD D2 0; for() #121 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 2011 ==; for() #121 TestFail?
PUSHR D4; for() #121 Body Start
LOAD D2 0; UsrFunc[void __Tango_SetCurrentSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_SetCurrentSlot(int)] Params End
CALLFUNC 0.2331; UsrFunc[void __Tango_SetCurrentSlot(int)] Call
PEEK D4
CALLFUNC 0.2428; UsrFunc[void __Tango_UpdateCurrentSlot()] Call
POP D4; for() #121 Body End
LOAD D2 0; for() #121 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1995; for() #121 End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
STORE D2 0
LOAD D2 0; if() #435 Test
ANDV D2 1
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2034 ==; Test 'if'
PUSHR D4; if() #166 Test AND if() #435 Body Start
CALLFUNC 0.2712; UsrFunc[bool __Tango_InputSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2031 ==; Test 'if'
PUSHR D4; if() #166 Body Start
CALLFUNC 0.2715; UsrFunc[void __Tango_UnpressSpeedup()] Call
POP D4
GOTO 2034; if() #166 Body End
LOAD D2 0; if() #166 Else Start
ANDV D2 -2
STORE D2 0; if() #166 Else End
LOAD D2 0; if() #435 Body End AND if() #436 Test
ANDV D2 2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2052 ==; Test 'if'
PUSHR D4; if() #167 Test AND if() #436 Body Start
CALLFUNC 0.2727; UsrFunc[bool __Tango_InputSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2049 ==; Test 'if'
PUSHR D4; if() #167 Body Start
CALLFUNC 0.2730; UsrFunc[void __Tango_UnpressSuperSpeed()] Call
POP D4
GOTO 2052; if() #167 Body End
LOAD D2 0; if() #167 Else Start
ANDV D2 -3
STORE D2 0; if() #167 Else End
LOAD D2 0; if() #436 Body End AND if() #437 Test
ANDV D2 4
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2070 ==; Test 'if'
PUSHR D4; if() #168 Test AND if() #437 Body Start
CALLFUNC 0.2742; UsrFunc[bool __Tango_InputAdvance()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2067 ==; Test 'if'
PUSHR D4; if() #168 Body Start
CALLFUNC 0.2745; UsrFunc[void __Tango_UnpressAdvance()] Call
POP D4
GOTO 2070; if() #168 Body End
LOAD D2 0; if() #168 Else Start
ANDV D2 -5
STORE D2 0; if() #168 Else End
LOAD D2 0; if() #437 Body End AND if() #438 Test
ANDV D2 16
COMPAREV D2 0
GOTOCMP 2079 !=
LOAD D2 0.0001
COMPAREV D2 0
GOTOCMP 2079 !=
SETV D2 0
GOTO 2080
SETV D2 1
COMPAREV D2 0
GOTOCMP 2088 ==; Test 'if'
PUSHR D4; if() #438 Body Start
CALLFUNC 0.2757; UsrFunc[void __Tango_UnpressAll()] Call
POP D4
LOAD D2 0
ANDV D2 -17
STORE D2 0; if() #438 Body End
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
PUSHV -1; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
POPARGS D5 0.0002
RETURNFUNC; Func[void Tango_Update1()] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_CheckScreenChange()] Body Start
SETR D4 SP2
SETR D2 CURDMAP
LSHIFTV D2 8
PUSHR D2
SETR D2 CURDSCR
POP D3
ADDR D2 D3
STORE D2 0.0003
SETR D2 GD2; if() #463 Test
PUSHR D2
POP D0
READPODARRAYV D2 9
PUSHR D2
LOAD D2 0.0003
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2166 ==; Test 'if'
LOAD D2 0.0003; if() #463 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 9 D2
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0 0; for() #133 setup
LOAD D2 0; for() #133 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 2166 ==; for() #133 TestFail?
PUSHR D4; for() #133 Body Start
LOAD D2 0; UsrFunc[int __Tango_GetSlotState(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetSlotState(int)] Params End
CALLFUNC 0.3842; UsrFunc[int __Tango_GetSlotState(int)] Call
POP D4
STORE D2 0.0002
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetSlotFlags(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetSlotFlags(int)] Params End
CALLFUNC 0.3855; UsrFunc[int __Tango_GetSlotFlags(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0001; if() #464 Test
ANDV D2 8
COMPAREV D2 0
GOTOCMP 2154 ==
LOAD D2 0.0002
COMPAREV D2 4
GOTOCMP 2154 ==
SETV D2 0
GOTO 2155
SETV D2 1
COMPAREV D2 0
GOTOCMP 2162 ==; Test 'if'
PUSHR D4; if() #464 Body Start
LOAD D2 0; UsrFunc[void Tango_ClearSlot(int)] Params Start
PUSHR D2; UsrFunc[void Tango_ClearSlot(int)] Params End
CALLFUNC 0.0646; UsrFunc[void Tango_ClearSlot(int)] Call
POP D4; if() #464 Body End
LOAD D2 0; for() #133 Body End AND for() #133 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 2128; for() #133 End
POPARGS D5 0.0004; if() #463 Body End
RETURNFUNC; Func[void __Tango_CheckScreenChange()] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_UpdateMenu()] Body Start
SETR D4 SP2
SETR D2 GD2; if() #657 Test
PUSHR D2
POP D0
READPODARRAYV D2 10
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2184 ==; Test 'if'
SETV D2 0; if() #657 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2; if() #657 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0.0002
STOREV 0 0.0001
PUSHR D4
CALLFUNC 0.1132; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
STORE D2 0
SETR D2 INPUTPRESSUP; if() #391 Test
COMPAREV D2 0
GOTOCMP 2203 ==; Test 'if'
PUSHR D4; if() #391 Body Start
PUSHV 0; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6266; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2232; if() #391 Body End
SETR D2 INPUTPRESSDOWN; if() #392 Test AND if() #391 Else Start
COMPAREV D2 0
GOTOCMP 2212 ==; Test 'if'
PUSHR D4; if() #392 Body Start
PUSHV 1; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6266; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2232; if() #392 Body End
SETR D2 INPUTPRESSLEFT; if() #393 Test AND if() #392 Else Start
COMPAREV D2 0
GOTOCMP 2221 ==; Test 'if'
PUSHR D4; if() #393 Body Start
PUSHV 2; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6266; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2232; if() #393 Body End
SETR D2 INPUTPRESSRIGHT; if() #394 Test AND if() #393 Else Start
COMPAREV D2 0
GOTOCMP 2230 ==; Test 'if'
PUSHR D4; if() #394 Body Start
PUSHV 3; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6266; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2232; if() #394 Body End
LOAD D2 0.0002; if() #394 Else Start
STORE D2 0.0001; if() #394 Else End
PUSHR D4; if() #393 Else End AND if() #392 Else End AND if() #391 Else End AND if() #395 Test
CALLFUNC 0.9258; UsrFunc[bool __Tango_PressMenuSelect()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2244 ==
PUSHR D4
CALLFUNC 0.1132; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2244 ==
SETV D2 1
GOTO 2245
SETV D2 0
COMPAREV D2 0
GOTOCMP 2253 ==; Test 'if'
PUSHR D4; if() #395 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_MenuSelect(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_MenuSelect(int)] Params End
CALLFUNC 0.7676; UsrFunc[void __Tango_MenuSelect(int)] Call
POP D4
GOTO 2318; if() #395 Body End
SETR D2 GD2; if() #396 Test AND if() #395 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 14
ANDV D2 1
COMPAREV D2 0
GOTOCMP 2267 ==
PUSHR D4
CALLFUNC 0.9255; UsrFunc[bool __Tango_PressMenuCancel()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2267 ==
SETV D2 1
GOTO 2268
SETV D2 0
COMPAREV D2 0
GOTOCMP 2274 ==; Test 'if'
PUSHR D4; if() #396 Body Start
CALLFUNC 0.0997; UsrFunc[void __Tango_MenuCancel()] Call
POP D4
GOTO 2318; if() #396 Body End
LOAD D2 0.0001; if() #397 Test AND if() #396 Else Start
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2315 ==; Test 'if'
PUSHR D4; if() #397 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params End
CALLFUNC 0.0157; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Call
POP D4
SETR D2 GD2; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 20; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
LOAD D2 0.0001
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
LOAD D2 0; if() #398 Test
COMPAREV D2 0
GOTOCMP 2308 ==; Test 'if'
PUSHR D4; if() #398 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0248; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4
GOTO 2318; if() #398 Body End
PUSHR D4; if() #398 Else Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0248; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4; if() #398 Else End
GOTO 2318; if() #397 Body End
PUSHR D4; if() #397 Else Start
CALLFUNC 1.2399; UsrFunc[void __Tango_UpdateCursorMovement()] Call
POP D4; if() #397 Else End
POPARGS D5 0.0003; if() #396 Else End AND if() #395 Else End
RETURNFUNC; Func[void __Tango_UpdateMenu()] Body End
SETR D4 SP2; Func[bool __Tango_InputMenu()] Body Start
SETR D2 INPUTA; return Start
COMPAREV D2 0
GOTOCMP 2329 !=
SETR D2 INPUTB
COMPAREV D2 0
GOTOCMP 2329 !=
SETV D2 0
GOTO 2330
SETV D2 1
RETURNFUNC; return End AND Func[bool __Tango_InputMenu()] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_SetCurrentSlot(int)] Body Start
SETR D4 SP2
LOAD D2 0.0004
MULTV D2 7
STORE D2 0.0003
LOAD D2 0.0004
MULTV D2 24
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001
MULTV D2 48
STORE D2 0
LOAD D2 0.0004
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 2 D2
LOAD D2 0.0003
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 3 D2
LOAD D2 0.0002
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 4 D2
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 5 D2
LOAD D2 0.0001; if() #362 Test
COMPAREV D2 -10
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2420 ==; Test 'if'
SETR D2 GD3; if() #362 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 6 D2
GOTO 2426; if() #362 Body End
SETV D2 -10; if() #362 Else Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 6 D2; if() #362 Else End
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_SetCurrentSlot(int)] Body End
PUSHARGSV 0 0.0005; Func[void __Tango_UpdateCurrentSlot()] Body Start
SETR D4 SP2
SETR D2 GD5
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
LOAD D2 0.0004; if() #378 Test
COMPAREV D2 0
GOTOCMP 2448 ==
LOAD D2 0.0004
COMPAREV D2 4
GOTOCMP 2448 ==
SETV D2 0
GOTO 2449
SETV D2 1
COMPAREV D2 0
GOTOCMP 2453 ==; Test 'if'
GOTO 2710; return (Void) AND if() #378 Body Start
GOTO 2472; if() #378 Body End
LOAD D2 0.0004; if() #639 Test AND if() #378 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2472 ==; Test 'if'
SETV D2 1; if() #639 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 2710; return (Void) AND if() #639 Body End
PUSHR D4; if() #378 Else End
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0003
STOREV 0 0.0002
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
ADDV D2 19
STORE D2 0.0001
LOAD D2 0.0003; if() #640 Test
ANDV D2 1
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2531 ==; Test 'if'
SETR D2 GD2; if() #640 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
SETR D2 GD5; if() #379 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2524 ==; Test 'if'
PUSHR D4; unless() #641 Test AND if() #379 Body Start
CALLFUNC 0.2712; UsrFunc[bool __Tango_InputSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2531 !=; Test 'unless'
SETV D2 0; unless() #641 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; unless() #641 Body End
GOTO 2531; if() #379 Body End
PUSHR D4; if() #642 Test AND if() #379 Else Start
CALLFUNC 0.2712; UsrFunc[bool __Tango_InputSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2531 ==; Test 'if'
SETV D2 1; if() #642 Body Start
STORE D2 0.0002; if() #642 Body End
LOAD D2 0.0003; if() #379 Else End AND if() #640 Body End AND if() #643 Test
ANDV D2 2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2578 ==; Test 'if'
SETR D2 GD2; if() #643 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
SETR D2 GD5; if() #380 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2571 ==; Test 'if'
PUSHR D4; unless() #644 Test AND if() #380 Body Start
CALLFUNC 0.2727; UsrFunc[bool __Tango_InputSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2578 !=; Test 'unless'
SETV D2 0; unless() #644 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; unless() #644 Body End
GOTO 2578; if() #380 Body End
PUSHR D4; if() #645 Test AND if() #380 Else Start
CALLFUNC 0.2727; UsrFunc[bool __Tango_InputSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2578 ==; Test 'if'
SETV D2 2; if() #645 Body Start
STORE D2 0.0002; if() #645 Body End
LOAD D2 0.0003; if() #380 Else End AND if() #643 Body End AND if() #646 Test
ANDV D2 64
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2586 ==; Test 'if'
SETV D2 2; if() #646 Body Start
STORE D2 0.0002; if() #646 Body End
LOAD D2 0.0003; if() #647 Test
ANDV D2 16
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2602 ==; Test 'if'
SETR D2 GD2; if() #647 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 16
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2; if() #647 Body End
LOAD D2 0.0004; if() #648 Test
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2676 ==; Test 'if'
PUSHR D4; if() #648 Body Start
PUSHV 2; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
PUSHR D4; if() #381 Test
LOAD D2 0; UsrFunc[bool __Tango_PressAdvance(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_PressAdvance(int)] Params End
CALLFUNC 0.9244; UsrFunc[bool __Tango_PressAdvance(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 2669 ==; Test 'if'
SETV D2 1; if() #381 Body Start
STORE D2 0.0004
PUSHR D4
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHARGSV 1 0.0002; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start AND UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
PUSHR D4; if() #382 Test
CALLFUNC 0.0506; UsrFunc[bool __Tango_PressSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2654 ==; Test 'if'
SETV D2 1; if() #382 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 2676; if() #382 Body End
PUSHR D4; if() #649 Test AND if() #382 Else Start
CALLFUNC 0.0509; UsrFunc[bool __Tango_PressSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2676 ==; Test 'if'
SETV D2 2; if() #649 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #649 Body End
GOTO 2676; if() #382 Else End AND if() #381 Body End
PUSHR D4; if() #381 Else Start
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0
ADDV D2 1
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4; if() #381 Else End
LOAD D2 0.0004; if() #648 Body End AND if() #383 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2687 ==; Test 'if'
PUSHR D4; if() #383 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_UpdateActiveSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_UpdateActiveSlot(int)] Params End
CALLFUNC 1.2040; UsrFunc[void __Tango_UpdateActiveSlot(int)] Call
POP D4
GOTO 2710; if() #383 Body End
LOAD D2 0.0004; if() #384 Test AND if() #383 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2698 ==; Test 'if'
PUSHR D4; if() #384 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_UpdateAdvancing(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_UpdateAdvancing(int)] Params End
CALLFUNC 1.2112; UsrFunc[void __Tango_UpdateAdvancing(int)] Call
POP D4
GOTO 2710; if() #384 Body End
LOAD D2 0.0004; if() #650 Test AND if() #384 Else Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2710 ==; Test 'if'
PUSHR D4; if() #650 Body Start
LOAD D2 0.0003; UsrFunc[void __Tango_UpdateFinishedSlot(int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_UpdateFinishedSlot(int, int)] Params End
CALLFUNC 1.2249; UsrFunc[void __Tango_UpdateFinishedSlot(int, int)] Call
POP D4; if() #650 Body End
POPARGS D5 0.0005; if() #384 Else End AND if() #383 Else End
RETURNFUNC; Func[void __Tango_UpdateCurrentSlot()] Body End
SETR D4 SP2; Func[bool __Tango_InputSpeedup()] Body Start
SETR D2 INPUTA; return Start
RETURNFUNC; return End AND Func[bool __Tango_InputSpeedup()] Body End
SETR D4 SP2; Func[void __Tango_UnpressSpeedup()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
RETURNFUNC; Func[void __Tango_UnpressSpeedup()] Body End
SETR D4 SP2; Func[bool __Tango_InputSuperSpeed()] Body Start
SETR D2 INPUTB; return Start
RETURNFUNC; return End AND Func[bool __Tango_InputSuperSpeed()] Body End
SETR D4 SP2; Func[void __Tango_UnpressSuperSpeed()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSB D2
RETURNFUNC; Func[void __Tango_UnpressSuperSpeed()] Body End
SETR D4 SP2; Func[bool __Tango_InputAdvance()] Body Start
SETR D2 INPUTA; return Start
RETURNFUNC; return End AND Func[bool __Tango_InputAdvance()] Body End
SETR D4 SP2; Func[void __Tango_UnpressAdvance()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
RETURNFUNC; Func[void __Tango_UnpressAdvance()] Body End
SETR D4 SP2; Func[void __Tango_UnpressAll()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTUP D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSUP D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTDOWN D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSDOWN D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTLEFT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSLEFT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTRIGHT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSRIGHT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTL D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSL D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTR D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSR D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX1 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX1 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX2 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX2 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX3 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX3 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX4 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX4 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTSTART D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSSTART D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTMAP D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSMAP D2
RETURNFUNC; Func[void __Tango_UnpressAll()] Body End
PUSHARGSV 0 0.0004; Func[void Tango_Update2()] Body Start
SETR D4 SP2
PUSHV -1; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
STOREV 0 0.0003
STOREV 0 0.0002; for() #122 setup
LOAD D2 0.0002; for() #122 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 2938 ==; for() #122 TestFail?
PUSHR D4; for() #122 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_SetCurrentSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_SetCurrentSlot(int)] Params End
CALLFUNC 0.2331; UsrFunc[void __Tango_SetCurrentSlot(int)] Call
PEEK D4
PUSHV 1; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0003
LOAD D2 0.0003; if() #439 Test
COMPAREV D2 0
GOTOCMP 2928 ==
LOAD D2 0.0003
COMPAREV D2 4
GOTOCMP 2928 ==
SETV D2 1
GOTO 2929
SETV D2 0
COMPAREV D2 0
GOTOCMP 2934 ==; Test 'if'
PUSHR D4; if() #439 Body Start
CALLFUNC 0.3006; UsrFunc[void __Tango_DrawToScreen()] Call
POP D4; if() #439 Body End
LOAD D2 0.0002; for() #122 Body End AND for() #122 LoopIncrement
ADDV D2 1
STORE D2 0.0002
GOTO 2906; for() #122 End
PUSHR D4; if() #440 Test
CALLFUNC 0.0989; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2951 ==
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
COMPAREV D2 0
GOTOCMP 2951 >=
SETV D2 1
GOTO 2952
SETV D2 0
COMPAREV D2 0
GOTOCMP 2957 ==; Test 'if'
PUSHR D4; if() #440 Body Start
CALLFUNC 0.3173; UsrFunc[void __Tango_DrawMenuCursor()] Call
POP D4; if() #440 Body End
SETR D2 GD2; if() #441 Test
PUSHR D2
POP D0
READPODARRAYV D2 13
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 2989 ==; Test 'if'
ALLOCATEMEMV D2 22 0; if() #441 Body Start
STORE D2 0
WRITEPODSTRING D2 "tango.zh error logged"
PUSHV 6; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Params Start
PUSHARGSV 0 0.0003
PUSHV 1
PUSHARGSV 0 0.0002
LOAD D2 0
PUSHR D2
PUSHV 128; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Params End
DRAWSTRINGR; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Body Start
POPARGS D5 0.0009; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 13
SUBV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
LOAD D3 0
DEALLOCATEMEMR D3; if() #441 Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void Tango_Update2()] Body End
SETR D4 SP2; Func[int __Tango_GetCurrSlotData(int)] Body Start
SETR D2 GD5; return Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrSlotData(int)] Body End
PUSHARGSV 0 0.0006; Func[void __Tango_DrawToScreen()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0005
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0004
SETR D2 GD3
PUSHR D2
LOAD D2 0.0004
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD5
PUSHR D2
LOAD D2 0.0005
ADDV D2 6
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0005
ADDV D2 7
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
PUSHR D4
CALLFUNC 0.0989; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 3057 ==
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
POP D3
COMPARER D3 D2
GOTOCMP 3057 !=
SETV D2 1
GOTO 3058
SETV D2 0
STORE D2 0
LOAD D2 0.0003; if() #197 Test
COMPAREV D2 1
GOTOCMP 3067 ==
LOAD D2 0.0003
COMPAREV D2 2
GOTOCMP 3067 ==
SETV D2 0
GOTO 3068
SETV D2 1
COMPAREV D2 0
GOTOCMP 3080 ==; Test 'if'
PUSHR D4; if() #197 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawColorBackdrop(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawColorBackdrop(int, int, int)] Params End
CALLFUNC 0.3984; UsrFunc[void __Tango_DrawColorBackdrop(int, int, int)] Call
POP D4
GOTO 3141; if() #197 Body End
LOAD D2 0.0003; if() #198 Test AND if() #197 Else Start
COMPAREV D2 3
GOTOCMP 3088 ==
LOAD D2 0.0003
COMPAREV D2 4
GOTOCMP 3088 ==
SETV D2 0
GOTO 3089
SETV D2 1
COMPAREV D2 0
GOTOCMP 3101 ==; Test 'if'
PUSHR D4; if() #198 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawTileBackdrop(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawTileBackdrop(int, int, int)] Params End
CALLFUNC 0.4985; UsrFunc[void __Tango_DrawTileBackdrop(int, int, int)] Call
POP D4
GOTO 3141; if() #198 Body End
LOAD D2 0.0003; if() #199 Test AND if() #198 Else Start
COMPAREV D2 5
GOTOCMP 3109 ==
LOAD D2 0.0003
COMPAREV D2 6
GOTOCMP 3109 ==
SETV D2 0
GOTO 3110
SETV D2 1
COMPAREV D2 0
GOTOCMP 3122 ==; Test 'if'
PUSHR D4; if() #199 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawComboBackdrop(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawComboBackdrop(int, int, int)] Params End
CALLFUNC 0.4058; UsrFunc[void __Tango_DrawComboBackdrop(int, int, int)] Call
POP D4
GOTO 3141; if() #199 Body End
LOAD D2 0.0003; if() #477 Test AND if() #199 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3141 ==; Test 'if'
PUSHR D4; if() #477 Body Start
SETR D2 GD3; UsrFunc[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Params End
CALLFUNC 0.4117; UsrFunc[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Call
POP D4; if() #477 Body End
LOAD D2 0; if() #199 Else End AND if() #198 Else End AND if() #197 Else End AND if() #478 Test
COMPAREV D2 0
GOTOCMP 3147 ==; Test 'if'
PUSHR D4; if() #478 Body Start
CALLFUNC 0.3173; UsrFunc[void __Tango_DrawMenuCursor()] Call
POP D4; if() #478 Body End
PUSHR D4
LOAD D2 0.0005; UsrFunc[void __Tango_TransferText(int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_TransferText(int, int, int, int)] Params End
CALLFUNC 0.5044; UsrFunc[void __Tango_TransferText(int, int, int, int)] Call
POP D4
LOAD D2 0; if() #479 Test
COMPAREV D2 0
GOTOCMP 3168 ==; Test 'if'
PUSHR D4; if() #479 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_DrawMenuScrollIndicators(int, int)] Params Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawMenuScrollIndicators(int, int)] Params End
CALLFUNC 0.4676; UsrFunc[void __Tango_DrawMenuScrollIndicators(int, int)] Call
POP D4; if() #479 Body End
PUSHR D4
CALLFUNC 0.4855; UsrFunc[void __Tango_DrawMoreIcon()] Call
POP D4
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_DrawToScreen()] Body End
SETR D4 SP2; Func[void __Tango_DrawMenuCursor()] Body Start
PUSHR D4; unless() #470 Test
CALLFUNC 0.1132; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
COMPAREV D2 0
GOTOCMP 3216 ==; Test 'unless' AND return (Void) AND unless() #470 Body
PUSHV 6; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 27
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 28
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 16
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 18
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 19
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 17
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0005
PUSHV 1
PUSHV 128; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBOR; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0016; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
RETURNFUNC; Func[void __Tango_DrawMenuCursor()] Body End
PUSHV 0; Func[int __Tango_AddPadding(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
LOAD D2 0.0003; if() #181 Test
COMPAREV D2 29.0329
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3228 ==; Test 'if'
SETV D2 12; if() #181 Body Start
STORE D2 0
GOTO 3251; if() #181 Body End
LOAD D2 0.0003; if() #182 Test AND if() #181 Else Start
COMPAREV D2 1615.1672
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3236 ==; Test 'if'
SETV D2 8; if() #182 Body Start
STORE D2 0
GOTO 3251; if() #182 Body End
LOAD D2 0.0003; if() #183 Test AND if() #182 Else Start
COMPAREV D2 208.0657
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3244 ==; Test 'if'
SETV D2 9; if() #183 Body Start
STORE D2 0
GOTO 3251; if() #183 Body End
LOAD D2 0.0003; if() #460 Test AND if() #183 Else Start
COMPAREV D2 37.4073
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3251 ==; Test 'if'
SETV D2 16; if() #460 Body Start
STORE D2 0; if() #460 Body End
LOAD D2 0; if() #183 Else End AND if() #182 Else End AND if() #181 Else End
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0.0002
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0
LOAD D2 0; for() #130 LoopTest
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 3281 ==; for() #130 TestFail?
PUSHR D4; for() #130 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -1; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001
ADDV D2 1
STORE D2 0.0001; for() #130 Body End
LOAD D2 0; for() #130 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 3263; for() #130 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0004; return End
RETURNFUNC; Func[int __Tango_AddPadding(int, int, int)] Body End
SETR D4 SP2; Func[void __Tango_SetChar(int, int)] Body Start
LOAD D2 0.0001; if() #625 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 3301 ==; Test 'if'
PUSHR D4; if() #625 Body Start
PUSHV 103; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0111; UsrFunc[void __Tango_LogError(int)] Call
POP D4
GOTO 3310; return (Void) AND if() #625 Body End
LOAD D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_SetChar(int, int)] Body End
PUSHV 0; Func[void __Tango_AppendMessage(int, int)] Body Start
SETR D4 SP2
SETR D2 GD4; until() #5 Test
PUSHR D2
LOAD D2 0.0002
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
GOTOCMP 3335 !=
PUSHR D4
SETR D2 GD4; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params Start
PUSHR D2
LOAD D2 0.0002
SUBV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params End
CALLFUNC 0.3362; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 3335 !=
SETV D2 1
GOTO 3336
SETV D2 0
COMPAREV D2 0
GOTOCMP 3342 !=; Test 'until'
LOAD D2 0.0002; until() #5 Body Start
ADDV D2 1
STORE D2 0.0002; until() #5 Body End
GOTO 3314; until() #5 End
ALLOCATEMEMV D2 256 0
STORE D2 0
LOAD D2 0.0001; InlineFunc[void Game::GetMessage(int, char32[])] Params Start
PUSHR D2
LOAD D2 0; InlineFunc[void Game::GetMessage(int, char32[])] Params End
POP D3; InlineFunc[void Game::GetMessage(int, char32[])] Body Start
POP D6
GETMESSAGE D3 D2; InlineFunc[void Game::GetMessage(int, char32[])] Body End
PUSHR D4
LOAD D2 0; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params Start
PUSHR D2
PUSHV 0
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params End
CALLFUNC 0.3401; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Call
POP D4
LOAD D3 0
DEALLOCATEMEMR D3
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_AppendMessage(int, int)] Body End
SETR D4 SP2; Func[bool __Tango_IsSpecialDataMarker(int)] Body Start
LOAD D2 0; if() #520 Test
COMPAREV D2 -300
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3370 ==; Test 'if'
SETV D2 1; return Start AND if() #520 Body Start
GOTO 3399; return End AND if() #520 Body End
LOAD D2 0; if() #521 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3377 ==; Test 'if'
SETV D2 1; return Start AND if() #521 Body Start
GOTO 3399; return End AND if() #521 Body End
LOAD D2 0; if() #522 Test
COMPAREV D2 -100
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3384 ==; Test 'if'
SETV D2 1; return Start AND if() #522 Body Start
GOTO 3399; return End AND if() #522 Body End
LOAD D2 0; if() #523 Test
COMPAREV D2 -200
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3391 ==; Test 'if'
SETV D2 1; return Start AND if() #523 Body Start
GOTO 3399; return End AND if() #523 Body End
LOAD D2 0; if() #524 Test
COMPAREV D2 -600
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3398 ==; Test 'if'
SETV D2 1; return Start AND if() #524 Body Start
GOTO 3399; return End AND if() #524 Body End
SETV D2 0; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_IsSpecialDataMarker(int)] Body End
PUSHARGSV 0 0.0005; Func[void __Tango_LoadIntoBuffer(char32[], int, int)] Body Start
SETR D4 SP2
PUSHR D4
LOAD D2 0.0007; UsrFunc[int __Tango_GetStringEnd(char32[])] Params Start
PUSHR D2; UsrFunc[int __Tango_GetStringEnd(char32[])] Params End
CALLFUNC 0.6760; UsrFunc[int __Tango_GetStringEnd(char32[])] Call
POP D4
STORE D2 0.0004
ALLOCATEMEMV D2 2 0
STORE D2 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0006; while() #10 Test
PUSHR D2
LOAD D2 0.0004
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 3692 ==; Test 'while'
LOAD D2 0.0007; while() #10 Body Start
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; if() #244 Test
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 3445 ==; Test 'if'
LOAD D2 0.0007; if() #244 Body Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I==
STORE D2 0.0001
GOTO 3447; if() #244 Body End
SETV D2 0; if() #244 Else Start
STORE D2 0.0001; if() #244 Else End
LOAD D2 0.0002; if() #245 Test
COMPAREV D2 64
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3528 ==; Test 'if'
LOAD D2 0.0001; if() #246 Test AND if() #245 Body Start
COMPAREV D2 0
GOTOCMP 3468 ==; Test 'if'
PUSHR D4; if() #246 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV 64; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0006
ADDV D2 2
STORE D2 0.0006
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
GOTO 3413; if() #246 Body End
PUSHR D4; if() #525 Test AND if() #246 Else Start
LOAD D2 0.0007; UsrFunc[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Params End
CALLFUNC 0.7204; UsrFunc[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 3489 ==; Test 'if'
PUSHR D4; if() #525 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 3692; break 1; AND if() #525 Body End
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0006
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0005
SETR D2 GD4; if() #526 Test
PUSHR D2
LOAD D2 0.0005
SUBV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3413 ==; Test 'if'
LOAD D2 0.0005; if() #247 Test AND if() #526 Body Start
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 3516 ==; Test 'if'
GOTO 3692; break 1; AND if() #247 Body Start
GOTO 3413; if() #247 Body End
SETR D2 GD4; if() #527 Test AND if() #247 Else Start
PUSHR D2
LOAD D2 0.0005
SUBV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -100
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 3413 ==; Test 'if'
GOTO 3692; break 1; AND if() #527 Body
GOTO 3413; if() #247 Else End AND if() #526 Body End AND if() #246 Else End AND if() #245 Body End
LOAD D2 0.0002; if() #248 Test AND if() #245 Else Start
COMPAREV D2 0
GOTOCMP 3539 <=
LOAD D2 0.0002
COMPAREV D2 32
GOTOCMP 3539 >=
LOAD D2 0.0002
COMPAREV D2 26
GOTOCMP 3539 ==
SETV D2 1
GOTO 3540
SETV D2 0
COMPAREV D2 0
GOTOCMP 3573 ==; Test 'if'
PUSHR D4; if() #528 Test AND if() #248 Body Start
LOAD D2 0.0007; UsrFunc[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Params End
CALLFUNC 0.7493; UsrFunc[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 3562 ==; Test 'if'
PUSHR D4; if() #528 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 3692; break 1; AND if() #528 Body End
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0006
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0005
GOTO 3413; if() #248 Body End
LOAD D2 0.0001; if() #529 Test AND if() #248 Else Start
COMPAREV D2 0
GOTOCMP 3578 ==
SETV D2 1
GOTO 3579
SETV D2 0
COMPAREV D2 0
GOTOCMP 3673 ==; Test 'if'
STOREV 0 0; if() #529 Body Start
LOAD D2 0.0002; if() #249 Test
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3590 ==; Test 'if'
SETV D2 1; if() #249 Body Start
STORE D2 0
GOTO 3633; if() #249 Body End
LOAD D2 0.0002; if() #250 Test AND if() #249 Else Start
COMPAREV D2 91
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3598 ==; Test 'if'
SETV D2 2; if() #250 Body Start
STORE D2 0
GOTO 3633; if() #250 Body End
LOAD D2 0.0002; if() #251 Test AND if() #250 Else Start
COMPAREV D2 123
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3606 ==; Test 'if'
SETV D2 3; if() #251 Body Start
STORE D2 0
GOTO 3633; if() #251 Body End
LOAD D2 0.0002; if() #252 Test AND if() #251 Else Start
COMPAREV D2 60
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3614 ==; Test 'if'
SETV D2 4; if() #252 Body Start
STORE D2 0
GOTO 3633; if() #252 Body End
LOAD D2 0.0002; if() #530 Test AND if() #252 Else Start
COMPAREV D2 41
GOTOCMP 3628 ==
LOAD D2 0.0002
COMPAREV D2 93
GOTOCMP 3628 ==
LOAD D2 0.0002
COMPAREV D2 125
GOTOCMP 3628 ==
LOAD D2 0.0002
COMPAREV D2 62
GOTOCMP 3628 ==
SETV D2 0
GOTO 3629
SETV D2 1
COMPAREV D2 0
GOTOCMP 3633 ==; Test 'if'
SETV D2 -1; if() #530 Body Start
STORE D2 0; if() #530 Body End
LOAD D2 0; if() #252 Else End AND if() #251 Else End AND if() #250 Else End AND if() #249 Else End AND if() #531 Test
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 3673 ==; Test 'if'
LOAD D2 0; if() #253 Test AND if() #531 Body Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 3660 ==; Test 'if'
PUSHR D4; if() #253 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -1000; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
PEEK D4
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0005
ADDV D2 2
STORE D2 0.0005
GOTO 3669; if() #253 Body End
PUSHR D4; if() #253 Else Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -1100; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #253 Else End
LOAD D2 0.0006
ADDV D2 2
STORE D2 0.0006
GOTO 3413; continue 1; AND if() #531 Body End
PUSHR D4; if() #529 Body End
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0002; if() #532 Test
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3692 !=; Test 'if' AND break 1; AND if() #532 Body
LOAD D2 0.0006
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #248 Else End
GOTO 3413; if() #245 Else End AND while() #10 Body End AND while() #10 End
LOAD D2 0.0005; InlineFunc[int Min(int, int)] Params Start
PUSHVARGR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
SUBV D2 1
PUSHVARGR D2; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
STORE D2 0.0005
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D3 0.0003
DEALLOCATEMEMR D3
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_LoadIntoBuffer(char32[], int, int)] Body End
PUSHV 0; Func[void __Tango_BeginAdvancing()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0
SETV D2 3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
PUSHV 9; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POP D5
RETURNFUNC; Func[void __Tango_BeginAdvancing()] Body End
SETR D4 SP2; Func[int __Tango_GetCurrStyleData(int)] Body Start
SETR D2 GD3; return Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrStyleData(int)] Body End
SETR D4 SP2; Func[int __Tango_BoolToInt(bool)] Body Start
LOAD D2 0; if() #184 Test
COMPAREV D2 0
GOTOCMP 3797 ==; Test 'if'
SETV D2 1; return Start AND if() #184 Body Start
GOTO 3798; return End AND if() #184 Body End
SETV D2 0; return Start AND if() #184 Else Start
POP D5; return End AND if() #184 Else End
RETURNFUNC; Func[int __Tango_BoolToInt(bool)] Body End
SETR D4 SP2; Func[bool __Tango_CharacterWillFit(char32, int[], int, int)] Body Start
LOAD D2 0; return Start
PUSHR D2
LOAD D2 0.0001
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3820; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
POP D3
COMPARER D3 D2
SETCMP D2 I>=
POPARGS D5 0.0004; return End
RETURNFUNC; Func[bool __Tango_CharacterWillFit(char32, int[], int, int)] Body End
SETR D4 SP2; Func[int __Tango_GetCharacterWidth(char32, int[])] Body Start
LOAD D2 0; if() #209 Test
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3834 ==; Test 'if'
LOAD D2 0; return Start AND if() #209 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 6
GOTO 3840; return End AND if() #209 Body End
LOAD D2 0; return Start AND if() #209 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 -26
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End AND if() #209 Else End
RETURNFUNC; Func[int __Tango_GetCharacterWidth(char32, int[])] Body End
PUSHV 0; Func[int __Tango_GetSlotState(int)] Body Start
SETR D4 SP2
LOAD D2 0.0001
MULTV D2 24
STORE D2 0
SETR D2 GD5; return Start
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_GetSlotState(int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetSlotFlags(int)] Body Start
SETR D4 SP2
LOAD D2 0.0002
MULTV D2 24
STORE D2 0.0001
SETR D2 GD5; if() #512 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -10
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3871 ==; Test 'if'
SETV D2 0; return Start AND if() #512 Body Start
GOTO 3884; return End AND if() #512 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
MULTV D2 48
STORE D2 0
SETR D2 GD3; return Start
PUSHR D2
LOAD D2 0
ADDV D2 35
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_GetSlotFlags(int)] Body End
SETR D4 SP2; Func[void __Tango_ClearAlternateColor()] Body Start
PUSHR D4
PUSHV 10; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV -1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 11; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV -1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 12; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
RETURNFUNC; Func[void __Tango_ClearAlternateColor()] Body End
SETR D4 SP2; Func[void __Tango_SetCurrSlotData(int, int)] Body Start
LOAD D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_SetCurrSlotData(int, int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_CountDown(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
STOREV 1 0
LOAD D2 0.0002; if() #465 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3936 ==; Test 'if'
LOAD D2 0; if() #465 Body Start
MULTV D2 5
STORE D2 0; if() #465 Body End
PUSHVARGV 0; InlineFunc[int Max(int, int)] Params Start
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
SUBR D3 D2
PUSHVARGR D3; InlineFunc[int Max(int, int)] Params End
MAXVARG; InlineFunc[int Max(int, int)] Body
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_CountDown(int)] Body End
SETR D4 SP2; Func[void __Tango_Delete(int, int)] Body Start
LOAD D2 0.0001; for() #134 LoopTest
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 3982 ==; for() #134 TestFail?
SETV D2 -1; for() #134 Body Start
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #134 Body End
LOAD D2 0.0001; for() #134 LoopIncrement
ADDV D2 1
STORE D2 0.0001
GOTO 3961; for() #134 End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_Delete(int, int)] Body End
PUSHV 0; Func[void __Tango_DrawColorBackdrop(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
SETR D2 GD3; if() #187 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3999 ==; Test 'if'
SETV D2 128; if() #187 Body Start
STORE D2 0
GOTO 4001; if() #187 Body End
SETV D2 64; if() #187 Else Start
STORE D2 0; if() #187 Else End
PUSHV 6; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0002
ADDV D2 1
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
PUSHR D2
LOAD D2 0.0002
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
MULTV D2 16
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
LOAD D2 0
PUSHR D2; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_DrawColorBackdrop(int, int, int)] Body End
PUSHV 0; Func[void __Tango_DrawComboBackdrop(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
SETR D2 GD3; if() #188 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4073 ==; Test 'if'
SETV D2 128; if() #188 Body Start
STORE D2 0
GOTO 4075; if() #188 Body End
SETV D2 64; if() #188 Else Start
STORE D2 0; if() #188 Else End
PUSHV 6; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0005
PUSHV 1
LOAD D2 0
PUSHR D2; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBOR; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0016; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_DrawComboBackdrop(int, int, int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0; for() #135 setup
LOAD D2 0.0004; for() #135 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 4468 ==; for() #135 TestFail?
LOAD D2 0.0004; if() #189 Test AND for() #135 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 4
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4290 ==; Test 'if'
LOAD D2 0.0004; if() #190 Test AND if() #189 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
GOTOCMP 4155 ==
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
GOTOCMP 4155 ==
SETV D2 0
GOTO 4156
SETV D2 1
COMPAREV D2 0
GOTOCMP 4161 ==; Test 'if'
SETV D2 128; if() #190 Body Start
STORE D2 0.0001
GOTO 4163; if() #190 Body End
SETV D2 64; if() #190 Else Start
STORE D2 0.0001; if() #190 Else End
LOAD D2 0.0004; if() #191 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4231 ==; Test 'if'
PUSHV 6; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start AND if() #191 Body Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0004
PUSHV 1
LOAD D2 0.0001
PUSHR D2; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWTILER; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0015; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
GOTO 4464; if() #191 Body End
PUSHV 6; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start AND if() #191 Else Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0005
PUSHV 1
LOAD D2 0.0001
PUSHR D2; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBOR; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0016; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End AND if() #191 Else End
GOTO 4464; if() #189 Body End
LOAD D2 0.0004; if() #192 Test AND if() #189 Else Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 6
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4405 ==; Test 'if'
LOAD D2 0.0004; if() #193 Test AND if() #192 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4311 ==; Test 'if'
SETV D2 128; if() #193 Body Start
STORE D2 0.0001
GOTO 4313; if() #193 Body End
SETV D2 64; if() #193 Else Start
STORE D2 0.0001; if() #193 Else End
PUSHV 6; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
ADDV D2 1
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
ADDV D2 1
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
MULTV D2 16
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
LOAD D2 0.0001
PUSHR D2; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
GOTO 4464; if() #192 Body End
PUSHR D4; if() #192 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Params End
CALLFUNC 0.4470; UsrFunc[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Call
POP D4; if() #192 Else End
LOAD D2 0; if() #189 Else End AND for() #135 Body End AND for() #135 LoopIncrement
ADDV D2 7
STORE D2 0
GOTO 4121; for() #135 End
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Body End
PUSHV 0; Func[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Body Start
SETR D4 SP2
LOAD D2 0.0007; if() #194 Test
COMPAREV D2 9
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4491 ==; Test 'if'
LOAD D2 0.0002; if() #194 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0006; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params End
CALLFUNC 0.1221; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002
GOTO 4510; if() #194 Body End
LOAD D2 0.0007; if() #469 Test AND if() #194 Else Start
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4510 ==; Test 'if'
LOAD D2 0.0002; if() #469 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0006; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params End
CALLFUNC 0.1221; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Call
POP D4
MULTV D2 0.5000
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002; if() #469 Body End
STOREV 0 0; if() #194 Else End AND for() #136 setup
LOAD D2 0.0006; for() #136 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 4550 ==; for() #136 TestFail?
LOAD D2 0.0002; for() #136 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2
PUSHV 0
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 6; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params End
CALLFUNC 0.4552; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0.0002; for() #136 Body End
LOAD D2 0; for() #136 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 4511; for() #136 End
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Body End
PUSHV 0; Func[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Body Start
SETR D4 SP2
LOAD D2 0.0008; if() #583 Test
COMPAREV D2 32
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 4667 ==; Test 'if'
LOAD D2 0.0007; if() #286 Test AND if() #583 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
GOTOCMP 4573 ==
LOAD D2 0.0007
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 1
GOTOCMP 4573 ==
SETV D2 0
GOTO 4574
SETV D2 1
COMPAREV D2 0
GOTOCMP 4642 ==; Test 'if'
LOAD D2 0.0008; if() #287 Test AND if() #286 Body Start
COMPAREV D2 255
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4606 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, int, int)] Params Start AND if() #287 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0007
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2
LOAD D2 0.0006
MULTV D2 16
PUSHR D2
LOAD D2 0.0005
POP D3
ADDR D2 D3
PUSHR D2
PUSHARGSV -1 0.0003
LOAD D2 0.0008
PUSHR D2
PUSHV 128; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, int, int)] Params End
DRAWCHARR; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, int, int)] Body Start
POPARGS D5 0.0010; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, int, int)] Body End
GOTO 4667; if() #287 Body End
LOAD D2 0.0007; if() #584 Test AND if() #287 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4667 ==; Test 'if'
LOAD D2 0.0007; if() #584 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 3
PUSHR D2
LOAD D2 0.0004
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0008
POP D3
ADDR D2 D3
SUBV D2 256
STORE D2 0
LOAD D2 0.0001; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0006
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params End
FASTTILER; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body End AND if() #584 Body End
GOTO 4667; if() #287 Else End AND if() #286 Body End
LOAD D2 0.0001; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params Start AND if() #286 Else Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0007
PUSHR D2
POP D0
READPODARRAYV D2 3
PUSHR D2
LOAD D2 0.0004
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0008
POP D3
ADDR D2 D3
ADDV D2 -33
PUSHR D2
LOAD D2 0.0006
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params End
FASTTILER; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body End AND if() #286 Else End
PUSHR D4; if() #583 Body End AND return Start
LOAD D2 0.0008; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0007
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3820; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
POPARGS D5 0.0009; return End
RETURNFUNC; Func[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Body End
PUSHV 0; Func[void __Tango_DrawMenuScrollIndicators(int, int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0
PUSHR D4; if() #471 Test
CALLFUNC 0.4775; UsrFunc[bool __Tango_MenuCanScrollUp()] Call
POP D4
COMPAREV D2 0
GOTOCMP 4728 ==; Test 'if'
PUSHV 6; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params Start AND if() #471 Body Start
LOAD D2 0.0002
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 25
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 26
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 23
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 24
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params End
FASTCOMBOR; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body End AND if() #471 Body End
PUSHR D4; if() #472 Test
CALLFUNC 0.4815; UsrFunc[bool __Tango_MenuCanScrollDown()] Call
POP D4
COMPAREV D2 0
GOTOCMP 4773 ==; Test 'if'
PUSHV 6; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params Start AND if() #472 Body Start
LOAD D2 0.0002
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 29
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 30
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 27
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 28
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params End
FASTCOMBOR; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body End AND if() #472 Body End
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_DrawMenuScrollIndicators(int, int)] Body End
PUSHV 0; Func[bool __Tango_MenuCanScrollUp()] Body Start
SETR D4 SP2
SETR D2 GD2; for() #149 setup
PUSHR D2
POP D0
READPODARRAYV D2 23
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #149 LoopTest
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 4812 ==; for() #149 TestFail?
SETR D2 GD2; if() #544 Test AND for() #149 Body Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 4808 ==; Test 'if'
SETV D2 1; return Start AND if() #544 Body Start
GOTO 4813; return End AND if() #544 Body End
LOAD D2 0; for() #149 Body End AND for() #149 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 4783; for() #149 End
SETV D2 0; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_MenuCanScrollUp()] Body End
PUSHV 0; Func[bool __Tango_MenuCanScrollDown()] Body Start
SETR D4 SP2
SETR D2 GD2; for() #148 setup
PUSHR D2
POP D0
READPODARRAYV D2 23
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #148 LoopTest
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 4852 ==; for() #148 TestFail?
SETR D2 GD2; if() #543 Test AND for() #148 Body Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 26
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 4848 ==; Test 'if'
SETV D2 1; return Start AND if() #543 Body Start
GOTO 4853; return End AND if() #543 Body End
LOAD D2 0; for() #148 Body End AND for() #148 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 4823; for() #148 End
SETV D2 0; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_MenuCanScrollDown()] Body End
PUSHARGSV 0 0.0008; Func[void __Tango_DrawMoreIcon()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0007
STOREV 0 0.0006
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0005
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 35
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
SETR D2 GD5; if() #195 Test
PUSHR D2
LOAD D2 0.0007
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4888 ==; Test 'if'
SETV D2 1; if() #195 Body Start
STORE D2 0.0006
GOTO 4917; if() #195 Body End
SETR D2 GD5; if() #473 Test AND if() #195 Else Start
PUSHR D2
LOAD D2 0.0007
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4917 ==; Test 'if'
LOAD D2 0.0004; if() #474 Test AND if() #473 Body Start
ANDV D2 128
COMPAREV D2 0
GOTOCMP 4912 ==
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 18
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
GOTOCMP 4912 !=
SETV D2 0
GOTO 4913
SETV D2 1
COMPAREV D2 0
GOTOCMP 4917 ==; Test 'if'
SETV D2 1; if() #474 Body Start
STORE D2 0.0006; if() #474 Body End
LOAD D2 0.0006; if() #473 Body End AND if() #195 Else End AND unless() #475 Test
COMPAREV D2 0
GOTOCMP 4983 ==; Test 'unless' AND return (Void) AND unless() #475 Body
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 31
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
LOAD D2 0.0003; if() #476 Test
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4983 !=; Test 'if' AND return (Void) AND if() #476 Body
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 32
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 33
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0001
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 7
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 34
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0
PUSHV 6; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params End
FASTCOMBOR; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body End
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_DrawMoreIcon()] Body End
PUSHV 0; Func[void __Tango_DrawTileBackdrop(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
SETR D2 GD3; if() #196 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5000 ==; Test 'if'
SETV D2 128; if() #196 Body Start
STORE D2 0
GOTO 5002; if() #196 Body End
SETV D2 64; if() #196 Else Start
STORE D2 0; if() #196 Else End
PUSHV 6; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0004
PUSHV 1
LOAD D2 0
PUSHR D2; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWTILER; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0015; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_DrawTileBackdrop(int, int, int)] Body End
PUSHARGSV 0 0.0007; Func[void __Tango_TransferText(int, int, int, int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0.0006
LOAD D2 0.0008
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0005
LOAD D2 0.0007
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 7
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0002
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 8
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 9
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD5; if() #630 Test
PUSHR D2
LOAD D2 0.0010
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5132 ==; Test 'if'
LOAD D2 0; if() #630 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 2
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0; if() #630 Body End
PUSHARGSV 6 0.0002; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
PUSHR D2
PUSHV 0
PUSHV 1; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params End
BITMAPR; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body End
SETR D2 GD3; if() #631 Test
PUSHR D2
LOAD D2 0.0009
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 256
COMPAREV D2 0
GOTOCMP 5172 ==
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
GOTOCMP 5172 ==
SETV D2 1
GOTO 5173
SETV D2 0
COMPAREV D2 0
GOTOCMP 5262 ==; Test 'if'
SETR D2 GD16; if() #631 Body Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 16
STORE D2 0.0002
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHR D4
PUSHV 4; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0003
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
SUBR D3 D2
SETR D2 D3
DIVV D2 2
POP D3
ADDR D2 D3
STORE D2 0.0005
LOAD D2 0.0004
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
ADDR D2 D3
STORE D2 0.0004
PUSHARGSV 6 0.0002; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
PUSHV 0
PUSHV 1; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params End
BITMAPR; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body End AND if() #631 Body End
POPARGS D5 0.0011
RETURNFUNC; Func[void __Tango_TransferText(int, int, int, int)] Body End
SETR D4 SP2; Func[int __Tango_EatSpaces(char32[], int)] Body Start
LOAD D2 0.0001; while() #6 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 32
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5278 ==; Test 'while'
LOAD D2 0; while() #6 Body Start
ADDV D2 1
STORE D2 0; while() #6 Body End
GOTO 5265; while() #6 End
LOAD D2 0; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_EatSpaces(char32[], int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_FindDestStart(bool)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0001
LOAD D2 0.0002; unless() #480 Test
COMPAREV D2 0
GOTOCMP 5293 !=; Test 'unless'
LOAD D2 0.0001; return Start AND unless() #480 Body Start
GOTO 5322; return End AND unless() #480 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
SUBV D2 1
STORE D2 0
LOAD D2 0.0001; while() #7 Test
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
GOTOCMP 5314 >=
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
GOTOCMP 5314 ==
SETV D2 1
GOTO 5315
SETV D2 0
COMPAREV D2 0
GOTOCMP 5321 ==; Test 'while'
LOAD D2 0.0001; while() #7 Body Start
ADDV D2 1
STORE D2 0.0001; while() #7 Body End
GOTO 5299; while() #7 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_FindDestStart(bool)] Body End
PUSHV 0; Func[int __Tango_FindSrcStart(char32[], char32)] Body Start
SETR D4 SP2
LOAD D2 0.0001; if() #481 Test
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 5333 ==; Test 'if'
SETV D2 0; return Start AND if() #481 Body Start
GOTO 5363; return End AND if() #481 Body End
STOREV 1 0; for() #137 setup
LOAD D2 0.0002; for() #137 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 5362 ==; for() #137 TestFail?
LOAD D2 0.0002; if() #482 Test AND for() #137 Body Start
PUSHR D2
LOAD D2 0
SUBV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5358 ==; Test 'if'
LOAD D2 0; return Start AND if() #482 Body Start
GOTO 5363; return End AND if() #482 Body End
LOAD D2 0; for() #137 Body End AND for() #137 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5334; for() #137 End
SETV D2 0; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_FindSrcStart(char32[], char32)] Body End
PUSHARGSV 0 0.0006; Func[int __Tango_FloatToASCII(char32[], int, bool)] Body Start
SETR D4 SP2
STOREV 0 0.0005
STOREV 100000 0.0004
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0007; if() #485 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5388 ==; Test 'if'
SETV D2 45; if() #485 Body Start
PUSHR D2
LOAD D2 0.0008
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
SETV D2 1
STORE D2 0.0005
LOAD D2 0.0007
SUBV2 0 D2
STORE D2 0.0007; if() #485 Body End
STOREV 0 0; for() #139 setup
LOAD D2 0; for() #139 LoopTest
COMPAREV D2 10
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5523 ==; for() #139 TestFail?
LOAD D2 0.0007; for() #139 Body Start
PUSHR D2
LOAD D2 0.0004
POP D3
DIVR D3 D2
SETR D2 D3
LSHIFTV D2 0
MODV D2 10
STORE D2 0.0003
LOAD D2 0.0004; if() #200 Test
COMPAREV D2 1
GOTOCMP 5411 >=
LOAD D2 0.0006
COMPAREV D2 0
GOTOCMP 5411 !=
SETV D2 0
GOTO 5412
SETV D2 1
COMPAREV D2 0
GOTOCMP 5441 ==; Test 'if'
LOAD D2 0.0003; if() #486 Test AND if() #200 Body Start
COMPAREV D2 0
GOTOCMP 5422 >
LOAD D2 0.0002
COMPAREV D2 0
GOTOCMP 5422 !=
SETV D2 0
GOTO 5423
SETV D2 1
COMPAREV D2 0
GOTOCMP 5484 ==; Test 'if'
LOAD D2 0.0003; if() #486 Body Start
ADDV D2 48
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
SETV D2 1
STORE D2 0.0002; if() #486 Body End
GOTO 5484; if() #200 Body End
LOAD D2 0.0003; if() #201 Test AND if() #200 Else Start
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5450 ==; Test 'if'
LOAD D2 0.0001; if() #201 Body Start
ADDV D2 1
STORE D2 0.0001
GOTO 5484; if() #201 Body End
LOAD D2 0.0001; for() #140 LoopTest AND if() #201 Else Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 5471 ==; for() #140 TestFail?
SETV D2 48; for() #140 Body Start
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; for() #140 Body End
LOAD D2 0.0001; for() #140 LoopIncrement
SUBV D2 1
STORE D2 0.0001
GOTO 5450; for() #140 End
LOAD D2 0.0003
ADDV D2 48
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #201 Else End
LOAD D2 0.0007; if() #200 Else End
PUSHR D2
LOAD D2 0.0004
POP D3
MODR D3 D2
SETR D2 D3
STORE D2 0.0007
LOAD D2 0.0004
DIVV D2 10
STORE D2 0.0004
LOAD D2 0.0004; if() #202 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5502 ==; Test 'if'
SETV D2 1; if() #202 Body Start
STORE D2 0.0002
GOTO 5519; if() #202 Body End
LOAD D2 0.0004; if() #487 Test AND if() #202 Else Start
COMPAREV D2 0.1000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5519 ==; Test 'if'
SETV D2 46; if() #487 Body Start
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #487 Body End
LOAD D2 0; if() #202 Else End AND for() #139 Body End AND for() #139 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5389; for() #139 End
SETV D2 0
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005; return Start
POPARGS D5 0.0009; return End
RETURNFUNC; Func[int __Tango_FloatToASCII(char32[], int, bool)] Body End
SETR D4 SP2; Func[void __Tango_FuncActivateMenu(int, int, int)] Body Start
PUSHR D4
LOAD D2 0.0001; UsrFunc[void Tango_SetMenuFlags(int)] Params Start
PUSHR D2; UsrFunc[void Tango_SetMenuFlags(int)] Params End
CALLFUNC 0.0335; UsrFunc[void Tango_SetMenuFlags(int)] Call
PEEK D4
CALLFUNC 0.0081; UsrFunc[void Tango_ActivateMenu()] Call
PEEK D4
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 5; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 -20000
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
LOAD D2 0; UsrFunc[void Tango_SetMenuCursorPosition(int)] Params Start
PUSHR D2; UsrFunc[void Tango_SetMenuCursorPosition(int)] Params End
CALLFUNC 0.1742; UsrFunc[void Tango_SetMenuCursorPosition(int)] Call
POP D4
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_FuncActivateMenu(int, int, int)] Body End
SETR D4 SP2; Func[void __Tango_FuncAddMenuItem(int, int)] Body Start
SETV D2 -10000
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_FuncAddMenuItem(int, int)] Body End
PUSHV 0; Func[void __Tango_FuncClose()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #488 Test
ANDV D2 512
COMPAREV D2 0
GOTOCMP 5599 ==; Test 'if'
PUSHR D4; if() #488 Body Start
CALLFUNC 0.0970; UsrFunc[void __Tango_DecScreenFreeze()] Call
POP D4; if() #488 Body End
PUSHR D4
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
POP D5
RETURNFUNC; Func[void __Tango_FuncClose()] Body End
SETR D4 SP2; Func[void __Tango_FuncGoto(int)] Body Start
PUSHR D4
PUSHV 18; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
CALLFUNC 0.3715; UsrFunc[void __Tango_BeginAdvancing()] Call
POP D4
POP D5
RETURNFUNC; Func[void __Tango_FuncGoto(int)] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_FuncNumber(int, int)] Body Start
SETR D4 SP2
ALLOCATEMEMV D2 13 0
STORE D2 0.0002
STOREV 0 0.0001
LOAD D2 0.0004; if() #203 Test
PUSHR D2
LOAD D2 0.0004
LSHIFTV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5639 ==; Test 'if'
LOAD D2 0.0002; InlineFunc[int itoa(char32[], int)] Params Start AND if() #203 Body Start
PUSHR D2
LOAD D2 0.0004
SETR D3 D2; InlineFunc[int itoa(char32[], int)] Params End
POP D2; InlineFunc[int itoa(char32[], int)] Body Start
ITOA D2 D3; InlineFunc[int itoa(char32[], int)] Body End
STORE D2 0.0001
GOTO 5648; if() #203 Body End
PUSHR D4; if() #203 Else Start
LOAD D2 0.0002; UsrFunc[int __Tango_FloatToASCII(char32[], int, bool)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_FloatToASCII(char32[], int, bool)] Params End
CALLFUNC 0.5365; UsrFunc[int __Tango_FloatToASCII(char32[], int, bool)] Call
POP D4
STORE D2 0.0001; if() #203 Else End
STOREV 0 0; for() #141 setup
LOAD D2 0; for() #141 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5677 ==; for() #141 TestFail?
LOAD D2 0.0002; for() #141 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0003
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0003
ADDV D2 1
STORE D2 0.0003; for() #141 Body End
LOAD D2 0; for() #141 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5649; for() #141 End
LOAD D3 0.0002
DEALLOCATEMEMR D3
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_FuncNumber(int, int)] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_FuncOrdinal(int, int)] Body Start
SETR D4 SP2
ALLOCATEMEMV D2 9 0
STORE D2 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0005
LSHIFTV D2 0
STORE D2 0.0005
LOAD D2 0.0003; InlineFunc[int itoa(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0005
SETR D3 D2; InlineFunc[int itoa(char32[], int)] Params End
POP D2; InlineFunc[int itoa(char32[], int)] Body Start
ITOA D2 D3; InlineFunc[int itoa(char32[], int)] Body End
STORE D2 0.0002
PUSHR D4
LOAD D2 0.0005; UsrFunc[int __Tango_GetOrdinal(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetOrdinal(int)] Params End
CALLFUNC 0.5833; UsrFunc[int __Tango_GetOrdinal(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0001; if() #204 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5728 ==; Test 'if'
SETV D2 115; if() #204 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 116
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 5797; if() #204 Body End
LOAD D2 0.0001; if() #205 Test AND if() #204 Else Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5753 ==; Test 'if'
SETV D2 110; if() #205 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 100
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 5797; if() #205 Body End
LOAD D2 0.0001; if() #206 Test AND if() #205 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5778 ==; Test 'if'
SETV D2 114; if() #206 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 100
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 5797; if() #206 Body End
SETV D2 116; if() #206 Else Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 104
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #206 Else End
LOAD D2 0.0002; if() #205 Else End AND if() #204 Else End
ADDV D2 2
STORE D2 0.0002
STOREV 0 0; for() #142 setup
LOAD D2 0; for() #142 LoopTest
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5829 ==; for() #142 TestFail?
LOAD D2 0.0003; for() #142 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0004
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0004
ADDV D2 1
STORE D2 0.0004; for() #142 Body End
LOAD D2 0; for() #142 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5801; for() #142 End
LOAD D3 0.0003
DEALLOCATEMEMR D3
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_FuncOrdinal(int, int)] Body End
SETR D4 SP2; Func[int __Tango_GetOrdinal(int)] Body Start
LOAD D2 0; if() #510 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5842 ==; Test 'if'
LOAD D2 0; if() #510 Body Start
SUBV2 0 D2
STORE D2 0; if() #510 Body End
LOAD D2 0
MODV D2 100
STORE D2 0
LOAD D2 0; if() #511 Test
COMPAREV D2 11
GOTOCMP 5856 ==
LOAD D2 0
COMPAREV D2 12
GOTOCMP 5856 ==
LOAD D2 0
COMPAREV D2 13
GOTOCMP 5856 ==
SETV D2 0
GOTO 5857
SETV D2 1
COMPAREV D2 0
GOTOCMP 5861 ==; Test 'if'
SETV D2 0; return Start AND if() #511 Body Start
GOTO 5863; return End AND if() #511 Body End
LOAD D2 0; return Start
MODV D2 10
POP D5; return End
RETURNFUNC; Func[int __Tango_GetOrdinal(int)] Body End
SETR D4 SP2; Func[void __Tango_FuncPressA()] Body Start
PUSHR D4; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHV 14; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
PUSHR D4
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 8; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
RETURNFUNC; Func[void __Tango_FuncPressA()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_FuncSaveName(int)] Body Start
SETR D4 SP2
ALLOCATEMEMV D2 9 0
STORE D2 0.0001
LOAD D2 0.0001; InlineFunc[void Game::GetSaveName(char32[])] Params
GETSAVENAME D2; InlineFunc[void Game::GetSaveName(char32[])] Body
STOREV 0 0; for() #143 setup
LOAD D2 0.0001; for() #143 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 5913 ==; for() #143 TestFail?
LOAD D2 0.0001; for() #143 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0002
ADDV D2 1
STORE D2 0.0002; for() #143 Body End
LOAD D2 0; for() #143 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5884; for() #143 End
LOAD D3 0.0001
DEALLOCATEMEMR D3
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_FuncSaveName(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_FuncString(char32[], int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #489 Test
LOAD D2 0.0003; UsrFunc[bool __Tango_ValidateString(char32[])] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateString(char32[])] Params End
CALLFUNC 0.5981; UsrFunc[bool __Tango_ValidateString(char32[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 5942 !=; Test 'unless'
PUSHR D4; unless() #489 Body Start
PUSHV 205; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0003
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 5979; return (Void) AND unless() #489 Body End
LOAD D2 0.0003; InlineFunc[int strlen(char32[])] Params Start AND InlineFunc[int Min(int, int)] Params Start
SETR D3 D2; InlineFunc[int strlen(char32[])] Params End
STRINGLENGTH D2 D3; InlineFunc[int strlen(char32[])] Body
PUSHVARGR D2
PUSHVARGV 16; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
STORE D2 0.0001
STOREV 0 0; for() #144 setup
LOAD D2 0; for() #144 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5979 ==; for() #144 TestFail?
LOAD D2 0.0003; for() #144 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #144 Body End
LOAD D2 0; for() #144 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5950; for() #144 End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_FuncString(char32[], int)] Body End
SETR D4 SP2; Func[bool __Tango_ValidateString(char32[])] Body Start
LOAD D2 0; InlineFunc[bool IsValidArray(char32[])] Params AND unless() #403 Test
ISVALIDARRAY D2; InlineFunc[bool IsValidArray(char32[])] Body
COMPAREV D2 0
GOTOCMP 5989 !=; Test 'unless'
SETV D2 0; return Start AND unless() #403 Body Start
GOTO 5998; return End
GOTO 5997; unless() #403 Body End
LOAD D2 0; InlineFunc[int SizeOfArray(char32[])] Params AND if() #669 Test AND unless() #403 Else Start
ARRAYSIZE D2; InlineFunc[int SizeOfArray(char32[])] Body
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 5997 ==; Test 'if'
SETV D2 0; return Start AND if() #669 Body Start
GOTO 5998; return End AND if() #669 Body End
SETV D2 1; unless() #403 Else End AND return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_ValidateString(char32[])] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_FuncSync(int[])] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0002; if() #207 Test
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6027 ==; Test 'if'
PUSHR D4; if() #207 Body Start
LOAD D2 0.0002; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params End
CALLFUNC 0.1881; UsrFunc[bool __Tango_FindSyncingStrings(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0
GOTO 6048; if() #207 Body End
PUSHR D4; if() #207 Else Start
LOAD D2 0.0002; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params End
CALLFUNC 0.1881; UsrFunc[bool __Tango_FindSyncingStrings(int)] Call
PEEK D4
LOAD D2 0.0002; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params End
CALLFUNC 0.1881; UsrFunc[bool __Tango_FindSyncingStrings(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0; if() #207 Else End
LOAD D2 0.0001; if() #208 Test
COMPAREV D2 0
GOTOCMP 6053 ==; Test 'if'
SETV D2 0; return Start AND if() #208 Body Start
GOTO 6064; return End AND if() #208 Body End
PUSHR D4; if() #208 Else Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 6; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 1; return Start
POPARGS D5 0.0003; return End AND if() #208 Else End
RETURNFUNC; Func[int __Tango_FuncSync(int[])] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_FuncTab(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0
SETR D2 GD16
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_FuncTab(int)] Body End
PUSHV 0; Func[int __Tango_GetCurrFontData(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 6
STORE D2 0
LOAD D2 0; return Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_GetCurrFontData(int)] Body End
SETR D4 SP2; Func[int __Tango_GetCurrSlotDefData(int)] Body Start
SETR D2 GD16; return Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrSlotDefData(int)] Body End
PUSHV 0; Func[int __Tango_GetCurrentCSet()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 10; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #491 Test
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 6142 ==; Test 'if'
LOAD D2 0; return Start AND if() #491 Body Start
GOTO 6158; return End AND if() #491 Body End
PUSHR D4
PUSHV 8; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #492 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6157 ==; Test 'if'
PUSHR D4; if() #492 Body Start
PUSHV 10; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0; if() #492 Body End
LOAD D2 0; return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentCSet()] Body End
PUSHV 0; Func[int __Tango_GetCurrentColor()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 11; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #493 Test
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 6174 ==; Test 'if'
LOAD D2 0; return Start AND if() #493 Body Start
GOTO 6190; return End AND if() #493 Body End
PUSHR D4
PUSHV 9; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #494 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6189 ==; Test 'if'
PUSHR D4; if() #494 Body Start
PUSHV 11; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0; if() #494 Body End
LOAD D2 0; return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentColor()] Body End
PUSHV 0; Func[int __Tango_GetCurrentSFX()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 14; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #495 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6209 ==; Test 'if'
PUSHR D4; if() #495 Body Start
PUSHV 13; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0; if() #495 Body End
LOAD D2 0; return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentSFX()] Body End
PUSHV 0; Func[int __Tango_GetCurrentSpeed()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 13; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #213 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6230 ==; Test 'if'
PUSHR D4; return Start AND if() #213 Body Start
PUSHV 12; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
GOTO 6238; return End
GOTO 6237; if() #213 Body End
LOAD D2 0; if() #496 Test AND if() #213 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6237 ==; Test 'if'
SETV D2 0; return Start AND if() #496 Body Start
GOTO 6238; return End AND if() #496 Body End
LOAD D2 0; if() #213 Else End AND return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentSpeed()] Body End
SETR D4 SP2; Func[int __Tango_GetCurrentTileOffset()] Body Start
PUSHR D4; return Start
PUSHV 12; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
RETURNFUNC; return End AND Func[int __Tango_GetCurrentTileOffset()] Body End
PUSHV 0; Func[int __Tango_GetLineHeight()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 6
STORE D2 0
LOAD D2 0; return Start
PUSHR D2
POP D0
READPODARRAYV D2 4
PUSHR D2
LOAD D2 0
PUSHR D2
POP D0
READPODARRAYV D2 5
POP D3
ADDR D2 D3
POP D5; return End
RETURNFUNC; Func[int __Tango_GetLineHeight()] Body End
PUSHARGSV 0 0.0012; Func[int __Tango_GetNextMenuPos(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #497 Test
CALLFUNC 0.1132; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
COMPAREV D2 0
GOTOCMP 6275 !=; Test 'unless'
SETV D2 0; return Start AND unless() #497 Body Start
GOTO 6698; return End AND unless() #497 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0.0011
SETR D2 GD2
PUSHR D2
LOAD D2 0.0011
MULTV D2 3
ADDV D2 34
POP D0
READPODARRAYR D2 D2
STORE D2 0.0010
SETR D2 GD2
PUSHR D2
LOAD D2 0.0011
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
STOREV -1 0.0008
STOREV 0 0.0007
STOREV 0 0.0006
STOREV 0 0.0005
STOREV 0 0.0004
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
SETR D2 GD2; for() #146 setup
PUSHR D2
POP D0
READPODARRAYV D2 23
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #146 LoopTest
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 6690 ==; for() #146 TestFail?
LOAD D2 0; if() #498 Test AND for() #146 Body Start
PUSHR D2
LOAD D2 0.0011
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6686 !=; Test 'if' AND continue 1; AND if() #498 Body
SETV D2 0
STORE D2 0.0001
SETR D2 GD2
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
POP D0
READPODARRAYR D2 D2
STORE D2 0.0005
SETR D2 GD2
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
LOAD D2 0.0012; if() #214 Test
COMPAREV D2 0
GOTOCMP 6351 ==
LOAD D2 0.0012
COMPAREV D2 1
GOTOCMP 6351 ==
SETV D2 0
GOTO 6352
SETV D2 1
COMPAREV D2 0
GOTOCMP 6516 ==; Test 'if'
LOAD D2 0.0004; if() #499 Test AND if() #214 Body Start
PUSHR D2
LOAD D2 0.0009
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6686 !=; Test 'if' AND continue 1; AND if() #499 Body
LOAD D2 0.0005; InlineFunc[int Abs(int)] Params Start
PUSHR D2
LOAD D2 0.0010
POP D3
SUBR D3 D2
SETR D2 D3; InlineFunc[int Abs(int)] Params End
ABS D2; InlineFunc[int Abs(int)] Body
STORE D2 0.0003
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0009
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002
LOAD D2 0.0008; if() #215 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6385 ==; Test 'if'
SETV D2 1; if() #215 Body Start
STORE D2 0.0001
GOTO 6677; if() #215 Body End
LOAD D2 0.0012; if() #216 Test AND if() #215 Else Start
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6453 ==; Test 'if'
LOAD D2 0.0006; if() #217 Test AND if() #216 Body Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 6424 ==; Test 'if'
LOAD D2 0.0002; if() #500 Test AND if() #217 Body Start
COMPAREV D2 0
GOTOCMP 6418 <
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6418 >
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6416 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6418 <
SETV D2 0
GOTO 6419
SETV D2 1
COMPAREV D2 0
GOTOCMP 6677 ==; Test 'if'
SETV D2 1; if() #500 Body Start
STORE D2 0.0001; if() #500 Body End
GOTO 6677; if() #217 Body End
LOAD D2 0.0002; if() #501 Test AND if() #217 Else Start
COMPAREV D2 0
GOTOCMP 6433 >=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6447 >
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6445 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6447 <
SETV D2 0
GOTO 6448
SETV D2 1
COMPAREV D2 0
GOTOCMP 6677 ==; Test 'if'
SETV D2 1; if() #501 Body Start
STORE D2 0.0001; if() #501 Body End
GOTO 6677; if() #217 Else End AND if() #216 Body End
LOAD D2 0.0006; if() #218 Test AND if() #216 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6487 ==; Test 'if'
LOAD D2 0.0002; if() #502 Test AND if() #218 Body Start
COMPAREV D2 0
GOTOCMP 6481 >
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6481 <
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6479 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6481 <
SETV D2 0
GOTO 6482
SETV D2 1
COMPAREV D2 0
GOTOCMP 6677 ==; Test 'if'
SETV D2 1; if() #502 Body Start
STORE D2 0.0001; if() #502 Body End
GOTO 6677; if() #218 Body End
LOAD D2 0.0002; if() #503 Test AND if() #218 Else Start
COMPAREV D2 0
GOTOCMP 6496 <=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6510 <
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6508 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6510 <
SETV D2 0
GOTO 6511
SETV D2 1
COMPAREV D2 0
GOTOCMP 6677 ==; Test 'if'
SETV D2 1; if() #503 Body Start
STORE D2 0.0001; if() #503 Body End
GOTO 6677; if() #218 Else End AND if() #216 Else End AND if() #215 Else End AND if() #214 Body End
LOAD D2 0.0005; if() #504 Test AND if() #214 Else Start
PUSHR D2
LOAD D2 0.0010
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6686 !=; Test 'if' AND continue 1; AND if() #504 Body
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0010
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0003
LOAD D2 0.0004; InlineFunc[int Abs(int)] Params Start
PUSHR D2
LOAD D2 0.0009
POP D3
SUBR D3 D2
SETR D2 D3; InlineFunc[int Abs(int)] Params End
ABS D2; InlineFunc[int Abs(int)] Body
STORE D2 0.0002
LOAD D2 0.0008; if() #219 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6547 ==; Test 'if'
SETV D2 1; if() #219 Body Start
STORE D2 0.0001
GOTO 6677; if() #219 Body End
LOAD D2 0.0012; if() #220 Test AND if() #219 Else Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6615 ==; Test 'if'
LOAD D2 0.0007; if() #221 Test AND if() #220 Body Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 6586 ==; Test 'if'
LOAD D2 0.0003; if() #505 Test AND if() #221 Body Start
COMPAREV D2 0
GOTOCMP 6580 <
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6580 >
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6578 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6580 <
SETV D2 0
GOTO 6581
SETV D2 1
COMPAREV D2 0
GOTOCMP 6677 ==; Test 'if'
SETV D2 1; if() #505 Body Start
STORE D2 0.0001; if() #505 Body End
GOTO 6677; if() #221 Body End
LOAD D2 0.0003; if() #506 Test AND if() #221 Else Start
COMPAREV D2 0
GOTOCMP 6595 >=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6609 >
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6607 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6609 <
SETV D2 0
GOTO 6610
SETV D2 1
COMPAREV D2 0
GOTOCMP 6677 ==; Test 'if'
SETV D2 1; if() #506 Body Start
STORE D2 0.0001; if() #506 Body End
GOTO 6677; if() #221 Else End AND if() #220 Body End
LOAD D2 0.0007; if() #222 Test AND if() #220 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6649 ==; Test 'if'
LOAD D2 0.0003; if() #507 Test AND if() #222 Body Start
COMPAREV D2 0
GOTOCMP 6643 >
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6643 <
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6641 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6643 <
SETV D2 0
GOTO 6644
SETV D2 1
COMPAREV D2 0
GOTOCMP 6677 ==; Test 'if'
SETV D2 1; if() #507 Body Start
STORE D2 0.0001; if() #507 Body End
GOTO 6677; if() #222 Body End
LOAD D2 0.0003; if() #508 Test AND if() #222 Else Start
COMPAREV D2 0
GOTOCMP 6658 <=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6672 <
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6670 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6672 <
SETV D2 0
GOTO 6673
SETV D2 1
COMPAREV D2 0
GOTOCMP 6677 ==; Test 'if'
SETV D2 1; if() #508 Body Start
STORE D2 0.0001; if() #508 Body End
LOAD D2 0.0001; if() #222 Else End AND if() #220 Else End AND if() #219 Else End AND if() #214 Else End AND if() #509 Test
COMPAREV D2 0
GOTOCMP 6686 ==; Test 'if'
LOAD D2 0; if() #509 Body Start
STORE D2 0.0008
LOAD D2 0.0003
STORE D2 0.0007
LOAD D2 0.0002
STORE D2 0.0006; if() #509 Body End
LOAD D2 0; for() #146 Body End AND for() #146 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 6311; for() #146 End
LOAD D2 0.0008; if() #223 Test
COMPAREV D2 -1
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 6697 ==; Test 'if'
LOAD D2 0.0008; return Start AND if() #223 Body Start
GOTO 6698; return End AND if() #223 Body End
LOAD D2 0.0011; return Start AND if() #223 Else Start
POPARGS D5 0.0013; return End AND if() #223 Else End
RETURNFUNC; Func[int __Tango_GetNextMenuPos(int)] Body End
SETR D4 SP2; Func[int __Tango_GetNumSCCArgs(int)] Body Start
LOAD D2 0; if() #224 Test
COMPAREV D2 9
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6750 ==; Test 'if'
LOAD D2 0; if() #225 Test AND if() #224 Body Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6713 ==; Test 'if'
SETV D2 2; return Start AND if() #225 Body Start
GOTO 6758; return End AND if() #225 Body End
LOAD D2 0; if() #226 Test AND if() #225 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6720 ==; Test 'if'
SETV D2 1; return Start AND if() #226 Body Start
GOTO 6758; return End AND if() #226 Body End
LOAD D2 0; if() #227 Test AND if() #226 Else Start
COMPAREV D2 4
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6727 ==; Test 'if'
SETV D2 3; return Start AND if() #227 Body Start
GOTO 6758; return End AND if() #227 Body End
LOAD D2 0; if() #228 Test AND if() #227 Else Start
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6734 ==; Test 'if'
SETV D2 2; return Start AND if() #228 Body Start
GOTO 6758; return End AND if() #228 Body End
LOAD D2 0; if() #229 Test AND if() #228 Else Start
COMPAREV D2 6
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6741 ==; Test 'if'
SETV D2 2; return Start AND if() #229 Body Start
GOTO 6758; return End AND if() #229 Body End
LOAD D2 0; if() #230 Test AND if() #229 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6748 ==; Test 'if'
SETV D2 3; return Start AND if() #230 Body Start
GOTO 6758; return End AND if() #230 Body End
SETV D2 3; return Start AND if() #230 Else Start
GOTO 6758; return End AND if() #230 Else End AND if() #229 Else End AND if() #228 Else End AND if() #227 Else End AND if() #226 Else End AND if() #225 Else End AND if() #224 Body End
LOAD D2 0; if() #231 Test AND if() #224 Else Start
COMPAREV D2 17
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6757 ==; Test 'if'
SETV D2 2; return Start AND if() #231 Body Start
GOTO 6758; return End AND if() #231 Body End
SETV D2 1; return Start AND if() #231 Else Start
POP D5; return End AND if() #231 Else End AND if() #224 Else End
RETURNFUNC; Func[int __Tango_GetNumSCCArgs(int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetStringEnd(char32[])] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0002; while() #8 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 6788 ==; Test 'while'
LOAD D2 0.0002; if() #513 Test AND while() #8 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 32
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 6784 ==; Test 'if'
LOAD D2 0; if() #513 Body Start
STORE D2 0.0001; if() #513 Body End
LOAD D2 0
ADDV D2 1
STORE D2 0; while() #8 Body End
GOTO 6764; while() #8 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_GetStringEnd(char32[])] Body End
SETR D4 SP2; Func[int __Tango_GetTargetOffset()] Body Start
PUSHR D4; return Start
PUSHV 5; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
PUSHR D2
PUSHR D4
PUSHV 4; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6113; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
PUSHR D4
PUSHV 4; UsrFunc[int __Tango_GetCurrFontData(int)] Params
CALLFUNC 0.6099; UsrFunc[int __Tango_GetCurrFontData(int)] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
PUSHR D4
PUSHV 9; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
RETURNFUNC; return End AND Func[int __Tango_GetTargetOffset()] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetVar(int)] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0002; if() #514 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6834 ==; Test 'if'
SETV D2 1; if() #514 Body Start
STORE D2 0
LOAD D2 0.0002
SUBV2 0 D2
STORE D2 0.0002; if() #514 Body End
LOAD D2 0.0002; if() #232 Test
COMPAREV D2 0.0034
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6845 ==; Test 'if'
PUSHR D4; if() #232 Body Start
PUSHV 22; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 6965; if() #232 Body End
LOAD D2 0.0002; if() #233 Test AND if() #232 Else Start
COMPAREV D2 0.0035
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6856 ==; Test 'if'
PUSHR D4; if() #233 Body Start
PUSHV 23; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 6965; if() #233 Body End
LOAD D2 0.0002; if() #234 Test AND if() #233 Else Start
COMPAREV D2 0.2015
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6866 ==; Test 'if'
PUSHR D4; if() #234 Body Start
CALLFUNC 0.6128; UsrFunc[int __Tango_GetCurrentCSet()] Call
POP D4
STORE D2 0.0001
GOTO 6965; if() #234 Body End
LOAD D2 0.0002; if() #235 Test AND if() #234 Else Start
COMPAREV D2 1.3059
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6876 ==; Test 'if'
PUSHR D4; if() #235 Body Start
CALLFUNC 0.6160; UsrFunc[int __Tango_GetCurrentColor()] Call
POP D4
STORE D2 0.0001
GOTO 6965; if() #235 Body End
LOAD D2 0.0002; if() #236 Test AND if() #235 Else Start
COMPAREV D2 5.1391
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6886 ==; Test 'if'
PUSHR D4; if() #236 Body Start
CALLFUNC 0.6212; UsrFunc[int __Tango_GetCurrentSpeed()] Call
POP D4
STORE D2 0.0001
GOTO 6965; if() #236 Body End
LOAD D2 0.0002; if() #237 Test AND if() #236 Else Start
COMPAREV D2 0.0997
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6896 ==; Test 'if'
PUSHR D4; if() #237 Body Start
CALLFUNC 0.6192; UsrFunc[int __Tango_GetCurrentSFX()] Call
POP D4
STORE D2 0.0001
GOTO 6965; if() #237 Body End
LOAD D2 0.0002; if() #238 Test AND if() #237 Else Start
COMPAREV D2 5.3793
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6907 ==; Test 'if'
PUSHR D4; if() #238 Body Start
PUSHV 0; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 6965; if() #238 Body End
LOAD D2 0.0002; if() #239 Test AND if() #238 Else Start
COMPAREV D2 0.0024
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6918 ==; Test 'if'
PUSHR D4; if() #239 Body Start
PUSHV 6; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 6965; if() #239 Body End
LOAD D2 0.0002; if() #240 Test AND if() #239 Else Start
COMPAREV D2 0.0025
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6929 ==; Test 'if'
PUSHR D4; return Start AND if() #240 Body Start
PUSHV 7; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
GOTO 6972; return End
GOTO 6965; if() #240 Body End
LOAD D2 0.0002; if() #241 Test AND if() #240 Else Start
COMPAREV D2 0.0024
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6940 ==; Test 'if'
PUSHR D4; if() #241 Body Start
PUSHV 18; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 6965; if() #241 Body End
LOAD D2 0.0002; if() #242 Test AND if() #241 Else Start
COMPAREV D2 57.0513
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6948 ==; Test 'if'
SETV D2 -1; if() #242 Body Start
STORE D2 0.0001
GOTO 6965; if() #242 Body End
LOAD D2 0.0002; if() #243 Test AND if() #242 Else Start
COMPAREV D2 7.5754
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6959 ==; Test 'if'
SETR D2 GD2; if() #243 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 10
STORE D2 0.0001
GOTO 6965; if() #243 Body End
PUSHR D4; if() #243 Else Start
LOAD D2 0.0002; UsrFunc[int Tango_GetCustomVar(int)] Params Start
PUSHR D2; UsrFunc[int Tango_GetCustomVar(int)] Params End
CALLFUNC 0.1162; UsrFunc[int Tango_GetCustomVar(int)] Call
POP D4
STORE D2 0.0001; if() #243 Else End
LOAD D2 0; if() #242 Else End AND if() #241 Else End AND if() #240 Else End AND if() #239 Else End AND if() #238 Else End AND if() #237 Else End AND if() #236 Else End AND if() #235 Else End AND if() #234 Else End AND if() #233 Else End AND if() #232 Else End AND if() #515 Test
COMPAREV D2 0
GOTOCMP 6971 ==; Test 'if'
LOAD D2 0.0001; if() #515 Body Start
SUBV2 0 D2
STORE D2 0.0001; if() #515 Body End
LOAD D2 0.0001; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_GetVar(int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetWordWidth(int, int[])] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
SETR D2 GD4; while(true) #9 Body [Opt:AlwaysOn] Start
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #516 Test
COMPAREV D2 0
GOTOCMP 6995 ==
LOAD D2 0
COMPAREV D2 32
GOTOCMP 6995 ==
LOAD D2 0
COMPAREV D2 26
GOTOCMP 6995 ==
SETV D2 0
GOTO 6996
SETV D2 1
COMPAREV D2 0
GOTOCMP 7029 !=; Test 'if' AND break 1; AND if() #516 Body
LOAD D2 0; if() #517 Test
COMPAREV D2 32
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 7015 ==; Test 'if'
LOAD D2 0.0001; if() #517 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3820; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0.0001; if() #517 Body End
PUSHR D4; if() #518 Test
LOAD D2 0; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params End
CALLFUNC 0.3362; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 7025 ==; Test 'if'
LOAD D2 0.0003; if() #518 Body Start
ADDV D2 1
STORE D2 0.0003; if() #518 Body End
LOAD D2 0.0003
ADDV D2 1
STORE D2 0.0003; while(true) #9 Body [Opt:AlwaysOn] End
GOTO 6978; while() #9 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0004; return End
RETURNFUNC; Func[int __Tango_GetWordWidth(int, int[])] Body End
PUSHV 0; Func[void __Tango_InitializeMenu(int)] Body Start
SETR D4 SP2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 23 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 32 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 16 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 17 D2
PUSHR D4
SETR D2 GD3; UsrFunc[int Clamp(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 1
PUSHV 20; UsrFunc[int Clamp(int, int, int)] Params End
CALLFUNC 0.0027; UsrFunc[int Clamp(int, int, int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 18 D2
PUSHR D4
SETR D2 GD3; UsrFunc[int Clamp(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 19
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 1
PUSHV 20; UsrFunc[int Clamp(int, int, int)] Params End
CALLFUNC 0.0027; UsrFunc[int Clamp(int, int, int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 19 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 20
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 20 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 21
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 21 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 24 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0
PUSHR D4
PUSHV 7; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 7
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 25 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 9
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0
PUSHR D2
POP D0
READPODARRAYV D2 4
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 26 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 33 D2
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_InitializeMenu(int)] Body End
PUSHARGSV 0 0.0003; Func[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Body Start
SETR D4 SP2
LOAD D2 0.0004
STORE D2 0.0002
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; if() #267 Test
COMPAREV D2 48
GOTOCMP 7222 <
LOAD D2 0.0001
COMPAREV D2 57
GOTOCMP 7222 >
SETV D2 1
GOTO 7223
SETV D2 0
COMPAREV D2 0
GOTOCMP 7252 ==; Test 'if'
PUSHR D4; if() #267 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
PUSHV 1
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params End
CALLFUNC 0.9150; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Call
POP D4
STORE D2 0
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0005
PUSHR D4
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0004
ADDV D2 1
STORE D2 0.0004
GOTO 7465; if() #267 Body End
LOAD D2 0.0001; if() #268 Test AND if() #267 Else Start
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7345 ==; Test 'if'
PUSHR D4; if() #268 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5264; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; unless() #559 Test
COMPAREV D2 48
GOTOCMP 7280 <
LOAD D2 0.0001
COMPAREV D2 57
GOTOCMP 7280 >
SETV D2 1
GOTO 7281
SETV D2 0
COMPAREV D2 0
GOTOCMP 7291 !=; Test 'unless'
PUSHR D4; unless() #559 Body Start
PUSHV 106; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7491; return End AND unless() #559 Body End
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
PUSHV 1
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params End
CALLFUNC 0.9150; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5264; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006; if() #269 Test
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
COMPAREV D2 41
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7336 ==; Test 'if'
PUSHR D4; if() #269 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
LOAD D2 0.0004
ADDV D2 1
STORE D2 0.0004
GOTO 7465; if() #269 Body End
PUSHR D4; if() #269 Else Start
PUSHV 106; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7491; return End AND if() #269 Else End
GOTO 7465; if() #268 Body End
LOAD D2 0.0001; if() #270 Test AND if() #268 Else Start
COMPAREV D2 97
GOTOCMP 7353 <
LOAD D2 0.0001
COMPAREV D2 122
GOTOCMP 7353 >
SETV D2 1
GOTO 7354
SETV D2 0
COMPAREV D2 0
GOTOCMP 7457 ==; Test 'if'
PUSHR D4; if() #270 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params End
CALLFUNC 0.8748; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5264; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006; if() #271 Test
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7448 ==; Test 'if'
PUSHR D4; if() #271 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetStartMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetStartMarker(int, int)] Params End
CALLFUNC 0.8820; UsrFunc[void __Tango_SetStartMarker(int, int)] Call
PEEK D4
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004
PUSHR D4; if() #560 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params End
CALLFUNC 0.8874; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 7419 ==; Test 'if'
SETV D2 1; return Start AND if() #560 Body Start
GOTO 7491; return End AND if() #560 Body End
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0005
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0004
PUSHR D4
LOAD D2 0.0004; UsrFunc[int __Tango_SetEndMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[int __Tango_SetEndMarker(int, int)] Params End
CALLFUNC 0.9097; UsrFunc[int __Tango_SetEndMarker(int, int)] Call
POP D4
STORE D2 0.0004
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_AddPadding(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2; UsrFunc[int __Tango_AddPadding(int, int, int)] Params End
CALLFUNC 0.3217; UsrFunc[int __Tango_AddPadding(int, int, int)] Call
POP D4
STORE D2 0.0004
GOTO 7465; if() #271 Body End
PUSHR D4; if() #271 Else Start
PUSHV 104; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7491; return End AND if() #271 Else End
GOTO 7465; if() #270 Body End
PUSHR D4; if() #270 Else Start
PUSHV 104; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7491; return End AND if() #270 Else End
LOAD D2 0.0004; if() #268 Else End AND if() #267 Else End AND if() #561 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 7478 ==; Test 'if'
SETV D2 1; return Start AND if() #561 Body Start
GOTO 7491; return End AND if() #561 Body End
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
POPARGS D5 0.0007; return End
RETURNFUNC; Func[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Body End
PUSHARGSV 0 0.0004; Func[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Body Start
SETR D4 SP2
LOAD D2 0.0007
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
LOAD D2 0.0003
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0006
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params End
CALLFUNC 0.6700; UsrFunc[int __Tango_GetNumSCCArgs(int)] Call
POP D4
STORE D2 0.0002
STOREV 0 0.0001
LOAD D2 0.0002; for() #147 LoopTest
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 7640 ==; for() #147 TestFail?
LOAD D2 0.0007; for() #147 Body Start
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
SUBV D2 1
STORE D2 0.0001
LOAD D2 0.0001; if() #254 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7549 ==; Test 'if'
PUSHR D4; if() #254 Body Start
PUSHV 107; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0006
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7653; return End
GOTO 7557; if() #254 Body End
LOAD D2 0.0001; if() #538 Test AND if() #254 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 7557 ==; Test 'if'
LOAD D2 0.0001; if() #538 Body Start
ADDV D2 256
STORE D2 0.0001; if() #538 Body End
LOAD D2 0.0006; if() #254 Else End
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0007; if() #539 Test
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -1
GOTOCMP 7576 ==
LOAD D2 0.0007
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
COMPAREV D2 255
GOTOCMP 7576 ==
SETV D2 0
GOTO 7577
SETV D2 1
COMPAREV D2 0
GOTOCMP 7624 ==; Test 'if'
LOAD D2 0.0007; if() #539 Body Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #255 Test
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7601 ==; Test 'if'
PUSHR D4; if() #255 Body Start
PUSHV 107; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0006
ADDV D2 1
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7653; return End
GOTO 7609; if() #255 Body End
LOAD D2 0; if() #540 Test AND if() #255 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 7609 ==; Test 'if'
LOAD D2 0; if() #540 Body Start
ADDV D2 256
STORE D2 0; if() #540 Body End
LOAD D2 0.0001; if() #255 Else End
PUSHR D2
LOAD D2 0
MULTV D2 254
SETV D2 254
PUSHR D2
LOAD D2 0
POP D3
MULTR D2 D3
POP D3
ADDR D2 D3
STORE D2 0.0001
LOAD D2 0.0006
ADDV D2 2
STORE D2 0.0006; if() #539 Body End
LOAD D2 0.0001
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; for() #147 Body End
LOAD D2 0.0002; for() #147 LoopIncrement
SUBV D2 1
STORE D2 0.0002
GOTO 7523; for() #147 End
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0004
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
POPARGS D5 0.0008; return End
RETURNFUNC; Func[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Body End
SETR D4 SP2; Func[bool __Tango_ValidateMessage(int)] Body Start
LOAD D2 0; if() #659 Test
COMPAREV D2 0
GOTOCMP 7668 <=
LOAD D2 0
PUSHR D2
LOAD D2 0
LSHIFTV D2 0
POP D3
COMPARER D3 D2
GOTOCMP 7668 !=
SETV D2 0
GOTO 7669
SETV D2 1
COMPAREV D2 0
GOTOCMP 7673 ==; Test 'if'
SETV D2 0; return Start AND if() #659 Body Start
GOTO 7674; return End AND if() #659 Body End
SETV D2 1; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_ValidateMessage(int)] Body End
PUSHV 0; Func[void __Tango_MenuSelect(int)] Body Start
SETR D4 SP2
SETR D2 GD2; if() #547 Test
PUSHR D2
POP D0
READPODARRAYV D2 33
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 7694 ==; Test 'if'
PUSHR D4; if() #547 Body Start
SETR D2 GD2; UsrFunc[void Tango_SaveMenuState(int[])] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 33
PUSHR D2; UsrFunc[void Tango_SaveMenuState(int[])] Params End
CALLFUNC 0.1424; UsrFunc[void Tango_SaveMenuState(int[])] Call
POP D4; if() #547 Body End
LOAD D2 0.0001
MULTV D2 3
ADDV D2 34
STORE D2 0
SETR D2 GD2
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETR D2 GD2; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 21; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 8
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
SETR D2 GD2; if() #548 Test
PUSHR D2
POP D0
READPODARRAYV D2 14
ANDV D2 2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7736 ==; Test 'if'
PUSHR D4; if() #548 Body Start
CALLFUNC 0.1084; UsrFunc[void Tango_DeactivateMenu()] Call
POP D4; if() #548 Body End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_MenuSelect(int)] Body End
PUSHARGSV 0 0.0010; Func[bool __Tango_NeedsNewLine(int, int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0010
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0008
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0.0007
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0006
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 6
STORE D2 0.0005
SETR D2 GD5
PUSHR D2
LOAD D2 0.0008
ADDV D2 4
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0007
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0006
ADDV D2 8
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0003
LOAD D2 0.0009; if() #256 Test
COMPAREV D2 -10000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7855 ==; Test 'if'
SETR D2 GD4; if() #256 Body Start
PUSHR D2
LOAD D2 0.0010
ADDV D2 2
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
LOAD D2 0.0004
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0006
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0004
LOAD D2 0.0009; if() #549 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7831 ==; Test 'if'
PUSHR D4; if() #549 Body Start
LOAD D2 0.0010; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
PUSHV 1; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7947; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
SETR D2 GD4
PUSHR D2
LOAD D2 0.0010
ADDV D2 2
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009; if() #549 Body End
LOAD D2 0.0009; if() #257 Test
COMPAREV D2 33
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 7852 ==; Test 'if'
PUSHR D4; return Start AND if() #257 Body Start
LOAD D2 0.0010; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params End
CALLFUNC 0.8573; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I==
GOTO 7945; return End
GOTO 7862; if() #257 Body End
SETV D2 1; return Start AND if() #257 Else Start
GOTO 7945; return End AND if() #257 Else End
GOTO 7862; if() #256 Body End
LOAD D2 0.0009; if() #550 Test AND if() #256 Else Start
COMPAREV D2 32
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 7862 ==; Test 'if'
SETV D2 0; return Start AND if() #550 Body Start
GOTO 7945; return End AND if() #550 Body End
PUSHR D4; if() #256 Else End AND unless() #551 Test
LOAD D2 0.0009; UsrFunc[bool __Tango_CharacterWillFit(char32, int[], int, int)] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_CharacterWillFit(char32, int[], int, int)] Params End
CALLFUNC 0.3800; UsrFunc[bool __Tango_CharacterWillFit(char32, int[], int, int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 7877 !=; Test 'unless'
SETV D2 1; return Start AND unless() #551 Body Start
GOTO 7945; return End AND unless() #551 Body End
STOREV 0 0.0002
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0001
LOAD D2 0.0010; for() #151 setup
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #151 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 7927 ==; for() #151 TestFail?
SETR D2 GD4; for() #151 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
LOAD D2 0.0009; if() #258 Test
COMPAREV D2 32
GOTOCMP 7908 ==
LOAD D2 0.0009
COMPAREV D2 -10000
GOTOCMP 7908 ==
SETV D2 0
GOTO 7909
SETV D2 1
COMPAREV D2 0
GOTOCMP 7915 ==; Test 'if'
SETV D2 1; if() #258 Body Start
STORE D2 0.0002
GOTO 7927; break 1;
GOTO 7923; if() #258 Body End
LOAD D2 0.0009; if() #552 Test AND if() #258 Else Start
COMPAREV D2 33
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 7923 ==; Test 'if'
SETV D2 0; if() #552 Body Start
STORE D2 0.0002
GOTO 7927; break 1; AND if() #552 Body End
LOAD D2 0; if() #258 Else End AND for() #151 Body End AND for() #151 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 7886; for() #151 End
LOAD D2 0.0002; if() #553 Test
COMPAREV D2 0
GOTOCMP 7944 ==; Test 'if'
PUSHR D4; return Start AND if() #553 Body Start
LOAD D2 0.0010; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params End
CALLFUNC 0.8573; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I==
GOTO 7945; return End AND if() #553 Body End
SETV D2 0; return Start
POPARGS D5 0.0012; return End
RETURNFUNC; Func[bool __Tango_NeedsNewLine(int, int)] Body End
PUSHARGSV 0 0.0009; Func[int __Tango_RunFunction(int, bool)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0010
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0008
STOREV 2 0.0007
STOREV 0 0.0006
ALLOCATEMEMV D2 4 0
STORE D2 0.0004
WRITEPODARRAY D2 {0,0,0,0}
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0008; if() #598 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 7974 ==; Test 'if'
SETV D2 1; if() #598 Body Start
STORE D2 0.0001
LOAD D2 0.0008
SUBV2 0 D2
STORE D2 0.0008; if() #598 Body End
STOREV 0 0; for() #155 setup
SETV D2 1; for() #155 LoopTest
COMPAREV D2 0
GOTOCMP 8035 ==; for() #155 TestFail?
PUSHR D4; for() #155 Body Start
LOAD D2 0.0010; UsrFunc[int __Tango_ReadArgLength(int)] Params Start
PUSHR D2
LOAD D2 0.0007
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[int __Tango_ReadArgLength(int)] Params End
CALLFUNC 1.1402; UsrFunc[int __Tango_ReadArgLength(int)] Call
POP D4
STORE D2 0.0006
LOAD D2 0.0006; if() #599 Test
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8035 !=; Test 'if' AND break 1; AND if() #599 Body
LOAD D2 0; if() #600 Test
COMPAREV D2 4
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 8008 ==; Test 'if'
LOAD D2 0; if() #601 Test AND if() #600 Body Start
COMPAREV D2 4
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8031 ==; Test 'if'
PUSHR D4; if() #601 Body Start
PUSHV 204; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0111; UsrFunc[void __Tango_LogError(int)] Call
POP D4; if() #601 Body End
GOTO 8031; continue 1; AND if() #600 Body End
PUSHR D4
LOAD D2 0.0010; UsrFunc[int __Tango_ReadArg(int)] Params Start
PUSHR D2
LOAD D2 0.0007
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[int __Tango_ReadArg(int)] Params End
CALLFUNC 1.1358; UsrFunc[int __Tango_ReadArg(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0007
PUSHR D2
LOAD D2 0.0006
POP D3
ADDR D2 D3
STORE D2 0.0007; for() #155 Body End
LOAD D2 0; for() #155 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 7975; for() #155 End
LOAD D2 0.0009; if() #602 Test
COMPAREV D2 0
GOTOCMP 8049 ==; Test 'if'
PUSHR D4; if() #602 Body Start
LOAD D2 0.0010; UsrFunc[void __Tango_Delete(int, int)] Params Start
PUSHR D2
LOAD D2 0.0010
PUSHR D2
LOAD D2 0.0007
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[void __Tango_Delete(int, int)] Params End
CALLFUNC 0.3960; UsrFunc[void __Tango_Delete(int, int)] Call
POP D4; if() #602 Body End
SETV D2 1
STORE D2 0.0002
LOAD D2 0.0008; if() #310 Test
COMPAREV D2 0.4513
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 8194 ==; Test 'if'
LOAD D2 0.0008; if() #311 Test AND if() #310 Body Start
COMPAREV D2 0.0081
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8074 ==; Test 'if'
LOAD D2 0.0004; if() #311 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
ADDR D2 D3
STORE D2 0.0003
GOTO 8548; if() #311 Body End
LOAD D2 0.0008; if() #312 Test AND if() #311 Else Start
COMPAREV D2 0.0123
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8100 ==; Test 'if'
PUSHR D4; if() #312 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
GOTOCMP 8094 !=
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
GOTOCMP 8094 !=
SETV D2 0
GOTO 8095
SETV D2 1
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3791; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #312 Body End
LOAD D2 0.0008; if() #313 Test AND if() #312 Else Start
COMPAREV D2 0.0151
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8126 ==; Test 'if'
PUSHR D4; if() #313 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
GOTOCMP 8120 ==
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
GOTOCMP 8120 ==
SETV D2 1
GOTO 8121
SETV D2 0
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3791; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #313 Body End
LOAD D2 0.0008; if() #314 Test AND if() #313 Else Start
COMPAREV D2 0.0811
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8143 ==; Test 'if'
PUSHR D4; if() #314 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
SETCMP D2 I==
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3791; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #314 Body End
LOAD D2 0.0008; if() #315 Test AND if() #314 Else Start
COMPAREV D2 0.0989
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8157 ==; Test 'if'
PUSHR D4; if() #315 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncTab(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_FuncTab(int)] Params End
CALLFUNC 0.6066; UsrFunc[void __Tango_FuncTab(int)] Call
POP D4
GOTO 8548; if() #315 Body End
LOAD D2 0.0008; if() #316 Test AND if() #315 Else Start
COMPAREV D2 0.1446
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8175 ==; Test 'if'
LOAD D2 0.0004; if() #316 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0010
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 8548; if() #316 Body End
LOAD D2 0.0008; if() #317 Test AND if() #316 Else Start
COMPAREV D2 0.3291
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8191 ==; Test 'if'
PUSHR D4; if() #317 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5606; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8548; if() #317 Body End
SETV D2 0; if() #317 Else Start
STORE D2 0.0002; if() #317 Else End
GOTO 8548; if() #316 Else End AND if() #315 Else End AND if() #314 Else End AND if() #313 Else End AND if() #312 Else End AND if() #311 Else End AND if() #310 Body End
LOAD D2 0.0008; if() #318 Test AND if() #310 Else Start
COMPAREV D2 6.1058
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 8323 ==; Test 'if'
LOAD D2 0.0008; if() #319 Test AND if() #318 Body Start
COMPAREV D2 0.4513
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8222 ==; Test 'if'
PUSHR D4; if() #319 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I<
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3791; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #319 Body End
LOAD D2 0.0008; if() #320 Test AND if() #319 Else Start
COMPAREV D2 0.5235
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8237 ==; Test 'if'
PUSHR D4; if() #320 Body Start
PUSHV 0.5235; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1480; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
GOTO 8548; if() #320 Body End
LOAD D2 0.0008; if() #321 Test AND if() #320 Else Start
COMPAREV D2 0.6325
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8257 ==; Test 'if'
PUSHR D4; if() #321 Body Start
LOAD D2 0.0004; UsrFunc[int Rand(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[int Rand(int, int)] Params End
CALLFUNC 0.0015; UsrFunc[int Rand(int, int)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #321 Body End
LOAD D2 0.0008; if() #322 Test AND if() #321 Else Start
COMPAREV D2 0.7843
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8269 ==; Test 'if'
PUSHR D4; if() #322 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_FuncSync(int[])] Params Start
PUSHR D2; UsrFunc[int __Tango_FuncSync(int[])] Params End
CALLFUNC 0.6000; UsrFunc[int __Tango_FuncSync(int[])] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #322 Body End
LOAD D2 0.0008; if() #323 Test AND if() #322 Else Start
COMPAREV D2 1.1939
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8286 ==; Test 'if'
PUSHR D4; if() #323 Body Start
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8548; if() #323 Body End
LOAD D2 0.0008; if() #324 Test AND if() #323 Else Start
COMPAREV D2 1.2192
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8297 ==; Test 'if'
PUSHR D4; if() #324 Body Start
CALLFUNC 0.5585; UsrFunc[void __Tango_FuncClose()] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8548; if() #324 Body End
LOAD D2 0.0008; if() #325 Test AND if() #324 Else Start
COMPAREV D2 1.8884
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8320 ==; Test 'if'
PUSHR D4; if() #325 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I==
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3791; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #325 Body End
SETV D2 0; if() #325 Else Start
STORE D2 0.0002; if() #325 Else End
GOTO 8548; if() #324 Else End AND if() #323 Else End AND if() #322 Else End AND if() #321 Else End AND if() #320 Else End AND if() #319 Else End AND if() #318 Body End
LOAD D2 0.0008; if() #326 Test AND if() #318 Else Start
COMPAREV D2 208.0657
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 8456 ==; Test 'if'
LOAD D2 0.0008; if() #327 Test AND if() #326 Body Start
COMPAREV D2 6.1058
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8348 ==; Test 'if'
PUSHR D4; if() #327 Body Start
LOAD D2 0.0010; UsrFunc[void __Tango_AppendMessage(int, int)] Params Start
PUSHR D2
LOAD D2 0.0007
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_AppendMessage(int, int)] Params End
CALLFUNC 0.3312; UsrFunc[void __Tango_AppendMessage(int, int)] Call
POP D4
GOTO 8548; if() #327 Body End
LOAD D2 0.0008; if() #328 Test AND if() #327 Else Start
COMPAREV D2 7.5241
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8364 ==; Test 'if'
PUSHR D4; if() #328 Body Start
LOAD D2 0.0010; UsrFunc[void __Tango_FuncAddMenuItem(int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_FuncAddMenuItem(int, int)] Params End
CALLFUNC 0.5563; UsrFunc[void __Tango_FuncAddMenuItem(int, int)] Call
POP D4
GOTO 8548; if() #328 Body End
LOAD D2 0.0008; if() #329 Test AND if() #328 Else Start
COMPAREV D2 10.8066
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8387 ==; Test 'if'
PUSHR D4; if() #329 Body Start
LOAD D2 0.0010; UsrFunc[void __Tango_FuncActivateMenu(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncActivateMenu(int, int, int)] Params End
CALLFUNC 0.5535; UsrFunc[void __Tango_FuncActivateMenu(int, int, int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8548; if() #329 Body End
LOAD D2 0.0008; if() #330 Test AND if() #329 Else Start
COMPAREV D2 29.0329
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8403 ==; Test 'if'
PUSHR D4; if() #330 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncNumber(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0010
PUSHR D2; UsrFunc[void __Tango_FuncNumber(int, int)] Params End
CALLFUNC 0.5617; UsrFunc[void __Tango_FuncNumber(int, int)] Call
POP D4
GOTO 8548; if() #330 Body End
LOAD D2 0.0008; if() #331 Test AND if() #330 Else Start
COMPAREV D2 31.4910
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8414 ==; Test 'if'
PUSHR D4; if() #331 Body Start
CALLFUNC 0.5865; UsrFunc[void __Tango_FuncPressA()] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8548; if() #331 Body End
LOAD D2 0.0008; if() #332 Test AND if() #331 Else Start
COMPAREV D2 37.4073
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8430 ==; Test 'if'
PUSHR D4; if() #332 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncString(char32[], int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0010
PUSHR D2; UsrFunc[void __Tango_FuncString(char32[], int)] Params End
CALLFUNC 0.5917; UsrFunc[void __Tango_FuncString(char32[], int)] Call
POP D4
GOTO 8548; if() #332 Body End
LOAD D2 0.0008; if() #333 Test AND if() #332 Else Start
COMPAREV D2 113.9450
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8453 ==; Test 'if'
PUSHR D4; if() #333 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3791; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #333 Body End
SETV D2 0; if() #333 Else Start
STORE D2 0.0002; if() #333 Else End
GOTO 8548; if() #332 Else End AND if() #331 Else End AND if() #330 Else End AND if() #329 Else End AND if() #328 Else End AND if() #327 Else End AND if() #326 Body End
LOAD D2 0.0008; if() #334 Test AND if() #326 Else Start
COMPAREV D2 208.0657
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8472 ==; Test 'if'
PUSHR D4; if() #334 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncOrdinal(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0010
PUSHR D2; UsrFunc[void __Tango_FuncOrdinal(int, int)] Params End
CALLFUNC 0.5681; UsrFunc[void __Tango_FuncOrdinal(int, int)] Call
POP D4
GOTO 8548; if() #334 Body End
LOAD D2 0.0008; if() #335 Test AND if() #334 Else Start
COMPAREV D2 209.6041
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8483 ==; Test 'if'
LOAD D2 0.0004; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #335 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
GOTO 8548; if() #335 Body End
LOAD D2 0.0008; if() #336 Test AND if() #335 Else Start
COMPAREV D2 263.9732
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8499 ==; Test 'if'
PUSHR D4; if() #336 Body Start
SETR D2 GD2; UsrFunc[void Tango_SuspendSlot(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void Tango_SuspendSlot(int)] Params End
CALLFUNC 0.1845; UsrFunc[void Tango_SuspendSlot(int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8548; if() #336 Body End
LOAD D2 0.0008; if() #337 Test AND if() #336 Else Start
COMPAREV D2 1158.8044
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8512 ==; Test 'if'
PUSHR D4; if() #337 Body Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 5; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8548; if() #337 Body End
LOAD D2 0.0008; if() #338 Test AND if() #337 Else Start
COMPAREV D2 1364.9361
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8535 ==; Test 'if'
PUSHR D4; if() #338 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I!=
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3791; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8548; if() #338 Body End
LOAD D2 0.0008; if() #339 Test AND if() #338 Else Start
COMPAREV D2 1615.1672
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8546 ==; Test 'if'
PUSHR D4; if() #339 Body Start
LOAD D2 0.0010; UsrFunc[void __Tango_FuncSaveName(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_FuncSaveName(int)] Params End
CALLFUNC 0.5877; UsrFunc[void __Tango_FuncSaveName(int)] Call
POP D4
GOTO 8548; if() #339 Body End
SETV D2 0; if() #339 Else Start
STORE D2 0.0002; if() #339 Else End
LOAD D2 0.0002; if() #338 Else End AND if() #337 Else End AND if() #336 Else End AND if() #335 Else End AND if() #334 Else End AND if() #326 Else End AND if() #318 Else End AND if() #310 Else End AND unless() #603 Test
COMPAREV D2 0
GOTOCMP 8559 !=; Test 'unless'
PUSHR D4; unless() #603 Body Start
LOAD D2 0.0008; UsrFunc[int __Tango_RunCustomFunction(int, int[])] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2; UsrFunc[int __Tango_RunCustomFunction(int, int[])] Params End
CALLFUNC 1.1471; UsrFunc[int __Tango_RunCustomFunction(int, int[])] Call
POP D4
STORE D2 0.0003; unless() #603 Body End
LOAD D2 0.0001; if() #604 Test
COMPAREV D2 0
GOTOCMP 8565 ==; Test 'if'
LOAD D2 0.0003; if() #604 Body Start
SUBV2 0 D2
STORE D2 0.0003; if() #604 Body End
LOAD D2 0.0003; return Start
LOAD D3 0.0004
DEALLOCATEMEMR D3
GOTO 8571; return End
LOAD D3 0.0004
DEALLOCATEMEMR D3
POPARGS D5 0.0011
RETURNFUNC; Func[int __Tango_RunFunction(int, bool)] Body End
SETR D4 SP2; Func[bool __Tango_WordWillFit(int, int[], int, int)] Body Start
LOAD D2 0; return Start
PUSHR D2
LOAD D2 0.0001
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_GetWordWidth(int, int[])] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_GetWordWidth(int, int[])] Params End
CALLFUNC 0.6974; UsrFunc[int __Tango_GetWordWidth(int, int[])] Call
POP D4
POP D3
COMPARER D3 D2
SETCMP D2 I>=
POPARGS D5 0.0004; return End
RETURNFUNC; Func[bool __Tango_WordWillFit(int, int[], int, int)] Body End
PUSHARGSV 0 0.0002; Func[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Body Start
SETR D4 SP2
LOAD D2 0.0004
STORE D2 0.0001
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params End
CALLFUNC 0.8748; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5264; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006; if() #259 Test
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8703 ==; Test 'if'
PUSHR D4; if() #259 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetStartMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetStartMarker(int, int)] Params End
CALLFUNC 0.8820; UsrFunc[void __Tango_SetStartMarker(int, int)] Call
POP D4
LOAD D2 0.0003; if() #260 Test
COMPAREV D2 0
GOTOCMP 8647 ==; Test 'if'
PUSHR D4; if() #260 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8655; if() #260 Body End
PUSHR D4; if() #260 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #260 Else End
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004
PUSHR D4; if() #554 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params End
CALLFUNC 0.8874; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 8674 ==; Test 'if'
SETV D2 1; return Start AND if() #554 Body Start
GOTO 8746; return End AND if() #554 Body End
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0005
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0004
PUSHR D4
LOAD D2 0.0004; UsrFunc[int __Tango_SetEndMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[int __Tango_SetEndMarker(int, int)] Params End
CALLFUNC 0.9097; UsrFunc[int __Tango_SetEndMarker(int, int)] Call
POP D4
STORE D2 0.0004
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_AddPadding(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0.0004
PUSHR D2; UsrFunc[int __Tango_AddPadding(int, int, int)] Params End
CALLFUNC 0.3217; UsrFunc[int __Tango_AddPadding(int, int, int)] Call
POP D4
STORE D2 0.0004
GOTO 8733; if() #259 Body End
PUSHR D4; if() #259 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -200; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0003; if() #261 Test
COMPAREV D2 0
GOTOCMP 8722 ==; Test 'if'
PUSHR D4; if() #261 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8730; if() #261 Body End
PUSHR D4; if() #261 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #261 Else End
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004; if() #259 Else End
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
POPARGS D5 0.0007; return End
RETURNFUNC; Func[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_ReadIdentifier(char32[], int, int[])] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0004; while(true) #13 Body [Opt:AlwaysOn] Start
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #293 Test
COMPAREV D2 97
GOTOCMP 8766 <
LOAD D2 0
COMPAREV D2 122
GOTOCMP 8766 >
SETV D2 1
GOTO 8767
SETV D2 0
COMPAREV D2 0
GOTOCMP 8782 ==; Test 'if'
LOAD D2 0.0001; if() #293 Body Start
MULTV D2 7
STORE D2 0.0001
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
ADDV D2 1
SUBV D2 97
DIVV D2 10000
POP D3
ADDR D2 D3
STORE D2 0.0001
GOTO 8807; if() #293 Body End
LOAD D2 0; if() #294 Test AND if() #293 Else Start
COMPAREV D2 48
GOTOCMP 8790 <
LOAD D2 0
COMPAREV D2 57
GOTOCMP 8790 >
SETV D2 1
GOTO 8791
SETV D2 0
COMPAREV D2 0
GOTOCMP 8811 ==; Test 'if'
LOAD D2 0.0001; if() #294 Body Start
MULTV D2 7
STORE D2 0.0001
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
ADDV D2 27
SUBV D2 48
DIVV D2 10000
POP D3
ADDR D2 D3
STORE D2 0.0001
GOTO 8807; if() #294 Body End
GOTO 8811; break 1; AND if() #294 Else
LOAD D2 0.0003; if() #293 Else End
ADDV D2 1
STORE D2 0.0003; while(true) #13 Body [Opt:AlwaysOn] End
GOTO 8752; while() #13 End
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0001; return Start
POPARGS D5 0.0005; return End
RETURNFUNC; Func[int __Tango_ReadIdentifier(char32[], int, int[])] Body End
SETR D4 SP2; Func[void __Tango_SetStartMarker(int, int)] Body Start
LOAD D2 0; if() #366 Test
COMPAREV D2 0.0069
GOTOCMP 8838 ==
LOAD D2 0
COMPAREV D2 0.2441
GOTOCMP 8838 ==
LOAD D2 0
COMPAREV D2 11.9678
GOTOCMP 8838 ==
LOAD D2 0
COMPAREV D2 5.8497
GOTOCMP 8838 ==
LOAD D2 0
COMPAREV D2 13486.5225
GOTOCMP 8838 ==
SETV D2 0
GOTO 8839
SETV D2 1
COMPAREV D2 0
GOTOCMP 8848 ==; Test 'if'
PUSHR D4; if() #366 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -600; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8872; if() #366 Body End
LOAD D2 0; if() #367 Test AND if() #366 Else Start
COMPAREV D2 0.0986
GOTOCMP 8856 ==
LOAD D2 0
COMPAREV D2 0.0542
GOTOCMP 8856 ==
SETV D2 0
GOTO 8857
SETV D2 1
COMPAREV D2 0
GOTOCMP 8866 ==; Test 'if'
PUSHR D4; if() #367 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -300; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8872; if() #367 Body End
PUSHR D4; if() #367 Else Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -400; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #367 Else End
POPARGS D5 0.0002; if() #366 Else End
RETURNFUNC; Func[void __Tango_SetStartMarker(int, int)] Body End
PUSHARGSV 0 0.0003; Func[bool __Tango_ParseArguments(char32[], int, int, int[])] Body Start
SETR D4 SP2
STOREV 0 0.0002
STOREV 0 0.0001
PUSHR D4; while(true) #11 Body [Opt:AlwaysOn] Start
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5264; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; if() #262 Test
COMPAREV D2 41
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8913 ==; Test 'if'
LOAD D2 0.0005; if() #262 Body Start
ADDV D2 1
STORE D2 0.0005
LOAD D2 0.0001; if() #555 Test
COMPAREV D2 0
GOTOCMP 9082 ==; Test 'if'
PUSHR D4; if() #555 Body Start
PUSHV 105; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9095; return End AND if() #555 Body End
GOTO 9082; break 1;
GOTO 8878; if() #262 Body End
LOAD D2 0.0002; if() #263 Test AND if() #262 Else Start
COMPAREV D2 64
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8982 ==; Test 'if'
LOAD D2 0.0005; if() #263 Body Start
ADDV D2 1
STORE D2 0.0005
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; unless() #556 Test
COMPAREV D2 97
GOTOCMP 8935 <
LOAD D2 0.0002
COMPAREV D2 122
GOTOCMP 8935 >
SETV D2 1
GOTO 8936
SETV D2 0
COMPAREV D2 0
GOTOCMP 8946 !=; Test 'unless'
PUSHR D4; unless() #556 Body Start
PUSHV 105; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9095; return End AND unless() #556 Body End
PUSHR D4; if() #557 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Params End
CALLFUNC 0.8593; UsrFunc[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 8963 ==; Test 'if'
SETV D2 1; return Start AND if() #557 Body Start
GOTO 9095; return End AND if() #557 Body End
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5264; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0004
SETV D2 0
STORE D2 0.0001
GOTO 8878; if() #263 Body End
LOAD D2 0.0002; if() #264 Test AND if() #263 Else Start
COMPAREV D2 48
GOTOCMP 8988 <
LOAD D2 0.0002
COMPAREV D2 57
GOTOCMP 8993 <=
LOAD D2 0.0002
COMPAREV D2 46
GOTOCMP 8993 ==
SETV D2 0
GOTO 8994
SETV D2 1
COMPAREV D2 0
GOTOCMP 9051 ==; Test 'if'
PUSHR D4; if() #264 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
PUSHV 0
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params End
CALLFUNC 0.9150; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5264; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
PUSHR D4
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -100; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001; if() #265 Test
COMPAREV D2 0
GOTOCMP 9039 ==; Test 'if'
PUSHR D4; if() #265 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
SETV D2 0
STORE D2 0.0001
GOTO 9047; if() #265 Body End
PUSHR D4; if() #265 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #265 Else End
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004
GOTO 8878; if() #264 Body End
LOAD D2 0.0002; if() #266 Test AND if() #264 Else Start
COMPAREV D2 45
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9073 ==; Test 'if'
LOAD D2 0.0001; if() #558 Test AND if() #266 Body Start
COMPAREV D2 0
GOTOCMP 9067 ==; Test 'if'
PUSHR D4; if() #558 Body Start
PUSHV 105; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9095; return End AND if() #558 Body End
SETV D2 1
STORE D2 0.0001
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
GOTO 8878; if() #266 Body End
PUSHR D4; if() #266 Else Start
PUSHV 104; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9095; return End AND if() #266 Else End
GOTO 8878; if() #264 Else End AND if() #263 Else End AND if() #262 Else End AND while(true) #11 Body [Opt:AlwaysOn] End AND while() #11 End
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
POPARGS D5 0.0007; return End
RETURNFUNC; Func[bool __Tango_ParseArguments(char32[], int, int, int[])] Body End
SETR D4 SP2; Func[int __Tango_SetEndMarker(int, int)] Body Start
LOAD D2 0; if() #364 Test
COMPAREV D2 0.0069
GOTOCMP 9115 ==
LOAD D2 0
COMPAREV D2 0.2441
GOTOCMP 9115 ==
LOAD D2 0
COMPAREV D2 11.9678
GOTOCMP 9115 ==
LOAD D2 0
COMPAREV D2 5.8497
GOTOCMP 9115 ==
LOAD D2 0
COMPAREV D2 13486.5225
GOTOCMP 9115 ==
SETV D2 0
GOTO 9116
SETV D2 1
COMPAREV D2 0
GOTOCMP 9127 ==; Test 'if'
PUSHR D4; if() #364 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -700; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001; return Start
ADDV D2 1
GOTO 9148; return End AND if() #364 Body End
LOAD D2 0; if() #365 Test AND if() #364 Else Start
COMPAREV D2 0.0986
GOTOCMP 9135 ==
LOAD D2 0
COMPAREV D2 0.0542
GOTOCMP 9135 ==
SETV D2 0
GOTO 9136
SETV D2 1
COMPAREV D2 0
GOTOCMP 9140 ==; Test 'if'
LOAD D2 0.0001; return Start AND if() #365 Body Start
GOTO 9148; return End AND if() #365 Body End
PUSHR D4; if() #365 Else Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -500; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3284; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001; return Start
ADDV D2 1
POPARGS D5 0.0002; return End AND if() #365 Else End AND if() #364 Else End
RETURNFUNC; Func[int __Tango_SetEndMarker(int, int)] Body End
PUSHARGSV 0 0.0004; Func[int __Tango_ReadNumber(char32[], int, bool, int[])] Body Start
SETR D4 SP2
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0.1000 0
LOAD D2 0.0007; while(true) #14 Body [Opt:AlwaysOn] Start
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; if() #295 Test
COMPAREV D2 48
GOTOCMP 9170 <
LOAD D2 0.0002
COMPAREV D2 57
GOTOCMP 9170 >
SETV D2 1
GOTO 9171
SETV D2 0
COMPAREV D2 0
GOTOCMP 9209 ==; Test 'if'
LOAD D2 0.0001; unless() #296 Test AND if() #295 Body Start
COMPAREV D2 0
GOTOCMP 9187 !=; Test 'unless'
LOAD D2 0.0003; unless() #296 Body Start
MULTV D2 10
STORE D2 0.0003
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SUBV D2 48
POP D3
ADDR D2 D3
STORE D2 0.0003
GOTO 9231; unless() #296 Body End
LOAD D2 0.0003; unless() #296 Else Start
PUSHR D2
LOAD D2 0.0002
SUBV D2 48
PUSHR D2
LOAD D2 0
POP D3
MULTR D2 D3
POP D3
ADDR D2 D3
STORE D2 0.0003
LOAD D2 0; if() #297 Test
COMPAREV D2 0.0001
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9205 ==; Test 'if'
GOTO 9235; break 1; AND if() #297 Body Start
GOTO 9231; if() #297 Body End
LOAD D2 0; if() #297 Else Start
DIVV D2 10
STORE D2 0; if() #297 Else End
GOTO 9231; unless() #296 Else End AND if() #295 Body End
LOAD D2 0.0002; if() #298 Test AND if() #295 Else Start
COMPAREV D2 46
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9235 ==; Test 'if'
LOAD D2 0.0005; if() #299 Test AND if() #298 Body Start
COMPAREV D2 0
GOTOCMP 9222 !=
LOAD D2 0.0001
COMPAREV D2 0
GOTOCMP 9222 !=
SETV D2 0
GOTO 9223
SETV D2 1
COMPAREV D2 0
GOTOCMP 9227 ==; Test 'if'
GOTO 9235; break 1; AND if() #299 Body Start
GOTO 9231; if() #299 Body End
SETV D2 1; if() #299 Else Start
STORE D2 0.0001; if() #299 Else End
GOTO 9231; if() #298 Body End
GOTO 9235; break 1; AND if() #298 Else
LOAD D2 0.0006; if() #295 Else End
ADDV D2 1
STORE D2 0.0006; while(true) #14 Body [Opt:AlwaysOn] End
GOTO 9156; while() #14 End
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0004
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0003; return Start
POPARGS D5 0.0008; return End
RETURNFUNC; Func[int __Tango_ReadNumber(char32[], int, bool, int[])] Body End
SETR D4 SP2; Func[bool __Tango_PressAdvance(int)] Body Start
LOAD D2 0; if() #272 Test
COMPAREV D2 90
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 9252 ==; Test 'if'
SETR D2 INPUTA; return Start AND if() #272 Body Start
GOTO 9253; return End AND if() #272 Body End
SETR D2 INPUTPRESSA; return Start AND if() #272 Else Start
POP D5; return End AND if() #272 Else End
RETURNFUNC; Func[bool __Tango_PressAdvance(int)] Body End
SETR D4 SP2; Func[bool __Tango_PressMenuCancel()] Body Start
SETR D2 INPUTPRESSB; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressMenuCancel()] Body End
SETR D4 SP2; Func[bool __Tango_PressMenuSelect()] Body Start
SETR D2 INPUTPRESSA; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressMenuSelect()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_PrintNextChar(int, char32, int[])] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0001
STOREV 0 0
LOAD D2 0.0001; if() #273 Test
ANDV D2 256
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 9289 ==; Test 'if'
PUSHR D4; if() #273 Body Start
PUSHV 4; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6113; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
PUSHR D2
PUSHR D4
PUSHV 6; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6113; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
POP D3
ADDR D2 D3
SUBV D2 16
STORE D2 0
GOTO 9296; if() #273 Body End
SETR D2 GD5; if() #273 Else Start
PUSHR D2
LOAD D2 0.0004
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0; if() #273 Else End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
PUSHR D4
CALLFUNC 0.6128; UsrFunc[int __Tango_GetCurrentCSet()] Call
POP D4
PUSHR D2
PUSHR D4
CALLFUNC 0.6160; UsrFunc[int __Tango_GetCurrentColor()] Call
POP D4
PUSHR D2
PUSHR D4
CALLFUNC 0.6240; UsrFunc[int __Tango_GetCurrentTileOffset()] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params End
CALLFUNC 0.4552; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_PrintNextChar(int, char32, int[])] Body End
PUSHARGSV 0 0.0018; Func[void __Tango_Process(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0017
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0016
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0015
STOREV 0 0.0014
PUSHR D4
LOAD D2 0.0017; UsrFunc[int Tango_GetSlotVar(int, int)] Params Start
PUSHR D2
PUSHV 3; UsrFunc[int Tango_GetSlotVar(int, int)] Params End
CALLFUNC 0.1199; UsrFunc[int Tango_GetSlotVar(int, int)] Call
POP D4
STORE D2 0.0013
SETR D2 GD4
PUSHR D2
LOAD D2 0.0013
POP D0
READPODARRAYR D2 D2
STORE D2 0.0012
LOAD D2 0.0017
MULTV D2 7
STORE D2 0.0011
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0.0010
STOREV 0 0.0009
STOREV 0 0.0008
STOREV 0 0.0007
STOREV 0 0.0006
STOREV 0 0.0005
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 32
COMPAREV D2 0
SETCMP D2 I!=
STORE D2 0.0004
STOREV 0 0.0003
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 12 D2
LOAD D2 0.0014; until() #12 Test
COMPAREV D2 0
GOTOCMP 10027 !=; Test 'until'
SETV D2 0; until() #12 Body Start
STORE D2 0.0009
SETV D2 0
STORE D2 0.0008
SETV D2 0
STORE D2 0.0003
LOAD D2 0.0012; if() #274 Test
COMPAREV D2 32
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 9495 ==; Test 'if'
SETR D2 GD5; if() #563 Test AND if() #274 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 21
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9457 ==; Test 'if'
SETV D2 0; if() #563 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 21
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #563 Body End
LOAD D2 0.0012
COMPAREV D2 32
SETCMP D2 I==
STORE D2 0.0003
PUSHR D4
LOAD D2 0.0016; UsrFunc[void __Tango_PrintNextChar(int, char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0012
PUSHR D2
LOAD D2 0.0010
PUSHR D2; UsrFunc[void __Tango_PrintNextChar(int, char32, int[])] Params End
CALLFUNC 0.9261; UsrFunc[void __Tango_PrintNextChar(int, char32, int[])] Call
POP D4
LOAD D2 0.0012; if() #564 Test
COMPAREV D2 32
GOTOCMP 9484 <=
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9484 !=
LOAD D2 0.0018
COMPAREV D2 2
GOTOCMP 9484 ==
LOAD D2 0.0004
COMPAREV D2 0
GOTOCMP 9484 !=
SETV D2 1
GOTO 9485
SETV D2 0
COMPAREV D2 0
GOTOCMP 9491 ==; Test 'if'
PUSHR D4; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #564 Body Start
CALLFUNC 0.6192; UsrFunc[int __Tango_GetCurrentSFX()] Call
POP D4; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body AND if() #564 Body End
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
GOTO 9811; if() #274 Body End
LOAD D2 0.0012; if() #275 Test AND if() #274 Else Start
COMPAREV D2 26
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9506 ==; Test 'if'
SETV D2 1; if() #275 Body Start
STORE D2 0.0009
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
GOTO 9811; if() #275 Body End
LOAD D2 0.0012; if() #276 Test AND if() #275 Else Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 9522 ==; Test 'if'
LOAD D2 0.0013; if() #276 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0013; UsrFunc[int __Tango_RunStringControlCode(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_RunStringControlCode(int)] Params End
CALLFUNC 1.0046; UsrFunc[int __Tango_RunStringControlCode(int)] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0.0013
GOTO 9811; if() #276 Body End
LOAD D2 0.0012; if() #277 Test AND if() #276 Else Start
COMPAREV D2 -300
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9573 ==; Test 'if'
PUSHR D4; if() #277 Body Start
LOAD D2 0.0013; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
PUSHR D2
PUSHV 1; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0645; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4
LOAD D2 0.0013
ADDV D2 6
STORE D2 0.0013
SETR D2 GD2; if() #565 Test
PUSHR D2
POP D0
READPODARRAYV D2 12
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 9811 ==; Test 'if'
SETR D2 GD2; if() #565 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0015
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0.0010
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 32
COMPAREV D2 0
SETCMP D2 I!=
STORE D2 0.0004
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 12 D2; if() #565 Body End
GOTO 9811; if() #277 Body End
LOAD D2 0.0012; if() #278 Test AND if() #277 Else Start
COMPAREV D2 -1000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9592 ==; Test 'if'
PUSHR D4; if() #278 Body Start
SETR D2 GD4; UsrFunc[void __Tango_SetAlternateColor(int)] Params Start
PUSHR D2
LOAD D2 0.0013
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[void __Tango_SetAlternateColor(int)] Params End
CALLFUNC 1.0714; UsrFunc[void __Tango_SetAlternateColor(int)] Call
POP D4
LOAD D2 0.0013
ADDV D2 2
STORE D2 0.0013
GOTO 9811; if() #278 Body End
LOAD D2 0.0012; if() #279 Test AND if() #278 Else Start
COMPAREV D2 -1100
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9604 ==; Test 'if'
PUSHR D4; if() #279 Body Start
CALLFUNC 0.3886; UsrFunc[void __Tango_ClearAlternateColor()] Call
POP D4
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
GOTO 9811; if() #279 Body End
LOAD D2 0.0012; if() #280 Test AND if() #279 Else Start
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9630 ==; Test 'if'
PUSHR D4; if() #280 Body Start
LOAD D2 0.0013; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
PUSHR D2
PUSHV 1; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7947; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #566 Test
COMPAREV D2 0
GOTOCMP 9624 <=
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9624 !=
SETV D2 1
GOTO 9625
SETV D2 0
COMPAREV D2 0
GOTOCMP 9811 ==; Test 'if'
SETV D2 1; if() #566 Body Start
STORE D2 0.0014; if() #566 Body End
GOTO 9811; if() #280 Body End
LOAD D2 0.0012; if() #281 Test AND if() #280 Else Start
COMPAREV D2 -600
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9655 ==; Test 'if'
PUSHR D4; if() #281 Body Start
LOAD D2 0.0013; UsrFunc[int __Tango_RunFlowControl(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_RunFlowControl(int)] Params End
CALLFUNC 1.0748; UsrFunc[int __Tango_RunFlowControl(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #567 Test
COMPAREV D2 0
GOTOCMP 9649 <=
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9649 !=
SETV D2 1
GOTO 9650
SETV D2 0
COMPAREV D2 0
GOTOCMP 9811 ==; Test 'if'
SETV D2 1; if() #567 Body Start
STORE D2 0.0014; if() #567 Body End
GOTO 9811; if() #281 Body End
LOAD D2 0.0012; if() #282 Test AND if() #281 Else Start
COMPAREV D2 -10000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9712 ==; Test 'if'
LOAD D2 0.0007; unless() #568 Test AND if() #282 Body Start
COMPAREV D2 0
GOTOCMP 9670 !=; Test 'unless'
PUSHR D4; unless() #568 Body Start
LOAD D2 0.0015; UsrFunc[void __Tango_InitializeMenu(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_InitializeMenu(int)] Params End
CALLFUNC 0.7032; UsrFunc[void __Tango_InitializeMenu(int)] Call
POP D4
SETV D2 1
STORE D2 0.0007; unless() #568 Body End
PUSHR D4
LOAD D2 0.0013; UsrFunc[void __Tango_ReadChoice(int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0011
PUSHR D2
LOAD D2 0.0016
PUSHR D2
LOAD D2 0.0015
PUSHR D2; UsrFunc[void __Tango_ReadChoice(int, int, int, int)] Params End
CALLFUNC 1.1029; UsrFunc[void __Tango_ReadChoice(int, int, int, int)] Call
POP D4
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0006
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0013
ADDV D2 2
STORE D2 0.0013
GOTO 9811; if() #282 Body End
LOAD D2 0.0012; if() #283 Test AND if() #282 Else Start
COMPAREV D2 -20000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9739 ==; Test 'if'
PUSHR D4; if() #283 Body Start
LOAD D2 0.0016; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params Start
PUSHR D2
LOAD D2 0.0007
PUSHR D2; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params End
CALLFUNC 1.1129; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Call
POP D4
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
SETV D2 1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 21
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 10027; break 1;
GOTO 9811; if() #283 Body End
LOAD D2 0.0012; if() #284 Test AND if() #283 Else Start
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9797 ==; Test 'if'
PUSHR D4; if() #284 Body Start
LOAD D2 0.0016; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params Start
PUSHR D2
LOAD D2 0.0007
PUSHR D2; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params End
CALLFUNC 1.1129; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Call
POP D4
SETV D2 2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD3; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
LOAD D2 0.0015
ADDV D2 14
POP D0
READPODARRAYR D2 D2; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
SETR D2 GD3; if() #569 Test
PUSHR D2
LOAD D2 0.0015
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 4
COMPAREV D2 0
GOTOCMP 9782 ==
LOAD D2 0.0018
COMPAREV D2 2
GOTOCMP 9782 ==
SETV D2 1
GOTO 9783
SETV D2 0
COMPAREV D2 0
GOTOCMP 10027 ==; Test 'if'
SETV D2 90; if() #569 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #569 Body End
GOTO 10027; break 1;
GOTO 9811; if() #284 Body End
LOAD D2 0.0012; if() #570 Test AND if() #284 Else Start
COMPAREV D2 -1
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 9808 ==; Test 'if'
PUSHR D4; if() #570 Body Start
PUSHV 201; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0012
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1416; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4; if() #570 Body End
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013; if() #284 Else End
SETR D2 GD4; if() #283 Else End AND if() #282 Else End AND if() #281 Else End AND if() #280 Else End AND if() #279 Else End AND if() #278 Else End AND if() #277 Else End AND if() #276 Else End AND if() #275 Else End AND if() #274 Else End
PUSHR D2
LOAD D2 0.0013
POP D0
READPODARRAYR D2 D2
STORE D2 0.0012
LOAD D2 0.0012; if() #571 Test
COMPAREV D2 33
GOTOCMP 9825 >=
LOAD D2 0.0012
COMPAREV D2 32
GOTOCMP 9825 ==
SETV D2 0
GOTO 9826
SETV D2 1
COMPAREV D2 0
GOTOCMP 9844 ==; Test 'if'
LOAD D2 0.0018; if() #572 Test AND if() #571 Body Start
COMPAREV D2 2
GOTOCMP 9839 ==
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9839 !=
LOAD D2 0.0004
COMPAREV D2 0
GOTOCMP 9839 !=
SETV D2 1
GOTO 9840
SETV D2 0
COMPAREV D2 0
GOTOCMP 9844 ==; Test 'if'
SETV D2 1; if() #572 Body Start
STORE D2 0.0008; if() #572 Body End
LOAD D2 0.0009; if() #571 Body End AND unless() #573 Test
COMPAREV D2 0
GOTOCMP 9855 !=; Test 'unless'
PUSHR D4; unless() #573 Body Start
LOAD D2 0.0017; UsrFunc[bool __Tango_NeedsNewLine(int, int)] Params Start
PUSHR D2
LOAD D2 0.0013
PUSHR D2; UsrFunc[bool __Tango_NeedsNewLine(int, int)] Params End
CALLFUNC 0.7738; UsrFunc[bool __Tango_NeedsNewLine(int, int)] Call
POP D4
STORE D2 0.0009; unless() #573 Body End
LOAD D2 0.0009; if() #574 Test
COMPAREV D2 0
GOTOCMP 9990 ==; Test 'if'
LOAD D2 0.0003; if() #575 Test AND if() #574 Body Start
COMPAREV D2 0
GOTOCMP 9886 ==; Test 'if'
SETR D2 GD5; if() #575 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
PUSHV 32; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
LOAD D2 0.0010
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3820; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #575 Body End
PUSHR D4
LOAD D2 0.0007; UsrFunc[int __Tango_StartNewLine(bool)] Params Start
PUSHR D2; UsrFunc[int __Tango_StartNewLine(bool)] Params End
CALLFUNC 1.1254; UsrFunc[int __Tango_StartNewLine(bool)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0005; if() #576 Test
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 9985 ==; Test 'if'
LOAD D2 0.0007; if() #285 Test AND if() #576 Body Start
COMPAREV D2 0
GOTOCMP 9905 !=
LOAD D2 0.0018
COMPAREV D2 2
GOTOCMP 9905 ==
SETV D2 0
GOTO 9906
SETV D2 1
COMPAREV D2 0
GOTOCMP 9973 ==; Test 'if'
SETR D2 GD5; if() #577 Test AND if() #285 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9945 ==; Test 'if'
SETR D2 GD5; if() #577 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0005
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #577 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0005
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0007; if() #578 Test
COMPAREV D2 0
GOTOCMP 9985 ==; Test 'if'
PUSHR D4; if() #578 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_ShiftMenuUp(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ShiftMenuUp(int)] Params End
CALLFUNC 1.1316; UsrFunc[void __Tango_ShiftMenuUp(int)] Call
POP D4; if() #578 Body End
GOTO 9985; if() #285 Body End
LOAD D2 0.0005; if() #285 Else Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1
STORE D2 0.0014; if() #285 Else End
LOAD D2 0.0004; if() #576 Body End AND if() #579 Test
COMPAREV D2 0
GOTOCMP 9990 ==; Test 'if'
SETV D2 1; if() #579 Body Start
STORE D2 0.0008; if() #579 Body End
LOAD D2 0.0008; if() #574 Body End AND if() #580 Test
COMPAREV D2 0
GOTOCMP 9408 ==; Test 'if'
SETR D2 GD5; if() #580 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
CALLFUNC 0.6212; UsrFunc[int __Tango_GetCurrentSpeed()] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD5; if() #581 Test
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 9408 ==; Test 'if'
SETV D2 1; if() #581 Body Start
STORE D2 0.0014; if() #581 Body End
GOTO 9408; if() #580 Body End AND until() #12 Body End AND until() #12 End
LOAD D2 0.0004; if() #582 Test
COMPAREV D2 0
GOTOCMP 10034 ==; Test 'if'
PUSHR D4; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #582 Body Start
CALLFUNC 0.6192; UsrFunc[int __Tango_GetCurrentSFX()] Call
POP D4; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body AND if() #582 Body End
LOAD D2 0.0013
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0019
RETURNFUNC; Func[void __Tango_Process(int)] Body End
PUSHARGSV 0 0.0005; Func[int __Tango_RunStringControlCode(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
PUSHR D4
LOAD D2 0.0004; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params End
CALLFUNC 0.6700; UsrFunc[int __Tango_GetNumSCCArgs(int)] Call
POP D4
STORE D2 0.0003
ALLOCATEMEMV D2 3 0
STORE D2 0.0001
WRITEPODARRAY D2 {0,0,0}
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
STOREV 0 0; for() #156 setup
LOAD D2 0; for() #156 LoopTest
PUSHR D2
LOAD D2 0.0003
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 10095 ==; for() #156 TestFail?
SETR D2 GD4; for() #156 Body Start
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; for() #156 Body End
LOAD D2 0; for() #156 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 10067; for() #156 End
LOAD D2 0.0004; if() #340 Test
COMPAREV D2 11
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 10339 ==; Test 'if'
LOAD D2 0.0004; if() #341 Test AND if() #340 Body Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10123 ==; Test 'if'
PUSHR D4; if() #341 Body Start
PUSHV 0.2015; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1480; UsrFunc[void __Tango_SetVar(int, int)] Call
PEEK D4
PUSHV 1.3059; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1480; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
GOTO 10636; if() #341 Body End
LOAD D2 0.0004; if() #342 Test AND if() #341 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10138 ==; Test 'if'
PUSHR D4; if() #342 Body Start
PUSHV 5.1391; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1480; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
GOTO 10636; if() #342 Body End
LOAD D2 0.0004; if() #343 Test AND if() #342 Else Start
COMPAREV D2 4
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10169 ==; Test 'if'
LOAD D2 0.0001; if() #607 Test AND if() #343 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 SDD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10636 ==; Test 'if'
PUSHR D4; if() #607 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5606; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #607 Body End
GOTO 10636; if() #343 Body End
LOAD D2 0.0004; if() #344 Test AND if() #343 Else Start
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10193 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[int Rand(int)] Params Start AND if() #608 Test AND if() #344 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
SETR D3 D2; InlineFunc[int Rand(int)] Params End
RNDR D2 D3; InlineFunc[int Rand(int)] Body
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10636 ==; Test 'if'
PUSHR D4; if() #608 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5606; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #608 Body End
GOTO 10636; if() #344 Body End
LOAD D2 0.0004; if() #345 Test AND if() #344 Else Start
COMPAREV D2 6
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10216 ==; Test 'if'
LOAD D2 0.0001; if() #609 Test AND if() #345 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 LINKITEMD
COMPAREV D2 0
GOTOCMP 10636 ==; Test 'if'
PUSHR D4; if() #609 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5606; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #609 Body End
GOTO 10636; if() #345 Body End
LOAD D2 0.0004; if() #346 Test AND if() #345 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10247 ==; Test 'if'
LOAD D2 0.0001; if() #610 Test AND if() #346 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10636 ==; Test 'if'
PUSHR D4; if() #610 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5606; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #610 Body End
GOTO 10636; if() #346 Body End
LOAD D2 0.0004; if() #347 Test AND if() #346 Else Start
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10290 ==; Test 'if'
LOAD D2 0.0001; if() #611 Test AND if() #347 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
POP D3
DIVR D3 D2
SETR D2 D3
MULTV D2 100
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10636 ==; Test 'if'
PUSHR D4; if() #611 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5606; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #611 Body End
GOTO 10636; if() #347 Body End
LOAD D2 0.0004; if() #348 Test AND if() #347 Else Start
COMPAREV D2 9
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10316 ==; Test 'if'
LOAD D2 0.0001; if() #612 Test AND if() #348 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMELITEMSD
ANDV D2 1
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 10636 ==; Test 'if'
PUSHR D4; if() #612 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5606; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #612 Body End
GOTO 10636; if() #348 Body End
PUSHR D4; if() #613 Test AND if() #348 Else Start
PUSHV 8; UsrFunc[int NumTriforcePieces(int)] Params
CALLFUNC 0.0052; UsrFunc[int NumTriforcePieces(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10636 ==; Test 'if'
PUSHR D4; if() #613 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5606; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #613 Body End
GOTO 10636; if() #348 Else End AND if() #347 Else End AND if() #346 Else End AND if() #345 Else End AND if() #344 Else End AND if() #343 Else End AND if() #342 Else End AND if() #341 Else End AND if() #340 Body End
LOAD D2 0.0004; if() #349 Test AND if() #340 Else Start
COMPAREV D2 11
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10377 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[int Min(int, int)] Params Start AND if() #349 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
ADDR D2 D3
PUSHVARGR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHVARGR GAMEMCOUNTERD; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10636; if() #349 Body End
LOAD D2 0.0004; if() #350 Test AND if() #349 Else Start
COMPAREV D2 12
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10409 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[int Max(int, int)] Params Start AND if() #350 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
SUBR D3 D2
PUSHVARGR D3
PUSHVARGV 0; InlineFunc[int Max(int, int)] Params End
MAXVARG; InlineFunc[int Max(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10636; if() #350 Body End
LOAD D2 0.0004; if() #351 Test AND if() #350 Else Start
COMPAREV D2 13
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10440 ==; Test 'if'
PUSHR D4; if() #351 Body Start
LOAD D2 0.0001; UsrFunc[int Clamp(int, int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2
PUSHV 0
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHR GAMEMCOUNTERD; UsrFunc[int Clamp(int, int, int)] Params End
CALLFUNC 0.0027; UsrFunc[int Clamp(int, int, int)] Call
POP D4
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10636; if() #351 Body End
LOAD D2 0.0004; if() #352 Test AND if() #351 Else Start
COMPAREV D2 14
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10492 ==; Test 'if'
LOAD D2 0.0001; if() #352 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
MULTR D2 D3
DIVV D2 100
LSHIFTV D2 0
STORE D2 0
LOAD D2 0.0001; InlineFunc[int Min(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHVARGR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHVARGR GAMEMCOUNTERD; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10636; if() #352 Body End
LOAD D2 0.0004; if() #353 Test AND if() #352 Else Start
COMPAREV D2 15
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10538 ==; Test 'if'
LOAD D2 0.0001; if() #353 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
MULTR D2 D3
DIVV D2 100
LSHIFTV D2 0
STORE D2 0
LOAD D2 0.0001; InlineFunc[int Max(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0
POP D3
SUBR D3 D2
PUSHVARGR D3
PUSHVARGV 0; InlineFunc[int Max(int, int)] Params End
MAXVARG; InlineFunc[int Max(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10636; if() #353 Body End
LOAD D2 0.0004; if() #354 Test AND if() #353 Else Start
COMPAREV D2 16
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10583 ==; Test 'if'
LOAD D2 0.0001; if() #354 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
MULTR D2 D3
DIVV D2 100
LSHIFTV D2 0
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[int Clamp(int, int, int)] Params Start
PUSHR D2
PUSHV 0
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHR GAMEMCOUNTERD; UsrFunc[int Clamp(int, int, int)] Params End
CALLFUNC 0.0027; UsrFunc[int Clamp(int, int, int)] Call
POP D4
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10636; if() #354 Body End
LOAD D2 0.0004; if() #355 Test AND if() #354 Else Start
COMPAREV D2 17
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10599 ==; Test 'if'
SETV D2 1; if() #355 Body Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR LINKITEMD D2
GOTO 10636; if() #355 Body End
LOAD D2 0.0004; if() #356 Test AND if() #355 Else Start
COMPAREV D2 18
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10615 ==; Test 'if'
SETV D2 0; if() #356 Body Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR LINKITEMD D2
GOTO 10636; if() #356 Body End
LOAD D2 0.0004; if() #357 Test AND if() #356 Else Start
COMPAREV D2 21
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10626 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #357 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
GOTO 10636; if() #357 Body End
LOAD D2 0.0004; if() #614 Test AND if() #357 Else Start
COMPAREV D2 22
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10636 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[void Audio::PlayMIDI(int)] Params Start AND if() #614 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0; InlineFunc[void Audio::PlayMIDI(int)] Params End
PLAYMIDIR D2; InlineFunc[void Audio::PlayMIDI(int)] Body AND if() #614 Body End
LOAD D2 0.0003; if() #357 Else End AND if() #356 Else End AND if() #355 Else End AND if() #354 Else End AND if() #353 Else End AND if() #352 Else End AND if() #351 Else End AND if() #350 Else End AND if() #349 Else End AND if() #340 Else End AND return Start
ADDV D2 1
LOAD D3 0.0001
DEALLOCATEMEMR D3
GOTO 10643; return End
LOAD D3 0.0001
DEALLOCATEMEMR D3
POPARGS D5 0.0006
RETURNFUNC; Func[int __Tango_RunStringControlCode(int)] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_RunSetter(int, bool)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
PUSHR D4
LOAD D2 0.0005; UsrFunc[int __Tango_ReadArgLength(int)] Params Start
ADDV D2 4
PUSHR D2; UsrFunc[int __Tango_ReadArgLength(int)] Params End
CALLFUNC 1.1402; UsrFunc[int __Tango_ReadArgLength(int)] Call
POP D4
STORE D2 0.0001
PUSHR D4
LOAD D2 0.0005; UsrFunc[int __Tango_ReadArg(int)] Params Start
ADDV D2 4
PUSHR D2; UsrFunc[int __Tango_ReadArg(int)] Params End
CALLFUNC 1.1358; UsrFunc[int __Tango_ReadArg(int)] Call
POP D4
STORE D2 0
LOAD D2 0.0003; if() #605 Test
COMPAREV D2 0.0542
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10690 ==; Test 'if'
LOAD D2 0; if() #605 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0002; UsrFunc[int __Tango_GetVar(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetVar(int)] Params End
CALLFUNC 0.6820; UsrFunc[int __Tango_GetVar(int)] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0; if() #605 Body End
PUSHR D4
LOAD D2 0.0002; UsrFunc[void __Tango_SetVar(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1480; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
LOAD D2 0.0004; if() #606 Test
COMPAREV D2 0
GOTOCMP 10712 ==; Test 'if'
PUSHR D4; if() #606 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_Delete(int, int)] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 3
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[void __Tango_Delete(int, int)] Params End
CALLFUNC 0.3960; UsrFunc[void __Tango_Delete(int, int)] Call
POP D4; if() #606 Body End
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_RunSetter(int, bool)] Body End
SETR D4 SP2; Func[void __Tango_SetAlternateColor(int)] Body Start
PUSHR D4
PUSHV 10; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCurrStyleData(int)] Params Start
ADDV D2 35
PUSHR D2; UsrFunc[int __Tango_GetCurrStyleData(int)] Params End
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 11; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCurrStyleData(int)] Params Start
ADDV D2 39
PUSHR D2; UsrFunc[int __Tango_GetCurrStyleData(int)] Params End
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 12; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCurrStyleData(int)] Params Start
ADDV D2 43
PUSHR D2; UsrFunc[int __Tango_GetCurrStyleData(int)] Params End
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
POP D5
RETURNFUNC; Func[void __Tango_SetAlternateColor(int)] Body End
PUSHARGSV 0 0.0007; Func[int __Tango_RunFlowControl(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0007
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0006
STOREV 0 0.0005
STOREV 1 0.0004
STOREV 0 0.0003
STOREV 0 0.0002
LOAD D2 0.0006; if() #592 Test
COMPAREV D2 0.2441
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 10782 ==; Test 'if'
PUSHR D4; if() #592 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_ReadArgLength(int)] Params Start
ADDV D2 2
PUSHR D2; UsrFunc[int __Tango_ReadArgLength(int)] Params End
CALLFUNC 1.1402; UsrFunc[int __Tango_ReadArgLength(int)] Call
POP D4
STORE D2 0.0003
PUSHR D4
LOAD D2 0.0007; UsrFunc[int __Tango_ReadArg(int)] Params Start
ADDV D2 2
PUSHR D2; UsrFunc[int __Tango_ReadArg(int)] Params End
CALLFUNC 1.1358; UsrFunc[int __Tango_ReadArg(int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I!=
STORE D2 0.0002; if() #592 Body End
LOAD D2 0.0006; if() #301 Test
COMPAREV D2 0.0069
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10840 ==; Test 'if'
LOAD D2 0.0002; if() #302 Test AND if() #301 Body Start
COMPAREV D2 0
GOTOCMP 10834 ==; Test 'if'
PUSHR D4; if() #302 Body Start
PUSHV 20; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETR D2 GD4; if() #303 Test
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10822 ==; Test 'if'
PUSHR D4; if() #303 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7947; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0.0005
GOTO 11000; if() #303 Body End
PUSHR D4; if() #303 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0645; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #303 Else End
GOTO 11000; if() #302 Body End
PUSHR D4; if() #302 Else Start
PUSHV 20; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4; if() #302 Else End
GOTO 11000; if() #301 Body End
LOAD D2 0.0006; if() #304 Test AND if() #301 Else Start
COMPAREV D2 11.9678
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10903 ==; Test 'if'
LOAD D2 0.0002; if() #593 Test AND if() #304 Body Start
COMPAREV D2 0
GOTOCMP 10856 ==
PUSHR D4
PUSHV 20; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 10856 !=
SETV D2 1
GOTO 10857
SETV D2 0
COMPAREV D2 0
GOTOCMP 11000 ==; Test 'if'
PUSHR D4; if() #593 Body Start
PUSHV 20; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETR D2 GD4; if() #305 Test
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10891 ==; Test 'if'
PUSHR D4; if() #305 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7947; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0.0005
GOTO 11000; if() #305 Body End
PUSHR D4; if() #305 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0645; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #305 Else End
GOTO 11000; if() #593 Body End AND if() #304 Body End
LOAD D2 0.0006; if() #306 Test AND if() #304 Else Start
COMPAREV D2 0.2441
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10943 ==; Test 'if'
PUSHR D4; if() #594 Test AND if() #306 Body Start
PUSHV 20; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.2991; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11000 ==; Test 'if'
SETR D2 GD4; if() #307 Test AND if() #594 Body Start
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10935 ==; Test 'if'
PUSHR D4; if() #307 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7947; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0.0005
GOTO 11000; if() #307 Body End
PUSHR D4; if() #307 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0645; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #307 Else End
GOTO 11000; if() #594 Body End AND if() #306 Body End
LOAD D2 0.0006; if() #308 Test AND if() #306 Else Start
COMPAREV D2 5.8497
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10993 ==; Test 'if'
LOAD D2 0.0002; if() #595 Test AND if() #308 Body Start
COMPAREV D2 0
GOTOCMP 11000 ==; Test 'if'
SETR D2 GD4; if() #309 Test AND if() #595 Body Start
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10977 ==; Test 'if'
PUSHR D4; if() #309 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7947; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
GOTO 10988; if() #309 Body End
PUSHR D4; if() #309 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0645; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #309 Else End
SETV D2 1
STORE D2 0.0005
SETV D2 0
STORE D2 0.0004; if() #595 Body End
GOTO 11000; if() #308 Body End
LOAD D2 0.0002; unless() #596 Test AND if() #308 Else Start
COMPAREV D2 0
GOTOCMP 11000 !=; Test 'unless'
SETV D2 1; unless() #596 Body Start
STORE D2 0.0005
SETV D2 0
STORE D2 0.0004; unless() #596 Body End
LOAD D2 0.0004; if() #308 Else End AND if() #306 Else End AND if() #304 Else End AND if() #301 Else End AND if() #597 Test
COMPAREV D2 0
GOTOCMP 11026 ==; Test 'if'
LOAD D2 0.0007; if() #597 Body Start
ADDV D2 4
STORE D2 0
SETR D2 GD4; while() #15 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -700
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 11019 ==; Test 'while'
LOAD D2 0; while() #15 Body Start
ADDV D2 1
STORE D2 0; while() #15 Body End
GOTO 11006; while() #15 End
PUSHR D4
LOAD D2 0.0007; UsrFunc[void __Tango_Delete(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_Delete(int, int)] Params End
CALLFUNC 0.3960; UsrFunc[void __Tango_Delete(int, int)] Call
POP D4; if() #597 Body End
LOAD D2 0.0005; return Start
POPARGS D5 0.0008; return End
RETURNFUNC; Func[int __Tango_RunFlowControl(int)] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_ReadChoice(int, int, int, int)] Body Start
SETR D4 SP2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0005
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 7
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 7
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 5
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0005
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0001
SETR D2 GD4
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[void Tango_AddMenuChoice(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void Tango_AddMenuChoice(int, int, int)] Params End
CALLFUNC 0.0512; UsrFunc[void Tango_AddMenuChoice(int, int, int)] Call
POP D4
POPARGS D5 0.0007
RETURNFUNC; Func[void __Tango_ReadChoice(int, int, int, int)] Body End
PUSHARGSV 0 0.0006; Func[void __Tango_TransferCenteredLine(int, bool)] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0005; if() #628 Test
ANDV D2 256
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11252 !=; Test 'if' AND return (Void) AND if() #628 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 16
STORE D2 0.0002
PUSHR D4
PUSHV 8; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0001
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0003
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
SUBR D3 D2
SETR D2 D3
DIVV D2 2
STORE D2 0
PUSHV 0; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params Start
PUSHV 6
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
LOAD D2 0.0003
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
PUSHV 0
PUSHV 1; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params End
BITMAPR; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body End
PUSHV 0; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
ADDV D2 16
PUSHR D2
PUSHV 0
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
PUSHV 128; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
LOAD D2 0.0006; if() #629 Test
COMPAREV D2 0
GOTOCMP 11252 ==; Test 'if'
PUSHR D4; if() #629 Body Start
LOAD D2 0; UsrFunc[void __Tango_ShiftMenuRight(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ShiftMenuRight(int)] Params End
CALLFUNC 1.1980; UsrFunc[void __Tango_ShiftMenuRight(int)] Call
POP D4; if() #629 Body End
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_TransferCenteredLine(int, bool)] Body End
PUSHV 0; Func[int __Tango_StartNewLine(bool)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params End
CALLFUNC 1.1129; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Call
PEEK D4
PUSHV 3; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6113; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
CALLFUNC 0.6246; UsrFunc[int __Tango_GetLineHeight()] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 5
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4; return Start
CALLFUNC 0.6791; UsrFunc[int __Tango_GetTargetOffset()] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_StartNewLine(bool)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ShiftMenuUp(int)] Body Start
SETR D4 SP2
STOREV 35 0.0001
STOREV 0 0; for() #161 setup
LOAD D2 0; for() #161 LoopTest
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 11356 ==; for() #161 TestFail?
SETR D2 GD2; for() #161 Body Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
ADDV D2 3
STORE D2 0.0001; for() #161 Body End
LOAD D2 0; for() #161 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 11320; for() #161 End
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_ShiftMenuUp(int)] Body End
PUSHV 0; Func[int __Tango_ReadArg(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #288 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11378 ==; Test 'if'
PUSHR D4; return Start AND if() #288 Body Start
LOAD D2 0.0001; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7947; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
GOTO 11400; return End AND if() #288 Body End
LOAD D2 0; if() #289 Test AND if() #288 Else Start
COMPAREV D2 -200
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11394 ==; Test 'if'
PUSHR D4; return Start AND if() #289 Body Start
SETR D2 GD4; UsrFunc[int __Tango_GetVar(int)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[int __Tango_GetVar(int)] Params End
CALLFUNC 0.6820; UsrFunc[int __Tango_GetVar(int)] Call
POP D4
GOTO 11400; return End AND if() #289 Body End
SETR D2 GD4; return Start AND if() #289 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End AND if() #289 Else End AND if() #288 Else End
RETURNFUNC; Func[int __Tango_ReadArg(int)] Body End
PUSHARGSV 0 0.0004; Func[int __Tango_ReadArgLength(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0004
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
LOAD D2 0.0003; if() #290 Test
COMPAREV D2 -100
GOTOCMP 11418 ==
LOAD D2 0.0003
COMPAREV D2 -200
GOTOCMP 11418 ==
SETV D2 0
GOTO 11419
SETV D2 1
COMPAREV D2 0
GOTOCMP 11423 ==; Test 'if'
SETV D2 2; return Start AND if() #290 Body Start
GOTO 11469; return End AND if() #290 Body End
LOAD D2 0.0003; if() #291 Test AND if() #290 Else Start
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11468 ==; Test 'if'
STOREV 0 0.0002; if() #291 Body Start
STOREV 0 0.0001
STOREV 0 0
SETR D2 GD4; do-while() #1 Body Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; if() #292 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11450 ==; Test 'if'
LOAD D2 0.0002; if() #292 Body Start
ADDV D2 1
STORE D2 0.0002
GOTO 11458; if() #292 Body End
LOAD D2 0.0001; if() #585 Test AND if() #292 Else Start
COMPAREV D2 -500
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11458 ==; Test 'if'
LOAD D2 0.0002; if() #585 Body Start
SUBV D2 1
STORE D2 0.0002; if() #585 Body End
LOAD D2 0; if() #292 Else End
ADDV D2 1
STORE D2 0; do-while() #1 Body End
LOAD D2 0.0002; do-while() #1 Test
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 11431 !=; Test 'while'
LOAD D2 0; return Start
GOTO 11469; return End AND if() #291 Body End
SETV D2 0; return Start AND if() #291 Else Start
POPARGS D5 0.0005; return End AND if() #291 Else End AND if() #290 Else End
RETURNFUNC; Func[int __Tango_ReadArgLength(int)] Body End
SETR D4 SP2; Func[int __Tango_RunCustomFunction(int, int[])] Body Start
PUSHR D4
LOAD D2 0.0001; UsrFunc[void Tango_LogUndefinedFunction(int)] Params Start
PUSHR D2; UsrFunc[void Tango_LogUndefinedFunction(int)] Params End
CALLFUNC 0.1407; UsrFunc[void Tango_LogUndefinedFunction(int)] Call
POP D4
SETV D2 0; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_RunCustomFunction(int, int[])] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_SetVar(int, int)] Body Start
SETR D4 SP2
LOAD D2 0.0003; if() #368 Test
COMPAREV D2 0.0034
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11494 ==; Test 'if'
PUSHR D4; if() #368 Body Start
PUSHV 22; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11648; if() #368 Body End
LOAD D2 0.0003; if() #369 Test AND if() #368 Else Start
COMPAREV D2 0.0035
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11506 ==; Test 'if'
PUSHR D4; if() #369 Body Start
PUSHV 23; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11648; if() #369 Body End
LOAD D2 0.0003; if() #370 Test AND if() #369 Else Start
COMPAREV D2 0.2015
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11518 ==; Test 'if'
PUSHR D4; if() #370 Body Start
PUSHV 8; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11648; if() #370 Body End
LOAD D2 0.0003; if() #371 Test AND if() #370 Else Start
COMPAREV D2 1.3059
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11530 ==; Test 'if'
PUSHR D4; if() #371 Body Start
PUSHV 9; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11648; if() #371 Body End
LOAD D2 0.0003; if() #372 Test AND if() #371 Else Start
COMPAREV D2 5.1391
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11542 ==; Test 'if'
PUSHR D4; if() #372 Body Start
PUSHV 13; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11648; if() #372 Body End
LOAD D2 0.0003; if() #373 Test AND if() #372 Else Start
COMPAREV D2 0.0997
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11554 ==; Test 'if'
PUSHR D4; if() #373 Body Start
PUSHV 14; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11648; if() #373 Body End
LOAD D2 0.0003; if() #374 Test AND if() #373 Else Start
COMPAREV D2 5.3793
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11605 ==; Test 'if'
PUSHR D4; if() #374 Body Start
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3776; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #626 Test
ANDV D2 512
COMPAREV D2 0
GOTOCMP 11571 ==; Test 'if'
PUSHR D4; if() #626 Body Start
CALLFUNC 0.0970; UsrFunc[void __Tango_DecScreenFreeze()] Call
POP D4; if() #626 Body End
PUSHR D4
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
LOAD D2 0.0002
MULTV D2 48
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 5 D2
SETV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 12 D2
PUSHR D4
LOAD D2 0.0002; UsrFunc[int Tango_GetStyleAttribute(int, int)] Params Start
PUSHR D2
PUSHV 35; UsrFunc[int Tango_GetStyleAttribute(int, int)] Params End
CALLFUNC 0.1282; UsrFunc[int Tango_GetStyleAttribute(int, int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #627 Test
ANDV D2 512
COMPAREV D2 0
GOTOCMP 11648 ==; Test 'if'
PUSHR D4; if() #627 Body Start
CALLFUNC 0.0487; UsrFunc[void __Tango_IncScreenFreeze()] Call
POP D4; if() #627 Body End
GOTO 11648; if() #374 Body End
LOAD D2 0.0003; if() #375 Test AND if() #374 Else Start
COMPAREV D2 0.0024
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11617 ==; Test 'if'
PUSHR D4; if() #375 Body Start
PUSHV 6; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11648; if() #375 Body End
LOAD D2 0.0003; if() #376 Test AND if() #375 Else Start
COMPAREV D2 0.0025
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11629 ==; Test 'if'
PUSHR D4; if() #376 Body Start
PUSHV 7; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11648; if() #376 Body End
LOAD D2 0.0003; if() #377 Test AND if() #376 Else Start
COMPAREV D2 0.5235
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11641 ==; Test 'if'
PUSHR D4; if() #377 Body Start
PUSHV 18; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3901; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11648; if() #377 Body End
PUSHR D4; if() #377 Else Start
LOAD D2 0.0003; UsrFunc[void Tango_SetCustomVar(int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void Tango_SetCustomVar(int, int)] Params End
CALLFUNC 0.1711; UsrFunc[void Tango_SetCustomVar(int, int)] Call
POP D4; if() #377 Else End
POPARGS D5 0.0004; if() #376 Else End AND if() #375 Else End AND if() #374 Else End AND if() #373 Else End AND if() #372 Else End AND if() #371 Else End AND if() #370 Else End AND if() #369 Else End AND if() #368 Else End
RETURNFUNC; Func[void __Tango_SetVar(int, int)] Body End
PUSHARGSV 0 0.0002; Func[bool __Tango_Scroll(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
LOAD D2 0.0002; if() #358 Test
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11737 ==; Test 'if'
SETR D2 GD5; if() #358 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD5; if() #617 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11706 ==; Test 'if'
SETR D2 GD5; if() #617 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #617 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1; return Start
GOTO 11978; return End AND if() #358 Body End
STOREV 4 0; if() #358 Else Start
LOAD D2 0.0002; if() #618 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11746 ==; Test 'if'
LOAD D2 0; if() #618 Body Start
MULTV D2 5
STORE D2 0; if() #618 Body End
SETR D2 GD5; if() #359 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 11834 ==; Test 'if'
SETR D2 GD5; if() #359 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD5; if() #619 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 11803 ==; Test 'if'
SETR D2 GD5; if() #619 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #619 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1; return Start
GOTO 11978; return End AND if() #359 Body End
SETR D2 GD5; if() #360 Test AND if() #359 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11901 ==; Test 'if'
SETR D2 GD5; if() #620 Test AND if() #360 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 11881 ==; Test 'if'
SETR D2 GD5; if() #620 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #620 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 11957; if() #360 Body End
SETR D2 GD5; if() #621 Test AND if() #360 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11938 ==; Test 'if'
SETR D2 GD5; if() #621 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #621 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #360 Else End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0; return Start
POPARGS D5 0.0003; return End AND if() #359 Else End AND if() #358 Else End
RETURNFUNC; Func[bool __Tango_Scroll(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ShiftMenuRight(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 32
MULTV D2 3
ADDV D2 34
STORE D2 0.0001
SETR D2 GD2; for() #160 setup
PUSHR D2
POP D0
READPODARRAYV D2 32
STORE D2 0
LOAD D2 0; for() #160 LoopTest
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 12029 ==; for() #160 TestFail?
SETR D2 GD2; for() #160 Body Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
ADDV D2 3
STORE D2 0.0001; for() #160 Body End
LOAD D2 0; for() #160 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 11994; for() #160 End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 32 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_ShiftMenuRight(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_UpdateActiveSlot(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
STOREV 1 0
SETR D2 GD5; if() #632 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12075 ==; Test 'if'
PUSHR D4; if() #632 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_CountDown(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_CountDown(int)] Params End
CALLFUNC 0.3920; UsrFunc[void __Tango_CountDown(int)] Call
POP D4
SETR D2 GD5; if() #633 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12075 ==; Test 'if'
SETV D2 0; if() #633 Body Start
STORE D2 0; if() #633 Body End
SETR D2 GD5; if() #632 Body End AND if() #634 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12102 ==; Test 'if'
PUSHR D4; if() #634 Body Start
LOAD D2 0.0002; UsrFunc[bool __Tango_Scroll(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_Scroll(int)] Params End
CALLFUNC 1.1650; UsrFunc[bool __Tango_Scroll(int)] Call
POP D4
SETR D2 GD5; if() #635 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12102 ==; Test 'if'
SETV D2 0; if() #635 Body Start
STORE D2 0; if() #635 Body End
LOAD D2 0; if() #634 Body End AND if() #636 Test
COMPAREV D2 0
GOTOCMP 12110 ==; Test 'if'
PUSHR D4; if() #636 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_Process(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_Process(int)] Params End
CALLFUNC 0.9345; UsrFunc[void __Tango_Process(int)] Call
POP D4; if() #636 Body End
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_UpdateActiveSlot(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_UpdateAdvancing(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #638 Test AND if(true) #637 [Opt:AlwaysOn]
LOAD D2 0.0002; UsrFunc[bool __Tango_Scroll(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_Scroll(int)] Params End
CALLFUNC 1.1650; UsrFunc[bool __Tango_Scroll(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 12247 ==; Test 'unless' AND return (Void) AND unless() #638 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0
PUSHR D4
SETR D2 GD2; UsrFunc[void Tango_LoadMessage(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[void Tango_LoadMessage(int, int)] Params End
CALLFUNC 0.1396; UsrFunc[void Tango_LoadMessage(int, int)] Call
POP D4
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
PUSHV 1; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6113; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 5
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
SETR D2 GD2; UsrFunc[void __Tango_ClearSlotBitmap(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_ClearSlotBitmap(int)] Params End
CALLFUNC 0.0421; UsrFunc[void __Tango_ClearSlotBitmap(int)] Call
POP D4
SETV D2 1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_UpdateAdvancing(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_UpdateFinishedSlot(int, int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
STOREV 0 0
LOAD D2 0.0003; if() #386 Test
ANDV D2 4
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 12294 ==; Test 'if'
SETR D2 GD5; if() #387 Test AND if() #386 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12291 ==; Test 'if'
PUSHR D4; if() #387 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_CountDown(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_CountDown(int)] Params End
CALLFUNC 0.3920; UsrFunc[void __Tango_CountDown(int)] Call
POP D4
SETR D2 GD5; if() #652 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 12366 ==; Test 'if'
SETV D2 1; if() #652 Body Start
STORE D2 0; if() #652 Body End
GOTO 12366; if() #387 Body End
SETV D2 1; if() #387 Else Start
STORE D2 0; if() #387 Else End
GOTO 12366; if() #386 Body End
PUSHR D4; if() #388 Test AND if() #386 Else Start
SETR D2 GD5; UsrFunc[bool __Tango_PressAdvance(int)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[bool __Tango_PressAdvance(int)] Params End
CALLFUNC 0.9244; UsrFunc[bool __Tango_PressAdvance(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 12350 ==; Test 'if'
SETV D2 1; if() #388 Body Start
STORE D2 0
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
PUSHR D4; if() #389 Test AND if(true) #653 [Opt:AlwaysOn]
CALLFUNC 0.0506; UsrFunc[bool __Tango_PressSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 12334 ==; Test 'if'
SETV D2 1; if() #389 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 19
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 12366; if() #389 Body End
PUSHR D4; if() #654 Test AND if() #389 Else Start
CALLFUNC 0.0509; UsrFunc[bool __Tango_PressSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 12366 ==; Test 'if'
SETV D2 2; if() #654 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 19
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #654 Body End
GOTO 12366; if() #389 Else End AND if() #388 Body End
SETR D2 GD5; if() #388 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
ADDV D2 1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #388 Else End
LOAD D2 0; if() #386 Else End AND if() #655 Test
COMPAREV D2 0
GOTOCMP 12397 ==; Test 'if'
SETR D2 GD5; if() #390 Test AND if() #655 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 12394 ==; Test 'if'
LOAD D2 0.0003; if() #656 Test AND if() #390 Body Start
ANDV D2 128
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 12397 ==; Test 'if'
PUSHR D4; if() #656 Body Start
SETR D2 GD2; UsrFunc[void Tango_ClearSlot(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void Tango_ClearSlot(int)] Params End
CALLFUNC 0.0646; UsrFunc[void Tango_ClearSlot(int)] Call
POP D4; if() #656 Body End
GOTO 12397; if() #390 Body End
PUSHR D4; if() #390 Else Start
CALLFUNC 0.3715; UsrFunc[void __Tango_BeginAdvancing()] Call
POP D4; if() #390 Else End
POPARGS D5 0.0004; if() #655 Body End
RETURNFUNC; Func[void __Tango_UpdateFinishedSlot(int, int)] Body End
SETR D4 SP2; Func[void __Tango_UpdateCursorMovement()] Body Start
SETR D2 GD2; if() #651 Test
PUSHR D2
POP D0
READPODARRAYV D2 31
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 12485 !=; Test 'if' AND return (Void) AND if() #651 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 31
SUBV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 31 D2
SETR D2 GD2; if() #385 Test
PUSHR D2
POP D0
READPODARRAYV D2 31
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 12453 ==; Test 'if'
PUSHR D4; if() #385 Body Start
SETR D2 GD2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 15
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1509; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 27 D2
PUSHR D4
SETR D2 GD2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 15
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1519; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 28 D2
GOTO 12485; if() #385 Body End
SETR D2 GD2; if() #385 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 27
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 29
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 27 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 28
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 30
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 28 D2; if() #385 Else End
RETURNFUNC; Func[void __Tango_UpdateCursorMovement()] Body End


SETV GD13 0; void run() Body Start
ALLOCATEGMEMV D2 18000 0
SETR GD15 D2
SETV GD8 0
SETV GD7 0
ALLOCATEGMEMV D2 90 0
SETR GD6 D2
SETV GD9 0
SETV GD10 0
SETV GD11 0
SETV GD12 0
SETV GD14 0
ALLOCATEGMEMV D2 8 0
SETR GD1 D2
ALLOCATEGMEMV D2 2048 0
SETR GD4 D2
ALLOCATEGMEMV D2 94 0
SETR GD2 D2
ALLOCATEGMEMV D2 48 0
SETR GD5 D2
ALLOCATEGMEMV D2 14 0
SETR GD16 D2
WRITEPODARRAY D2 {0,0,1024,0,0,256,512,0,1024,1024,256,0,256,512}
ALLOCATEGMEMV D2 480 0
SETR GD3 D2
QUIT; void run() Body End