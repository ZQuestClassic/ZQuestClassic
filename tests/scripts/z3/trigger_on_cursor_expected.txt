stderr:

Compiling 'trigger_on_cursor.zs'
Pass 1: Parsing
Pass 2: Preprocessing
Pass 3: Registration
Pass 4: Analyzing Code
Pass 5: Checking code paths
Pass 6: Generating object code
Pass 7: Assembling
Success!
Compile finished with exit code '0' (success)

stdout:

{
  "success": true,
  "diagnostics": [],
  "metadata": {
    "currentFileSymbols": 4,
    "symbols": 30,
    "identifiers": 57,
    "elided": true
  }
}

zasm:

QUIT; void run() Body
PUSHR D0; void run(int, int) Params
PUSHR D1
PUSHR REFFFC; void run(int, int) Body Start
PUSHARGSV 0 0.0007
SETR D4 SP2
ALLOCATEMEMV D2 19 0
STORE D2 0.0006
WRITEPODSTRING D2 "Region->Width: %d\n"
LOAD D2 0.0006; InlineFunc[void printf(char32[])] Params Start
PUSHR D2
PUSHVARGR REGION_WIDTH; InlineFunc[void printf(char32[])] Params End
PRINTFVARG; InlineFunc[void printf(char32[])] Body Start
POP D5; InlineFunc[void printf(char32[])] Body End
LOAD D3 0.0006
DEALLOCATEMEMR D3
ALLOCATEMEMV D2 20 0
STORE D2 0.0005
WRITEPODSTRING D2 "Region->Height: %d\n"
LOAD D2 0.0005; InlineFunc[void printf(char32[])] Params Start
PUSHR D2
PUSHVARGR REGION_HEIGHT; InlineFunc[void printf(char32[])] Params End
PRINTFVARG; InlineFunc[void printf(char32[])] Body Start
POP D5; InlineFunc[void printf(char32[])] Body End
LOAD D3 0.0005
DEALLOCATEMEMR D3
ALLOCATEMEMV D2 25 0
STORE D2 0.0004
WRITEPODSTRING D2 "Region->ScreenWidth: %d\n"
LOAD D2 0.0004; InlineFunc[void printf(char32[])] Params Start
PUSHR D2
PUSHVARGR REGION_SCREEN_WIDTH; InlineFunc[void printf(char32[])] Params End
PRINTFVARG; InlineFunc[void printf(char32[])] Body Start
POP D5; InlineFunc[void printf(char32[])] Body End
LOAD D3 0.0004
DEALLOCATEMEMR D3
ALLOCATEMEMV D2 26 0
STORE D2 0.0003
WRITEPODSTRING D2 "Region->ScreenHeight: %d\n"
LOAD D2 0.0003; InlineFunc[void printf(char32[])] Params Start
PUSHR D2
PUSHVARGR REGION_SCREEN_HEIGHT; InlineFunc[void printf(char32[])] Params End
PRINTFVARG; InlineFunc[void printf(char32[])] Body Start
POP D5; InlineFunc[void printf(char32[])] Body End
LOAD D3 0.0003
DEALLOCATEMEMR D3
ALLOCATEMEMV D2 23 0
STORE D2 0.0002
WRITEPODSTRING D2 "Region->NumCombos: %d\n"
LOAD D2 0.0002; InlineFunc[void printf(char32[])] Params Start
PUSHR D2
PUSHVARGR REGION_NUM_COMBOS; InlineFunc[void printf(char32[])] Params End
PRINTFVARG; InlineFunc[void printf(char32[])] Body Start
POP D5; InlineFunc[void printf(char32[])] Body End
LOAD D3 0.0002
DEALLOCATEMEMR D3
SETV D2 0; while(true) #2 Body [Opt:AlwaysOn] Start
PUSHR D2
POP D0
SETR D2 MOUSEARR
STORE D2 0.0001
SETV D2 1
PUSHR D2
POP D0
SETR D2 MOUSEARR
STORE D2 0
SETV D2 0.0001
PUSHR D2
POP D2
SETR SCREEN_DRAW_ORIGIN D2
PUSHV 3; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0009
PUSHR D2
PUSHARGSV 1 0.0002
PUSHV 3
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0005
PUSHV 1
PUSHV 128; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBOR; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0016; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
LOAD D2 0.0001
PUSHR D2
SETR D2 VIEWPORT_X
POP D3
ADDR D2 D3
STORE D2 0.0001
LOAD D2 0
PUSHR D2
SETR D2 VIEWPORT_Y
POP D3
ADDR D2 D3
STORE D2 0
LOAD D2 0.0007; if() #422 Test
PUSHR D2
POP REFSPRITE
SETR D2 SPRITE_X
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
GOTOCMP 138 >=
LOAD D2 0.0007
PUSHR D2
POP REFSPRITE
SETR D2 SPRITE_Y
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
GOTOCMP 138 >=
LOAD D2 0.0007
PUSHR D2
POP REFSPRITE
SETR D2 SPRITE_X
ADDV D2 16
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
GOTOCMP 138 <
LOAD D2 0.0007
PUSHR D2
POP REFSPRITE
SETR D2 SPRITE_Y
ADDV D2 16
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
GOTOCMP 138 <
SETV D2 1
GOTO 139
SETV D2 0
COMPAREV D2 0
GOTOCMP 143 ==; Test 'if'
LOAD D2 0.0008; InlineFunc[void screendata::TriggerSecrets(int)] Params AND if() #422 Body Start
REGION_TRIGGER_SECRETS D2; InlineFunc[void screendata::TriggerSecrets(int)] Body AND if() #422 Body End
WAITFRAME; InlineFunc[void Waitframe()] Body AND while(true) #2 Body [Opt:AlwaysOn] End
GOTO 57; while() #2 End AND [Opt:NeverRet] AND void run(int, int) Body End
