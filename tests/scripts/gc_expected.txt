Compiling 'gc.zs'
Pass 1: Parsing
Pass 2: Preprocessing
Pass 3: Registration
Pass 4: Analyzing Code
Pass 5: Checking code paths
Pass 6: Generating object code
ZQ_BUFFER Line 431 @ Columns 4-12 - Warning G103: The 'delete' operator no longer does anything. Objects are freed automatically when they become unreachable
Pass 7: Assembling
Success!
Compile finished with exit code '0' (success)

PUSHR REFFFC; void run() Body Start
PUSHARGSV 0,0.0053
SETR d4,SP2
ALLOCATEMEMV d2,18,0
STORE d2,0.0052
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0052; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0052
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0051
ALLOCATEMEMV d2,16,0
STORE d2,0.0050
WRITEPODSTRING d2,"(1) RefCount(a)"
PUSHR d4
LOAD d2,0.0050; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0051; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0050
DEALLOCATEMEMR d3
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,16,0
STORE d2,0.0049
WRITEPODSTRING d2,"(2) RefCount(a)"
PUSHR d4
LOAD d2,0.0049; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0051; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0049
DEALLOCATEMEMR d3
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0051
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0051
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0051; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0051
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0050
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,12,0
STORE d2,0.0049
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0049; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0050; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0049
DEALLOCATEMEMR d3
LOAD d2,0.0050
STORE_OBJECT d2,0.0050
ALLOCATEMEMV d2,12,0
STORE d2,0.0048
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0048; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0050; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0048
DEALLOCATEMEMR d3
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0050
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0050
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0050; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0050
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0049
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,12,0
STORE d2,0.0048
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0048; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0049; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0048
DEALLOCATEMEMR d3
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0049
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0049
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0049; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0049
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0048
PUSHR CLASS_THISKEY
PUSHR d4
CALLFUNC 0.2582; ClassFunc[Hat Hat()] Constructor Call
POP d4
POP CLASS_THISKEY
PUSHR d2
LOAD d2,0.0048
SETR d3,d2
POP d2
ZCLASS_WRITE d3,0.0001
ALLOCATEMEMV d2,17,0
STORE d2,0.0047
WRITEPODSTRING d2,"RefCount(a->hat)"
PUSHR d4
LOAD d2,0.0047; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0048; InlineFunc[long RefCount(untyped)] Params Start
ZCLASS_READ d2,0.0001; InlineFunc[long RefCount(untyped)] Params End
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0047
DEALLOCATEMEMR d3
PUSHR d4
PUSHV 2; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0048
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
PEEK d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0048
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0048; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0048
DEALLOCATEMEMR d3
STOREV 0,0.0047
LOADRNG; InlineFunc[RNG Game->LoadRNG()] Body
STORE_OBJECT d2,0.0046
LOAD d2,0.0046
STORE d2,0.0047
ALLOCATEMEMV d2,14,0
STORE d2,0.0045
WRITEPODSTRING d2,"RefCount(rng)"
PUSHR d4
LOAD d2,0.0045; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0046; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0045
DEALLOCATEMEMR d3
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
REF_REMOVE 0.0046
ALLOCATEMEMV d2,18,0
STORE d2,0.0046
WRITEPODSTRING d2,"RefCount(scratch)"
PUSHR d4
LOAD d2,0.0046; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0047; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV -0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0046
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,18,0
STORE d2,0.0047
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0047; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0047
DEALLOCATEMEMR d3
STOREV 0,0.0046
LOADRNG; InlineFunc[RNG Game->LoadRNG()] Body
STORE_OBJECT d2,0.0045
LOAD d2,0.0045
STORE d2,0.0046
ALLOCATEMEMV d2,14,0
STORE d2,0.0044
WRITEPODSTRING d2,"RefCount(rng)"
PUSHR d4
LOAD d2,0.0044; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0045; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0044
DEALLOCATEMEMR d3
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
REF_REMOVE 0.0045
ALLOCATEMEMV d2,18,0
STORE d2,0.0045
WRITEPODSTRING d2,"RefCount(scratch)"
PUSHR d4
LOAD d2,0.0045; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0046; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV -0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0045
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,18,0
STORE d2,0.0046
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0046; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0046
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,6,0
STORE d2,0.0045
WRITEPODSTRING d2,"count"
PUSHR d4
LOAD d2,0.0045; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 0; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0045
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,18,0
STORE d2,0.0045
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0045; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0045
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
GC; InlineFunc[void GC()] Body
ALLOCATEMEMV d2,6,0
STORE d2,0.0044
WRITEPODSTRING d2,"count"
PUSHR d4
LOAD d2,0.0044; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 0; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0044
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,18,0
STORE d2,0.0044
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0044; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0044
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 10; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
ZCLASS_READ d2,0
STORE d2,0.0043
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,4,0
STORE d2,0.0042
WRITEPODSTRING d2,"age"
PUSHR d4
LOAD d2,0.0042; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0043
PUSHR d2
PUSHV 10; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0042
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,6,0
STORE d2,0.0041
WRITEPODSTRING d2,"count"
PUSHR d4
LOAD d2,0.0041; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 0; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0041
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,18,0
STORE d2,0.0043
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0043; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0043
DEALLOCATEMEMR d3
STOREV 0,0.0042
REF_REMOVE 0.0042
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0042
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0042; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0042
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 10; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
ZCLASS_READ d2,0
PUSHR d2
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 20; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
ZCLASS_READ d2,0
POP d3
ADDR d2,d3
STORE d2,0.0041
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,4,0
STORE d2,0.0040
WRITEPODSTRING d2,"age"
PUSHR d4
LOAD d2,0.0040; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0041
PUSHR d2
PUSHV 30; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0040
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,6,0
STORE d2,0.0039
WRITEPODSTRING d2,"count"
PUSHR d4
LOAD d2,0.0039; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 0; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0039
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,18,0
STORE d2,0.0041
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0041; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0041
DEALLOCATEMEMR d3
SETR d2,gd2
PUSHR d2
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
ZCLASS_READ d2,0
POP d3
ADDR d2,d3
PUSHR d2
SETR d2,gd2
POP d3
ADDR d2,d3
PUSHR d2
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
ZCLASS_READ d2,0
POP d3
ADDR d2,d3
PUSHR d2
SETR d2,gd2
POP d3
ADDR d2,d3
STORE d2,0.0040
ALLOCATEMEMV d2,2,0
STORE d2,0.0039
WRITEPODSTRING d2,"c"
PUSHR d4
LOAD d2,0.0039; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0040
PUSHR d2
PUSHV 3; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0039
DEALLOCATEMEMR d3
GC; InlineFunc[void GC()] Body
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0040
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0040; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0040
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,23,0
STORE d2,0.0039
WRITEPODSTRING d2,"RefCount(new Person())"
PUSHR d4
LOAD d2,0.0039; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR CLASS_THISKEY; InlineFunc[long RefCount(untyped)] Params Start
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY; InlineFunc[long RefCount(untyped)] Params End
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0039
DEALLOCATEMEMR d3
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
PEEK d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0039
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0039; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0039
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0038
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
LOAD d2,0.0038
SET_OBJECT gd6,d2
ALLOCATEMEMV d2,12,0
STORE d2,0.0037
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0037; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0038; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0037
DEALLOCATEMEMR d3
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0038
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
SETV d2,0
SET_OBJECT gd6,d2
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0038
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0038; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0038
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0037
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
PEEK d4
LOAD d2,0.0037; UsrFunc[void usePerson1(Person)] Params Start
PUSHR d2; UsrFunc[void usePerson1(Person)] Params End
CALLFUNC 0.2593; UsrFunc[void usePerson1(Person)] Call
POP d4
ALLOCATEMEMV d2,12,0
STORE d2,0.0036
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0036; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0037; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0036
DEALLOCATEMEMR d3
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0037
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0037
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0037; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0037
DEALLOCATEMEMR d3
PUSHR d4
PUSHR CLASS_THISKEY; UsrFunc[void usePerson2(Person)] Params Start
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
PUSHR d2; UsrFunc[void usePerson2(Person)] Params End
CALLFUNC 0.2614; UsrFunc[void usePerson2(Person)] Call
PEEK d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
PEEK d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0036
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0036; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0036
DEALLOCATEMEMR d3
PUSHR d4
PUSHR CLASS_THISKEY; UsrFunc[Person usePerson3(Person)] Params Start
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
PUSHR d2; UsrFunc[Person usePerson3(Person)] Params End
CALLFUNC 0.2641; UsrFunc[Person usePerson3(Person)] Call
POP d4
STORE_OBJECT d2,0.0035
ALLOCATEMEMV d2,12,0
STORE d2,0.0034
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0034; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0035; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0034
DEALLOCATEMEMR d3
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,12,0
STORE d2,0.0033
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0033; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0035; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0033
DEALLOCATEMEMR d3
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0035
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0035
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0035; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0035
DEALLOCATEMEMR d3
PUSHR d4
CALLFUNC 0.2534; UsrFunc[Person createPerson1()] Call
POP d4
STORE_OBJECT d2,0.0034
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,12,0
STORE d2,0.0033
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0033; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0034; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0033
DEALLOCATEMEMR d3
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0034
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0034
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0034; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0034
DEALLOCATEMEMR d3
PUSHR d4
CALLFUNC 0.2567; UsrFunc[Person createPerson2()] Call
POP d4
STORE_OBJECT d2,0.0033
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,12,0
STORE d2,0.0032
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0032; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0033; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0032
DEALLOCATEMEMR d3
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0033
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0033
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0033; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0033
DEALLOCATEMEMR d3
PUSHARGSR d4,0.0002; UsrFunc[Person usePerson3(Person)] Params Start
CALLFUNC 0.2567; UsrFunc[Person createPerson2()] Call
POP d4
PUSHR d2; UsrFunc[Person usePerson3(Person)] Params End
CALLFUNC 0.2641; UsrFunc[Person usePerson3(Person)] Call
POP d4
STORE_OBJECT d2,0.0032
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,12,0
STORE d2,0.0031
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0031; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0032; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0031
DEALLOCATEMEMR d3
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0032
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0032
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0032; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0032
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0031
ALLOCATEMEMV d2,12,0
STORE d2,0.0030
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0030; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0031; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0030
DEALLOCATEMEMR d3
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
PEEK d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
REF_REMOVE 0.0031
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0031
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0031; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0031
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0030
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,12,0
STORE d2,0.0029
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0029; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0030; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0029
DEALLOCATEMEMR d3
LOAD d2,0.0030
STORE_OBJECT d2,0.0028
ALLOCATEMEMV d2,12,0
STORE d2,0.0027
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0027; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0030; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0027
DEALLOCATEMEMR d3
LOAD d2,0.0028
STORE_OBJECT d2,0.0026
ALLOCATEMEMV d2,12,0
STORE d2,0.0025
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0025; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0030; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0003; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0025
DEALLOCATEMEMR d3
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0030
REF_REMOVE 0.0028
REF_REMOVE 0.0026
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0030
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0030; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0030
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0029
ALLOCATEMEMV d2,10,0
STORE d2,0.0028
WRITEPODSTRING d2,"(1) count"
PUSHR d4
LOAD d2,0.0028; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 1; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0028
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0027
ALLOCATEMEMV d2,10,0
STORE d2,0.0026
WRITEPODSTRING d2,"(2) count"
PUSHR d4
LOAD d2,0.0026; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 2; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0026
DEALLOCATEMEMR d3
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,16,0
STORE d2,0.0025
WRITEPODSTRING d2,"(3) RefCount(a)"
PUSHR d4
LOAD d2,0.0025; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0029; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0025
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,16,0
STORE d2,0.0024
WRITEPODSTRING d2,"(4) RefCount(b)"
PUSHR d4
LOAD d2,0.0024; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0027; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0024
DEALLOCATEMEMR d3
LOAD d2,0.0029
STORE_OBJECT d2,0.0027
ALLOCATEMEMV d2,10,0
STORE d2,0.0023
WRITEPODSTRING d2,"(5) count"
PUSHR d4
LOAD d2,0.0023; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 1; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0023
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,16,0
STORE d2,0.0022
WRITEPODSTRING d2,"(6) RefCount(a)"
PUSHR d4
LOAD d2,0.0022; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0029; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0022
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,16,0
STORE d2,0.0021
WRITEPODSTRING d2,"(7) RefCount(b)"
PUSHR d4
LOAD d2,0.0021; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0027; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0021
DEALLOCATEMEMR d3
REF_REMOVE 0.0029
REF_REMOVE 0.0027
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0029
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0029; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0029
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0028
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
LOAD d2,0.0028
PUSHR d2
SETR d2,gd5
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
SETR d2,gd5
PUSHR d2
POP d0
READPODARRAYV d2,0
PUSHR d2
SETR d2,gd5
SETR d0,d2
POP d2
WRITEPODARRAYVR 5,d2
ALLOCATEMEMV d2,12,0
STORE d2,0.0027
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0027; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0028; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0003; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0027
DEALLOCATEMEMR d3
SETV d2,0
PUSHR d2
SETR d2,gd5
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
ALLOCATEMEMV d2,12,0
STORE d2,0.0026
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0026; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0028; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0026
DEALLOCATEMEMR d3
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0028
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
SETV d2,0
PUSHR d2
SETR d2,gd5
SETR d0,d2
POP d2
WRITEPODARRAYVR 5,d2
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0028
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0028; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0028
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0027
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0026
PUSHR d4
PUSHV 2; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0026
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
PEEK d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0027
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0027
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0027; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0027
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0026
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
PUSHR gd5; InlineFunc[bool ArrayPushBack(Person[], Person)] Params Start
LOAD d2,0.0026
PUSHR d2; InlineFunc[bool ArrayPushBack(Person[], Person)] Params End
PUSHV -1; InlineFunc[bool ArrayPushBack(Person[], Person)] Body Start
ARRAYPUSH
POPARGS d5,0.0003; InlineFunc[bool ArrayPushBack(Person[], Person)] Body End
ALLOCATEMEMV d2,12,0
STORE d2,0.0025
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0025; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0026; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0025
DEALLOCATEMEMR d3
LOAD d2,0.0026
STORE_OBJECT d2,0.0024
SETV d2,0
STORE_OBJECT d2,0.0026
ALLOCATEMEMV d2,12,0
STORE d2,0.0023
WRITEPODSTRING d2,"RefCount(b)"
PUSHR d4
LOAD d2,0.0023; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0024; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0023
DEALLOCATEMEMR d3
PUSHR gd5; InlineFunc[Person ArrayPopBack(Person[])] Params
PUSHV -1; InlineFunc[Person ArrayPopBack(Person[])] Body Start
ARRAYPOP
POPARGS d5,0.0002; InlineFunc[Person ArrayPopBack(Person[])] Body End
ALLOCATEMEMV d2,12,0
STORE d2,0.0022
WRITEPODSTRING d2,"RefCount(b)"
PUSHR d4
LOAD d2,0.0022; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0024; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0022
DEALLOCATEMEMR d3
REF_REMOVE 0.0026
REF_REMOVE 0.0024
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0026
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0026; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0026
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0025
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,1,0.0008
STORE d2,0.0023
SETR d0,d2
PUSHR d0
LOAD d2,0.0025
POP d0
WRITEPODARRAYVR 0,d2
ALLOCATEMEMV d2,12,0
STORE d2,0.0022
WRITEPODSTRING d2,"RefCount(b)"
PUSHR d4
LOAD d2,0.0022; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0023; InlineFunc[long RefCount(untyped)] Params Start
PUSHR d2
POP d0
READPODARRAYV d2,0; InlineFunc[long RefCount(untyped)] Params End
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0022
DEALLOCATEMEMR d3
LOAD d3,0.0023
DEALLOCATEMEMR d3
REF_REMOVE 0.0025
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0025
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0025; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0025
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,1,0.0008
STORE d2,0.0023
SETR d0,d2
PUSHR d0
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
POP d0
WRITEPODARRAYVR 0,d2
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,12,0
STORE d2,0.0022
WRITEPODSTRING d2,"RefCount(b)"
PUSHR d4
LOAD d2,0.0022; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0023; InlineFunc[long RefCount(untyped)] Params Start
PUSHR d2
POP d0
READPODARRAYV d2,0; InlineFunc[long RefCount(untyped)] Params End
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0022
DEALLOCATEMEMR d3
LOAD d3,0.0023
DEALLOCATEMEMR d3
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0024
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0024; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0024
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,1,0.0008
STORE d2,0.0022
SETR d0,d2
PUSHR d0
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
POP d0
WRITEPODARRAYVR 0,d2
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
PEEK d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
LOAD d2,0.0022; InlineFunc[void ResizeArray(Person[], int)] Params Start
PUSHR d2
SETV d3,0; InlineFunc[void ResizeArray(Person[], int)] Params End
POP d2; InlineFunc[void ResizeArray(Person[], int)] Body Start
RESIZEARRAYR d2,d3; InlineFunc[void ResizeArray(Person[], int)] Body End
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
LOAD d3,0.0022
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,18,0
STORE d2,0.0023
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0023; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0023
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0022
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0021
LOAD d2,0.0021
PUSHR d2
LOAD d2,0.0022
ZCLASS_READ d2,0.0002
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,12,0
STORE d2,0.0020
WRITEPODSTRING d2,"RefCount(b)"
PUSHR d4
LOAD d2,0.0020; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0021; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0020
DEALLOCATEMEMR d3
REF_REMOVE 0.0022
REF_REMOVE 0.0021
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0022
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0022; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0022
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0021
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
LOAD d2,0.0021
PUSHR d2
LOAD d2,0.0021
ZCLASS_READ d2,0.0002
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
ALLOCATEMEMV d2,12,0
STORE d2,0.0020
WRITEPODSTRING d2,"RefCount(b)"
PUSHR d4
LOAD d2,0.0020; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0021; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0020
DEALLOCATEMEMR d3
REF_REMOVE 0.0021
ALLOCATEMEMV d2,6,0
STORE d2,0.0021
WRITEPODSTRING d2,"count"
PUSHR d4
LOAD d2,0.0021; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 1; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0021
DEALLOCATEMEMR d3
GC; InlineFunc[void GC()] Body
ALLOCATEMEMV d2,6,0
STORE d2,0.0020
WRITEPODSTRING d2,"count"
PUSHR d4
LOAD d2,0.0020; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 0; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0020
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,18,0
STORE d2,0.0019
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0019; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0019
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0018
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0017
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
LOAD d2,0.0017
PUSHR d2
LOAD d2,0.0018
ZCLASS_READ d2,0.0002
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
LOAD d2,0.0018
PUSHR d2
LOAD d2,0.0017
ZCLASS_READ d2,0.0002
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
ALLOCATEMEMV d2,12,0
STORE d2,0.0016
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0016; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0018; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0016
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,12,0
STORE d2,0.0015
WRITEPODSTRING d2,"RefCount(b)"
PUSHR d4
LOAD d2,0.0015; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0017; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0015
DEALLOCATEMEMR d3
SETV d2,0
STORE_OBJECT d2,0.0018
ALLOCATEMEMV d2,25,0
STORE d2,0.0014
WRITEPODSTRING d2,"RefCount(b->children[0])"
PUSHR d4
LOAD d2,0.0014; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0017; InlineFunc[long RefCount(untyped)] Params Start
ZCLASS_READ d2,0.0002
PUSHR d2
POP d0
READPODARRAYV d2,0; InlineFunc[long RefCount(untyped)] Params End
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0014
DEALLOCATEMEMR d3
REF_REMOVE 0.0018
REF_REMOVE 0.0017
ALLOCATEMEMV d2,6,0
STORE d2,0.0018
WRITEPODSTRING d2,"count"
PUSHR d4
LOAD d2,0.0018; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 2; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0018
DEALLOCATEMEMR d3
GC; InlineFunc[void GC()] Body
ALLOCATEMEMV d2,6,0
STORE d2,0.0017
WRITEPODSTRING d2,"count"
PUSHR d4
LOAD d2,0.0017; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 0; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0017
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,18,0
STORE d2,0.0016
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0016; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0016
DEALLOCATEMEMR d3
STOREV 0,0.0015
ALLOCATEMEMV d2,12,0
STORE d2,0.0014
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0014; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0015; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV -0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0014
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0015
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,12,0
STORE d2,0.0013
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0013; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0015; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0013
DEALLOCATEMEMR d3
LOAD d2,0.0015
ZCLASS_FREE d2
ALLOCATEMEMV d2,12,0
STORE d2,0.0012
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0012; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0015; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0012
DEALLOCATEMEMR d3
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0015
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0015
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0015; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0015
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE d2,0.0014
ALLOCATEMEMV d2,12,0
STORE d2,0.0013
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0013; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0014; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0013
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,10,0
STORE d2,0.0012
WRITEPODSTRING d2,"(1) count"
PUSHR d4
LOAD d2,0.0012; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 1; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0012
DEALLOCATEMEMR d3
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,10,0
STORE d2,0.0011
WRITEPODSTRING d2,"(2) count"
PUSHR d4
LOAD d2,0.0011; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 0; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0011
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,18,0
STORE d2,0.0014
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0014; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0014
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE d2,0.0013
LOAD d2,0.0013
STORE_OBJECT d2,0.0012
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,12,0
STORE d2,0.0011
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0011; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0013; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0011
DEALLOCATEMEMR d3
REF_REMOVE 0.0012
ALLOCATEMEMV d2,6,0
STORE d2,0.0013
WRITEPODSTRING d2,"count"
PUSHR d4
LOAD d2,0.0013; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 0; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0013
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,18,0
STORE d2,0.0012
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0012; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0012
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE d2,0.0011
LOAD d2,0.0011
STORE_OBJECT d2,0.0010
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,12,0
STORE d2,0.0009
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0009; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0011; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0009
DEALLOCATEMEMR d3
SETV d2,0
STORE_OBJECT d2,0.0010
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0010
ALLOCATEMEMV d2,6,0
STORE d2,0.0011
WRITEPODSTRING d2,"count"
PUSHR d4
LOAD d2,0.0011; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 0; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0011
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,18,0
STORE d2,0.0010
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0010; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0010
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0009
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,12,0
STORE d2,0.0007
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0007; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0009; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0007
DEALLOCATEMEMR d3
SETV d2,0
STORE_OBJECT d2,0.0009
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0009
ALLOCATEMEMV d2,6,0
STORE d2,0.0009
WRITEPODSTRING d2,"count"
PUSHR d4
LOAD d2,0.0009; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
PUSHV 0; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0009
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,18,0
STORE d2,0.0008
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0008; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0008
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,2,0
STORE d2,0.0007
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0006
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
LOAD d2,0.0006
PUSHR d2
LOAD d2,0.0007
SETR d0,d2
POP d2
WRITEPODARRAYVR 0,d2
LOAD d2,0.0006
PUSHR d2
LOAD d2,0.0007
SETR d0,d2
POP d2
WRITEPODARRAYVR 1,d2
ALLOCATEMEMV d2,12,0
STORE d2,0.0005
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0005; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0006; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0005
DEALLOCATEMEMR d3
REF_REMOVE 0.0006
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
LOAD d3,0.0007
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,18,0
STORE d2,0.0007
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0007; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0007
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0006
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,12,0
STORE d2,0.0005
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0005; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0006; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0005
DEALLOCATEMEMR d3
STOREV 0,0.0004; for() #187 setup
LOAD d2,0.0004; for() #187 LoopTest
COMPAREV d2,10
SETCMP d2,I<
COMPAREV d2,0
GOTOCMP 2269,==; for() #187 TestFail?
ALLOCATEMEMV d2,12,0; for() #187 Body Start
STORE d2,0.0003
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0003; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0006; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0003
DEALLOCATEMEMR d3
LOAD d2,0.0006
STORE_OBJECT d2,0.0002
ALLOCATEMEMV d2,12,0
STORE d2,0.0001
WRITEPODSTRING d2,"RefCount(a)"
PUSHR d4
LOAD d2,0.0001; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0006; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0001
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
PEEK d4
PUSHV 2; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0002
REF_REMOVE 0; for() #187 Body End
LOAD d2,0.0004; for() #187 LoopIncrement
ADDV d2,1
STORE d2,0.0004
GOTO 2215; for() #187 End
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
REF_REMOVE 0.0006
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0006
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0006; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0006
DEALLOCATEMEMR d3
STOREV 0,0.0005; for() #188 setup
LOAD d2,0.0005; for() #188 LoopTest
COMPAREV d2,300
SETCMP d2,I<
COMPAREV d2,0
GOTOCMP 2317,==; for() #188 TestFail?
LOADRNG; InlineFunc[RNG Game->LoadRNG()] Body AND for() #188 Body Start
STORE_OBJECT d2,0.0004
LOAD d2,0.0004; if() #561 Test
COMPAREV d2,0
SETCMP d2,I==
COMPAREV d2,0
GOTOCMP 2313,==; Test 'if'
ALLOCATEMEMV d2,28,0; if() #561 Body Start
STORE d2,0.0003
WRITEPODSTRING d2,"failed to allocate randgen\n"
LOAD d2,0.0003; InlineFunc[void printf(char32)] Params Start
PUSHR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0003
DEALLOCATEMEMR d3; if() #561 Body End
LOAD d2,0.0005; for() #188 Body End AND for() #188 LoopIncrement
ADDV d2,1
STORE d2,0.0005
GOTO 2292; for() #188 End
GC; InlineFunc[void GC()] Body
ALLOCATEMEMV d2,18,0
STORE d2,0.0005
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0005; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0005
DEALLOCATEMEMR d3
SETV d2,-1; InlineFunc[Bitmap Game->LoadBitmapID(int)] Params
LOADBITMAPDATAR d2; InlineFunc[Bitmap Game->LoadBitmapID(int)] Body Start
SETR d2,REFBITMAP; InlineFunc[Bitmap Game->LoadBitmapID(int)] Body End
STORE_OBJECT d2,0.0004
SETV d2,0; InlineFunc[Bitmap Game->LoadBitmapID(int)] Params
LOADBITMAPDATAR d2; InlineFunc[Bitmap Game->LoadBitmapID(int)] Body Start
SETR d2,REFBITMAP; InlineFunc[Bitmap Game->LoadBitmapID(int)] Body End
STORE_OBJECT d2,0.0003
ALLOCATEMEMV d2,25,0
STORE d2,0.0002
WRITEPODSTRING d2,"RefCount(internal_bmp_1)"
PUSHR d4
LOAD d2,0.0002; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0004; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV -0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0002
DEALLOCATEMEMR d3
ALLOCATEMEMV d2,25,0
STORE d2,0.0001
WRITEPODSTRING d2,"RefCount(internal_bmp_2)"
PUSHR d4
LOAD d2,0.0001; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0003; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV -0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0.0001
DEALLOCATEMEMR d3
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
PEEK d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
SETV d2,0
STORE_OBJECT d2,0.0003
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
PUSHV 256; InlineFunc[Bitmap Game->CreateBitmap(int, int)] Params Start
SETV d1,256; InlineFunc[Bitmap Game->CreateBitmap(int, int)] Params End
POP d0; InlineFunc[Bitmap Game->CreateBitmap(int, int)] Body Start
SETR d2,CREATEBITMAP; InlineFunc[Bitmap Game->CreateBitmap(int, int)] Body End
STORE_OBJECT d2,0.0004
ALLOCATEMEMV d2,25,0
STORE d2,0
WRITEPODSTRING d2,"RefCount(internal_bmp_1)"
PUSHR d4
LOAD d2,0; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0004; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0
DEALLOCATEMEMR d3
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
REF_REMOVE 0.0004
REF_REMOVE 0.0003
PUSHR d4
PUSHV 0; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
ALLOCATEMEMV d2,18,0
STORE d2,0.0004
WRITEPODSTRING d2,"=== Test %d === \n"
LOAD d2,0.0004; InlineFunc[void printf(char32)] Params Start
PUSHR d2
SETR d2,gd3
ADDV d2,1
SETR gd3,d2
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0004
DEALLOCATEMEMR d3
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0.0003
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
PEEK d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
LOAD d2,0.0003; InlineFunc[void GlobalObject(untyped)] Params
ZCLASS_GLOBALIZE d2; InlineFunc[void GlobalObject(untyped)] Body
REF_REMOVE 0.0003
PUSHR d4
PUSHV 1; UsrFunc[void checkCountWithGC(int)] Params
CALLFUNC 0.2487; UsrFunc[void checkCountWithGC(int)] Call
POP d4
SETR d2,gd4; while() #8 Test
COMPAREV d2,100
SETCMP d2,I<
COMPAREV d2,0
GOTOCMP 2449,==; Test 'while'
PUSHR d4; while() #8 Body Start
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4; while() #8 Body End
GOTO 2440; while() #8 End
ALLOCATEMEMV d2,17,0
STORE d2,0.0003
WRITEPODSTRING d2,"Done with tests\n"
LOAD d2,0.0003; InlineFunc[void printf(char32)] Params Start
PUSHR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0.0003
DEALLOCATEMEMR d3
POPARGS d5,0.0054
QUIT; void run() Body End
PUSHV 0; Func[void check(char32, int, int)] Body Start
SETR d4,SP2
LOAD d2,0.0002; if() #558 Test
PUSHR d2
LOAD d2,0.0001
POP d3
COMPARER d3,d2
SETCMP d2,I!=
COMPAREV d2,0
GOTOCMP 2485,==; Test 'if'
ALLOCATEMEMV d2,36,0; if() #558 Body Start
STORE d2,0
WRITEPODSTRING d2,"[%s] ERROR: expected %l but got %l\n"
LOAD d2,0; InlineFunc[void printf(char32)] Params Start
PUSHR d2
LOAD d2,0.0003
PUSHVARGR d2
LOAD d2,0.0001
PUSHVARGR d2
LOAD d2,0.0002
PUSHVARGR d2; InlineFunc[void printf(char32)] Params End
PRINTFVARG; InlineFunc[void printf(char32)] Body Start
POP d5; InlineFunc[void printf(char32)] Body End
LOAD d3,0
DEALLOCATEMEMR d3; if() #558 Body End
POPARGS d5,0.0004
RETURNFUNC; Func[void check(char32, int, int)] Body End
PUSHV 0; Func[void checkCountWithGC(int)] Body Start
SETR d4,SP2
SETR d2,gd2; if() #559 Test
PUSHR d2
LOAD d2,0.0001
POP d3
COMPARER d3,d2
SETCMP d2,I!=
COMPAREV d2,0
GOTOCMP 2510,==; Test 'if'
ALLOCATEMEMV d2,6,0; if() #559 Body Start
STORE d2,0
WRITEPODSTRING d2,"count"
PUSHR d4
LOAD d2,0; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
LOAD d2,0.0001
PUSHR d2; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0
DEALLOCATEMEMR d3; if() #559 Body End
GC; InlineFunc[void GC()] Body
SETR d2,gd2; if() #560 Test
PUSHR d2
LOAD d2,0.0001
POP d3
COMPARER d3,d2
SETCMP d2,I!=
COMPAREV d2,0
GOTOCMP 2532,==; Test 'if'
ALLOCATEMEMV d2,16,0; if() #560 Body Start
STORE d2,0
WRITEPODSTRING d2,"count (post GC)"
PUSHR d4
LOAD d2,0; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
PUSHR gd2
LOAD d2,0.0001
PUSHR d2; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0
DEALLOCATEMEMR d3; if() #560 Body End
POPARGS d5,0.0002
RETURNFUNC; Func[void checkCountWithGC(int)] Body End
PUSHV 0; Func[Person createPerson1()] Body Start
SETR d4,SP2
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
STORE_OBJECT d2,0
LOAD d2,0; return Start
REF_AUTORELEASE d2
REF_REMOVE 0
POP d5; return End
RETURNFUNC; Func[Person createPerson1()] Body End
SETV d2,0.2679; Func[Person Person(int)] Body Start
SETR CLASS_THISKEY2,CLASS_THISKEY
ZCLASS_CONSTRUCT CLASS_THISKEY,{0.0002,0.0003}
ZCLASS_MARK_TYPE {0.0002,0.0008,0.0001,0.0008}
SETR d4,SP2
PUSHR CLASS_THISKEY2
SETR d2,gd2
ADDV d2,1
SETR gd2,d2
LOAD d2,0
PUSHR d2
SETR d2,CLASS_THISKEY
SETR d3,d2
POP d2
ZCLASS_WRITE d3,0
POP d5
SETR d2,CLASS_THISKEY
POP CLASS_THISKEY
RETURNFUNC; Func[Person Person(int)] Body End
SETR d4,SP2; Func[Person createPerson2()] Body Start
PUSHR CLASS_THISKEY; return Start
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
REF_AUTORELEASE d2
RETURNFUNC; return End AND Func[Person createPerson2()] Body End
SETR d4,SP2; Func[void yield()] Body Start
WAITFRAME; InlineFunc[void Waitframe()] Body
SETR d2,gd4
ADDV d2,1
SETR gd4,d2
RETURNFUNC; Func[void yield()] Body End
SETV d2,0.2673; Func[Hat Hat()] Body Start
SETR CLASS_THISKEY2,CLASS_THISKEY
ZCLASS_CONSTRUCT CLASS_THISKEY,{0}
SETR d4,SP2
PUSHR CLASS_THISKEY2
SETR d2,gd2
ADDV d2,1
SETR gd2,d2
SETR d2,CLASS_THISKEY
POP CLASS_THISKEY
RETURNFUNC; Func[Hat Hat()] Body End
PUSHV 0; Func[void usePerson1(Person)] Body Start
SETR d4,SP2
MARK_TYPE_STACK 0.0001,0.0001
REF_INC 0.0001
ALLOCATEMEMV d2,17,0
STORE d2,0
WRITEPODSTRING d2,"RefCount(person)"
PUSHR d4
LOAD d2,0; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0001; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0
DEALLOCATEMEMR d3
REF_REMOVE 0.0001
POPARGS d5,0.0002
RETURNFUNC; Func[void usePerson1(Person)] Body End
PUSHV 0; Func[void usePerson2(Person)] Body Start
SETR d4,SP2
MARK_TYPE_STACK 0.0001,0.0001
REF_INC 0.0001
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
ALLOCATEMEMV d2,17,0
STORE d2,0
WRITEPODSTRING d2,"RefCount(person)"
PUSHR d4
LOAD d2,0; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0001; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0002; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0
DEALLOCATEMEMR d3
REF_REMOVE 0.0001
POPARGS d5,0.0002
RETURNFUNC; Func[void usePerson2(Person)] Body End
PUSHV 0; Func[Person usePerson3(Person)] Body Start
SETR d4,SP2
MARK_TYPE_STACK 0.0001,0.0001
REF_INC 0.0001
PUSHR CLASS_THISKEY
PUSHR d4
PUSHV 0; ClassFunc[Person Person(int)] Params
CALLFUNC 0.2548; ClassFunc[Person Person(int)] Constructor Call
POP d4
POP CLASS_THISKEY
PUSHR d4
CALLFUNC 0.2576; UsrFunc[void yield()] Call
POP d4
ALLOCATEMEMV d2,17,0
STORE d2,0
WRITEPODSTRING d2,"RefCount(person)"
PUSHR d4
LOAD d2,0; UsrFunc[void check(char32, int, int)] Params Start
PUSHR d2
LOAD d2,0.0001; InlineFunc[long RefCount(untyped)] Params
REF_COUNT d2; InlineFunc[long RefCount(untyped)] Body
PUSHR d2
PUSHV 0.0001; UsrFunc[void check(char32, int, int)] Params End
CALLFUNC 0.2460; UsrFunc[void check(char32, int, int)] Call
POP d4
LOAD d3,0
DEALLOCATEMEMR d3
LOAD d2,0.0001; return Start
REF_AUTORELEASE d2
REF_REMOVE 0.0001; return End
POPARGS d5,0.0002
RETURNFUNC; Func[Person usePerson3(Person)] Body End
STARTDESTRUCTOR "Hat"; Func[void ~Hat()] Body Start
SETR d4,SP2
SETR d2,gd2
SUBV d2,1
SETR gd2,d2
RETURNFUNC; Func[void ~Hat()] Body End
STARTDESTRUCTOR "Person"; Func[void ~Person()] Body Start
SETR d4,SP2
SETR d2,gd2
SUBV d2,1
SETR gd2,d2
RETURNFUNC; Func[void ~Person()] Body End


SETV gd2,0; void run() Body Start
SETV gd4,0
MARK_TYPE_REG gd6,0.0008
SETV gd6,0
ALLOCATEGMEMV d2,10,0.0008
SETR gd5,d2
SETV gd3,0
ALLOCATEGMEMV d2,4096,0
SETR gd1,d2
QUIT; void run() Body End