{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "ZScript",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#chars"
		},
		{
			"include": "#hash"
		},
		{
			"include": "#keywords"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "invalid.deprecated",
					"match": "\\b(zstruct)\\b"
				},
				{
					"name": "invalid.illegal",
					"match": "==="
				},
				{
					"name": "constant.language.annotation.zscript",
					"match": "@(Author|Attribute(Help)?[0-9]|Flag(Help)?[0-9]|Flag(Help)?1[0-5]|Attribyte(Help)?[0-7]|Attrishort(Help)?[0-7]|InitD(Help|Type)?[0-7]|InitScript|AlwaysRunEndpoint)"
				},
				{
					"name": "invalid.illegal",
					"match": "@[a-zA-Z_][a-zA-Z0-9_]+"
				},
				{
					"name": "variable.language.zscript",
					"match": "\\b(this|__LOOP_ARR|__LOOP_IND)\\b"
				},
				{
					"name": "constant.language.boolean.zscript",
					"match": "\\b(true|false)\\b"
				},
				{
					"name": "constant.numeric.decimal.zscript",
					"match": "((\\b[0-9]+)?\\.[0-9]{1,4})\\b"
				},
				{
					"name": "constant.numeric.decimal.zscript",
					"match": "\\b([0-9]+)\\b"
				},
				{
					"name": "constant.numeric.decimal.long.zscript",
					"match": "\\b([0-9]+L)\\b"
				},
				{
					"name": "constant.numeric.hex.zscript",
					"match": "\\b(0x[0-9a-fA-F]+)\\b"
				},
				{
					"name": "constant.numeric.hex.long.zscript",
					"match": "\\b(0x[0-9a-fA-F]+L)\\b"
				},
				{
					"name": "constant.numeric.binary.zscript",
					"match": "\\b(0b[01]+|[01]+b)\\b"
				},
				{
					"name": "constant.numeric.binary.long.zscript",
					"match": "\\b(0b[01]+L|[01]+bL|[01]+Lb)\\b"
				},
				{
					"name": "constant.numeric.octal.zscript",
					"match": "\\b(0o[0-7]+|[0-7]+o)\\b"
				},
				{
					"name": "constant.numeric.octal.long.zscript",
					"match": "\\b(0o[0-7]+L|[0-7]+oL|[0-7]+ob)\\b"
				},
				{
					"name": "keyword.control.zscript",
					"match": "\\b(break|case|catch|continue|default|do|else|for|loop|if|return|repeat|switch|unless|until|while)\\b"
				},
				{
					"name": "keyword.other.zscript",
					"match": "\\b(enum|typedef|using|always|CONST_ASSERT)\\b"
				},
				{
					"name": "invalid.deprecated.zscript",
					"match": "\\b(asm|zasm|try)\\b"
				},
				{
					"name": "keyword.operator.special.zscript",
					"match": "\\b(OPTION_VALUE|IS_INCLUDED|new|delete)\\b"
				},
				{
					"name": "keyword.operator.misc.zscript",
					"match": "(=\\.\\.=|\\.\\.\\.|=\\.\\.|\\.\\.=|\\.\\.)"
				},
				{
					"name": "keyword.operator.misc.zscript",
					"match": "(,|[.]{1,3}|;|::|:|\\(|\\)|\\[|\\]|\\{|\\}|\\?|->|!!|%%|!%|$$|\\*\\*|@@|@|\\$)"
				},
				{
					"name": "keyword.operator.misc.zscript",
					"match": "\\b(in)\\b"
				},
				{
					"name": "keyword.operator.increment.zscript",
					"match": "(\\+\\+|\\-\\-)"
				},
				{
					"name": "keyword.operator.arithmetic.zscript",
					"match": "(\\*|/|%|\\+|\\-|\\^\\^\\^)"
				},
				{
					"name": "keyword.operator.boolean.zscript",
					"match": "(!|<|<=|>|>=|==|!=|<>|&&|\\|\\||\\^\\^|~~)"
				},
				{
					"name": "keyword.operator.boolean.zscript",
					"match": "\\b(not|equals|not_eq|not_equal|and|or|xor|appx_eq|appx_equal)\\b"
				},
				{
					"name": "keyword.operator.bitwise.zscript",
					"match": "(~|<<|>>|&|\\||\\^)"
				},
				{
					"name": "keyword.operator.bitwise.zscript",
					"match": "\\b(bitnot|compl|bitand|bitor)\\b"
				},
				{
					"name": "keyword.operator.assignment.zscript",
					"match": "(=|:=|\\+=|-=|\\*=|/=|%=|<<=|>>=|&=|^=|\\|=|&&=|\\|\\|=|~=)"
				},
				{
					"name": "keyword.operator.assignment.zscript",
					"match": "\\b(and_eq|and_equal|xor_eq|xor_equal|or_eq|or_equal|bitnot_eq|bitnot_equal)\\b"
				},
				{
					"name": "storage.type.zscript",
					"match": "\\b(script|class|namespace)\\b"
				},
				{
					"name": "storage.type.zscript",
					"match": "\\b(auto|void|untyped|bool|float|int|char32|long|rgb|bitmap|cheatdata|combodata|doorsetdat|dropsetdata|dmapdata|eweapon|ffc|gamedata|itemdata|lweapon|mapdata|messagedata|misccolordata|misccolourdata|npc|npcdata|palcycledata|ponddata|shopdata|spritedata|musicdata|warpringdata|screendata|player|link|hero|itemsprite|file|directory|stack|randgen|paldata|bottledata|bottleshopdata|subscreendata|subscreenpage|subscreenwidget|generic|genericdata|portal|savedportal|particlesprite|decorationsprite|global)\\b"
				},
				{
					"name": "storage.modifier.zscript",
					"match": "\\b(const|inline|static)\\b"
				},
				{
					"name": "support.function.zscript",
					"match": "\\b(Rand|Cos|Sin|Waitframe|Waitframes|Quit|QuitNoKill|WaitTo|WaitEvent|Waitdraw|Trace|TraceB|TraceS|TraceNL|ClearTrace|TraceToBase|Tan|ArcTan|ArcSin|ArcCos|RadianSin|RadianCos|RadianTan|Pow|LPow|InvPow|Factorial|Abs|Log10|Ln|Sqrt|CopyTile|SwapTile|ClearTile|SizeOfArray|ResizeArray|OwnArray|DestroyArray|OwnObject|GlobalObject|OverlayTile|Floor|Ceiling|GetSystemTime|Distance|LongDistance|strcmp|strncmp|stricmp|strnicmp|strcpy|itoacat|ArrayCopy|strlen|atoi|ilen|utol|ltou|convcase|itoa|xtoa|xtoi|SaveSRAM|LoadSRAM|strcat|strchr|strcspan|strspn|strstr|strrchr|IsValidArray|DegtoRad|RadtoDeg|printf|sprintf|Max|Min|Choose)\\b"
				},
				{
					"name": "support.type.zscript",
					"match": "\\b(CONFIG[FLBU]?|DEFINE[FLBU]?)\\b"
				},
				{
					"name": "support.class.zscript",
					"match": "\\b(Link|Hero|Player|Screen|Game|Audio|Debug|NPCData|Text|ComboData|SpriteData|Input|Graphics|MapData|DMapData|MessageData|ShopData|DropData|PondData|WarpRing|DoorSet|MiscColors|MusicTrack|PalCycle|GameData|Cheats|FileSystem|Module|ZInfo|RandGen)\\b"
				},
				{
					"name": "meta.identifier.zscript",
					"match": "(?<![_a-zA-Z0-9])([_a-zA-Z][_a-zA-Z0-9]*)(?![_a-zA-Z0-9])"
				},
				{
					"name": "meta.whitespace",
					"match": "[ \t\r\n]+"
				},
				{
					"name": "invalid.illegal",
					"match": "."
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.zscript",
					"match": "//.*"
				},
				{
					"name": "comment.block.zscript",
					"begin": "/[*]",
					"end": "[*]/"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.zscript",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.zscript",
					"match": "\\\\."
				}
			]
		},
		"chars": {
			"name": "string.quoted.single.zscript",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"name": "constant.character.escape.zscript",
					"match": "\\\\."
				}
			]
		},
		"hash": {
			"name": "meta.preprocessor",
			"begin": "#",
			"end": "\n",
			"patterns": [
				{
					"name": "meta.preprocessor.keyword.zscript",
					"match": "\\b(option|ignore error|ignore warning|IGNORE ERROR|IGNORE WARNING|define|include|includepath|includeif)\\b"
				},
				{
					"name": "meta.preprocessor.option.zscript",
					"match": "\\b(NO_LOGGING|TRUNCATE_DIVISION_BY_LITERAL_BUG|SHORT_CIRCUIT|BOOL_TRUE_RETURN_DECIMAL|HEADER_GUARD|NO_ERROR_HALT|TRUE_INT_SIZE|FORCE_INLINE|BINARY_32BIT|APPROX_EQUAL_MARGIN|STRING_SWITCH_CASE_INSENSITIVE|WARN_DEPRECATED)\\b"
				},
				{
					"name": "invalid.illegal",
					"match": "(?<=option[ \t]+)[a-zA-Z0-9_]+"
				},
				{
					"name": "meta.preprocessor.constant.zscript",
					"match": "\\b(default|inherit|on|off|warn|error)\\b"
				}
			]
		}
	},
	"scopeName": "source.zscript"
}